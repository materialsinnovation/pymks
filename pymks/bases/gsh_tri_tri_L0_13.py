import numpy as np


def gsh_basis_info():

    indxvec = np.array([[0, 0, 0],
                        [1, -1, -1],
                        [1, -1, 0],
                        [1, -1, 1],
                        [1, 0, -1],
                        [1, 0, 0],
                        [1, 0, 1],
                        [1, 1, -1],
                        [1, 1, 0],
                        [1, 1, 1],
                        [2, -2, -2],
                        [2, -2, -1],
                        [2, -2, 0],
                        [2, -2, 1],
                        [2, -2, 2],
                        [2, -1, -2],
                        [2, -1, -1],
                        [2, -1, 0],
                        [2, -1, 1],
                        [2, -1, 2],
                        [2, 0, -2],
                        [2, 0, -1],
                        [2, 0, 0],
                        [2, 0, 1],
                        [2, 0, 2],
                        [2, 1, -2],
                        [2, 1, -1],
                        [2, 1, 0],
                        [2, 1, 1],
                        [2, 1, 2],
                        [2, 2, -2],
                        [2, 2, -1],
                        [2, 2, 0],
                        [2, 2, 1],
                        [2, 2, 2],
                        [3, -3, -3],
                        [3, -3, -2],
                        [3, -3, -1],
                        [3, -3, 0],
                        [3, -3, 1],
                        [3, -3, 2],
                        [3, -3, 3],
                        [3, -2, -3],
                        [3, -2, -2],
                        [3, -2, -1],
                        [3, -2, 0],
                        [3, -2, 1],
                        [3, -2, 2],
                        [3, -2, 3],
                        [3, -1, -3],
                        [3, -1, -2],
                        [3, -1, -1],
                        [3, -1, 0],
                        [3, -1, 1],
                        [3, -1, 2],
                        [3, -1, 3],
                        [3, 0, -3],
                        [3, 0, -2],
                        [3, 0, -1],
                        [3, 0, 0],
                        [3, 0, 1],
                        [3, 0, 2],
                        [3, 0, 3],
                        [3, 1, -3],
                        [3, 1, -2],
                        [3, 1, -1],
                        [3, 1, 0],
                        [3, 1, 1],
                        [3, 1, 2],
                        [3, 1, 3],
                        [3, 2, -3],
                        [3, 2, -2],
                        [3, 2, -1],
                        [3, 2, 0],
                        [3, 2, 1],
                        [3, 2, 2],
                        [3, 2, 3],
                        [3, 3, -3],
                        [3, 3, -2],
                        [3, 3, -1],
                        [3, 3, 0],
                        [3, 3, 1],
                        [3, 3, 2],
                        [3, 3, 3],
                        [4, -4, -4],
                        [4, -4, -3],
                        [4, -4, -2],
                        [4, -4, -1],
                        [4, -4, 0],
                        [4, -4, 1],
                        [4, -4, 2],
                        [4, -4, 3],
                        [4, -4, 4],
                        [4, -3, -4],
                        [4, -3, -3],
                        [4, -3, -2],
                        [4, -3, -1],
                        [4, -3, 0],
                        [4, -3, 1],
                        [4, -3, 2],
                        [4, -3, 3],
                        [4, -3, 4],
                        [4, -2, -4],
                        [4, -2, -3],
                        [4, -2, -2],
                        [4, -2, -1],
                        [4, -2, 0],
                        [4, -2, 1],
                        [4, -2, 2],
                        [4, -2, 3],
                        [4, -2, 4],
                        [4, -1, -4],
                        [4, -1, -3],
                        [4, -1, -2],
                        [4, -1, -1],
                        [4, -1, 0],
                        [4, -1, 1],
                        [4, -1, 2],
                        [4, -1, 3],
                        [4, -1, 4],
                        [4, 0, -4],
                        [4, 0, -3],
                        [4, 0, -2],
                        [4, 0, -1],
                        [4, 0, 0],
                        [4, 0, 1],
                        [4, 0, 2],
                        [4, 0, 3],
                        [4, 0, 4],
                        [4, 1, -4],
                        [4, 1, -3],
                        [4, 1, -2],
                        [4, 1, -1],
                        [4, 1, 0],
                        [4, 1, 1],
                        [4, 1, 2],
                        [4, 1, 3],
                        [4, 1, 4],
                        [4, 2, -4],
                        [4, 2, -3],
                        [4, 2, -2],
                        [4, 2, -1],
                        [4, 2, 0],
                        [4, 2, 1],
                        [4, 2, 2],
                        [4, 2, 3],
                        [4, 2, 4],
                        [4, 3, -4],
                        [4, 3, -3],
                        [4, 3, -2],
                        [4, 3, -1],
                        [4, 3, 0],
                        [4, 3, 1],
                        [4, 3, 2],
                        [4, 3, 3],
                        [4, 3, 4],
                        [4, 4, -4],
                        [4, 4, -3],
                        [4, 4, -2],
                        [4, 4, -1],
                        [4, 4, 0],
                        [4, 4, 1],
                        [4, 4, 2],
                        [4, 4, 3],
                        [4, 4, 4],
                        [5, -5, -5],
                        [5, -5, -4],
                        [5, -5, -3],
                        [5, -5, -2],
                        [5, -5, -1],
                        [5, -5, 0],
                        [5, -5, 1],
                        [5, -5, 2],
                        [5, -5, 3],
                        [5, -5, 4],
                        [5, -5, 5],
                        [5, -4, -5],
                        [5, -4, -4],
                        [5, -4, -3],
                        [5, -4, -2],
                        [5, -4, -1],
                        [5, -4, 0],
                        [5, -4, 1],
                        [5, -4, 2],
                        [5, -4, 3],
                        [5, -4, 4],
                        [5, -4, 5],
                        [5, -3, -5],
                        [5, -3, -4],
                        [5, -3, -3],
                        [5, -3, -2],
                        [5, -3, -1],
                        [5, -3, 0],
                        [5, -3, 1],
                        [5, -3, 2],
                        [5, -3, 3],
                        [5, -3, 4],
                        [5, -3, 5],
                        [5, -2, -5],
                        [5, -2, -4],
                        [5, -2, -3],
                        [5, -2, -2],
                        [5, -2, -1],
                        [5, -2, 0],
                        [5, -2, 1],
                        [5, -2, 2],
                        [5, -2, 3],
                        [5, -2, 4],
                        [5, -2, 5],
                        [5, -1, -5],
                        [5, -1, -4],
                        [5, -1, -3],
                        [5, -1, -2],
                        [5, -1, -1],
                        [5, -1, 0],
                        [5, -1, 1],
                        [5, -1, 2],
                        [5, -1, 3],
                        [5, -1, 4],
                        [5, -1, 5],
                        [5, 0, -5],
                        [5, 0, -4],
                        [5, 0, -3],
                        [5, 0, -2],
                        [5, 0, -1],
                        [5, 0, 0],
                        [5, 0, 1],
                        [5, 0, 2],
                        [5, 0, 3],
                        [5, 0, 4],
                        [5, 0, 5],
                        [5, 1, -5],
                        [5, 1, -4],
                        [5, 1, -3],
                        [5, 1, -2],
                        [5, 1, -1],
                        [5, 1, 0],
                        [5, 1, 1],
                        [5, 1, 2],
                        [5, 1, 3],
                        [5, 1, 4],
                        [5, 1, 5],
                        [5, 2, -5],
                        [5, 2, -4],
                        [5, 2, -3],
                        [5, 2, -2],
                        [5, 2, -1],
                        [5, 2, 0],
                        [5, 2, 1],
                        [5, 2, 2],
                        [5, 2, 3],
                        [5, 2, 4],
                        [5, 2, 5],
                        [5, 3, -5],
                        [5, 3, -4],
                        [5, 3, -3],
                        [5, 3, -2],
                        [5, 3, -1],
                        [5, 3, 0],
                        [5, 3, 1],
                        [5, 3, 2],
                        [5, 3, 3],
                        [5, 3, 4],
                        [5, 3, 5],
                        [5, 4, -5],
                        [5, 4, -4],
                        [5, 4, -3],
                        [5, 4, -2],
                        [5, 4, -1],
                        [5, 4, 0],
                        [5, 4, 1],
                        [5, 4, 2],
                        [5, 4, 3],
                        [5, 4, 4],
                        [5, 4, 5],
                        [5, 5, -5],
                        [5, 5, -4],
                        [5, 5, -3],
                        [5, 5, -2],
                        [5, 5, -1],
                        [5, 5, 0],
                        [5, 5, 1],
                        [5, 5, 2],
                        [5, 5, 3],
                        [5, 5, 4],
                        [5, 5, 5],
                        [6, -6, -6],
                        [6, -6, -5],
                        [6, -6, -4],
                        [6, -6, -3],
                        [6, -6, -2],
                        [6, -6, -1],
                        [6, -6, 0],
                        [6, -6, 1],
                        [6, -6, 2],
                        [6, -6, 3],
                        [6, -6, 4],
                        [6, -6, 5],
                        [6, -6, 6],
                        [6, -5, -6],
                        [6, -5, -5],
                        [6, -5, -4],
                        [6, -5, -3],
                        [6, -5, -2],
                        [6, -5, -1],
                        [6, -5, 0],
                        [6, -5, 1],
                        [6, -5, 2],
                        [6, -5, 3],
                        [6, -5, 4],
                        [6, -5, 5],
                        [6, -5, 6],
                        [6, -4, -6],
                        [6, -4, -5],
                        [6, -4, -4],
                        [6, -4, -3],
                        [6, -4, -2],
                        [6, -4, -1],
                        [6, -4, 0],
                        [6, -4, 1],
                        [6, -4, 2],
                        [6, -4, 3],
                        [6, -4, 4],
                        [6, -4, 5],
                        [6, -4, 6],
                        [6, -3, -6],
                        [6, -3, -5],
                        [6, -3, -4],
                        [6, -3, -3],
                        [6, -3, -2],
                        [6, -3, -1],
                        [6, -3, 0],
                        [6, -3, 1],
                        [6, -3, 2],
                        [6, -3, 3],
                        [6, -3, 4],
                        [6, -3, 5],
                        [6, -3, 6],
                        [6, -2, -6],
                        [6, -2, -5],
                        [6, -2, -4],
                        [6, -2, -3],
                        [6, -2, -2],
                        [6, -2, -1],
                        [6, -2, 0],
                        [6, -2, 1],
                        [6, -2, 2],
                        [6, -2, 3],
                        [6, -2, 4],
                        [6, -2, 5],
                        [6, -2, 6],
                        [6, -1, -6],
                        [6, -1, -5],
                        [6, -1, -4],
                        [6, -1, -3],
                        [6, -1, -2],
                        [6, -1, -1],
                        [6, -1, 0],
                        [6, -1, 1],
                        [6, -1, 2],
                        [6, -1, 3],
                        [6, -1, 4],
                        [6, -1, 5],
                        [6, -1, 6],
                        [6, 0, -6],
                        [6, 0, -5],
                        [6, 0, -4],
                        [6, 0, -3],
                        [6, 0, -2],
                        [6, 0, -1],
                        [6, 0, 0],
                        [6, 0, 1],
                        [6, 0, 2],
                        [6, 0, 3],
                        [6, 0, 4],
                        [6, 0, 5],
                        [6, 0, 6],
                        [6, 1, -6],
                        [6, 1, -5],
                        [6, 1, -4],
                        [6, 1, -3],
                        [6, 1, -2],
                        [6, 1, -1],
                        [6, 1, 0],
                        [6, 1, 1],
                        [6, 1, 2],
                        [6, 1, 3],
                        [6, 1, 4],
                        [6, 1, 5],
                        [6, 1, 6],
                        [6, 2, -6],
                        [6, 2, -5],
                        [6, 2, -4],
                        [6, 2, -3],
                        [6, 2, -2],
                        [6, 2, -1],
                        [6, 2, 0],
                        [6, 2, 1],
                        [6, 2, 2],
                        [6, 2, 3],
                        [6, 2, 4],
                        [6, 2, 5],
                        [6, 2, 6],
                        [6, 3, -6],
                        [6, 3, -5],
                        [6, 3, -4],
                        [6, 3, -3],
                        [6, 3, -2],
                        [6, 3, -1],
                        [6, 3, 0],
                        [6, 3, 1],
                        [6, 3, 2],
                        [6, 3, 3],
                        [6, 3, 4],
                        [6, 3, 5],
                        [6, 3, 6],
                        [6, 4, -6],
                        [6, 4, -5],
                        [6, 4, -4],
                        [6, 4, -3],
                        [6, 4, -2],
                        [6, 4, -1],
                        [6, 4, 0],
                        [6, 4, 1],
                        [6, 4, 2],
                        [6, 4, 3],
                        [6, 4, 4],
                        [6, 4, 5],
                        [6, 4, 6],
                        [6, 5, -6],
                        [6, 5, -5],
                        [6, 5, -4],
                        [6, 5, -3],
                        [6, 5, -2],
                        [6, 5, -1],
                        [6, 5, 0],
                        [6, 5, 1],
                        [6, 5, 2],
                        [6, 5, 3],
                        [6, 5, 4],
                        [6, 5, 5],
                        [6, 5, 6],
                        [6, 6, -6],
                        [6, 6, -5],
                        [6, 6, -4],
                        [6, 6, -3],
                        [6, 6, -2],
                        [6, 6, -1],
                        [6, 6, 0],
                        [6, 6, 1],
                        [6, 6, 2],
                        [6, 6, 3],
                        [6, 6, 4],
                        [6, 6, 5],
                        [6, 6, 6],
                        [7, -7, -7],
                        [7, -7, -6],
                        [7, -7, -5],
                        [7, -7, -4],
                        [7, -7, -3],
                        [7, -7, -2],
                        [7, -7, -1],
                        [7, -7, 0],
                        [7, -7, 1],
                        [7, -7, 2],
                        [7, -7, 3],
                        [7, -7, 4],
                        [7, -7, 5],
                        [7, -7, 6],
                        [7, -7, 7],
                        [7, -6, -7],
                        [7, -6, -6],
                        [7, -6, -5],
                        [7, -6, -4],
                        [7, -6, -3],
                        [7, -6, -2],
                        [7, -6, -1],
                        [7, -6, 0],
                        [7, -6, 1],
                        [7, -6, 2],
                        [7, -6, 3],
                        [7, -6, 4],
                        [7, -6, 5],
                        [7, -6, 6],
                        [7, -6, 7],
                        [7, -5, -7],
                        [7, -5, -6],
                        [7, -5, -5],
                        [7, -5, -4],
                        [7, -5, -3],
                        [7, -5, -2],
                        [7, -5, -1],
                        [7, -5, 0],
                        [7, -5, 1],
                        [7, -5, 2],
                        [7, -5, 3],
                        [7, -5, 4],
                        [7, -5, 5],
                        [7, -5, 6],
                        [7, -5, 7],
                        [7, -4, -7],
                        [7, -4, -6],
                        [7, -4, -5],
                        [7, -4, -4],
                        [7, -4, -3],
                        [7, -4, -2],
                        [7, -4, -1],
                        [7, -4, 0],
                        [7, -4, 1],
                        [7, -4, 2],
                        [7, -4, 3],
                        [7, -4, 4],
                        [7, -4, 5],
                        [7, -4, 6],
                        [7, -4, 7],
                        [7, -3, -7],
                        [7, -3, -6],
                        [7, -3, -5],
                        [7, -3, -4],
                        [7, -3, -3],
                        [7, -3, -2],
                        [7, -3, -1],
                        [7, -3, 0],
                        [7, -3, 1],
                        [7, -3, 2],
                        [7, -3, 3],
                        [7, -3, 4],
                        [7, -3, 5],
                        [7, -3, 6],
                        [7, -3, 7],
                        [7, -2, -7],
                        [7, -2, -6],
                        [7, -2, -5],
                        [7, -2, -4],
                        [7, -2, -3],
                        [7, -2, -2],
                        [7, -2, -1],
                        [7, -2, 0],
                        [7, -2, 1],
                        [7, -2, 2],
                        [7, -2, 3],
                        [7, -2, 4],
                        [7, -2, 5],
                        [7, -2, 6],
                        [7, -2, 7],
                        [7, -1, -7],
                        [7, -1, -6],
                        [7, -1, -5],
                        [7, -1, -4],
                        [7, -1, -3],
                        [7, -1, -2],
                        [7, -1, -1],
                        [7, -1, 0],
                        [7, -1, 1],
                        [7, -1, 2],
                        [7, -1, 3],
                        [7, -1, 4],
                        [7, -1, 5],
                        [7, -1, 6],
                        [7, -1, 7],
                        [7, 0, -7],
                        [7, 0, -6],
                        [7, 0, -5],
                        [7, 0, -4],
                        [7, 0, -3],
                        [7, 0, -2],
                        [7, 0, -1],
                        [7, 0, 0],
                        [7, 0, 1],
                        [7, 0, 2],
                        [7, 0, 3],
                        [7, 0, 4],
                        [7, 0, 5],
                        [7, 0, 6],
                        [7, 0, 7],
                        [7, 1, -7],
                        [7, 1, -6],
                        [7, 1, -5],
                        [7, 1, -4],
                        [7, 1, -3],
                        [7, 1, -2],
                        [7, 1, -1],
                        [7, 1, 0],
                        [7, 1, 1],
                        [7, 1, 2],
                        [7, 1, 3],
                        [7, 1, 4],
                        [7, 1, 5],
                        [7, 1, 6],
                        [7, 1, 7],
                        [7, 2, -7],
                        [7, 2, -6],
                        [7, 2, -5],
                        [7, 2, -4],
                        [7, 2, -3],
                        [7, 2, -2],
                        [7, 2, -1],
                        [7, 2, 0],
                        [7, 2, 1],
                        [7, 2, 2],
                        [7, 2, 3],
                        [7, 2, 4],
                        [7, 2, 5],
                        [7, 2, 6],
                        [7, 2, 7],
                        [7, 3, -7],
                        [7, 3, -6],
                        [7, 3, -5],
                        [7, 3, -4],
                        [7, 3, -3],
                        [7, 3, -2],
                        [7, 3, -1],
                        [7, 3, 0],
                        [7, 3, 1],
                        [7, 3, 2],
                        [7, 3, 3],
                        [7, 3, 4],
                        [7, 3, 5],
                        [7, 3, 6],
                        [7, 3, 7],
                        [7, 4, -7],
                        [7, 4, -6],
                        [7, 4, -5],
                        [7, 4, -4],
                        [7, 4, -3],
                        [7, 4, -2],
                        [7, 4, -1],
                        [7, 4, 0],
                        [7, 4, 1],
                        [7, 4, 2],
                        [7, 4, 3],
                        [7, 4, 4],
                        [7, 4, 5],
                        [7, 4, 6],
                        [7, 4, 7],
                        [7, 5, -7],
                        [7, 5, -6],
                        [7, 5, -5],
                        [7, 5, -4],
                        [7, 5, -3],
                        [7, 5, -2],
                        [7, 5, -1],
                        [7, 5, 0],
                        [7, 5, 1],
                        [7, 5, 2],
                        [7, 5, 3],
                        [7, 5, 4],
                        [7, 5, 5],
                        [7, 5, 6],
                        [7, 5, 7],
                        [7, 6, -7],
                        [7, 6, -6],
                        [7, 6, -5],
                        [7, 6, -4],
                        [7, 6, -3],
                        [7, 6, -2],
                        [7, 6, -1],
                        [7, 6, 0],
                        [7, 6, 1],
                        [7, 6, 2],
                        [7, 6, 3],
                        [7, 6, 4],
                        [7, 6, 5],
                        [7, 6, 6],
                        [7, 6, 7],
                        [7, 7, -7],
                        [7, 7, -6],
                        [7, 7, -5],
                        [7, 7, -4],
                        [7, 7, -3],
                        [7, 7, -2],
                        [7, 7, -1],
                        [7, 7, 0],
                        [7, 7, 1],
                        [7, 7, 2],
                        [7, 7, 3],
                        [7, 7, 4],
                        [7, 7, 5],
                        [7, 7, 6],
                        [7, 7, 7],
                        [8, -8, -8],
                        [8, -8, -7],
                        [8, -8, -6],
                        [8, -8, -5],
                        [8, -8, -4],
                        [8, -8, -3],
                        [8, -8, -2],
                        [8, -8, -1],
                        [8, -8, 0],
                        [8, -8, 1],
                        [8, -8, 2],
                        [8, -8, 3],
                        [8, -8, 4],
                        [8, -8, 5],
                        [8, -8, 6],
                        [8, -8, 7],
                        [8, -8, 8],
                        [8, -7, -8],
                        [8, -7, -7],
                        [8, -7, -6],
                        [8, -7, -5],
                        [8, -7, -4],
                        [8, -7, -3],
                        [8, -7, -2],
                        [8, -7, -1],
                        [8, -7, 0],
                        [8, -7, 1],
                        [8, -7, 2],
                        [8, -7, 3],
                        [8, -7, 4],
                        [8, -7, 5],
                        [8, -7, 6],
                        [8, -7, 7],
                        [8, -7, 8],
                        [8, -6, -8],
                        [8, -6, -7],
                        [8, -6, -6],
                        [8, -6, -5],
                        [8, -6, -4],
                        [8, -6, -3],
                        [8, -6, -2],
                        [8, -6, -1],
                        [8, -6, 0],
                        [8, -6, 1],
                        [8, -6, 2],
                        [8, -6, 3],
                        [8, -6, 4],
                        [8, -6, 5],
                        [8, -6, 6],
                        [8, -6, 7],
                        [8, -6, 8],
                        [8, -5, -8],
                        [8, -5, -7],
                        [8, -5, -6],
                        [8, -5, -5],
                        [8, -5, -4],
                        [8, -5, -3],
                        [8, -5, -2],
                        [8, -5, -1],
                        [8, -5, 0],
                        [8, -5, 1],
                        [8, -5, 2],
                        [8, -5, 3],
                        [8, -5, 4],
                        [8, -5, 5],
                        [8, -5, 6],
                        [8, -5, 7],
                        [8, -5, 8],
                        [8, -4, -8],
                        [8, -4, -7],
                        [8, -4, -6],
                        [8, -4, -5],
                        [8, -4, -4],
                        [8, -4, -3],
                        [8, -4, -2],
                        [8, -4, -1],
                        [8, -4, 0],
                        [8, -4, 1],
                        [8, -4, 2],
                        [8, -4, 3],
                        [8, -4, 4],
                        [8, -4, 5],
                        [8, -4, 6],
                        [8, -4, 7],
                        [8, -4, 8],
                        [8, -3, -8],
                        [8, -3, -7],
                        [8, -3, -6],
                        [8, -3, -5],
                        [8, -3, -4],
                        [8, -3, -3],
                        [8, -3, -2],
                        [8, -3, -1],
                        [8, -3, 0],
                        [8, -3, 1],
                        [8, -3, 2],
                        [8, -3, 3],
                        [8, -3, 4],
                        [8, -3, 5],
                        [8, -3, 6],
                        [8, -3, 7],
                        [8, -3, 8],
                        [8, -2, -8],
                        [8, -2, -7],
                        [8, -2, -6],
                        [8, -2, -5],
                        [8, -2, -4],
                        [8, -2, -3],
                        [8, -2, -2],
                        [8, -2, -1],
                        [8, -2, 0],
                        [8, -2, 1],
                        [8, -2, 2],
                        [8, -2, 3],
                        [8, -2, 4],
                        [8, -2, 5],
                        [8, -2, 6],
                        [8, -2, 7],
                        [8, -2, 8],
                        [8, -1, -8],
                        [8, -1, -7],
                        [8, -1, -6],
                        [8, -1, -5],
                        [8, -1, -4],
                        [8, -1, -3],
                        [8, -1, -2],
                        [8, -1, -1],
                        [8, -1, 0],
                        [8, -1, 1],
                        [8, -1, 2],
                        [8, -1, 3],
                        [8, -1, 4],
                        [8, -1, 5],
                        [8, -1, 6],
                        [8, -1, 7],
                        [8, -1, 8],
                        [8, 0, -8],
                        [8, 0, -7],
                        [8, 0, -6],
                        [8, 0, -5],
                        [8, 0, -4],
                        [8, 0, -3],
                        [8, 0, -2],
                        [8, 0, -1],
                        [8, 0, 0],
                        [8, 0, 1],
                        [8, 0, 2],
                        [8, 0, 3],
                        [8, 0, 4],
                        [8, 0, 5],
                        [8, 0, 6],
                        [8, 0, 7],
                        [8, 0, 8],
                        [8, 1, -8],
                        [8, 1, -7],
                        [8, 1, -6],
                        [8, 1, -5],
                        [8, 1, -4],
                        [8, 1, -3],
                        [8, 1, -2],
                        [8, 1, -1],
                        [8, 1, 0],
                        [8, 1, 1],
                        [8, 1, 2],
                        [8, 1, 3],
                        [8, 1, 4],
                        [8, 1, 5],
                        [8, 1, 6],
                        [8, 1, 7],
                        [8, 1, 8],
                        [8, 2, -8],
                        [8, 2, -7],
                        [8, 2, -6],
                        [8, 2, -5],
                        [8, 2, -4],
                        [8, 2, -3],
                        [8, 2, -2],
                        [8, 2, -1],
                        [8, 2, 0],
                        [8, 2, 1],
                        [8, 2, 2],
                        [8, 2, 3],
                        [8, 2, 4],
                        [8, 2, 5],
                        [8, 2, 6],
                        [8, 2, 7],
                        [8, 2, 8],
                        [8, 3, -8],
                        [8, 3, -7],
                        [8, 3, -6],
                        [8, 3, -5],
                        [8, 3, -4],
                        [8, 3, -3],
                        [8, 3, -2],
                        [8, 3, -1],
                        [8, 3, 0],
                        [8, 3, 1],
                        [8, 3, 2],
                        [8, 3, 3],
                        [8, 3, 4],
                        [8, 3, 5],
                        [8, 3, 6],
                        [8, 3, 7],
                        [8, 3, 8],
                        [8, 4, -8],
                        [8, 4, -7],
                        [8, 4, -6],
                        [8, 4, -5],
                        [8, 4, -4],
                        [8, 4, -3],
                        [8, 4, -2],
                        [8, 4, -1],
                        [8, 4, 0],
                        [8, 4, 1],
                        [8, 4, 2],
                        [8, 4, 3],
                        [8, 4, 4],
                        [8, 4, 5],
                        [8, 4, 6],
                        [8, 4, 7],
                        [8, 4, 8],
                        [8, 5, -8],
                        [8, 5, -7],
                        [8, 5, -6],
                        [8, 5, -5],
                        [8, 5, -4],
                        [8, 5, -3],
                        [8, 5, -2],
                        [8, 5, -1],
                        [8, 5, 0],
                        [8, 5, 1],
                        [8, 5, 2],
                        [8, 5, 3],
                        [8, 5, 4],
                        [8, 5, 5],
                        [8, 5, 6],
                        [8, 5, 7],
                        [8, 5, 8],
                        [8, 6, -8],
                        [8, 6, -7],
                        [8, 6, -6],
                        [8, 6, -5],
                        [8, 6, -4],
                        [8, 6, -3],
                        [8, 6, -2],
                        [8, 6, -1],
                        [8, 6, 0],
                        [8, 6, 1],
                        [8, 6, 2],
                        [8, 6, 3],
                        [8, 6, 4],
                        [8, 6, 5],
                        [8, 6, 6],
                        [8, 6, 7],
                        [8, 6, 8],
                        [8, 7, -8],
                        [8, 7, -7],
                        [8, 7, -6],
                        [8, 7, -5],
                        [8, 7, -4],
                        [8, 7, -3],
                        [8, 7, -2],
                        [8, 7, -1],
                        [8, 7, 0],
                        [8, 7, 1],
                        [8, 7, 2],
                        [8, 7, 3],
                        [8, 7, 4],
                        [8, 7, 5],
                        [8, 7, 6],
                        [8, 7, 7],
                        [8, 7, 8],
                        [8, 8, -8],
                        [8, 8, -7],
                        [8, 8, -6],
                        [8, 8, -5],
                        [8, 8, -4],
                        [8, 8, -3],
                        [8, 8, -2],
                        [8, 8, -1],
                        [8, 8, 0],
                        [8, 8, 1],
                        [8, 8, 2],
                        [8, 8, 3],
                        [8, 8, 4],
                        [8, 8, 5],
                        [8, 8, 6],
                        [8, 8, 7],
                        [8, 8, 8],
                        [9, -9, -9],
                        [9, -9, -8],
                        [9, -9, -7],
                        [9, -9, -6],
                        [9, -9, -5],
                        [9, -9, -4],
                        [9, -9, -3],
                        [9, -9, -2],
                        [9, -9, -1],
                        [9, -9, 0],
                        [9, -9, 1],
                        [9, -9, 2],
                        [9, -9, 3],
                        [9, -9, 4],
                        [9, -9, 5],
                        [9, -9, 6],
                        [9, -9, 7],
                        [9, -9, 8],
                        [9, -9, 9],
                        [9, -8, -9],
                        [9, -8, -8],
                        [9, -8, -7],
                        [9, -8, -6],
                        [9, -8, -5],
                        [9, -8, -4],
                        [9, -8, -3],
                        [9, -8, -2],
                        [9, -8, -1],
                        [9, -8, 0],
                        [9, -8, 1],
                        [9, -8, 2],
                        [9, -8, 3],
                        [9, -8, 4],
                        [9, -8, 5],
                        [9, -8, 6],
                        [9, -8, 7],
                        [9, -8, 8],
                        [9, -8, 9],
                        [9, -7, -9],
                        [9, -7, -8],
                        [9, -7, -7],
                        [9, -7, -6],
                        [9, -7, -5],
                        [9, -7, -4],
                        [9, -7, -3],
                        [9, -7, -2],
                        [9, -7, -1],
                        [9, -7, 0],
                        [9, -7, 1],
                        [9, -7, 2],
                        [9, -7, 3],
                        [9, -7, 4],
                        [9, -7, 5],
                        [9, -7, 6],
                        [9, -7, 7],
                        [9, -7, 8],
                        [9, -7, 9],
                        [9, -6, -9],
                        [9, -6, -8],
                        [9, -6, -7],
                        [9, -6, -6],
                        [9, -6, -5],
                        [9, -6, -4],
                        [9, -6, -3],
                        [9, -6, -2],
                        [9, -6, -1],
                        [9, -6, 0],
                        [9, -6, 1],
                        [9, -6, 2],
                        [9, -6, 3],
                        [9, -6, 4],
                        [9, -6, 5],
                        [9, -6, 6],
                        [9, -6, 7],
                        [9, -6, 8],
                        [9, -6, 9],
                        [9, -5, -9],
                        [9, -5, -8],
                        [9, -5, -7],
                        [9, -5, -6],
                        [9, -5, -5],
                        [9, -5, -4],
                        [9, -5, -3],
                        [9, -5, -2],
                        [9, -5, -1],
                        [9, -5, 0],
                        [9, -5, 1],
                        [9, -5, 2],
                        [9, -5, 3],
                        [9, -5, 4],
                        [9, -5, 5],
                        [9, -5, 6],
                        [9, -5, 7],
                        [9, -5, 8],
                        [9, -5, 9],
                        [9, -4, -9],
                        [9, -4, -8],
                        [9, -4, -7],
                        [9, -4, -6],
                        [9, -4, -5],
                        [9, -4, -4],
                        [9, -4, -3],
                        [9, -4, -2],
                        [9, -4, -1],
                        [9, -4, 0],
                        [9, -4, 1],
                        [9, -4, 2],
                        [9, -4, 3],
                        [9, -4, 4],
                        [9, -4, 5],
                        [9, -4, 6],
                        [9, -4, 7],
                        [9, -4, 8],
                        [9, -4, 9],
                        [9, -3, -9],
                        [9, -3, -8],
                        [9, -3, -7],
                        [9, -3, -6],
                        [9, -3, -5],
                        [9, -3, -4],
                        [9, -3, -3],
                        [9, -3, -2],
                        [9, -3, -1],
                        [9, -3, 0],
                        [9, -3, 1],
                        [9, -3, 2],
                        [9, -3, 3],
                        [9, -3, 4],
                        [9, -3, 5],
                        [9, -3, 6],
                        [9, -3, 7],
                        [9, -3, 8],
                        [9, -3, 9],
                        [9, -2, -9],
                        [9, -2, -8],
                        [9, -2, -7],
                        [9, -2, -6],
                        [9, -2, -5],
                        [9, -2, -4],
                        [9, -2, -3],
                        [9, -2, -2],
                        [9, -2, -1],
                        [9, -2, 0],
                        [9, -2, 1],
                        [9, -2, 2],
                        [9, -2, 3],
                        [9, -2, 4],
                        [9, -2, 5],
                        [9, -2, 6],
                        [9, -2, 7],
                        [9, -2, 8],
                        [9, -2, 9],
                        [9, -1, -9],
                        [9, -1, -8],
                        [9, -1, -7],
                        [9, -1, -6],
                        [9, -1, -5],
                        [9, -1, -4],
                        [9, -1, -3],
                        [9, -1, -2],
                        [9, -1, -1],
                        [9, -1, 0],
                        [9, -1, 1],
                        [9, -1, 2],
                        [9, -1, 3],
                        [9, -1, 4],
                        [9, -1, 5],
                        [9, -1, 6],
                        [9, -1, 7],
                        [9, -1, 8],
                        [9, -1, 9],
                        [9, 0, -9],
                        [9, 0, -8],
                        [9, 0, -7],
                        [9, 0, -6],
                        [9, 0, -5],
                        [9, 0, -4],
                        [9, 0, -3],
                        [9, 0, -2],
                        [9, 0, -1],
                        [9, 0, 0],
                        [9, 0, 1],
                        [9, 0, 2],
                        [9, 0, 3],
                        [9, 0, 4],
                        [9, 0, 5],
                        [9, 0, 6],
                        [9, 0, 7],
                        [9, 0, 8],
                        [9, 0, 9],
                        [9, 1, -9],
                        [9, 1, -8],
                        [9, 1, -7],
                        [9, 1, -6],
                        [9, 1, -5],
                        [9, 1, -4],
                        [9, 1, -3],
                        [9, 1, -2],
                        [9, 1, -1],
                        [9, 1, 0],
                        [9, 1, 1],
                        [9, 1, 2],
                        [9, 1, 3],
                        [9, 1, 4],
                        [9, 1, 5],
                        [9, 1, 6],
                        [9, 1, 7],
                        [9, 1, 8],
                        [9, 1, 9],
                        [9, 2, -9],
                        [9, 2, -8],
                        [9, 2, -7],
                        [9, 2, -6],
                        [9, 2, -5],
                        [9, 2, -4],
                        [9, 2, -3],
                        [9, 2, -2],
                        [9, 2, -1],
                        [9, 2, 0],
                        [9, 2, 1],
                        [9, 2, 2],
                        [9, 2, 3],
                        [9, 2, 4],
                        [9, 2, 5],
                        [9, 2, 6],
                        [9, 2, 7],
                        [9, 2, 8],
                        [9, 2, 9],
                        [9, 3, -9],
                        [9, 3, -8],
                        [9, 3, -7],
                        [9, 3, -6],
                        [9, 3, -5],
                        [9, 3, -4],
                        [9, 3, -3],
                        [9, 3, -2],
                        [9, 3, -1],
                        [9, 3, 0],
                        [9, 3, 1],
                        [9, 3, 2],
                        [9, 3, 3],
                        [9, 3, 4],
                        [9, 3, 5],
                        [9, 3, 6],
                        [9, 3, 7],
                        [9, 3, 8],
                        [9, 3, 9],
                        [9, 4, -9],
                        [9, 4, -8],
                        [9, 4, -7],
                        [9, 4, -6],
                        [9, 4, -5],
                        [9, 4, -4],
                        [9, 4, -3],
                        [9, 4, -2],
                        [9, 4, -1],
                        [9, 4, 0],
                        [9, 4, 1],
                        [9, 4, 2],
                        [9, 4, 3],
                        [9, 4, 4],
                        [9, 4, 5],
                        [9, 4, 6],
                        [9, 4, 7],
                        [9, 4, 8],
                        [9, 4, 9],
                        [9, 5, -9],
                        [9, 5, -8],
                        [9, 5, -7],
                        [9, 5, -6],
                        [9, 5, -5],
                        [9, 5, -4],
                        [9, 5, -3],
                        [9, 5, -2],
                        [9, 5, -1],
                        [9, 5, 0],
                        [9, 5, 1],
                        [9, 5, 2],
                        [9, 5, 3],
                        [9, 5, 4],
                        [9, 5, 5],
                        [9, 5, 6],
                        [9, 5, 7],
                        [9, 5, 8],
                        [9, 5, 9],
                        [9, 6, -9],
                        [9, 6, -8],
                        [9, 6, -7],
                        [9, 6, -6],
                        [9, 6, -5],
                        [9, 6, -4],
                        [9, 6, -3],
                        [9, 6, -2],
                        [9, 6, -1],
                        [9, 6, 0],
                        [9, 6, 1],
                        [9, 6, 2],
                        [9, 6, 3],
                        [9, 6, 4],
                        [9, 6, 5],
                        [9, 6, 6],
                        [9, 6, 7],
                        [9, 6, 8],
                        [9, 6, 9],
                        [9, 7, -9],
                        [9, 7, -8],
                        [9, 7, -7],
                        [9, 7, -6],
                        [9, 7, -5],
                        [9, 7, -4],
                        [9, 7, -3],
                        [9, 7, -2],
                        [9, 7, -1],
                        [9, 7, 0],
                        [9, 7, 1],
                        [9, 7, 2],
                        [9, 7, 3],
                        [9, 7, 4],
                        [9, 7, 5],
                        [9, 7, 6],
                        [9, 7, 7],
                        [9, 7, 8],
                        [9, 7, 9],
                        [9, 8, -9],
                        [9, 8, -8],
                        [9, 8, -7],
                        [9, 8, -6],
                        [9, 8, -5],
                        [9, 8, -4],
                        [9, 8, -3],
                        [9, 8, -2],
                        [9, 8, -1],
                        [9, 8, 0],
                        [9, 8, 1],
                        [9, 8, 2],
                        [9, 8, 3],
                        [9, 8, 4],
                        [9, 8, 5],
                        [9, 8, 6],
                        [9, 8, 7],
                        [9, 8, 8],
                        [9, 8, 9],
                        [9, 9, -9],
                        [9, 9, -8],
                        [9, 9, -7],
                        [9, 9, -6],
                        [9, 9, -5],
                        [9, 9, -4],
                        [9, 9, -3],
                        [9, 9, -2],
                        [9, 9, -1],
                        [9, 9, 0],
                        [9, 9, 1],
                        [9, 9, 2],
                        [9, 9, 3],
                        [9, 9, 4],
                        [9, 9, 5],
                        [9, 9, 6],
                        [9, 9, 7],
                        [9, 9, 8],
                        [9, 9, 9],
                        [10, -10, -10],
                        [10, -10, -9],
                        [10, -10, -8],
                        [10, -10, -7],
                        [10, -10, -6],
                        [10, -10, -5],
                        [10, -10, -4],
                        [10, -10, -3],
                        [10, -10, -2],
                        [10, -10, -1],
                        [10, -10, 0],
                        [10, -10, 1],
                        [10, -10, 2],
                        [10, -10, 3],
                        [10, -10, 4],
                        [10, -10, 5],
                        [10, -10, 6],
                        [10, -10, 7],
                        [10, -10, 8],
                        [10, -10, 9],
                        [10, -10, 10],
                        [10, -9, -10],
                        [10, -9, -9],
                        [10, -9, -8],
                        [10, -9, -7],
                        [10, -9, -6],
                        [10, -9, -5],
                        [10, -9, -4],
                        [10, -9, -3],
                        [10, -9, -2],
                        [10, -9, -1],
                        [10, -9, 0],
                        [10, -9, 1],
                        [10, -9, 2],
                        [10, -9, 3],
                        [10, -9, 4],
                        [10, -9, 5],
                        [10, -9, 6],
                        [10, -9, 7],
                        [10, -9, 8],
                        [10, -9, 9],
                        [10, -9, 10],
                        [10, -8, -10],
                        [10, -8, -9],
                        [10, -8, -8],
                        [10, -8, -7],
                        [10, -8, -6],
                        [10, -8, -5],
                        [10, -8, -4],
                        [10, -8, -3],
                        [10, -8, -2],
                        [10, -8, -1],
                        [10, -8, 0],
                        [10, -8, 1],
                        [10, -8, 2],
                        [10, -8, 3],
                        [10, -8, 4],
                        [10, -8, 5],
                        [10, -8, 6],
                        [10, -8, 7],
                        [10, -8, 8],
                        [10, -8, 9],
                        [10, -8, 10],
                        [10, -7, -10],
                        [10, -7, -9],
                        [10, -7, -8],
                        [10, -7, -7],
                        [10, -7, -6],
                        [10, -7, -5],
                        [10, -7, -4],
                        [10, -7, -3],
                        [10, -7, -2],
                        [10, -7, -1],
                        [10, -7, 0],
                        [10, -7, 1],
                        [10, -7, 2],
                        [10, -7, 3],
                        [10, -7, 4],
                        [10, -7, 5],
                        [10, -7, 6],
                        [10, -7, 7],
                        [10, -7, 8],
                        [10, -7, 9],
                        [10, -7, 10],
                        [10, -6, -10],
                        [10, -6, -9],
                        [10, -6, -8],
                        [10, -6, -7],
                        [10, -6, -6],
                        [10, -6, -5],
                        [10, -6, -4],
                        [10, -6, -3],
                        [10, -6, -2],
                        [10, -6, -1],
                        [10, -6, 0],
                        [10, -6, 1],
                        [10, -6, 2],
                        [10, -6, 3],
                        [10, -6, 4],
                        [10, -6, 5],
                        [10, -6, 6],
                        [10, -6, 7],
                        [10, -6, 8],
                        [10, -6, 9],
                        [10, -6, 10],
                        [10, -5, -10],
                        [10, -5, -9],
                        [10, -5, -8],
                        [10, -5, -7],
                        [10, -5, -6],
                        [10, -5, -5],
                        [10, -5, -4],
                        [10, -5, -3],
                        [10, -5, -2],
                        [10, -5, -1],
                        [10, -5, 0],
                        [10, -5, 1],
                        [10, -5, 2],
                        [10, -5, 3],
                        [10, -5, 4],
                        [10, -5, 5],
                        [10, -5, 6],
                        [10, -5, 7],
                        [10, -5, 8],
                        [10, -5, 9],
                        [10, -5, 10],
                        [10, -4, -10],
                        [10, -4, -9],
                        [10, -4, -8],
                        [10, -4, -7],
                        [10, -4, -6],
                        [10, -4, -5],
                        [10, -4, -4],
                        [10, -4, -3],
                        [10, -4, -2],
                        [10, -4, -1],
                        [10, -4, 0],
                        [10, -4, 1],
                        [10, -4, 2],
                        [10, -4, 3],
                        [10, -4, 4],
                        [10, -4, 5],
                        [10, -4, 6],
                        [10, -4, 7],
                        [10, -4, 8],
                        [10, -4, 9],
                        [10, -4, 10],
                        [10, -3, -10],
                        [10, -3, -9],
                        [10, -3, -8],
                        [10, -3, -7],
                        [10, -3, -6],
                        [10, -3, -5],
                        [10, -3, -4],
                        [10, -3, -3],
                        [10, -3, -2],
                        [10, -3, -1],
                        [10, -3, 0],
                        [10, -3, 1],
                        [10, -3, 2],
                        [10, -3, 3],
                        [10, -3, 4],
                        [10, -3, 5],
                        [10, -3, 6],
                        [10, -3, 7],
                        [10, -3, 8],
                        [10, -3, 9],
                        [10, -3, 10],
                        [10, -2, -10],
                        [10, -2, -9],
                        [10, -2, -8],
                        [10, -2, -7],
                        [10, -2, -6],
                        [10, -2, -5],
                        [10, -2, -4],
                        [10, -2, -3],
                        [10, -2, -2],
                        [10, -2, -1],
                        [10, -2, 0],
                        [10, -2, 1],
                        [10, -2, 2],
                        [10, -2, 3],
                        [10, -2, 4],
                        [10, -2, 5],
                        [10, -2, 6],
                        [10, -2, 7],
                        [10, -2, 8],
                        [10, -2, 9],
                        [10, -2, 10],
                        [10, -1, -10],
                        [10, -1, -9],
                        [10, -1, -8],
                        [10, -1, -7],
                        [10, -1, -6],
                        [10, -1, -5],
                        [10, -1, -4],
                        [10, -1, -3],
                        [10, -1, -2],
                        [10, -1, -1],
                        [10, -1, 0],
                        [10, -1, 1],
                        [10, -1, 2],
                        [10, -1, 3],
                        [10, -1, 4],
                        [10, -1, 5],
                        [10, -1, 6],
                        [10, -1, 7],
                        [10, -1, 8],
                        [10, -1, 9],
                        [10, -1, 10],
                        [10, 0, -10],
                        [10, 0, -9],
                        [10, 0, -8],
                        [10, 0, -7],
                        [10, 0, -6],
                        [10, 0, -5],
                        [10, 0, -4],
                        [10, 0, -3],
                        [10, 0, -2],
                        [10, 0, -1],
                        [10, 0, 0],
                        [10, 0, 1],
                        [10, 0, 2],
                        [10, 0, 3],
                        [10, 0, 4],
                        [10, 0, 5],
                        [10, 0, 6],
                        [10, 0, 7],
                        [10, 0, 8],
                        [10, 0, 9],
                        [10, 0, 10],
                        [10, 1, -10],
                        [10, 1, -9],
                        [10, 1, -8],
                        [10, 1, -7],
                        [10, 1, -6],
                        [10, 1, -5],
                        [10, 1, -4],
                        [10, 1, -3],
                        [10, 1, -2],
                        [10, 1, -1],
                        [10, 1, 0],
                        [10, 1, 1],
                        [10, 1, 2],
                        [10, 1, 3],
                        [10, 1, 4],
                        [10, 1, 5],
                        [10, 1, 6],
                        [10, 1, 7],
                        [10, 1, 8],
                        [10, 1, 9],
                        [10, 1, 10],
                        [10, 2, -10],
                        [10, 2, -9],
                        [10, 2, -8],
                        [10, 2, -7],
                        [10, 2, -6],
                        [10, 2, -5],
                        [10, 2, -4],
                        [10, 2, -3],
                        [10, 2, -2],
                        [10, 2, -1],
                        [10, 2, 0],
                        [10, 2, 1],
                        [10, 2, 2],
                        [10, 2, 3],
                        [10, 2, 4],
                        [10, 2, 5],
                        [10, 2, 6],
                        [10, 2, 7],
                        [10, 2, 8],
                        [10, 2, 9],
                        [10, 2, 10],
                        [10, 3, -10],
                        [10, 3, -9],
                        [10, 3, -8],
                        [10, 3, -7],
                        [10, 3, -6],
                        [10, 3, -5],
                        [10, 3, -4],
                        [10, 3, -3],
                        [10, 3, -2],
                        [10, 3, -1],
                        [10, 3, 0],
                        [10, 3, 1],
                        [10, 3, 2],
                        [10, 3, 3],
                        [10, 3, 4],
                        [10, 3, 5],
                        [10, 3, 6],
                        [10, 3, 7],
                        [10, 3, 8],
                        [10, 3, 9],
                        [10, 3, 10],
                        [10, 4, -10],
                        [10, 4, -9],
                        [10, 4, -8],
                        [10, 4, -7],
                        [10, 4, -6],
                        [10, 4, -5],
                        [10, 4, -4],
                        [10, 4, -3],
                        [10, 4, -2],
                        [10, 4, -1],
                        [10, 4, 0],
                        [10, 4, 1],
                        [10, 4, 2],
                        [10, 4, 3],
                        [10, 4, 4],
                        [10, 4, 5],
                        [10, 4, 6],
                        [10, 4, 7],
                        [10, 4, 8],
                        [10, 4, 9],
                        [10, 4, 10],
                        [10, 5, -10],
                        [10, 5, -9],
                        [10, 5, -8],
                        [10, 5, -7],
                        [10, 5, -6],
                        [10, 5, -5],
                        [10, 5, -4],
                        [10, 5, -3],
                        [10, 5, -2],
                        [10, 5, -1],
                        [10, 5, 0],
                        [10, 5, 1],
                        [10, 5, 2],
                        [10, 5, 3],
                        [10, 5, 4],
                        [10, 5, 5],
                        [10, 5, 6],
                        [10, 5, 7],
                        [10, 5, 8],
                        [10, 5, 9],
                        [10, 5, 10],
                        [10, 6, -10],
                        [10, 6, -9],
                        [10, 6, -8],
                        [10, 6, -7],
                        [10, 6, -6],
                        [10, 6, -5],
                        [10, 6, -4],
                        [10, 6, -3],
                        [10, 6, -2],
                        [10, 6, -1],
                        [10, 6, 0],
                        [10, 6, 1],
                        [10, 6, 2],
                        [10, 6, 3],
                        [10, 6, 4],
                        [10, 6, 5],
                        [10, 6, 6],
                        [10, 6, 7],
                        [10, 6, 8],
                        [10, 6, 9],
                        [10, 6, 10],
                        [10, 7, -10],
                        [10, 7, -9],
                        [10, 7, -8],
                        [10, 7, -7],
                        [10, 7, -6],
                        [10, 7, -5],
                        [10, 7, -4],
                        [10, 7, -3],
                        [10, 7, -2],
                        [10, 7, -1],
                        [10, 7, 0],
                        [10, 7, 1],
                        [10, 7, 2],
                        [10, 7, 3],
                        [10, 7, 4],
                        [10, 7, 5],
                        [10, 7, 6],
                        [10, 7, 7],
                        [10, 7, 8],
                        [10, 7, 9],
                        [10, 7, 10],
                        [10, 8, -10],
                        [10, 8, -9],
                        [10, 8, -8],
                        [10, 8, -7],
                        [10, 8, -6],
                        [10, 8, -5],
                        [10, 8, -4],
                        [10, 8, -3],
                        [10, 8, -2],
                        [10, 8, -1],
                        [10, 8, 0],
                        [10, 8, 1],
                        [10, 8, 2],
                        [10, 8, 3],
                        [10, 8, 4],
                        [10, 8, 5],
                        [10, 8, 6],
                        [10, 8, 7],
                        [10, 8, 8],
                        [10, 8, 9],
                        [10, 8, 10],
                        [10, 9, -10],
                        [10, 9, -9],
                        [10, 9, -8],
                        [10, 9, -7],
                        [10, 9, -6],
                        [10, 9, -5],
                        [10, 9, -4],
                        [10, 9, -3],
                        [10, 9, -2],
                        [10, 9, -1],
                        [10, 9, 0],
                        [10, 9, 1],
                        [10, 9, 2],
                        [10, 9, 3],
                        [10, 9, 4],
                        [10, 9, 5],
                        [10, 9, 6],
                        [10, 9, 7],
                        [10, 9, 8],
                        [10, 9, 9],
                        [10, 9, 10],
                        [10, 10, -10],
                        [10, 10, -9],
                        [10, 10, -8],
                        [10, 10, -7],
                        [10, 10, -6],
                        [10, 10, -5],
                        [10, 10, -4],
                        [10, 10, -3],
                        [10, 10, -2],
                        [10, 10, -1],
                        [10, 10, 0],
                        [10, 10, 1],
                        [10, 10, 2],
                        [10, 10, 3],
                        [10, 10, 4],
                        [10, 10, 5],
                        [10, 10, 6],
                        [10, 10, 7],
                        [10, 10, 8],
                        [10, 10, 9],
                        [10, 10, 10],
                        [11, -11, -11],
                        [11, -11, -10],
                        [11, -11, -9],
                        [11, -11, -8],
                        [11, -11, -7],
                        [11, -11, -6],
                        [11, -11, -5],
                        [11, -11, -4],
                        [11, -11, -3],
                        [11, -11, -2],
                        [11, -11, -1],
                        [11, -11, 0],
                        [11, -11, 1],
                        [11, -11, 2],
                        [11, -11, 3],
                        [11, -11, 4],
                        [11, -11, 5],
                        [11, -11, 6],
                        [11, -11, 7],
                        [11, -11, 8],
                        [11, -11, 9],
                        [11, -11, 10],
                        [11, -11, 11],
                        [11, -10, -11],
                        [11, -10, -10],
                        [11, -10, -9],
                        [11, -10, -8],
                        [11, -10, -7],
                        [11, -10, -6],
                        [11, -10, -5],
                        [11, -10, -4],
                        [11, -10, -3],
                        [11, -10, -2],
                        [11, -10, -1],
                        [11, -10, 0],
                        [11, -10, 1],
                        [11, -10, 2],
                        [11, -10, 3],
                        [11, -10, 4],
                        [11, -10, 5],
                        [11, -10, 6],
                        [11, -10, 7],
                        [11, -10, 8],
                        [11, -10, 9],
                        [11, -10, 10],
                        [11, -10, 11],
                        [11, -9, -11],
                        [11, -9, -10],
                        [11, -9, -9],
                        [11, -9, -8],
                        [11, -9, -7],
                        [11, -9, -6],
                        [11, -9, -5],
                        [11, -9, -4],
                        [11, -9, -3],
                        [11, -9, -2],
                        [11, -9, -1],
                        [11, -9, 0],
                        [11, -9, 1],
                        [11, -9, 2],
                        [11, -9, 3],
                        [11, -9, 4],
                        [11, -9, 5],
                        [11, -9, 6],
                        [11, -9, 7],
                        [11, -9, 8],
                        [11, -9, 9],
                        [11, -9, 10],
                        [11, -9, 11],
                        [11, -8, -11],
                        [11, -8, -10],
                        [11, -8, -9],
                        [11, -8, -8],
                        [11, -8, -7],
                        [11, -8, -6],
                        [11, -8, -5],
                        [11, -8, -4],
                        [11, -8, -3],
                        [11, -8, -2],
                        [11, -8, -1],
                        [11, -8, 0],
                        [11, -8, 1],
                        [11, -8, 2],
                        [11, -8, 3],
                        [11, -8, 4],
                        [11, -8, 5],
                        [11, -8, 6],
                        [11, -8, 7],
                        [11, -8, 8],
                        [11, -8, 9],
                        [11, -8, 10],
                        [11, -8, 11],
                        [11, -7, -11],
                        [11, -7, -10],
                        [11, -7, -9],
                        [11, -7, -8],
                        [11, -7, -7],
                        [11, -7, -6],
                        [11, -7, -5],
                        [11, -7, -4],
                        [11, -7, -3],
                        [11, -7, -2],
                        [11, -7, -1],
                        [11, -7, 0],
                        [11, -7, 1],
                        [11, -7, 2],
                        [11, -7, 3],
                        [11, -7, 4],
                        [11, -7, 5],
                        [11, -7, 6],
                        [11, -7, 7],
                        [11, -7, 8],
                        [11, -7, 9],
                        [11, -7, 10],
                        [11, -7, 11],
                        [11, -6, -11],
                        [11, -6, -10],
                        [11, -6, -9],
                        [11, -6, -8],
                        [11, -6, -7],
                        [11, -6, -6],
                        [11, -6, -5],
                        [11, -6, -4],
                        [11, -6, -3],
                        [11, -6, -2],
                        [11, -6, -1],
                        [11, -6, 0],
                        [11, -6, 1],
                        [11, -6, 2],
                        [11, -6, 3],
                        [11, -6, 4],
                        [11, -6, 5],
                        [11, -6, 6],
                        [11, -6, 7],
                        [11, -6, 8],
                        [11, -6, 9],
                        [11, -6, 10],
                        [11, -6, 11],
                        [11, -5, -11],
                        [11, -5, -10],
                        [11, -5, -9],
                        [11, -5, -8],
                        [11, -5, -7],
                        [11, -5, -6],
                        [11, -5, -5],
                        [11, -5, -4],
                        [11, -5, -3],
                        [11, -5, -2],
                        [11, -5, -1],
                        [11, -5, 0],
                        [11, -5, 1],
                        [11, -5, 2],
                        [11, -5, 3],
                        [11, -5, 4],
                        [11, -5, 5],
                        [11, -5, 6],
                        [11, -5, 7],
                        [11, -5, 8],
                        [11, -5, 9],
                        [11, -5, 10],
                        [11, -5, 11],
                        [11, -4, -11],
                        [11, -4, -10],
                        [11, -4, -9],
                        [11, -4, -8],
                        [11, -4, -7],
                        [11, -4, -6],
                        [11, -4, -5],
                        [11, -4, -4],
                        [11, -4, -3],
                        [11, -4, -2],
                        [11, -4, -1],
                        [11, -4, 0],
                        [11, -4, 1],
                        [11, -4, 2],
                        [11, -4, 3],
                        [11, -4, 4],
                        [11, -4, 5],
                        [11, -4, 6],
                        [11, -4, 7],
                        [11, -4, 8],
                        [11, -4, 9],
                        [11, -4, 10],
                        [11, -4, 11],
                        [11, -3, -11],
                        [11, -3, -10],
                        [11, -3, -9],
                        [11, -3, -8],
                        [11, -3, -7],
                        [11, -3, -6],
                        [11, -3, -5],
                        [11, -3, -4],
                        [11, -3, -3],
                        [11, -3, -2],
                        [11, -3, -1],
                        [11, -3, 0],
                        [11, -3, 1],
                        [11, -3, 2],
                        [11, -3, 3],
                        [11, -3, 4],
                        [11, -3, 5],
                        [11, -3, 6],
                        [11, -3, 7],
                        [11, -3, 8],
                        [11, -3, 9],
                        [11, -3, 10],
                        [11, -3, 11],
                        [11, -2, -11],
                        [11, -2, -10],
                        [11, -2, -9],
                        [11, -2, -8],
                        [11, -2, -7],
                        [11, -2, -6],
                        [11, -2, -5],
                        [11, -2, -4],
                        [11, -2, -3],
                        [11, -2, -2],
                        [11, -2, -1],
                        [11, -2, 0],
                        [11, -2, 1],
                        [11, -2, 2],
                        [11, -2, 3],
                        [11, -2, 4],
                        [11, -2, 5],
                        [11, -2, 6],
                        [11, -2, 7],
                        [11, -2, 8],
                        [11, -2, 9],
                        [11, -2, 10],
                        [11, -2, 11],
                        [11, -1, -11],
                        [11, -1, -10],
                        [11, -1, -9],
                        [11, -1, -8],
                        [11, -1, -7],
                        [11, -1, -6],
                        [11, -1, -5],
                        [11, -1, -4],
                        [11, -1, -3],
                        [11, -1, -2],
                        [11, -1, -1],
                        [11, -1, 0],
                        [11, -1, 1],
                        [11, -1, 2],
                        [11, -1, 3],
                        [11, -1, 4],
                        [11, -1, 5],
                        [11, -1, 6],
                        [11, -1, 7],
                        [11, -1, 8],
                        [11, -1, 9],
                        [11, -1, 10],
                        [11, -1, 11],
                        [11, 0, -11],
                        [11, 0, -10],
                        [11, 0, -9],
                        [11, 0, -8],
                        [11, 0, -7],
                        [11, 0, -6],
                        [11, 0, -5],
                        [11, 0, -4],
                        [11, 0, -3],
                        [11, 0, -2],
                        [11, 0, -1],
                        [11, 0, 0],
                        [11, 0, 1],
                        [11, 0, 2],
                        [11, 0, 3],
                        [11, 0, 4],
                        [11, 0, 5],
                        [11, 0, 6],
                        [11, 0, 7],
                        [11, 0, 8],
                        [11, 0, 9],
                        [11, 0, 10],
                        [11, 0, 11],
                        [11, 1, -11],
                        [11, 1, -10],
                        [11, 1, -9],
                        [11, 1, -8],
                        [11, 1, -7],
                        [11, 1, -6],
                        [11, 1, -5],
                        [11, 1, -4],
                        [11, 1, -3],
                        [11, 1, -2],
                        [11, 1, -1],
                        [11, 1, 0],
                        [11, 1, 1],
                        [11, 1, 2],
                        [11, 1, 3],
                        [11, 1, 4],
                        [11, 1, 5],
                        [11, 1, 6],
                        [11, 1, 7],
                        [11, 1, 8],
                        [11, 1, 9],
                        [11, 1, 10],
                        [11, 1, 11],
                        [11, 2, -11],
                        [11, 2, -10],
                        [11, 2, -9],
                        [11, 2, -8],
                        [11, 2, -7],
                        [11, 2, -6],
                        [11, 2, -5],
                        [11, 2, -4],
                        [11, 2, -3],
                        [11, 2, -2],
                        [11, 2, -1],
                        [11, 2, 0],
                        [11, 2, 1],
                        [11, 2, 2],
                        [11, 2, 3],
                        [11, 2, 4],
                        [11, 2, 5],
                        [11, 2, 6],
                        [11, 2, 7],
                        [11, 2, 8],
                        [11, 2, 9],
                        [11, 2, 10],
                        [11, 2, 11],
                        [11, 3, -11],
                        [11, 3, -10],
                        [11, 3, -9],
                        [11, 3, -8],
                        [11, 3, -7],
                        [11, 3, -6],
                        [11, 3, -5],
                        [11, 3, -4],
                        [11, 3, -3],
                        [11, 3, -2],
                        [11, 3, -1],
                        [11, 3, 0],
                        [11, 3, 1],
                        [11, 3, 2],
                        [11, 3, 3],
                        [11, 3, 4],
                        [11, 3, 5],
                        [11, 3, 6],
                        [11, 3, 7],
                        [11, 3, 8],
                        [11, 3, 9],
                        [11, 3, 10],
                        [11, 3, 11],
                        [11, 4, -11],
                        [11, 4, -10],
                        [11, 4, -9],
                        [11, 4, -8],
                        [11, 4, -7],
                        [11, 4, -6],
                        [11, 4, -5],
                        [11, 4, -4],
                        [11, 4, -3],
                        [11, 4, -2],
                        [11, 4, -1],
                        [11, 4, 0],
                        [11, 4, 1],
                        [11, 4, 2],
                        [11, 4, 3],
                        [11, 4, 4],
                        [11, 4, 5],
                        [11, 4, 6],
                        [11, 4, 7],
                        [11, 4, 8],
                        [11, 4, 9],
                        [11, 4, 10],
                        [11, 4, 11],
                        [11, 5, -11],
                        [11, 5, -10],
                        [11, 5, -9],
                        [11, 5, -8],
                        [11, 5, -7],
                        [11, 5, -6],
                        [11, 5, -5],
                        [11, 5, -4],
                        [11, 5, -3],
                        [11, 5, -2],
                        [11, 5, -1],
                        [11, 5, 0],
                        [11, 5, 1],
                        [11, 5, 2],
                        [11, 5, 3],
                        [11, 5, 4],
                        [11, 5, 5],
                        [11, 5, 6],
                        [11, 5, 7],
                        [11, 5, 8],
                        [11, 5, 9],
                        [11, 5, 10],
                        [11, 5, 11],
                        [11, 6, -11],
                        [11, 6, -10],
                        [11, 6, -9],
                        [11, 6, -8],
                        [11, 6, -7],
                        [11, 6, -6],
                        [11, 6, -5],
                        [11, 6, -4],
                        [11, 6, -3],
                        [11, 6, -2],
                        [11, 6, -1],
                        [11, 6, 0],
                        [11, 6, 1],
                        [11, 6, 2],
                        [11, 6, 3],
                        [11, 6, 4],
                        [11, 6, 5],
                        [11, 6, 6],
                        [11, 6, 7],
                        [11, 6, 8],
                        [11, 6, 9],
                        [11, 6, 10],
                        [11, 6, 11],
                        [11, 7, -11],
                        [11, 7, -10],
                        [11, 7, -9],
                        [11, 7, -8],
                        [11, 7, -7],
                        [11, 7, -6],
                        [11, 7, -5],
                        [11, 7, -4],
                        [11, 7, -3],
                        [11, 7, -2],
                        [11, 7, -1],
                        [11, 7, 0],
                        [11, 7, 1],
                        [11, 7, 2],
                        [11, 7, 3],
                        [11, 7, 4],
                        [11, 7, 5],
                        [11, 7, 6],
                        [11, 7, 7],
                        [11, 7, 8],
                        [11, 7, 9],
                        [11, 7, 10],
                        [11, 7, 11],
                        [11, 8, -11],
                        [11, 8, -10],
                        [11, 8, -9],
                        [11, 8, -8],
                        [11, 8, -7],
                        [11, 8, -6],
                        [11, 8, -5],
                        [11, 8, -4],
                        [11, 8, -3],
                        [11, 8, -2],
                        [11, 8, -1],
                        [11, 8, 0],
                        [11, 8, 1],
                        [11, 8, 2],
                        [11, 8, 3],
                        [11, 8, 4],
                        [11, 8, 5],
                        [11, 8, 6],
                        [11, 8, 7],
                        [11, 8, 8],
                        [11, 8, 9],
                        [11, 8, 10],
                        [11, 8, 11],
                        [11, 9, -11],
                        [11, 9, -10],
                        [11, 9, -9],
                        [11, 9, -8],
                        [11, 9, -7],
                        [11, 9, -6],
                        [11, 9, -5],
                        [11, 9, -4],
                        [11, 9, -3],
                        [11, 9, -2],
                        [11, 9, -1],
                        [11, 9, 0],
                        [11, 9, 1],
                        [11, 9, 2],
                        [11, 9, 3],
                        [11, 9, 4],
                        [11, 9, 5],
                        [11, 9, 6],
                        [11, 9, 7],
                        [11, 9, 8],
                        [11, 9, 9],
                        [11, 9, 10],
                        [11, 9, 11],
                        [11, 10, -11],
                        [11, 10, -10],
                        [11, 10, -9],
                        [11, 10, -8],
                        [11, 10, -7],
                        [11, 10, -6],
                        [11, 10, -5],
                        [11, 10, -4],
                        [11, 10, -3],
                        [11, 10, -2],
                        [11, 10, -1],
                        [11, 10, 0],
                        [11, 10, 1],
                        [11, 10, 2],
                        [11, 10, 3],
                        [11, 10, 4],
                        [11, 10, 5],
                        [11, 10, 6],
                        [11, 10, 7],
                        [11, 10, 8],
                        [11, 10, 9],
                        [11, 10, 10],
                        [11, 10, 11],
                        [11, 11, -11],
                        [11, 11, -10],
                        [11, 11, -9],
                        [11, 11, -8],
                        [11, 11, -7],
                        [11, 11, -6],
                        [11, 11, -5],
                        [11, 11, -4],
                        [11, 11, -3],
                        [11, 11, -2],
                        [11, 11, -1],
                        [11, 11, 0],
                        [11, 11, 1],
                        [11, 11, 2],
                        [11, 11, 3],
                        [11, 11, 4],
                        [11, 11, 5],
                        [11, 11, 6],
                        [11, 11, 7],
                        [11, 11, 8],
                        [11, 11, 9],
                        [11, 11, 10],
                        [11, 11, 11],
                        [12, -12, -12],
                        [12, -12, -11],
                        [12, -12, -10],
                        [12, -12, -9],
                        [12, -12, -8],
                        [12, -12, -7],
                        [12, -12, -6],
                        [12, -12, -5],
                        [12, -12, -4],
                        [12, -12, -3],
                        [12, -12, -2],
                        [12, -12, -1],
                        [12, -12, 0],
                        [12, -12, 1],
                        [12, -12, 2],
                        [12, -12, 3],
                        [12, -12, 4],
                        [12, -12, 5],
                        [12, -12, 6],
                        [12, -12, 7],
                        [12, -12, 8],
                        [12, -12, 9],
                        [12, -12, 10],
                        [12, -12, 11],
                        [12, -12, 12],
                        [12, -11, -12],
                        [12, -11, -11],
                        [12, -11, -10],
                        [12, -11, -9],
                        [12, -11, -8],
                        [12, -11, -7],
                        [12, -11, -6],
                        [12, -11, -5],
                        [12, -11, -4],
                        [12, -11, -3],
                        [12, -11, -2],
                        [12, -11, -1],
                        [12, -11, 0],
                        [12, -11, 1],
                        [12, -11, 2],
                        [12, -11, 3],
                        [12, -11, 4],
                        [12, -11, 5],
                        [12, -11, 6],
                        [12, -11, 7],
                        [12, -11, 8],
                        [12, -11, 9],
                        [12, -11, 10],
                        [12, -11, 11],
                        [12, -11, 12],
                        [12, -10, -12],
                        [12, -10, -11],
                        [12, -10, -10],
                        [12, -10, -9],
                        [12, -10, -8],
                        [12, -10, -7],
                        [12, -10, -6],
                        [12, -10, -5],
                        [12, -10, -4],
                        [12, -10, -3],
                        [12, -10, -2],
                        [12, -10, -1],
                        [12, -10, 0],
                        [12, -10, 1],
                        [12, -10, 2],
                        [12, -10, 3],
                        [12, -10, 4],
                        [12, -10, 5],
                        [12, -10, 6],
                        [12, -10, 7],
                        [12, -10, 8],
                        [12, -10, 9],
                        [12, -10, 10],
                        [12, -10, 11],
                        [12, -10, 12],
                        [12, -9, -12],
                        [12, -9, -11],
                        [12, -9, -10],
                        [12, -9, -9],
                        [12, -9, -8],
                        [12, -9, -7],
                        [12, -9, -6],
                        [12, -9, -5],
                        [12, -9, -4],
                        [12, -9, -3],
                        [12, -9, -2],
                        [12, -9, -1],
                        [12, -9, 0],
                        [12, -9, 1],
                        [12, -9, 2],
                        [12, -9, 3],
                        [12, -9, 4],
                        [12, -9, 5],
                        [12, -9, 6],
                        [12, -9, 7],
                        [12, -9, 8],
                        [12, -9, 9],
                        [12, -9, 10],
                        [12, -9, 11],
                        [12, -9, 12],
                        [12, -8, -12],
                        [12, -8, -11],
                        [12, -8, -10],
                        [12, -8, -9],
                        [12, -8, -8],
                        [12, -8, -7],
                        [12, -8, -6],
                        [12, -8, -5],
                        [12, -8, -4],
                        [12, -8, -3],
                        [12, -8, -2],
                        [12, -8, -1],
                        [12, -8, 0],
                        [12, -8, 1],
                        [12, -8, 2],
                        [12, -8, 3],
                        [12, -8, 4],
                        [12, -8, 5],
                        [12, -8, 6],
                        [12, -8, 7],
                        [12, -8, 8],
                        [12, -8, 9],
                        [12, -8, 10],
                        [12, -8, 11],
                        [12, -8, 12],
                        [12, -7, -12],
                        [12, -7, -11],
                        [12, -7, -10],
                        [12, -7, -9],
                        [12, -7, -8],
                        [12, -7, -7],
                        [12, -7, -6],
                        [12, -7, -5],
                        [12, -7, -4],
                        [12, -7, -3],
                        [12, -7, -2],
                        [12, -7, -1],
                        [12, -7, 0],
                        [12, -7, 1],
                        [12, -7, 2],
                        [12, -7, 3],
                        [12, -7, 4],
                        [12, -7, 5],
                        [12, -7, 6],
                        [12, -7, 7],
                        [12, -7, 8],
                        [12, -7, 9],
                        [12, -7, 10],
                        [12, -7, 11],
                        [12, -7, 12],
                        [12, -6, -12],
                        [12, -6, -11],
                        [12, -6, -10],
                        [12, -6, -9],
                        [12, -6, -8],
                        [12, -6, -7],
                        [12, -6, -6],
                        [12, -6, -5],
                        [12, -6, -4],
                        [12, -6, -3],
                        [12, -6, -2],
                        [12, -6, -1],
                        [12, -6, 0],
                        [12, -6, 1],
                        [12, -6, 2],
                        [12, -6, 3],
                        [12, -6, 4],
                        [12, -6, 5],
                        [12, -6, 6],
                        [12, -6, 7],
                        [12, -6, 8],
                        [12, -6, 9],
                        [12, -6, 10],
                        [12, -6, 11],
                        [12, -6, 12],
                        [12, -5, -12],
                        [12, -5, -11],
                        [12, -5, -10],
                        [12, -5, -9],
                        [12, -5, -8],
                        [12, -5, -7],
                        [12, -5, -6],
                        [12, -5, -5],
                        [12, -5, -4],
                        [12, -5, -3],
                        [12, -5, -2],
                        [12, -5, -1],
                        [12, -5, 0],
                        [12, -5, 1],
                        [12, -5, 2],
                        [12, -5, 3],
                        [12, -5, 4],
                        [12, -5, 5],
                        [12, -5, 6],
                        [12, -5, 7],
                        [12, -5, 8],
                        [12, -5, 9],
                        [12, -5, 10],
                        [12, -5, 11],
                        [12, -5, 12],
                        [12, -4, -12],
                        [12, -4, -11],
                        [12, -4, -10],
                        [12, -4, -9],
                        [12, -4, -8],
                        [12, -4, -7],
                        [12, -4, -6],
                        [12, -4, -5],
                        [12, -4, -4],
                        [12, -4, -3],
                        [12, -4, -2],
                        [12, -4, -1],
                        [12, -4, 0],
                        [12, -4, 1],
                        [12, -4, 2],
                        [12, -4, 3],
                        [12, -4, 4],
                        [12, -4, 5],
                        [12, -4, 6],
                        [12, -4, 7],
                        [12, -4, 8],
                        [12, -4, 9],
                        [12, -4, 10],
                        [12, -4, 11],
                        [12, -4, 12],
                        [12, -3, -12],
                        [12, -3, -11],
                        [12, -3, -10],
                        [12, -3, -9],
                        [12, -3, -8],
                        [12, -3, -7],
                        [12, -3, -6],
                        [12, -3, -5],
                        [12, -3, -4],
                        [12, -3, -3],
                        [12, -3, -2],
                        [12, -3, -1],
                        [12, -3, 0],
                        [12, -3, 1],
                        [12, -3, 2],
                        [12, -3, 3],
                        [12, -3, 4],
                        [12, -3, 5],
                        [12, -3, 6],
                        [12, -3, 7],
                        [12, -3, 8],
                        [12, -3, 9],
                        [12, -3, 10],
                        [12, -3, 11],
                        [12, -3, 12],
                        [12, -2, -12],
                        [12, -2, -11],
                        [12, -2, -10],
                        [12, -2, -9],
                        [12, -2, -8],
                        [12, -2, -7],
                        [12, -2, -6],
                        [12, -2, -5],
                        [12, -2, -4],
                        [12, -2, -3],
                        [12, -2, -2],
                        [12, -2, -1],
                        [12, -2, 0],
                        [12, -2, 1],
                        [12, -2, 2],
                        [12, -2, 3],
                        [12, -2, 4],
                        [12, -2, 5],
                        [12, -2, 6],
                        [12, -2, 7],
                        [12, -2, 8],
                        [12, -2, 9],
                        [12, -2, 10],
                        [12, -2, 11],
                        [12, -2, 12],
                        [12, -1, -12],
                        [12, -1, -11],
                        [12, -1, -10],
                        [12, -1, -9],
                        [12, -1, -8],
                        [12, -1, -7],
                        [12, -1, -6],
                        [12, -1, -5],
                        [12, -1, -4],
                        [12, -1, -3],
                        [12, -1, -2],
                        [12, -1, -1],
                        [12, -1, 0],
                        [12, -1, 1],
                        [12, -1, 2],
                        [12, -1, 3],
                        [12, -1, 4],
                        [12, -1, 5],
                        [12, -1, 6],
                        [12, -1, 7],
                        [12, -1, 8],
                        [12, -1, 9],
                        [12, -1, 10],
                        [12, -1, 11],
                        [12, -1, 12],
                        [12, 0, -12],
                        [12, 0, -11],
                        [12, 0, -10],
                        [12, 0, -9],
                        [12, 0, -8],
                        [12, 0, -7],
                        [12, 0, -6],
                        [12, 0, -5],
                        [12, 0, -4],
                        [12, 0, -3],
                        [12, 0, -2],
                        [12, 0, -1],
                        [12, 0, 0],
                        [12, 0, 1],
                        [12, 0, 2],
                        [12, 0, 3],
                        [12, 0, 4],
                        [12, 0, 5],
                        [12, 0, 6],
                        [12, 0, 7],
                        [12, 0, 8],
                        [12, 0, 9],
                        [12, 0, 10],
                        [12, 0, 11],
                        [12, 0, 12],
                        [12, 1, -12],
                        [12, 1, -11],
                        [12, 1, -10],
                        [12, 1, -9],
                        [12, 1, -8],
                        [12, 1, -7],
                        [12, 1, -6],
                        [12, 1, -5],
                        [12, 1, -4],
                        [12, 1, -3],
                        [12, 1, -2],
                        [12, 1, -1],
                        [12, 1, 0],
                        [12, 1, 1],
                        [12, 1, 2],
                        [12, 1, 3],
                        [12, 1, 4],
                        [12, 1, 5],
                        [12, 1, 6],
                        [12, 1, 7],
                        [12, 1, 8],
                        [12, 1, 9],
                        [12, 1, 10],
                        [12, 1, 11],
                        [12, 1, 12],
                        [12, 2, -12],
                        [12, 2, -11],
                        [12, 2, -10],
                        [12, 2, -9],
                        [12, 2, -8],
                        [12, 2, -7],
                        [12, 2, -6],
                        [12, 2, -5],
                        [12, 2, -4],
                        [12, 2, -3],
                        [12, 2, -2],
                        [12, 2, -1],
                        [12, 2, 0],
                        [12, 2, 1],
                        [12, 2, 2],
                        [12, 2, 3],
                        [12, 2, 4],
                        [12, 2, 5],
                        [12, 2, 6],
                        [12, 2, 7],
                        [12, 2, 8],
                        [12, 2, 9],
                        [12, 2, 10],
                        [12, 2, 11],
                        [12, 2, 12],
                        [12, 3, -12],
                        [12, 3, -11],
                        [12, 3, -10],
                        [12, 3, -9],
                        [12, 3, -8],
                        [12, 3, -7],
                        [12, 3, -6],
                        [12, 3, -5],
                        [12, 3, -4],
                        [12, 3, -3],
                        [12, 3, -2],
                        [12, 3, -1],
                        [12, 3, 0],
                        [12, 3, 1],
                        [12, 3, 2],
                        [12, 3, 3],
                        [12, 3, 4],
                        [12, 3, 5],
                        [12, 3, 6],
                        [12, 3, 7],
                        [12, 3, 8],
                        [12, 3, 9],
                        [12, 3, 10],
                        [12, 3, 11],
                        [12, 3, 12],
                        [12, 4, -12],
                        [12, 4, -11],
                        [12, 4, -10],
                        [12, 4, -9],
                        [12, 4, -8],
                        [12, 4, -7],
                        [12, 4, -6],
                        [12, 4, -5],
                        [12, 4, -4],
                        [12, 4, -3],
                        [12, 4, -2],
                        [12, 4, -1],
                        [12, 4, 0],
                        [12, 4, 1],
                        [12, 4, 2],
                        [12, 4, 3],
                        [12, 4, 4],
                        [12, 4, 5],
                        [12, 4, 6],
                        [12, 4, 7],
                        [12, 4, 8],
                        [12, 4, 9],
                        [12, 4, 10],
                        [12, 4, 11],
                        [12, 4, 12],
                        [12, 5, -12],
                        [12, 5, -11],
                        [12, 5, -10],
                        [12, 5, -9],
                        [12, 5, -8],
                        [12, 5, -7],
                        [12, 5, -6],
                        [12, 5, -5],
                        [12, 5, -4],
                        [12, 5, -3],
                        [12, 5, -2],
                        [12, 5, -1],
                        [12, 5, 0],
                        [12, 5, 1],
                        [12, 5, 2],
                        [12, 5, 3],
                        [12, 5, 4],
                        [12, 5, 5],
                        [12, 5, 6],
                        [12, 5, 7],
                        [12, 5, 8],
                        [12, 5, 9],
                        [12, 5, 10],
                        [12, 5, 11],
                        [12, 5, 12],
                        [12, 6, -12],
                        [12, 6, -11],
                        [12, 6, -10],
                        [12, 6, -9],
                        [12, 6, -8],
                        [12, 6, -7],
                        [12, 6, -6],
                        [12, 6, -5],
                        [12, 6, -4],
                        [12, 6, -3],
                        [12, 6, -2],
                        [12, 6, -1],
                        [12, 6, 0],
                        [12, 6, 1],
                        [12, 6, 2],
                        [12, 6, 3],
                        [12, 6, 4],
                        [12, 6, 5],
                        [12, 6, 6],
                        [12, 6, 7],
                        [12, 6, 8],
                        [12, 6, 9],
                        [12, 6, 10],
                        [12, 6, 11],
                        [12, 6, 12],
                        [12, 7, -12],
                        [12, 7, -11],
                        [12, 7, -10],
                        [12, 7, -9],
                        [12, 7, -8],
                        [12, 7, -7],
                        [12, 7, -6],
                        [12, 7, -5],
                        [12, 7, -4],
                        [12, 7, -3],
                        [12, 7, -2],
                        [12, 7, -1],
                        [12, 7, 0],
                        [12, 7, 1],
                        [12, 7, 2],
                        [12, 7, 3],
                        [12, 7, 4],
                        [12, 7, 5],
                        [12, 7, 6],
                        [12, 7, 7],
                        [12, 7, 8],
                        [12, 7, 9],
                        [12, 7, 10],
                        [12, 7, 11],
                        [12, 7, 12],
                        [12, 8, -12],
                        [12, 8, -11],
                        [12, 8, -10],
                        [12, 8, -9],
                        [12, 8, -8],
                        [12, 8, -7],
                        [12, 8, -6],
                        [12, 8, -5],
                        [12, 8, -4],
                        [12, 8, -3],
                        [12, 8, -2],
                        [12, 8, -1],
                        [12, 8, 0],
                        [12, 8, 1],
                        [12, 8, 2],
                        [12, 8, 3],
                        [12, 8, 4],
                        [12, 8, 5],
                        [12, 8, 6],
                        [12, 8, 7],
                        [12, 8, 8],
                        [12, 8, 9],
                        [12, 8, 10],
                        [12, 8, 11],
                        [12, 8, 12],
                        [12, 9, -12],
                        [12, 9, -11],
                        [12, 9, -10],
                        [12, 9, -9],
                        [12, 9, -8],
                        [12, 9, -7],
                        [12, 9, -6],
                        [12, 9, -5],
                        [12, 9, -4],
                        [12, 9, -3],
                        [12, 9, -2],
                        [12, 9, -1],
                        [12, 9, 0],
                        [12, 9, 1],
                        [12, 9, 2],
                        [12, 9, 3],
                        [12, 9, 4],
                        [12, 9, 5],
                        [12, 9, 6],
                        [12, 9, 7],
                        [12, 9, 8],
                        [12, 9, 9],
                        [12, 9, 10],
                        [12, 9, 11],
                        [12, 9, 12],
                        [12, 10, -12],
                        [12, 10, -11],
                        [12, 10, -10],
                        [12, 10, -9],
                        [12, 10, -8],
                        [12, 10, -7],
                        [12, 10, -6],
                        [12, 10, -5],
                        [12, 10, -4],
                        [12, 10, -3],
                        [12, 10, -2],
                        [12, 10, -1],
                        [12, 10, 0],
                        [12, 10, 1],
                        [12, 10, 2],
                        [12, 10, 3],
                        [12, 10, 4],
                        [12, 10, 5],
                        [12, 10, 6],
                        [12, 10, 7],
                        [12, 10, 8],
                        [12, 10, 9],
                        [12, 10, 10],
                        [12, 10, 11],
                        [12, 10, 12],
                        [12, 11, -12],
                        [12, 11, -11],
                        [12, 11, -10],
                        [12, 11, -9],
                        [12, 11, -8],
                        [12, 11, -7],
                        [12, 11, -6],
                        [12, 11, -5],
                        [12, 11, -4],
                        [12, 11, -3],
                        [12, 11, -2],
                        [12, 11, -1],
                        [12, 11, 0],
                        [12, 11, 1],
                        [12, 11, 2],
                        [12, 11, 3],
                        [12, 11, 4],
                        [12, 11, 5],
                        [12, 11, 6],
                        [12, 11, 7],
                        [12, 11, 8],
                        [12, 11, 9],
                        [12, 11, 10],
                        [12, 11, 11],
                        [12, 11, 12],
                        [12, 12, -12],
                        [12, 12, -11],
                        [12, 12, -10],
                        [12, 12, -9],
                        [12, 12, -8],
                        [12, 12, -7],
                        [12, 12, -6],
                        [12, 12, -5],
                        [12, 12, -4],
                        [12, 12, -3],
                        [12, 12, -2],
                        [12, 12, -1],
                        [12, 12, 0],
                        [12, 12, 1],
                        [12, 12, 2],
                        [12, 12, 3],
                        [12, 12, 4],
                        [12, 12, 5],
                        [12, 12, 6],
                        [12, 12, 7],
                        [12, 12, 8],
                        [12, 12, 9],
                        [12, 12, 10],
                        [12, 12, 11],
                        [12, 12, 12],
                        [13, -13, -13],
                        [13, -13, -12],
                        [13, -13, -11],
                        [13, -13, -10],
                        [13, -13, -9],
                        [13, -13, -8],
                        [13, -13, -7],
                        [13, -13, -6],
                        [13, -13, -5],
                        [13, -13, -4],
                        [13, -13, -3],
                        [13, -13, -2],
                        [13, -13, -1],
                        [13, -13, 0],
                        [13, -13, 1],
                        [13, -13, 2],
                        [13, -13, 3],
                        [13, -13, 4],
                        [13, -13, 5],
                        [13, -13, 6],
                        [13, -13, 7],
                        [13, -13, 8],
                        [13, -13, 9],
                        [13, -13, 10],
                        [13, -13, 11],
                        [13, -13, 12],
                        [13, -13, 13],
                        [13, -12, -13],
                        [13, -12, -12],
                        [13, -12, -11],
                        [13, -12, -10],
                        [13, -12, -9],
                        [13, -12, -8],
                        [13, -12, -7],
                        [13, -12, -6],
                        [13, -12, -5],
                        [13, -12, -4],
                        [13, -12, -3],
                        [13, -12, -2],
                        [13, -12, -1],
                        [13, -12, 0],
                        [13, -12, 1],
                        [13, -12, 2],
                        [13, -12, 3],
                        [13, -12, 4],
                        [13, -12, 5],
                        [13, -12, 6],
                        [13, -12, 7],
                        [13, -12, 8],
                        [13, -12, 9],
                        [13, -12, 10],
                        [13, -12, 11],
                        [13, -12, 12],
                        [13, -12, 13],
                        [13, -11, -13],
                        [13, -11, -12],
                        [13, -11, -11],
                        [13, -11, -10],
                        [13, -11, -9],
                        [13, -11, -8],
                        [13, -11, -7],
                        [13, -11, -6],
                        [13, -11, -5],
                        [13, -11, -4],
                        [13, -11, -3],
                        [13, -11, -2],
                        [13, -11, -1],
                        [13, -11, 0],
                        [13, -11, 1],
                        [13, -11, 2],
                        [13, -11, 3],
                        [13, -11, 4],
                        [13, -11, 5],
                        [13, -11, 6],
                        [13, -11, 7],
                        [13, -11, 8],
                        [13, -11, 9],
                        [13, -11, 10],
                        [13, -11, 11],
                        [13, -11, 12],
                        [13, -11, 13],
                        [13, -10, -13],
                        [13, -10, -12],
                        [13, -10, -11],
                        [13, -10, -10],
                        [13, -10, -9],
                        [13, -10, -8],
                        [13, -10, -7],
                        [13, -10, -6],
                        [13, -10, -5],
                        [13, -10, -4],
                        [13, -10, -3],
                        [13, -10, -2],
                        [13, -10, -1],
                        [13, -10, 0],
                        [13, -10, 1],
                        [13, -10, 2],
                        [13, -10, 3],
                        [13, -10, 4],
                        [13, -10, 5],
                        [13, -10, 6],
                        [13, -10, 7],
                        [13, -10, 8],
                        [13, -10, 9],
                        [13, -10, 10],
                        [13, -10, 11],
                        [13, -10, 12],
                        [13, -10, 13],
                        [13, -9, -13],
                        [13, -9, -12],
                        [13, -9, -11],
                        [13, -9, -10],
                        [13, -9, -9],
                        [13, -9, -8],
                        [13, -9, -7],
                        [13, -9, -6],
                        [13, -9, -5],
                        [13, -9, -4],
                        [13, -9, -3],
                        [13, -9, -2],
                        [13, -9, -1],
                        [13, -9, 0],
                        [13, -9, 1],
                        [13, -9, 2],
                        [13, -9, 3],
                        [13, -9, 4],
                        [13, -9, 5],
                        [13, -9, 6],
                        [13, -9, 7],
                        [13, -9, 8],
                        [13, -9, 9],
                        [13, -9, 10],
                        [13, -9, 11],
                        [13, -9, 12],
                        [13, -9, 13],
                        [13, -8, -13],
                        [13, -8, -12],
                        [13, -8, -11],
                        [13, -8, -10],
                        [13, -8, -9],
                        [13, -8, -8],
                        [13, -8, -7],
                        [13, -8, -6],
                        [13, -8, -5],
                        [13, -8, -4],
                        [13, -8, -3],
                        [13, -8, -2],
                        [13, -8, -1],
                        [13, -8, 0],
                        [13, -8, 1],
                        [13, -8, 2],
                        [13, -8, 3],
                        [13, -8, 4],
                        [13, -8, 5],
                        [13, -8, 6],
                        [13, -8, 7],
                        [13, -8, 8],
                        [13, -8, 9],
                        [13, -8, 10],
                        [13, -8, 11],
                        [13, -8, 12],
                        [13, -8, 13],
                        [13, -7, -13],
                        [13, -7, -12],
                        [13, -7, -11],
                        [13, -7, -10],
                        [13, -7, -9],
                        [13, -7, -8],
                        [13, -7, -7],
                        [13, -7, -6],
                        [13, -7, -5],
                        [13, -7, -4],
                        [13, -7, -3],
                        [13, -7, -2],
                        [13, -7, -1],
                        [13, -7, 0],
                        [13, -7, 1],
                        [13, -7, 2],
                        [13, -7, 3],
                        [13, -7, 4],
                        [13, -7, 5],
                        [13, -7, 6],
                        [13, -7, 7],
                        [13, -7, 8],
                        [13, -7, 9],
                        [13, -7, 10],
                        [13, -7, 11],
                        [13, -7, 12],
                        [13, -7, 13],
                        [13, -6, -13],
                        [13, -6, -12],
                        [13, -6, -11],
                        [13, -6, -10],
                        [13, -6, -9],
                        [13, -6, -8],
                        [13, -6, -7],
                        [13, -6, -6],
                        [13, -6, -5],
                        [13, -6, -4],
                        [13, -6, -3],
                        [13, -6, -2],
                        [13, -6, -1],
                        [13, -6, 0],
                        [13, -6, 1],
                        [13, -6, 2],
                        [13, -6, 3],
                        [13, -6, 4],
                        [13, -6, 5],
                        [13, -6, 6],
                        [13, -6, 7],
                        [13, -6, 8],
                        [13, -6, 9],
                        [13, -6, 10],
                        [13, -6, 11],
                        [13, -6, 12],
                        [13, -6, 13],
                        [13, -5, -13],
                        [13, -5, -12],
                        [13, -5, -11],
                        [13, -5, -10],
                        [13, -5, -9],
                        [13, -5, -8],
                        [13, -5, -7],
                        [13, -5, -6],
                        [13, -5, -5],
                        [13, -5, -4],
                        [13, -5, -3],
                        [13, -5, -2],
                        [13, -5, -1],
                        [13, -5, 0],
                        [13, -5, 1],
                        [13, -5, 2],
                        [13, -5, 3],
                        [13, -5, 4],
                        [13, -5, 5],
                        [13, -5, 6],
                        [13, -5, 7],
                        [13, -5, 8],
                        [13, -5, 9],
                        [13, -5, 10],
                        [13, -5, 11],
                        [13, -5, 12],
                        [13, -5, 13],
                        [13, -4, -13],
                        [13, -4, -12],
                        [13, -4, -11],
                        [13, -4, -10],
                        [13, -4, -9],
                        [13, -4, -8],
                        [13, -4, -7],
                        [13, -4, -6],
                        [13, -4, -5],
                        [13, -4, -4],
                        [13, -4, -3],
                        [13, -4, -2],
                        [13, -4, -1],
                        [13, -4, 0],
                        [13, -4, 1],
                        [13, -4, 2],
                        [13, -4, 3],
                        [13, -4, 4],
                        [13, -4, 5],
                        [13, -4, 6],
                        [13, -4, 7],
                        [13, -4, 8],
                        [13, -4, 9],
                        [13, -4, 10],
                        [13, -4, 11],
                        [13, -4, 12],
                        [13, -4, 13],
                        [13, -3, -13],
                        [13, -3, -12],
                        [13, -3, -11],
                        [13, -3, -10],
                        [13, -3, -9],
                        [13, -3, -8],
                        [13, -3, -7],
                        [13, -3, -6],
                        [13, -3, -5],
                        [13, -3, -4],
                        [13, -3, -3],
                        [13, -3, -2],
                        [13, -3, -1],
                        [13, -3, 0],
                        [13, -3, 1],
                        [13, -3, 2],
                        [13, -3, 3],
                        [13, -3, 4],
                        [13, -3, 5],
                        [13, -3, 6],
                        [13, -3, 7],
                        [13, -3, 8],
                        [13, -3, 9],
                        [13, -3, 10],
                        [13, -3, 11],
                        [13, -3, 12],
                        [13, -3, 13],
                        [13, -2, -13],
                        [13, -2, -12],
                        [13, -2, -11],
                        [13, -2, -10],
                        [13, -2, -9],
                        [13, -2, -8],
                        [13, -2, -7],
                        [13, -2, -6],
                        [13, -2, -5],
                        [13, -2, -4],
                        [13, -2, -3],
                        [13, -2, -2],
                        [13, -2, -1],
                        [13, -2, 0],
                        [13, -2, 1],
                        [13, -2, 2],
                        [13, -2, 3],
                        [13, -2, 4],
                        [13, -2, 5],
                        [13, -2, 6],
                        [13, -2, 7],
                        [13, -2, 8],
                        [13, -2, 9],
                        [13, -2, 10],
                        [13, -2, 11],
                        [13, -2, 12],
                        [13, -2, 13],
                        [13, -1, -13],
                        [13, -1, -12],
                        [13, -1, -11],
                        [13, -1, -10],
                        [13, -1, -9],
                        [13, -1, -8],
                        [13, -1, -7],
                        [13, -1, -6],
                        [13, -1, -5],
                        [13, -1, -4],
                        [13, -1, -3],
                        [13, -1, -2],
                        [13, -1, -1],
                        [13, -1, 0],
                        [13, -1, 1],
                        [13, -1, 2],
                        [13, -1, 3],
                        [13, -1, 4],
                        [13, -1, 5],
                        [13, -1, 6],
                        [13, -1, 7],
                        [13, -1, 8],
                        [13, -1, 9],
                        [13, -1, 10],
                        [13, -1, 11],
                        [13, -1, 12],
                        [13, -1, 13],
                        [13, 0, -13],
                        [13, 0, -12],
                        [13, 0, -11],
                        [13, 0, -10],
                        [13, 0, -9],
                        [13, 0, -8],
                        [13, 0, -7],
                        [13, 0, -6],
                        [13, 0, -5],
                        [13, 0, -4],
                        [13, 0, -3],
                        [13, 0, -2],
                        [13, 0, -1],
                        [13, 0, 0],
                        [13, 0, 1],
                        [13, 0, 2],
                        [13, 0, 3],
                        [13, 0, 4],
                        [13, 0, 5],
                        [13, 0, 6],
                        [13, 0, 7],
                        [13, 0, 8],
                        [13, 0, 9],
                        [13, 0, 10],
                        [13, 0, 11],
                        [13, 0, 12],
                        [13, 0, 13],
                        [13, 1, -13],
                        [13, 1, -12],
                        [13, 1, -11],
                        [13, 1, -10],
                        [13, 1, -9],
                        [13, 1, -8],
                        [13, 1, -7],
                        [13, 1, -6],
                        [13, 1, -5],
                        [13, 1, -4],
                        [13, 1, -3],
                        [13, 1, -2],
                        [13, 1, -1],
                        [13, 1, 0],
                        [13, 1, 1],
                        [13, 1, 2],
                        [13, 1, 3],
                        [13, 1, 4],
                        [13, 1, 5],
                        [13, 1, 6],
                        [13, 1, 7],
                        [13, 1, 8],
                        [13, 1, 9],
                        [13, 1, 10],
                        [13, 1, 11],
                        [13, 1, 12],
                        [13, 1, 13],
                        [13, 2, -13],
                        [13, 2, -12],
                        [13, 2, -11],
                        [13, 2, -10],
                        [13, 2, -9],
                        [13, 2, -8],
                        [13, 2, -7],
                        [13, 2, -6],
                        [13, 2, -5],
                        [13, 2, -4],
                        [13, 2, -3],
                        [13, 2, -2],
                        [13, 2, -1],
                        [13, 2, 0],
                        [13, 2, 1],
                        [13, 2, 2],
                        [13, 2, 3],
                        [13, 2, 4],
                        [13, 2, 5],
                        [13, 2, 6],
                        [13, 2, 7],
                        [13, 2, 8],
                        [13, 2, 9],
                        [13, 2, 10],
                        [13, 2, 11],
                        [13, 2, 12],
                        [13, 2, 13],
                        [13, 3, -13],
                        [13, 3, -12],
                        [13, 3, -11],
                        [13, 3, -10],
                        [13, 3, -9],
                        [13, 3, -8],
                        [13, 3, -7],
                        [13, 3, -6],
                        [13, 3, -5],
                        [13, 3, -4],
                        [13, 3, -3],
                        [13, 3, -2],
                        [13, 3, -1],
                        [13, 3, 0],
                        [13, 3, 1],
                        [13, 3, 2],
                        [13, 3, 3],
                        [13, 3, 4],
                        [13, 3, 5],
                        [13, 3, 6],
                        [13, 3, 7],
                        [13, 3, 8],
                        [13, 3, 9],
                        [13, 3, 10],
                        [13, 3, 11],
                        [13, 3, 12],
                        [13, 3, 13],
                        [13, 4, -13],
                        [13, 4, -12],
                        [13, 4, -11],
                        [13, 4, -10],
                        [13, 4, -9],
                        [13, 4, -8],
                        [13, 4, -7],
                        [13, 4, -6],
                        [13, 4, -5],
                        [13, 4, -4],
                        [13, 4, -3],
                        [13, 4, -2],
                        [13, 4, -1],
                        [13, 4, 0],
                        [13, 4, 1],
                        [13, 4, 2],
                        [13, 4, 3],
                        [13, 4, 4],
                        [13, 4, 5],
                        [13, 4, 6],
                        [13, 4, 7],
                        [13, 4, 8],
                        [13, 4, 9],
                        [13, 4, 10],
                        [13, 4, 11],
                        [13, 4, 12],
                        [13, 4, 13],
                        [13, 5, -13],
                        [13, 5, -12],
                        [13, 5, -11],
                        [13, 5, -10],
                        [13, 5, -9],
                        [13, 5, -8],
                        [13, 5, -7],
                        [13, 5, -6],
                        [13, 5, -5],
                        [13, 5, -4],
                        [13, 5, -3],
                        [13, 5, -2],
                        [13, 5, -1],
                        [13, 5, 0],
                        [13, 5, 1],
                        [13, 5, 2],
                        [13, 5, 3],
                        [13, 5, 4],
                        [13, 5, 5],
                        [13, 5, 6],
                        [13, 5, 7],
                        [13, 5, 8],
                        [13, 5, 9],
                        [13, 5, 10],
                        [13, 5, 11],
                        [13, 5, 12],
                        [13, 5, 13],
                        [13, 6, -13],
                        [13, 6, -12],
                        [13, 6, -11],
                        [13, 6, -10],
                        [13, 6, -9],
                        [13, 6, -8],
                        [13, 6, -7],
                        [13, 6, -6],
                        [13, 6, -5],
                        [13, 6, -4],
                        [13, 6, -3],
                        [13, 6, -2],
                        [13, 6, -1],
                        [13, 6, 0],
                        [13, 6, 1],
                        [13, 6, 2],
                        [13, 6, 3],
                        [13, 6, 4],
                        [13, 6, 5],
                        [13, 6, 6],
                        [13, 6, 7],
                        [13, 6, 8],
                        [13, 6, 9],
                        [13, 6, 10],
                        [13, 6, 11],
                        [13, 6, 12],
                        [13, 6, 13],
                        [13, 7, -13],
                        [13, 7, -12],
                        [13, 7, -11],
                        [13, 7, -10],
                        [13, 7, -9],
                        [13, 7, -8],
                        [13, 7, -7],
                        [13, 7, -6],
                        [13, 7, -5],
                        [13, 7, -4],
                        [13, 7, -3],
                        [13, 7, -2],
                        [13, 7, -1],
                        [13, 7, 0],
                        [13, 7, 1],
                        [13, 7, 2],
                        [13, 7, 3],
                        [13, 7, 4],
                        [13, 7, 5],
                        [13, 7, 6],
                        [13, 7, 7],
                        [13, 7, 8],
                        [13, 7, 9],
                        [13, 7, 10],
                        [13, 7, 11],
                        [13, 7, 12],
                        [13, 7, 13],
                        [13, 8, -13],
                        [13, 8, -12],
                        [13, 8, -11],
                        [13, 8, -10],
                        [13, 8, -9],
                        [13, 8, -8],
                        [13, 8, -7],
                        [13, 8, -6],
                        [13, 8, -5],
                        [13, 8, -4],
                        [13, 8, -3],
                        [13, 8, -2],
                        [13, 8, -1],
                        [13, 8, 0],
                        [13, 8, 1],
                        [13, 8, 2],
                        [13, 8, 3],
                        [13, 8, 4],
                        [13, 8, 5],
                        [13, 8, 6],
                        [13, 8, 7],
                        [13, 8, 8],
                        [13, 8, 9],
                        [13, 8, 10],
                        [13, 8, 11],
                        [13, 8, 12],
                        [13, 8, 13],
                        [13, 9, -13],
                        [13, 9, -12],
                        [13, 9, -11],
                        [13, 9, -10],
                        [13, 9, -9],
                        [13, 9, -8],
                        [13, 9, -7],
                        [13, 9, -6],
                        [13, 9, -5],
                        [13, 9, -4],
                        [13, 9, -3],
                        [13, 9, -2],
                        [13, 9, -1],
                        [13, 9, 0],
                        [13, 9, 1],
                        [13, 9, 2],
                        [13, 9, 3],
                        [13, 9, 4],
                        [13, 9, 5],
                        [13, 9, 6],
                        [13, 9, 7],
                        [13, 9, 8],
                        [13, 9, 9],
                        [13, 9, 10],
                        [13, 9, 11],
                        [13, 9, 12],
                        [13, 9, 13],
                        [13, 10, -13],
                        [13, 10, -12],
                        [13, 10, -11],
                        [13, 10, -10],
                        [13, 10, -9],
                        [13, 10, -8],
                        [13, 10, -7],
                        [13, 10, -6],
                        [13, 10, -5],
                        [13, 10, -4],
                        [13, 10, -3],
                        [13, 10, -2],
                        [13, 10, -1],
                        [13, 10, 0],
                        [13, 10, 1],
                        [13, 10, 2],
                        [13, 10, 3],
                        [13, 10, 4],
                        [13, 10, 5],
                        [13, 10, 6],
                        [13, 10, 7],
                        [13, 10, 8],
                        [13, 10, 9],
                        [13, 10, 10],
                        [13, 10, 11],
                        [13, 10, 12],
                        [13, 10, 13],
                        [13, 11, -13],
                        [13, 11, -12],
                        [13, 11, -11],
                        [13, 11, -10],
                        [13, 11, -9],
                        [13, 11, -8],
                        [13, 11, -7],
                        [13, 11, -6],
                        [13, 11, -5],
                        [13, 11, -4],
                        [13, 11, -3],
                        [13, 11, -2],
                        [13, 11, -1],
                        [13, 11, 0],
                        [13, 11, 1],
                        [13, 11, 2],
                        [13, 11, 3],
                        [13, 11, 4],
                        [13, 11, 5],
                        [13, 11, 6],
                        [13, 11, 7],
                        [13, 11, 8],
                        [13, 11, 9],
                        [13, 11, 10],
                        [13, 11, 11],
                        [13, 11, 12],
                        [13, 11, 13],
                        [13, 12, -13],
                        [13, 12, -12],
                        [13, 12, -11],
                        [13, 12, -10],
                        [13, 12, -9],
                        [13, 12, -8],
                        [13, 12, -7],
                        [13, 12, -6],
                        [13, 12, -5],
                        [13, 12, -4],
                        [13, 12, -3],
                        [13, 12, -2],
                        [13, 12, -1],
                        [13, 12, 0],
                        [13, 12, 1],
                        [13, 12, 2],
                        [13, 12, 3],
                        [13, 12, 4],
                        [13, 12, 5],
                        [13, 12, 6],
                        [13, 12, 7],
                        [13, 12, 8],
                        [13, 12, 9],
                        [13, 12, 10],
                        [13, 12, 11],
                        [13, 12, 12],
                        [13, 12, 13],
                        [13, 13, -13],
                        [13, 13, -12],
                        [13, 13, -11],
                        [13, 13, -10],
                        [13, 13, -9],
                        [13, 13, -8],
                        [13, 13, -7],
                        [13, 13, -6],
                        [13, 13, -5],
                        [13, 13, -4],
                        [13, 13, -3],
                        [13, 13, -2],
                        [13, 13, -1],
                        [13, 13, 0],
                        [13, 13, 1],
                        [13, 13, 2],
                        [13, 13, 3],
                        [13, 13, 4],
                        [13, 13, 5],
                        [13, 13, 6],
                        [13, 13, 7],
                        [13, 13, 8],
                        [13, 13, 9],
                        [13, 13, 10],
                        [13, 13, 11],
                        [13, 13, 12],
                        [13, 13, 13]])

    return indxvec


def gsh_eval(X, Bvec):

    phi1 = X[..., 0]
    phi = X[..., 1]
    phi2 = X[..., 2]

    zvec = np.abs(phi) < 1e-8
    zvec = zvec.astype(int)
    randvec = np.round(np.random.rand(zvec.size)).reshape(zvec.shape)
    randvecopp = np.ones(zvec.shape) - randvec
    phi += (1e-7)*zvec*(randvec - randvecopp)

    final_shape = np.hstack([phi1.shape, len(Bvec)])
    tfunc = np.zeros(final_shape, dtype='complex128')

    c = 0
    for Bindx in Bvec:

        if Bindx == 0:
            tfunc[..., c] = 1

        if Bindx == 1:
            tfunc[..., c] = (0.3e1 / 0.2e1) * (0.1e1 + np.cos(phi)) * np.exp((-1*1j) * (phi1 + phi2))

        if Bindx == 2:
            t3442 = np.cos(phi)
            tfunc[..., c] = (-0.3e1 / 0.2e1*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.2e1) * np.sqrt((1 + t3442)) * np.sqrt((1 - t3442))

        if Bindx == 3:
            tfunc[..., c] = (0.3e1 / 0.2e1) * (-0.1e1 + np.cos(phi)) * np.exp((-1*1j) * (phi1 - phi2))

        if Bindx == 4:
            t3443 = np.cos(phi)
            tfunc[..., c] = (-0.3e1 / 0.2e1*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.2e1) * np.sqrt((1 - t3443)) * np.sqrt((1 + t3443))

        if Bindx == 5:
            tfunc[..., c] = 0.3e1 * np.cos(phi)

        if Bindx == 6:
            t3444 = np.cos(phi)
            tfunc[..., c] = (-0.3e1 / 0.2e1*1j) * np.exp((1j) * phi2) * np.sqrt(0.2e1) * np.sqrt((1 - t3444)) * np.sqrt((1 + t3444))

        if Bindx == 7:
            tfunc[..., c] = (0.3e1 / 0.2e1) * (-0.1e1 + np.cos(phi)) * np.exp((1j) * (phi1 - phi2))

        if Bindx == 8:
            t3445 = np.cos(phi)
            tfunc[..., c] = (-0.3e1 / 0.2e1*1j) * np.exp((1j) * phi1) * np.sqrt(0.2e1) * np.sqrt((1 - t3445)) * np.sqrt((1 + t3445))

        if Bindx == 9:
            tfunc[..., c] = (0.3e1 / 0.2e1) * (0.1e1 + np.cos(phi)) * np.exp((1j) * (phi1 + phi2))

        if Bindx == 10:
            t3446 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.4e1) * np.exp((-2*1j) * (phi1 + phi2)) * (1 + (2 + t3446) * t3446)

        if Bindx == 11:
            t3447 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * ((1 + t3447) ** (0.3e1 / 0.2e1)) * np.sqrt((1 - t3447))

        if Bindx == 12:
            t3448 = np.sin(phi)
            tfunc[..., c] = -(0.5e1 / 0.4e1) * np.exp((-2*1j) * phi1) * np.sqrt(0.6e1) * t3448 ** 2

        if Bindx == 13:
            t3449 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1*1j) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t3449) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t3449))

        if Bindx == 14:
            t3450 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.4e1) * np.exp((-2*1j) * (phi1 - phi2)) * (1 + (-2 + t3450) * t3450)

        if Bindx == 15:
            t3451 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt((1 - t3451)) * ((1 + t3451) ** (0.3e1 / 0.2e1))

        if Bindx == 16:
            t3452 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1) * np.exp((-1*1j) * (phi1 + phi2)) * (2 * t3452 ** 2 + t3452 - 1)

        if Bindx == 17:
            t3453 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.6e1) * np.sqrt((1 + t3453)) * t3453 * np.sqrt((1 - t3453))

        if Bindx == 18:
            t3454 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1) * np.exp((-1*1j) * (phi1 - phi2)) * (2 * t3454 ** 2 - t3454 - 1)

        if Bindx == 19:
            t3455 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1*1j) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t3455) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t3455))

        if Bindx == 20:
            t3456 = np.sin(phi)
            tfunc[..., c] = -(0.5e1 / 0.4e1) * np.exp((-2*1j) * phi2) * np.sqrt(0.6e1) * t3456 ** 2

        if Bindx == 21:
            t3457 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.6e1) * np.sqrt((1 - t3457)) * np.sqrt((1 + t3457)) * t3457

        if Bindx == 22:
            t3458 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.2e1 * t3458 ** 2 - 0.5e1 / 0.2e1

        if Bindx == 23:
            t3459 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((1j) * phi2) * np.sqrt(0.6e1) * np.sqrt((1 + t3459)) * t3459 * np.sqrt((1 - t3459))

        if Bindx == 24:
            t3460 = np.sin(phi)
            tfunc[..., c] = -(0.5e1 / 0.4e1) * np.exp((2*1j) * phi2) * np.sqrt(0.6e1) * t3460 ** 2

        if Bindx == 25:
            t3461 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * ((1 - t3461) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t3461))

        if Bindx == 26:
            t3462 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1) * np.exp((1j) * (phi1 - phi2)) * (2 * t3462 ** 2 - t3462 - 1)

        if Bindx == 27:
            t3463 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((1j) * phi1) * np.sqrt(0.6e1) * np.sqrt((1 - t3463)) * np.sqrt((1 + t3463)) * t3463

        if Bindx == 28:
            t3464 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1) * np.exp((1j) * (phi1 + phi2)) * (2 * t3464 ** 2 + t3464 - 1)

        if Bindx == 29:
            t3465 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt((1 - t3465)) * ((1 + t3465) ** (0.3e1 / 0.2e1))

        if Bindx == 30:
            t3466 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.4e1) * np.exp((2*1j) * (phi1 - phi2)) * (1 + (-2 + t3466) * t3466)

        if Bindx == 31:
            t3467 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1*1j) * np.exp((1j) * (2 * phi1 - phi2)) * ((1 - t3467) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t3467))

        if Bindx == 32:
            t3468 = np.sin(phi)
            tfunc[..., c] = -(0.5e1 / 0.4e1) * np.exp((2*1j) * phi1) * np.sqrt(0.6e1) * t3468 ** 2

        if Bindx == 33:
            t3469 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt((1 - t3469)) * ((1 + t3469) ** (0.3e1 / 0.2e1))

        if Bindx == 34:
            t3470 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.4e1) * np.exp((2*1j) * (phi1 + phi2)) * (1 + (2 + t3470) * t3470)

        if Bindx == 35:
            t3471 = np.cos(phi)
            t3472 = t3471 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((-3*1j) * (phi1 + phi2)) * (3 * t3472 + 1 + (t3472 + 3) * t3471)

        if Bindx == 36:
            t3474 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.6e1) * ((1 + t3474) ** (0.5e1 / 0.2e1)) * np.sqrt((1 - t3474))

        if Bindx == 37:
            t3475 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.15e2) * t3475 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 38:
            t3476 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1*1j) * np.exp((-3*1j) * phi1) * np.sqrt(0.5e1) * ((1 - t3476) ** (0.3e1 / 0.2e1)) * ((1 + t3476) ** (0.3e1 / 0.2e1))

        if Bindx == 39:
            t3477 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.15e2) * t3477 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 40:
            t3478 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.6e1) * ((1 - t3478) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t3478))

        if Bindx == 41:
            t3479 = np.cos(phi)
            t3480 = t3479 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((-3*1j) * (phi1 - phi2)) * (-3 * t3480 - 1 + (t3480 + 3) * t3479)

        if Bindx == 42:
            t3482 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t3482)) * ((1 + t3482) ** (0.5e1 / 0.2e1))

        if Bindx == 43:
            t3483 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1) * np.exp((-2*1j) * (phi1 + phi2)) * (-t3483 - 2 + (3 * t3483 + 4) * t3483 ** 2)

        if Bindx == 44:
            t3486 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.8e1*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.10e2) * ((1 + t3486) ** (0.3e1 / 0.2e1)) * (1 + (-4 + 3 * t3486) * t3486) * ((1 - t3486) ** (-0.1e1 / 0.2e1))

        if Bindx == 45:
            t3487 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.4e1) * np.exp((-2*1j) * phi1) * np.sqrt(0.30e2) * t3487 ** 2 * np.cos(phi)

        if Bindx == 46:
            t3488 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.8e1*1j) * (1 + 3 * t3488) * np.sqrt((1 + t3488)) * np.sqrt(0.10e2) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t3488) ** (0.3e1 / 0.2e1))

        if Bindx == 47:
            t3489 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1) * np.exp((-2*1j) * (phi1 - phi2)) * (-t3489 + 2 + (3 * t3489 - 4) * t3489 ** 2)

        if Bindx == 48:
            t3492 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.6e1) * ((1 - t3492) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t3492))

        if Bindx == 49:
            t3493 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.15e2) * t3493 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 50:
            t3494 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t3494)) * ((1 + t3494) ** (0.3e1 / 0.2e1)) * (-1 + 3 * t3494)

        if Bindx == 51:
            t3495 = np.cos(phi)
            t3496 = t3495 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((-1*1j) * (phi1 + phi2)) * (5 * t3496 - 1 + (15 * t3496 - 11) * t3495)

        if Bindx == 52:
            t3498 = np.cos(phi)
            t3501 = 1 - t3498
            tfunc[..., c] = (0.7e1 / 0.4e1*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.3e1) * np.sqrt((1 + t3498)) * (t3501 + (5 * t3498 - 5) * t3498 ** 2) * (t3501 ** (-0.1e1 / 0.2e1))

        if Bindx == 53:
            t3502 = np.cos(phi)
            t3503 = t3502 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((-1*1j) * (phi1 - phi2)) * (-5 * t3503 + 1 + (15 * t3503 - 11) * t3502)

        if Bindx == 54:
            t3505 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.8e1*1j) * (1 + 3 * t3505) * np.sqrt((1 + t3505)) * np.sqrt(0.10e2) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t3505) ** (0.3e1 / 0.2e1))

        if Bindx == 55:
            t3506 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.15e2) * t3506 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 56:
            t3507 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.5e1) * ((1 - t3507) ** (0.3e1 / 0.2e1)) * ((1 + t3507) ** (0.3e1 / 0.2e1))

        if Bindx == 57:
            t3508 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.4e1) * np.exp((-2*1j) * phi2) * np.sqrt(0.30e2) * t3508 ** 2 * np.cos(phi)

        if Bindx == 58:
            t3509 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.4e1*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.3e1) * np.sqrt((1 - t3509)) * np.sqrt((1 + t3509)) * (5 * t3509 ** 2 - 1)

        if Bindx == 59:
            t3510 = np.cos(phi)
            tfunc[..., c] = 0.7e1 / 0.2e1 * t3510 * (5 * t3510 ** 2 - 3)

        if Bindx == 60:
            t3511 = np.cos(phi)
            t3514 = 1 - t3511
            tfunc[..., c] = (0.7e1 / 0.4e1*1j) * np.exp((1j) * phi2) * np.sqrt(0.3e1) * np.sqrt((1 + t3511)) * (t3514 + (5 * t3511 - 5) * t3511 ** 2) * (t3514 ** (-0.1e1 / 0.2e1))

        if Bindx == 61:
            t3515 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.4e1) * np.exp((2*1j) * phi2) * np.sqrt(0.30e2) * t3515 ** 2 * np.cos(phi)

        if Bindx == 62:
            t3516 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1*1j) * np.exp((3*1j) * phi2) * np.sqrt(0.5e1) * ((1 - t3516) ** (0.3e1 / 0.2e1)) * ((1 + t3516) ** (0.3e1 / 0.2e1))

        if Bindx == 63:
            t3517 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.15e2) * t3517 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 64:
            t3518 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.8e1*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.10e2) * ((1 - t3518) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t3518)) * (1 + 3 * t3518)

        if Bindx == 65:
            t3519 = np.cos(phi)
            t3520 = t3519 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((1j) * (phi1 - phi2)) * (-5 * t3520 + 1 + (15 * t3520 - 11) * t3519)

        if Bindx == 66:
            t3522 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.4e1*1j) * np.exp((1j) * phi1) * np.sqrt(0.3e1) * np.sqrt((1 - t3522)) * np.sqrt((1 + t3522)) * (5 * t3522 ** 2 - 1)

        if Bindx == 67:
            t3523 = np.cos(phi)
            t3524 = t3523 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((1j) * (phi1 + phi2)) * (5 * t3524 - 1 + (15 * t3524 - 11) * t3523)

        if Bindx == 68:
            t3526 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.8e1*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.10e2) * ((1 + t3526) ** (0.3e1 / 0.2e1)) * (1 + (-4 + 3 * t3526) * t3526) * ((1 - t3526) ** (-0.1e1 / 0.2e1))

        if Bindx == 69:
            t3527 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.15e2) * t3527 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 70:
            t3528 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.6e1) * ((1 - t3528) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t3528))

        if Bindx == 71:
            t3529 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1) * np.exp((2*1j) * (phi1 - phi2)) * (-t3529 + 2 + (3 * t3529 - 4) * t3529 ** 2)

        if Bindx == 72:
            t3532 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.10e2) * ((1 - t3532) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t3532)) * (1 + 3 * t3532)

        if Bindx == 73:
            t3533 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.4e1) * np.exp((2*1j) * phi1) * np.sqrt(0.30e2) * t3533 ** 2 * np.cos(phi)

        if Bindx == 74:
            t3534 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t3534)) * ((1 + t3534) ** (0.3e1 / 0.2e1)) * (-1 + 3 * t3534)

        if Bindx == 75:
            t3535 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1) * np.exp((2*1j) * (phi1 + phi2)) * (-t3535 - 2 + (3 * t3535 + 4) * t3535 ** 2)

        if Bindx == 76:
            t3538 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t3538)) * ((1 + t3538) ** (0.5e1 / 0.2e1))

        if Bindx == 77:
            t3539 = np.cos(phi)
            t3540 = t3539 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((3*1j) * (phi1 - phi2)) * (-3 * t3540 - 1 + (t3540 + 3) * t3539)

        if Bindx == 78:
            t3542 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.6e1) * ((1 - t3542) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t3542))

        if Bindx == 79:
            t3543 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.15e2) * t3543 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 80:
            t3544 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.5e1) * ((1 - t3544) ** (0.3e1 / 0.2e1)) * ((1 + t3544) ** (0.3e1 / 0.2e1))

        if Bindx == 81:
            t3545 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.15e2) * t3545 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 82:
            t3546 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t3546)) * ((1 + t3546) ** (0.5e1 / 0.2e1))

        if Bindx == 83:
            t3547 = np.cos(phi)
            t3548 = t3547 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((3*1j) * (phi1 + phi2)) * (3 * t3548 + 1 + (t3548 + 3) * t3547)

        if Bindx == 84:
            t3550 = np.cos(phi)
            t3554 = 4 * t3550
            t3551 = t3550 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((-4*1j) * (phi1 + phi2)) * (t3554 + 1 + (t3554 + 6 + t3551) * t3551)

        if Bindx == 85:
            t3555 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * ((1 + t3555) ** (0.7e1 / 0.2e1)) * np.sqrt((1 - t3555))

        if Bindx == 86:
            t3556 = np.cos(phi)
            t3559 = 1 + t3556
            t3557 = t3559 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.7e1) * (-1 + t3556) * t3559 * t3557

        if Bindx == 87:
            t3560 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (4 * phi1 + phi2)) * np.sqrt(0.14e2) * ((1 - t3560) ** (0.3e1 / 0.2e1)) * ((1 + t3560) ** (0.5e1 / 0.2e1))

        if Bindx == 88:
            t3563 = np.sin(phi)
            t3561 = t3563 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((-4*1j) * phi1) * np.sqrt(0.70e2) * t3561 ** 2

        if Bindx == 89:
            t3564 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (4 * phi1 - phi2)) * np.sqrt(0.14e2) * ((1 - t3564) ** (0.5e1 / 0.2e1)) * ((1 + t3564) ** (0.3e1 / 0.2e1))

        if Bindx == 90:
            t3565 = np.cos(phi)
            t3568 = -1 + t3565
            t3566 = t3568 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.7e1) * t3568 * t3566 * (1 + t3565)

        if Bindx == 91:
            t3569 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.2e1) * ((1 - t3569) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t3569))

        if Bindx == 92:
            t3570 = np.cos(phi)
            t3574 = -4 * t3570
            t3571 = t3570 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((-4*1j) * (phi1 - phi2)) * (t3574 + 1 + (t3574 + 6 + t3571) * t3571)

        if Bindx == 93:
            t3575 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t3575)) * ((1 + t3575) ** (0.7e1 / 0.2e1))

        if Bindx == 94:
            t3576 = np.cos(phi)
            t3577 = t3576 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-3*1j) * (phi1 + phi2)) * (-5 * t3576 - 3 + (9 * t3576 + 3 + 4 * t3577) * t3577)

        if Bindx == 95:
            t3580 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.14e2) * ((1 + t3580) ** (0.5e1 / 0.2e1)) * (1 + (-3 + 2 * t3580) * t3580) * ((1 - t3580) ** (-0.1e1 / 0.2e1))

        if Bindx == 96:
            t3582 = np.cos(phi)
            t3581 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.7e1) * t3581 ** 2 * (-1 + (3 + 4 * t3582) * t3582)

        if Bindx == 97:
            t3583 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.4e1*1j) * t3583 * (1 + (-2 + t3583) * t3583) * ((1 + t3583) ** (0.3e1 / 0.2e1)) * np.sqrt(0.35e2) * np.exp((-3*1j) * phi1) * ((1 - t3583) ** (-0.1e1 / 0.2e1))

        if Bindx == 98:
            t3585 = np.cos(phi)
            t3584 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.7e1) * t3584 ** 2 * (-1 + (-3 + 4 * t3585) * t3585)

        if Bindx == 99:
            t3586 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * (1 + 2 * t3586) * np.sqrt((1 + t3586)) * np.sqrt(0.14e2) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t3586) ** (0.5e1 / 0.2e1))

        if Bindx == 100:
            t3587 = np.cos(phi)
            t3588 = t3587 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-3*1j) * (phi1 - phi2)) * (5 * t3587 - 3 + (-9 * t3587 + 3 + 4 * t3588) * t3588)

        if Bindx == 101:
            t3591 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.2e1) * ((1 - t3591) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t3591))

        if Bindx == 102:
            t3592 = np.cos(phi)
            t3595 = 1 + t3592
            t3593 = t3595 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.7e1) * (-1 + t3592) * t3595 * t3593

        if Bindx == 103:
            t3596 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t3596)) * ((1 + t3596) ** (0.5e1 / 0.2e1)) * (2 * t3596 - 1)

        if Bindx == 104:
            t3597 = np.cos(phi)
            t3598 = t3597 ** 2
            tfunc[..., c] = (0.9e1 / 0.4e1) * np.exp((-2*1j) * (phi1 + phi2)) * (-5 * t3597 + 1 + (7 * t3597 - 6 + 7 * t3598) * t3598)

        if Bindx == 105:
            t3601 = np.cos(phi)
            t3602 = t3601 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.2e1) * ((1 + t3601) ** (0.3e1 / 0.2e1)) * (-21 * t3602 + 1 + (14 * t3602 + 6) * t3601) * ((1 - t3601) ** (-0.1e1 / 0.2e1))

        if Bindx == 106:
            t3605 = np.cos(phi)
            t3604 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((-2*1j) * phi1) * np.sqrt(0.10e2) * t3604 ** 2 * (7 * t3605 ** 2 - 1)

        if Bindx == 107:
            t3606 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * (-1 + (7 + 14 * t3606) * t3606) * np.sqrt((1 + t3606)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t3606) ** (0.3e1 / 0.2e1))

        if Bindx == 108:
            t3607 = np.cos(phi)
            t3608 = t3607 ** 2
            tfunc[..., c] = (0.9e1 / 0.4e1) * np.exp((-2*1j) * (phi1 - phi2)) * (5 * t3607 + 1 + (-7 * t3607 - 6 + 7 * t3608) * t3608)

        if Bindx == 109:
            t3611 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * (1 + 2 * t3611) * np.sqrt((1 + t3611)) * np.sqrt(0.14e2) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t3611) ** (0.5e1 / 0.2e1))

        if Bindx == 110:
            t3612 = np.cos(phi)
            t3615 = -1 + t3612
            t3613 = t3615 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.7e1) * t3615 * t3613 * (1 + t3612)

        if Bindx == 111:
            t3616 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.14e2) * ((1 - t3616) ** (0.3e1 / 0.2e1)) * ((1 + t3616) ** (0.5e1 / 0.2e1))

        if Bindx == 112:
            t3618 = np.cos(phi)
            t3617 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.7e1) * t3617 ** 2 * (-1 + (3 + 4 * t3618) * t3618)

        if Bindx == 113:
            t3619 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t3619)) * ((1 + t3619) ** (0.3e1 / 0.2e1)) * (-1 + (-7 + 14 * t3619) * t3619)

        if Bindx == 114:
            t3620 = np.cos(phi)
            t3621 = t3620 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-1*1j) * (phi1 + phi2)) * (-3 * t3620 + 3 + (7 * t3620 - 27 + 28 * t3621) * t3621)

        if Bindx == 115:
            t3624 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.4e1*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.5e1) * np.sqrt((1 + t3624)) * t3624 * np.sqrt((1 - t3624)) * (7 * t3624 ** 2 - 3)

        if Bindx == 116:
            t3629 = np.cos(phi)
            t3630 = t3629 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-1*1j) * (phi1 - phi2)) * (3 * t3629 + 3 + (-7 * t3629 - 27 + 28 * t3630) * t3630)

        if Bindx == 117:
            t3633 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * (-1 + (7 + 14 * t3633) * t3633) * np.sqrt((1 + t3633)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t3633) ** (0.3e1 / 0.2e1))

        if Bindx == 118:
            t3635 = np.cos(phi)
            t3634 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.7e1) * t3634 ** 2 * (-1 + (-3 + 4 * t3635) * t3635)

        if Bindx == 119:
            t3636 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.14e2) * ((1 - t3636) ** (0.5e1 / 0.2e1)) * ((1 + t3636) ** (0.3e1 / 0.2e1))

        if Bindx == 120:
            t3639 = np.sin(phi)
            t3637 = t3639 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((-4*1j) * phi2) * np.sqrt(0.70e2) * t3637 ** 2

        if Bindx == 121:
            t3640 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.4e1*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.35e2) * ((1 - t3640) ** (0.3e1 / 0.2e1)) * ((1 + t3640) ** (0.3e1 / 0.2e1)) * t3640

        if Bindx == 122:
            t3642 = np.cos(phi)
            t3641 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((-2*1j) * phi2) * np.sqrt(0.10e2) * t3641 ** 2 * (7 * t3642 ** 2 - 1)

        if Bindx == 123:
            t3643 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.4e1*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.5e1) * np.sqrt((1 - t3643)) * np.sqrt((1 + t3643)) * t3643 * (7 * t3643 ** 2 - 3)

        if Bindx == 124:
            t3644 = np.cos(phi)
            t3645 = t3644 ** 2
            tfunc[..., c] = 0.27e2 / 0.8e1 + (-0.135e3 / 0.4e1 + 0.315e3 / 0.8e1 * t3645) * t3645

        if Bindx == 125:
            t3647 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.4e1*1j) * np.exp((1j) * phi2) * np.sqrt(0.5e1) * np.sqrt((1 + t3647)) * t3647 * np.sqrt((1 - t3647)) * (7 * t3647 ** 2 - 3)

        if Bindx == 126:
            t3653 = np.cos(phi)
            t3652 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((2*1j) * phi2) * np.sqrt(0.10e2) * t3652 ** 2 * (7 * t3653 ** 2 - 1)

        if Bindx == 127:
            t3654 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.4e1*1j) * t3654 * ((1 + t3654) ** (0.3e1 / 0.2e1)) * (1 + (-2 + t3654) * t3654) * np.sqrt(0.35e2) * np.exp((3*1j) * phi2) * ((1 - t3654) ** (-0.1e1 / 0.2e1))

        if Bindx == 128:
            t3657 = np.sin(phi)
            t3655 = t3657 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((4*1j) * phi2) * np.sqrt(0.70e2) * t3655 ** 2

        if Bindx == 129:
            t3658 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (phi1 - 4 * phi2)) * np.sqrt(0.14e2) * ((1 - t3658) ** (0.5e1 / 0.2e1)) * ((1 + t3658) ** (0.3e1 / 0.2e1))

        if Bindx == 130:
            t3660 = np.cos(phi)
            t3659 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.7e1) * t3659 ** 2 * (-1 + (-3 + 4 * t3660) * t3660)

        if Bindx == 131:
            t3661 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.2e1) * ((1 - t3661) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t3661)) * (-1 + (7 + 14 * t3661) * t3661)

        if Bindx == 132:
            t3662 = np.cos(phi)
            t3663 = t3662 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((1j) * (phi1 - phi2)) * (3 * t3662 + 3 + (-7 * t3662 - 27 + 28 * t3663) * t3663)

        if Bindx == 133:
            t3666 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.4e1*1j) * np.exp((1j) * phi1) * np.sqrt(0.5e1) * np.sqrt((1 - t3666)) * np.sqrt((1 + t3666)) * t3666 * (7 * t3666 ** 2 - 3)

        if Bindx == 134:
            t3667 = np.cos(phi)
            t3668 = t3667 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((1j) * (phi1 + phi2)) * (-3 * t3667 + 3 + (7 * t3667 - 27 + 28 * t3668) * t3668)

        if Bindx == 135:
            t3671 = np.cos(phi)
            t3672 = t3671 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.2e1) * ((1 + t3671) ** (0.3e1 / 0.2e1)) * (-21 * t3672 + 1 + (14 * t3672 + 6) * t3671) * ((1 - t3671) ** (-0.1e1 / 0.2e1))

        if Bindx == 136:
            t3675 = np.cos(phi)
            t3674 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.7e1) * t3674 ** 2 * (-1 + (3 + 4 * t3675) * t3675)

        if Bindx == 137:
            t3676 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (phi1 + 4 * phi2)) * np.sqrt(0.14e2) * ((1 - t3676) ** (0.3e1 / 0.2e1)) * ((1 + t3676) ** (0.5e1 / 0.2e1))

        if Bindx == 138:
            t3677 = np.cos(phi)
            t3680 = -1 + t3677
            t3678 = t3680 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.7e1) * t3680 * t3678 * (1 + t3677)

        if Bindx == 139:
            t3681 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.14e2) * ((1 - t3681) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t3681)) * (1 + 2 * t3681)

        if Bindx == 140:
            t3682 = np.cos(phi)
            t3683 = t3682 ** 2
            tfunc[..., c] = (0.9e1 / 0.4e1) * np.exp((2*1j) * (phi1 - phi2)) * (5 * t3682 + 1 + (-7 * t3682 - 6 + 7 * t3683) * t3683)

        if Bindx == 141:
            t3686 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.2e1) * ((1 - t3686) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t3686)) * (-1 + (7 + 14 * t3686) * t3686)

        if Bindx == 142:
            t3688 = np.cos(phi)
            t3687 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((2*1j) * phi1) * np.sqrt(0.10e2) * t3687 ** 2 * (7 * t3688 ** 2 - 1)

        if Bindx == 143:
            t3689 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t3689)) * ((1 + t3689) ** (0.3e1 / 0.2e1)) * (-1 + (-7 + 14 * t3689) * t3689)

        if Bindx == 144:
            t3690 = np.cos(phi)
            t3691 = t3690 ** 2
            tfunc[..., c] = (0.9e1 / 0.4e1) * np.exp((2*1j) * (phi1 + phi2)) * (-5 * t3690 + 1 + (7 * t3690 - 6 + 7 * t3691) * t3691)

        if Bindx == 145:
            t3694 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.14e2) * ((1 + t3694) ** (0.5e1 / 0.2e1)) * (1 + (-3 + 2 * t3694) * t3694) * ((1 - t3694) ** (-0.1e1 / 0.2e1))

        if Bindx == 146:
            t3695 = np.cos(phi)
            t3698 = 1 + t3695
            t3696 = t3698 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.7e1) * (-1 + t3695) * t3698 * t3696

        if Bindx == 147:
            t3699 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.2e1) * ((1 - t3699) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t3699))

        if Bindx == 148:
            t3700 = np.cos(phi)
            t3701 = t3700 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((3*1j) * (phi1 - phi2)) * (5 * t3700 - 3 + (-9 * t3700 + 3 + 4 * t3701) * t3701)

        if Bindx == 149:
            t3704 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.14e2) * ((1 - t3704) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t3704)) * (1 + 2 * t3704)

        if Bindx == 150:
            t3706 = np.cos(phi)
            t3705 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.7e1) * t3705 ** 2 * (-1 + (-3 + 4 * t3706) * t3706)

        if Bindx == 151:
            t3707 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.4e1*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.35e2) * ((1 - t3707) ** (0.3e1 / 0.2e1)) * ((1 + t3707) ** (0.3e1 / 0.2e1)) * t3707

        if Bindx == 152:
            t3709 = np.cos(phi)
            t3708 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.7e1) * t3708 ** 2 * (-1 + (3 + 4 * t3709) * t3709)

        if Bindx == 153:
            t3710 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t3710)) * ((1 + t3710) ** (0.5e1 / 0.2e1)) * (2 * t3710 - 1)

        if Bindx == 154:
            t3711 = np.cos(phi)
            t3712 = t3711 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((3*1j) * (phi1 + phi2)) * (-5 * t3711 - 3 + (9 * t3711 + 3 + 4 * t3712) * t3712)

        if Bindx == 155:
            t3715 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t3715)) * ((1 + t3715) ** (0.7e1 / 0.2e1))

        if Bindx == 156:
            t3716 = np.cos(phi)
            t3720 = -4 * t3716
            t3717 = t3716 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((4*1j) * (phi1 - phi2)) * (t3720 + 1 + (t3720 + 6 + t3717) * t3717)

        if Bindx == 157:
            t3721 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.2e1) * ((1 - t3721) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t3721))

        if Bindx == 158:
            t3722 = np.cos(phi)
            t3725 = -1 + t3722
            t3723 = t3725 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.7e1) * t3725 * t3723 * (1 + t3722)

        if Bindx == 159:
            t3726 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (4 * phi1 - phi2)) * np.sqrt(0.14e2) * ((1 - t3726) ** (0.5e1 / 0.2e1)) * ((1 + t3726) ** (0.3e1 / 0.2e1))

        if Bindx == 160:
            t3729 = np.sin(phi)
            t3727 = t3729 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((4*1j) * phi1) * np.sqrt(0.70e2) * t3727 ** 2

        if Bindx == 161:
            t3730 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (4 * phi1 + phi2)) * np.sqrt(0.14e2) * ((1 - t3730) ** (0.3e1 / 0.2e1)) * ((1 + t3730) ** (0.5e1 / 0.2e1))

        if Bindx == 162:
            t3731 = np.cos(phi)
            t3734 = 1 + t3731
            t3732 = t3734 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.7e1) * (-1 + t3731) * t3734 * t3732

        if Bindx == 163:
            t3735 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t3735)) * ((1 + t3735) ** (0.7e1 / 0.2e1))

        if Bindx == 164:
            t3736 = np.cos(phi)
            t3740 = 4 * t3736
            t3737 = t3736 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((4*1j) * (phi1 + phi2)) * (t3740 + 1 + (t3740 + 6 + t3737) * t3737)

        if Bindx == 165:
            t3741 = np.cos(phi)
            t3742 = t3741 ** 2
            t3746 = 10 * t3742
            t3744 = t3742 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-5*1j) * (phi1 + phi2)) * (5 * t3744 + t3746 + 1 + (t3744 + t3746 + 5) * t3741)

        if Bindx == 166:
            t3747 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((-1*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.10e2) * ((1 + t3747) ** (0.9e1 / 0.2e1)) * np.sqrt((1 - t3747))

        if Bindx == 167:
            t3748 = np.cos(phi)
            t3751 = 1 + t3748
            t3749 = t3751 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.5e1) * (-1 + t3748) * t3749 ** 2

        if Bindx == 168:
            t3752 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.30e2) * ((1 - t3752) ** (0.3e1 / 0.2e1)) * ((1 + t3752) ** (0.7e1 / 0.2e1))

        if Bindx == 169:
            t3755 = np.sin(phi)
            t3753 = t3755 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 + phi2)) * np.sqrt(0.210e3) * t3753 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 170:
            t3756 = np.cos(phi)
            tfunc[..., c] = (-0.33e2 / 0.16e2*1j) * np.exp((-5*1j) * phi1) * np.sqrt(0.7e1) * ((1 - t3756) ** (0.5e1 / 0.2e1)) * ((1 + t3756) ** (0.5e1 / 0.2e1))

        if Bindx == 171:
            t3759 = np.sin(phi)
            t3757 = t3759 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 - phi2)) * np.sqrt(0.210e3) * t3757 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 172:
            t3760 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.30e2) * ((1 - t3760) ** (0.7e1 / 0.2e1)) * ((1 + t3760) ** (0.3e1 / 0.2e1))

        if Bindx == 173:
            t3761 = np.cos(phi)
            t3764 = -1 + t3761
            t3762 = t3764 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.5e1) * t3762 ** 2 * (1 + t3761)

        if Bindx == 174:
            t3765 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((-1*1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.10e2) * ((1 - t3765) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t3765))

        if Bindx == 175:
            t3766 = np.cos(phi)
            t3767 = t3766 ** 2
            t3769 = t3767 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-5*1j) * (phi1 - phi2)) * (-10 * t3767 - 5 * t3769 - 1 + (10 * t3767 + t3769 + 5) * t3766)

        if Bindx == 176:
            t3771 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((-1*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t3771)) * ((1 + t3771) ** (0.9e1 / 0.2e1))

        if Bindx == 177:
            t3772 = np.cos(phi)
            t3773 = t3772 ** 2
            t3775 = t3773 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((-4*1j) * (phi1 + phi2)) * (-4 * t3773 + 16 * t3775 - 4 + (14 * t3773 + 5 * t3775 - 11) * t3772)

        if Bindx == 178:
            t3777 = np.cos(phi)
            tfunc[..., c] = (0.33e2 / 0.32e2*1j) * np.exp((-1*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * ((1 + t3777) ** (0.7e1 / 0.2e1)) * (3 + (-8 + 5 * t3777) * t3777) * ((1 - t3777) ** (-0.1e1 / 0.2e1))

        if Bindx == 179:
            t3779 = np.cos(phi)
            t3778 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((-2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.3e1) * t3778 ** 2 * (t3779 - 2 + (5 * t3779 + 8) * t3779 ** 2)

        if Bindx == 180:
            t3782 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * (-1 + 5 * t3782) * ((1 + t3782) ** (0.5e1 / 0.2e1)) * np.sqrt(0.21e2) * np.exp((-1*1j) * (4 * phi1 + phi2)) * ((1 - t3782) ** (0.3e1 / 0.2e1))

        if Bindx == 181:
            t3785 = np.sin(phi)
            t3783 = t3785 ** 2
            tfunc[..., c] = (0.33e2 / 0.16e2) * np.exp((-4*1j) * phi1) * np.sqrt(0.70e2) * t3783 ** 2 * np.cos(phi)

        if Bindx == 182:
            t3786 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * (1 + 5 * t3786) * ((1 + t3786) ** (0.3e1 / 0.2e1)) * np.sqrt(0.21e2) * np.exp((-1*1j) * (4 * phi1 - phi2)) * ((1 - t3786) ** (0.5e1 / 0.2e1))

        if Bindx == 183:
            t3788 = np.cos(phi)
            t3787 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((-2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.3e1) * t3787 ** 2 * (t3788 + 2 + (5 * t3788 - 8) * t3788 ** 2)

        if Bindx == 184:
            t3791 = np.cos(phi)
            tfunc[..., c] = (0.33e2 / 0.32e2*1j) * (3 + 5 * t3791) * np.sqrt((1 + t3791)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (4 * phi1 - 3 * phi2)) * ((1 - t3791) ** (0.7e1 / 0.2e1))

        if Bindx == 185:
            t3792 = np.cos(phi)
            t3793 = t3792 ** 2
            t3795 = t3793 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((-4*1j) * (phi1 - phi2)) * (4 * t3793 - 16 * t3795 + 4 + (14 * t3793 + 5 * t3795 - 11) * t3792)

        if Bindx == 186:
            t3797 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((-1*1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.10e2) * ((1 - t3797) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t3797))

        if Bindx == 187:
            t3798 = np.cos(phi)
            t3801 = 1 + t3798
            t3799 = t3801 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.5e1) * (-1 + t3798) * t3799 ** 2

        if Bindx == 188:
            t3802 = np.cos(phi)
            tfunc[..., c] = (-0.33e2 / 0.32e2*1j) * np.exp((-1*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t3802)) * ((1 + t3802) ** (0.7e1 / 0.2e1)) * (-3 + 5 * t3802)

        if Bindx == 189:
            t3803 = np.cos(phi)
            t3804 = t3803 ** 2
            t3806 = t3804 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-3*1j) * (phi1 + phi2)) * (-78 * t3804 + 81 * t3806 + 13 + (-14 * t3804 + 45 * t3806 - 15) * t3803)

        if Bindx == 190:
            t3808 = np.cos(phi)
            t3809 = t3808 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.6e1) * ((1 + t3808) ** (0.5e1 / 0.2e1)) * (-27 * t3809 - 1 + (15 * t3809 + 13) * t3808) * ((1 - t3808) ** (-0.1e1 / 0.2e1))

        if Bindx == 191:
            t3812 = np.cos(phi)
            t3813 = t3812 ** 2
            t3811 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.42e2) * t3811 ** 2 * (9 * t3813 - 1 + (15 * t3813 - 7) * t3812)

        if Bindx == 192:
            t3815 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * (9 * t3815 ** 2 - 1) * ((1 + t3815) ** (0.3e1 / 0.2e1)) * np.sqrt(0.35e2) * np.exp((-3*1j) * phi1) * ((1 - t3815) ** (0.3e1 / 0.2e1))

        if Bindx == 193:
            t3817 = np.cos(phi)
            t3818 = t3817 ** 2
            t3816 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.42e2) * t3816 ** 2 * (-9 * t3818 + 1 + (15 * t3818 - 7) * t3817)

        if Bindx == 194:
            t3820 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * (1 + (12 + 15 * t3820) * t3820) * np.sqrt((1 + t3820)) * np.sqrt(0.6e1) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t3820) ** (0.5e1 / 0.2e1))

        if Bindx == 195:
            t3821 = np.cos(phi)
            t3822 = t3821 ** 2
            t3824 = t3822 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-3*1j) * (phi1 - phi2)) * (78 * t3822 - 81 * t3824 - 13 + (-14 * t3822 + 45 * t3824 - 15) * t3821)

        if Bindx == 196:
            t3826 = np.cos(phi)
            tfunc[..., c] = (0.33e2 / 0.32e2*1j) * (3 + 5 * t3826) * np.sqrt((1 + t3826)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (3 * phi1 - 4 * phi2)) * ((1 - t3826) ** (0.7e1 / 0.2e1))

        if Bindx == 197:
            t3827 = np.cos(phi)
            t3830 = -1 + t3827
            t3828 = t3830 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.5e1) * t3828 ** 2 * (1 + t3827)

        if Bindx == 198:
            t3831 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.30e2) * ((1 - t3831) ** (0.3e1 / 0.2e1)) * ((1 + t3831) ** (0.7e1 / 0.2e1))

        if Bindx == 199:
            t3833 = np.cos(phi)
            t3832 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((-2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.3e1) * t3832 ** 2 * (t3833 - 2 + (5 * t3833 + 8) * t3833 ** 2)

        if Bindx == 200:
            t3836 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t3836)) * ((1 + t3836) ** (0.5e1 / 0.2e1)) * (1 + (-12 + 15 * t3836) * t3836)

        if Bindx == 201:
            t3837 = np.cos(phi)
            t3838 = t3837 ** 2
            t3840 = t3838 ** 2
            tfunc[..., c] = (0.11e2 / 0.4e1) * np.exp((-2*1j) * (phi1 + phi2)) * (-11 * t3838 + 12 * t3840 + 1 + (-18 * t3838 + 15 * t3840 + 5) * t3837)

        if Bindx == 202:
            t3842 = np.cos(phi)
            t3843 = t3842 ** 2
            tfunc[..., c] = (0.11e2 / 0.8e1*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.7e1) * ((1 + t3842) ** (0.3e1 / 0.2e1)) * (4 * t3842 - 1 + (-24 * t3842 + 6 + 15 * t3843) * t3843) * ((1 - t3842) ** (-0.1e1 / 0.2e1))

        if Bindx == 203:
            t3847 = np.cos(phi)
            t3846 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((-2*1j) * phi1) * np.sqrt(0.210e3) * t3846 ** 2 * t3847 * (3 * t3847 ** 2 - 1)

        if Bindx == 204:
            t3848 = np.cos(phi)
            t3849 = t3848 ** 2
            tfunc[..., c] = (0.11e2 / 0.8e1*1j) * (9 * t3849 - 1 + (15 * t3849 - 3) * t3848) * np.sqrt((1 + t3848)) * np.sqrt(0.7e1) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t3848) ** (0.3e1 / 0.2e1))

        if Bindx == 205:
            t3851 = np.cos(phi)
            t3852 = t3851 ** 2
            t3854 = t3852 ** 2
            tfunc[..., c] = (0.11e2 / 0.4e1) * np.exp((-2*1j) * (phi1 - phi2)) * (11 * t3852 - 12 * t3854 - 1 + (-18 * t3852 + 15 * t3854 + 5) * t3851)

        if Bindx == 206:
            t3856 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * (1 + (12 + 15 * t3856) * t3856) * np.sqrt((1 + t3856)) * np.sqrt(0.6e1) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t3856) ** (0.5e1 / 0.2e1))

        if Bindx == 207:
            t3858 = np.cos(phi)
            t3857 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((-2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.3e1) * t3857 ** 2 * (t3858 + 2 + (5 * t3858 - 8) * t3858 ** 2)

        if Bindx == 208:
            t3861 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.30e2) * ((1 - t3861) ** (0.7e1 / 0.2e1)) * ((1 + t3861) ** (0.3e1 / 0.2e1))

        if Bindx == 209:
            t3864 = np.sin(phi)
            t3862 = t3864 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-1*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.210e3) * t3862 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 210:
            t3865 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.21e2) * ((1 - t3865) ** (0.3e1 / 0.2e1)) * ((1 + t3865) ** (0.5e1 / 0.2e1)) * (-1 + 5 * t3865)

        if Bindx == 211:
            t3867 = np.cos(phi)
            t3868 = t3867 ** 2
            t3866 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.42e2) * t3866 ** 2 * (9 * t3868 - 1 + (15 * t3868 - 7) * t3867)

        if Bindx == 212:
            t3870 = np.cos(phi)
            t3871 = t3870 ** 2
            tfunc[..., c] = (-0.11e2 / 0.8e1*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.7e1) * np.sqrt((1 - t3870)) * ((1 + t3870) ** (0.3e1 / 0.2e1)) * (-9 * t3871 + 1 + (15 * t3871 - 3) * t3870)

        if Bindx == 213:
            t3873 = np.cos(phi)
            t3874 = t3873 ** 2
            t3876 = t3874 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((-1*1j) * (phi1 + phi2)) * (-14 * t3874 + 21 * t3876 + 1 + (-126 * t3874 + 105 * t3876 + 29) * t3873)

        if Bindx == 214:
            t3878 = np.cos(phi)
            t3879 = t3878 ** 2
            t3884 = (-14 + 21 * t3879) * t3879
            t3883 = 1 - t3878
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.30e2) * np.sqrt((1 + t3878)) * (t3884 * t3878 - t3883 - t3884) * (t3883 ** (-0.1e1 / 0.2e1))

        if Bindx == 215:
            t3885 = np.cos(phi)
            t3886 = t3885 ** 2
            t3888 = t3886 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((-1*1j) * (phi1 - phi2)) * (14 * t3886 - 21 * t3888 - 1 + (-126 * t3886 + 105 * t3888 + 29) * t3885)

        if Bindx == 216:
            t3890 = np.cos(phi)
            t3891 = t3890 ** 2
            tfunc[..., c] = (0.11e2 / 0.8e1*1j) * (9 * t3891 - 1 + (15 * t3891 - 3) * t3890) * np.sqrt((1 + t3890)) * np.sqrt(0.7e1) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t3890) ** (0.3e1 / 0.2e1))

        if Bindx == 217:
            t3894 = np.cos(phi)
            t3895 = t3894 ** 2
            t3893 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.42e2) * t3893 ** 2 * (-9 * t3895 + 1 + (15 * t3895 - 7) * t3894)

        if Bindx == 218:
            t3897 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * (1 + 5 * t3897) * ((1 + t3897) ** (0.3e1 / 0.2e1)) * np.sqrt(0.21e2) * np.exp((-1*1j) * (phi1 - 4 * phi2)) * ((1 - t3897) ** (0.5e1 / 0.2e1))

        if Bindx == 219:
            t3900 = np.sin(phi)
            t3898 = t3900 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-1*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.210e3) * t3898 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 220:
            t3901 = np.cos(phi)
            tfunc[..., c] = (-0.33e2 / 0.16e2*1j) * np.exp((-5*1j) * phi2) * np.sqrt(0.7e1) * ((1 - t3901) ** (0.5e1 / 0.2e1)) * ((1 + t3901) ** (0.5e1 / 0.2e1))

        if Bindx == 221:
            t3904 = np.sin(phi)
            t3902 = t3904 ** 2
            tfunc[..., c] = (0.33e2 / 0.16e2) * np.exp((-4*1j) * phi2) * np.sqrt(0.70e2) * t3902 ** 2 * np.cos(phi)

        if Bindx == 222:
            t3905 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.35e2) * ((1 - t3905) ** (0.3e1 / 0.2e1)) * ((1 + t3905) ** (0.3e1 / 0.2e1)) * (9 * t3905 ** 2 - 1)

        if Bindx == 223:
            t3907 = np.cos(phi)
            t3906 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((-2*1j) * phi2) * np.sqrt(0.210e3) * t3906 ** 2 * t3907 * (3 * t3907 ** 2 - 1)

        if Bindx == 224:
            t3908 = np.cos(phi)
            t3909 = t3908 ** 2
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.30e2) * np.sqrt((1 - t3908)) * np.sqrt((1 + t3908)) * (1 + (-14 + 21 * t3909) * t3909)

        if Bindx == 225:
            t3911 = np.cos(phi)
            t3912 = t3911 ** 2
            tfunc[..., c] = 0.11e2 / 0.8e1 * t3911 * (15 + (-70 + 63 * t3912) * t3912)

        if Bindx == 226:
            t3914 = np.cos(phi)
            t3915 = t3914 ** 2
            t3920 = (-14 + 21 * t3915) * t3915
            t3919 = 1 - t3914
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((1j) * phi2) * np.sqrt(0.30e2) * np.sqrt((1 + t3914)) * (t3920 * t3914 - t3919 - t3920) * (t3919 ** (-0.1e1 / 0.2e1))

        if Bindx == 227:
            t3922 = np.cos(phi)
            t3921 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((2*1j) * phi2) * np.sqrt(0.210e3) * t3921 ** 2 * t3922 * (3 * t3922 ** 2 - 1)

        if Bindx == 228:
            t3923 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * (9 * t3923 ** 2 - 1) * ((1 + t3923) ** (0.3e1 / 0.2e1)) * np.sqrt(0.35e2) * np.exp((3*1j) * phi2) * ((1 - t3923) ** (0.3e1 / 0.2e1))

        if Bindx == 229:
            t3926 = np.sin(phi)
            t3924 = t3926 ** 2
            tfunc[..., c] = (0.33e2 / 0.16e2) * np.exp((4*1j) * phi2) * np.sqrt(0.70e2) * t3924 ** 2 * np.cos(phi)

        if Bindx == 230:
            t3927 = np.cos(phi)
            tfunc[..., c] = (-0.33e2 / 0.16e2*1j) * np.exp((5*1j) * phi2) * np.sqrt(0.7e1) * ((1 - t3927) ** (0.5e1 / 0.2e1)) * ((1 + t3927) ** (0.5e1 / 0.2e1))

        if Bindx == 231:
            t3930 = np.sin(phi)
            t3928 = t3930 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((1j) * (phi1 - 5 * phi2)) * np.sqrt(0.210e3) * t3928 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 232:
            t3931 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((1j) * (phi1 - 4 * phi2)) * np.sqrt(0.21e2) * ((1 - t3931) ** (0.5e1 / 0.2e1)) * ((1 + t3931) ** (0.3e1 / 0.2e1)) * (1 + 5 * t3931)

        if Bindx == 233:
            t3933 = np.cos(phi)
            t3934 = t3933 ** 2
            t3932 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.42e2) * t3932 ** 2 * (-9 * t3934 + 1 + (15 * t3934 - 7) * t3933)

        if Bindx == 234:
            t3936 = np.cos(phi)
            t3937 = t3936 ** 2
            tfunc[..., c] = (0.11e2 / 0.8e1*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.7e1) * ((1 - t3936) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t3936)) * (9 * t3937 - 1 + (15 * t3937 - 3) * t3936)

        if Bindx == 235:
            t3939 = np.cos(phi)
            t3940 = t3939 ** 2
            t3942 = t3940 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((1j) * (phi1 - phi2)) * (14 * t3940 - 21 * t3942 - 1 + (-126 * t3940 + 105 * t3942 + 29) * t3939)

        if Bindx == 236:
            t3944 = np.cos(phi)
            t3945 = t3944 ** 2
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((1j) * phi1) * np.sqrt(0.30e2) * np.sqrt((1 - t3944)) * np.sqrt((1 + t3944)) * (1 + (-14 + 21 * t3945) * t3945)

        if Bindx == 237:
            t3947 = np.cos(phi)
            t3948 = t3947 ** 2
            t3950 = t3948 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((1j) * (phi1 + phi2)) * (-14 * t3948 + 21 * t3950 + 1 + (-126 * t3948 + 105 * t3950 + 29) * t3947)

        if Bindx == 238:
            t3952 = np.cos(phi)
            t3953 = t3952 ** 2
            tfunc[..., c] = (0.11e2 / 0.8e1*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.7e1) * ((1 + t3952) ** (0.3e1 / 0.2e1)) * (4 * t3952 - 1 + (-24 * t3952 + 6 + 15 * t3953) * t3953) * ((1 - t3952) ** (-0.1e1 / 0.2e1))

        if Bindx == 239:
            t3957 = np.cos(phi)
            t3958 = t3957 ** 2
            t3956 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.42e2) * t3956 ** 2 * (9 * t3958 - 1 + (15 * t3958 - 7) * t3957)

        if Bindx == 240:
            t3960 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * (-1 + 5 * t3960) * ((1 + t3960) ** (0.5e1 / 0.2e1)) * np.sqrt(0.21e2) * np.exp((1j) * (phi1 + 4 * phi2)) * ((1 - t3960) ** (0.3e1 / 0.2e1))

        if Bindx == 241:
            t3963 = np.sin(phi)
            t3961 = t3963 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((1j) * (phi1 + 5 * phi2)) * np.sqrt(0.210e3) * t3961 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 242:
            t3964 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.30e2) * ((1 - t3964) ** (0.7e1 / 0.2e1)) * ((1 + t3964) ** (0.3e1 / 0.2e1))

        if Bindx == 243:
            t3966 = np.cos(phi)
            t3965 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.3e1) * t3965 ** 2 * (t3966 + 2 + (5 * t3966 - 8) * t3966 ** 2)

        if Bindx == 244:
            t3969 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.6e1) * ((1 - t3969) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t3969)) * (1 + (12 + 15 * t3969) * t3969)

        if Bindx == 245:
            t3970 = np.cos(phi)
            t3971 = t3970 ** 2
            t3973 = t3971 ** 2
            tfunc[..., c] = (0.11e2 / 0.4e1) * np.exp((2*1j) * (phi1 - phi2)) * (11 * t3971 - 12 * t3973 - 1 + (-18 * t3971 + 15 * t3973 + 5) * t3970)

        if Bindx == 246:
            t3975 = np.cos(phi)
            t3976 = t3975 ** 2
            tfunc[..., c] = (0.11e2 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.7e1) * ((1 - t3975) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t3975)) * (9 * t3976 - 1 + (15 * t3976 - 3) * t3975)

        if Bindx == 247:
            t3979 = np.cos(phi)
            t3978 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((2*1j) * phi1) * np.sqrt(0.210e3) * t3978 ** 2 * t3979 * (3 * t3979 ** 2 - 1)

        if Bindx == 248:
            t3980 = np.cos(phi)
            t3981 = t3980 ** 2
            tfunc[..., c] = (-0.11e2 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.7e1) * np.sqrt((1 - t3980)) * ((1 + t3980) ** (0.3e1 / 0.2e1)) * (-9 * t3981 + 1 + (15 * t3981 - 3) * t3980)

        if Bindx == 249:
            t3983 = np.cos(phi)
            t3984 = t3983 ** 2
            t3986 = t3984 ** 2
            tfunc[..., c] = (0.11e2 / 0.4e1) * np.exp((2*1j) * (phi1 + phi2)) * (-11 * t3984 + 12 * t3986 + 1 + (-18 * t3984 + 15 * t3986 + 5) * t3983)

        if Bindx == 250:
            t3988 = np.cos(phi)
            t3989 = t3988 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.6e1) * ((1 + t3988) ** (0.5e1 / 0.2e1)) * (-27 * t3989 - 1 + (15 * t3989 + 13) * t3988) * ((1 - t3988) ** (-0.1e1 / 0.2e1))

        if Bindx == 251:
            t3992 = np.cos(phi)
            t3991 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.3e1) * t3991 ** 2 * (t3992 - 2 + (5 * t3992 + 8) * t3992 ** 2)

        if Bindx == 252:
            t3995 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.30e2) * ((1 - t3995) ** (0.3e1 / 0.2e1)) * ((1 + t3995) ** (0.7e1 / 0.2e1))

        if Bindx == 253:
            t3996 = np.cos(phi)
            t3999 = -1 + t3996
            t3997 = t3999 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.5e1) * t3997 ** 2 * (1 + t3996)

        if Bindx == 254:
            t4000 = np.cos(phi)
            tfunc[..., c] = (0.33e2 / 0.32e2*1j) * np.exp((1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.2e1) * ((1 - t4000) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t4000)) * (3 + 5 * t4000)

        if Bindx == 255:
            t4001 = np.cos(phi)
            t4002 = t4001 ** 2
            t4004 = t4002 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((3*1j) * (phi1 - phi2)) * (78 * t4002 - 81 * t4004 - 13 + (-14 * t4002 + 45 * t4004 - 15) * t4001)

        if Bindx == 256:
            t4006 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.6e1) * ((1 - t4006) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t4006)) * (1 + (12 + 15 * t4006) * t4006)

        if Bindx == 257:
            t4008 = np.cos(phi)
            t4009 = t4008 ** 2
            t4007 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.42e2) * t4007 ** 2 * (-9 * t4009 + 1 + (15 * t4009 - 7) * t4008)

        if Bindx == 258:
            t4011 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.35e2) * ((1 - t4011) ** (0.3e1 / 0.2e1)) * ((1 + t4011) ** (0.3e1 / 0.2e1)) * (9 * t4011 ** 2 - 1)

        if Bindx == 259:
            t4013 = np.cos(phi)
            t4014 = t4013 ** 2
            t4012 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.42e2) * t4012 ** 2 * (9 * t4014 - 1 + (15 * t4014 - 7) * t4013)

        if Bindx == 260:
            t4016 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t4016)) * ((1 + t4016) ** (0.5e1 / 0.2e1)) * (1 + (-12 + 15 * t4016) * t4016)

        if Bindx == 261:
            t4017 = np.cos(phi)
            t4018 = t4017 ** 2
            t4020 = t4018 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((3*1j) * (phi1 + phi2)) * (-78 * t4018 + 81 * t4020 + 13 + (-14 * t4018 + 45 * t4020 - 15) * t4017)

        if Bindx == 262:
            t4022 = np.cos(phi)
            tfunc[..., c] = (0.33e2 / 0.32e2*1j) * np.exp((1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.2e1) * ((1 + t4022) ** (0.7e1 / 0.2e1)) * (3 + (-8 + 5 * t4022) * t4022) * ((1 - t4022) ** (-0.1e1 / 0.2e1))

        if Bindx == 263:
            t4023 = np.cos(phi)
            t4026 = 1 + t4023
            t4024 = t4026 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.5e1) * (-1 + t4023) * t4024 ** 2

        if Bindx == 264:
            t4027 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.10e2) * ((1 - t4027) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t4027))

        if Bindx == 265:
            t4028 = np.cos(phi)
            t4029 = t4028 ** 2
            t4031 = t4029 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((4*1j) * (phi1 - phi2)) * (4 * t4029 - 16 * t4031 + 4 + (14 * t4029 + 5 * t4031 - 11) * t4028)

        if Bindx == 266:
            t4033 = np.cos(phi)
            tfunc[..., c] = (0.33e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.2e1) * ((1 - t4033) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t4033)) * (3 + 5 * t4033)

        if Bindx == 267:
            t4035 = np.cos(phi)
            t4034 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.3e1) * t4034 ** 2 * (t4035 + 2 + (5 * t4035 - 8) * t4035 ** 2)

        if Bindx == 268:
            t4038 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((1j) * (4 * phi1 - phi2)) * np.sqrt(0.21e2) * ((1 - t4038) ** (0.5e1 / 0.2e1)) * ((1 + t4038) ** (0.3e1 / 0.2e1)) * (1 + 5 * t4038)

        if Bindx == 269:
            t4041 = np.sin(phi)
            t4039 = t4041 ** 2
            tfunc[..., c] = (0.33e2 / 0.16e2) * np.exp((4*1j) * phi1) * np.sqrt(0.70e2) * t4039 ** 2 * np.cos(phi)

        if Bindx == 270:
            t4042 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((1j) * (4 * phi1 + phi2)) * np.sqrt(0.21e2) * ((1 - t4042) ** (0.3e1 / 0.2e1)) * ((1 + t4042) ** (0.5e1 / 0.2e1)) * (-1 + 5 * t4042)

        if Bindx == 271:
            t4044 = np.cos(phi)
            t4043 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.3e1) * t4043 ** 2 * (t4044 - 2 + (5 * t4044 + 8) * t4044 ** 2)

        if Bindx == 272:
            t4047 = np.cos(phi)
            tfunc[..., c] = (-0.33e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t4047)) * ((1 + t4047) ** (0.7e1 / 0.2e1)) * (-3 + 5 * t4047)

        if Bindx == 273:
            t4048 = np.cos(phi)
            t4049 = t4048 ** 2
            t4051 = t4049 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((4*1j) * (phi1 + phi2)) * (-4 * t4049 + 16 * t4051 - 4 + (14 * t4049 + 5 * t4051 - 11) * t4048)

        if Bindx == 274:
            t4053 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t4053)) * ((1 + t4053) ** (0.9e1 / 0.2e1))

        if Bindx == 275:
            t4054 = np.cos(phi)
            t4055 = t4054 ** 2
            t4057 = t4055 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((5*1j) * (phi1 - phi2)) * (-10 * t4055 - 5 * t4057 - 1 + (10 * t4055 + t4057 + 5) * t4054)

        if Bindx == 276:
            t4059 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.10e2) * ((1 - t4059) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t4059))

        if Bindx == 277:
            t4060 = np.cos(phi)
            t4063 = -1 + t4060
            t4061 = t4063 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.5e1) * t4061 ** 2 * (1 + t4060)

        if Bindx == 278:
            t4064 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.30e2) * ((1 - t4064) ** (0.7e1 / 0.2e1)) * ((1 + t4064) ** (0.3e1 / 0.2e1))

        if Bindx == 279:
            t4067 = np.sin(phi)
            t4065 = t4067 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((1j) * (5 * phi1 - phi2)) * np.sqrt(0.210e3) * t4065 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 280:
            t4068 = np.cos(phi)
            tfunc[..., c] = (-0.33e2 / 0.16e2*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.7e1) * ((1 - t4068) ** (0.5e1 / 0.2e1)) * ((1 + t4068) ** (0.5e1 / 0.2e1))

        if Bindx == 281:
            t4071 = np.sin(phi)
            t4069 = t4071 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((1j) * (5 * phi1 + phi2)) * np.sqrt(0.210e3) * t4069 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 282:
            t4072 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.30e2) * ((1 - t4072) ** (0.3e1 / 0.2e1)) * ((1 + t4072) ** (0.7e1 / 0.2e1))

        if Bindx == 283:
            t4073 = np.cos(phi)
            t4076 = 1 + t4073
            t4074 = t4076 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.5e1) * (-1 + t4073) * t4074 ** 2

        if Bindx == 284:
            t4077 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t4077)) * ((1 + t4077) ** (0.9e1 / 0.2e1))

        if Bindx == 285:
            t4078 = np.cos(phi)
            t4079 = t4078 ** 2
            t4083 = 10 * t4079
            t4081 = t4079 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((5*1j) * (phi1 + phi2)) * (5 * t4081 + t4083 + 1 + (t4081 + t4083 + 5) * t4078)

        if Bindx == 286:
            t4084 = np.cos(phi)
            t4090 = 6 * t4084
            t4085 = t4084 ** 2
            t4086 = t4084 * t4085
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-6*1j) * (phi1 + phi2)) * (t4090 + 1 + (20 + t4086) * t4086 + (15 + (t4090 + 15) * t4085) * t4085)

        if Bindx == 287:
            t4091 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.3e1) * ((1 + t4091) ** (0.11e2 / 0.2e1)) * np.sqrt((1 - t4091))

        if Bindx == 288:
            t4092 = np.cos(phi)
            t4096 = 1 + t4092
            t4093 = t4096 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.66e2) * (-1 + t4092) * t4096 * t4093 ** 2

        if Bindx == 289:
            t4097 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-3*1j) * (2 * phi1 + phi2)) * np.sqrt(0.55e2) * ((1 - t4097) ** (0.3e1 / 0.2e1)) * ((1 + t4097) ** (0.9e1 / 0.2e1))

        if Bindx == 290:
            t4099 = np.cos(phi)
            t4102 = 1 + t4099
            t4100 = t4102 ** 2
            t4098 = -1 + t4099
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.55e2) * t4098 ** 2 * t4100 ** 2

        if Bindx == 291:
            t4103 = np.cos(phi)
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((-1*1j) * (6 * phi1 + phi2)) * np.sqrt(0.22e2) * ((1 - t4103) ** (0.5e1 / 0.2e1)) * ((1 + t4103) ** (0.7e1 / 0.2e1))

        if Bindx == 292:
            t4107 = np.sin(phi)
            t4104 = t4107 ** 2
            t4105 = t4107 * t4104
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-6*1j) * phi1) * np.sqrt(0.231e3) * t4105 ** 2

        if Bindx == 293:
            t4108 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2*1j) * np.exp((-1*1j) * (6 * phi1 - phi2)) * np.sqrt(0.22e2) * ((1 - t4108) ** (0.7e1 / 0.2e1)) * ((1 + t4108) ** (0.5e1 / 0.2e1))

        if Bindx == 294:
            t4110 = np.cos(phi)
            t4113 = -1 + t4110
            t4111 = t4113 ** 2
            t4109 = 1 + t4110
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.55e2) * t4111 ** 2 * t4109 ** 2

        if Bindx == 295:
            t4114 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((-3*1j) * (2 * phi1 - phi2)) * np.sqrt(0.55e2) * ((1 - t4114) ** (0.9e1 / 0.2e1)) * ((1 + t4114) ** (0.3e1 / 0.2e1))

        if Bindx == 296:
            t4115 = np.cos(phi)
            t4119 = -1 + t4115
            t4116 = t4119 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.66e2) * t4119 * t4116 ** 2 * (1 + t4115)

        if Bindx == 297:
            t4120 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (6 * phi1 - 5 * phi2)) * np.sqrt(0.3e1) * ((1 - t4120) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t4120))

        if Bindx == 298:
            t4121 = np.cos(phi)
            t4127 = -6 * t4121
            t4122 = t4121 ** 2
            t4123 = t4121 * t4122
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-6*1j) * (phi1 - phi2)) * (t4127 + 1 + (-20 + t4123) * t4123 + (15 + (t4127 + 15) * t4122) * t4122)

        if Bindx == 299:
            t4128 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.3e1) * np.sqrt((1 - t4128)) * ((1 + t4128) ** (0.11e2 / 0.2e1))

        if Bindx == 300:
            t4129 = np.cos(phi)
            t4130 = t4129 ** 2
            t4132 = t4130 ** 2
            t4131 = t4129 * t4130
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-5*1j) * (phi1 + phi2)) * (-20 * t4130 + 35 * t4132 - 5 + (10 + 6 * t4131) * t4131 + (25 * t4132 - 19) * t4129)

        if Bindx == 301:
            t4135 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.22e2) * ((1 + t4135) ** (0.9e1 / 0.2e1)) * (2 + (-5 + 3 * t4135) * t4135) * ((1 - t4135) ** (-0.1e1 / 0.2e1))

        if Bindx == 302:
            t4137 = np.cos(phi)
            t4138 = t4137 ** 2
            t4136 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.165e3) * t4136 ** 2 * (-t4137 - 1 + (5 * t4137 + 3 + 2 * t4138) * t4138)

        if Bindx == 303:
            t4141 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (-1 + 3 * t4141) * ((1 + t4141) ** (0.7e1 / 0.2e1)) * np.sqrt(0.165e3) * np.exp((-1*1j) * (5 * phi1 + 2 * phi2)) * ((1 - t4141) ** (0.3e1 / 0.2e1))

        if Bindx == 304:
            t4145 = np.sin(phi)
            t4143 = t4145 ** 2
            t4142 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 + phi2)) * np.sqrt(0.66e2) * t4143 ** 2 * (-1 + (5 + 6 * t4142) * t4142)

        if Bindx == 305:
            t4146 = np.cos(phi)
            t4147 = t4146 ** 2
            tfunc[..., c] = (0.39e2 / 0.16e2*1j) * t4146 * (-3 * t4147 - 1 + (t4147 + 3) * t4146) * ((1 + t4146) ** (0.5e1 / 0.2e1)) * np.sqrt(0.77e2) * np.exp((-5*1j) * phi1) * ((1 - t4146) ** (-0.1e1 / 0.2e1))

        if Bindx == 306:
            t4152 = np.sin(phi)
            t4150 = t4152 ** 2
            t4149 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 - phi2)) * np.sqrt(0.66e2) * t4150 ** 2 * (-1 + (-5 + 6 * t4149) * t4149)

        if Bindx == 307:
            t4153 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (1 + 3 * t4153) * ((1 + t4153) ** (0.3e1 / 0.2e1)) * np.sqrt(0.165e3) * np.exp((-1*1j) * (5 * phi1 - 2 * phi2)) * ((1 - t4153) ** (0.7e1 / 0.2e1))

        if Bindx == 308:
            t4155 = np.cos(phi)
            t4156 = t4155 ** 2
            t4154 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.165e3) * t4154 ** 2 * (t4155 - 1 + (-5 * t4155 + 3 + 2 * t4156) * t4156)

        if Bindx == 309:
            t4159 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * (2 + 3 * t4159) * np.sqrt((1 + t4159)) * np.sqrt(0.22e2) * np.exp((-1*1j) * (5 * phi1 - 4 * phi2)) * ((1 - t4159) ** (0.9e1 / 0.2e1))

        if Bindx == 310:
            t4160 = np.cos(phi)
            t4161 = t4160 ** 2
            t4163 = t4161 ** 2
            t4162 = t4160 * t4161
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-5*1j) * (phi1 - phi2)) * (-20 * t4161 + 35 * t4163 - 5 + (-10 + 6 * t4162) * t4162 + (-25 * t4163 + 19) * t4160)

        if Bindx == 311:
            t4166 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (5 * phi1 - 6 * phi2)) * np.sqrt(0.3e1) * ((1 - t4166) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t4166))

        if Bindx == 312:
            t4167 = np.cos(phi)
            t4171 = 1 + t4167
            t4168 = t4171 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.66e2) * (-1 + t4167) * t4171 * t4168 ** 2

        if Bindx == 313:
            t4172 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.22e2) * np.sqrt((1 - t4172)) * ((1 + t4172) ** (0.9e1 / 0.2e1)) * (-2 + 3 * t4172)

        if Bindx == 314:
            t4173 = np.cos(phi)
            t4174 = t4173 ** 2
            t4176 = t4174 ** 2
            t4175 = t4173 * t4174
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-4*1j) * (phi1 + phi2)) * (-65 * t4174 + 35 * t4176 + 13 + (-80 + 33 * t4175) * t4175 + (88 * t4176 + 8) * t4173)

        if Bindx == 315:
            t4179 = np.cos(phi)
            t4180 = t4179 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.30e2) * ((1 + t4179) ** (0.7e1 / 0.2e1)) * (-22 * t4180 - 2 + (11 * t4180 + 13) * t4179) * ((1 - t4179) ** (-0.1e1 / 0.2e1))

        if Bindx == 316:
            t4183 = np.cos(phi)
            t4184 = t4183 ** 2
            t4182 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.30e2) * t4182 ** 2 * (-20 * t4183 + 1 + (44 * t4183 - 10 + 33 * t4184) * t4184)

        if Bindx == 317:
            t4187 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * (-2 + (-11 + 33 * t4187) * t4187) * ((1 + t4187) ** (0.5e1 / 0.2e1)) * np.sqrt(0.3e1) * np.exp((-1*1j) * (4 * phi1 + phi2)) * ((1 - t4187) ** (0.3e1 / 0.2e1))

        if Bindx == 318:
            t4191 = np.sin(phi)
            t4189 = t4191 ** 2
            t4188 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2) * np.exp((-4*1j) * phi1) * np.sqrt(0.14e2) * t4189 ** 2 * (11 * t4188 ** 2 - 1)

        if Bindx == 319:
            t4192 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * (-2 + (11 + 33 * t4192) * t4192) * ((1 + t4192) ** (0.3e1 / 0.2e1)) * np.sqrt(0.3e1) * np.exp((-1*1j) * (4 * phi1 - phi2)) * ((1 - t4192) ** (0.5e1 / 0.2e1))

        if Bindx == 320:
            t4194 = np.cos(phi)
            t4195 = t4194 ** 2
            t4193 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.30e2) * t4193 ** 2 * (20 * t4194 + 1 + (-44 * t4194 - 10 + 33 * t4195) * t4195)

        if Bindx == 321:
            t4198 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (2 + (11 + 11 * t4198) * t4198) * np.sqrt((1 + t4198)) * np.sqrt(0.30e2) * np.exp((-1*1j) * (4 * phi1 - 3 * phi2)) * ((1 - t4198) ** (0.7e1 / 0.2e1))

        if Bindx == 322:
            t4199 = np.cos(phi)
            t4200 = t4199 ** 2
            t4202 = t4200 ** 2
            t4201 = t4199 * t4200
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-4*1j) * (phi1 - phi2)) * (-65 * t4200 + 35 * t4202 + 13 + (80 + 33 * t4201) * t4201 + (-88 * t4202 - 8) * t4199)

        if Bindx == 323:
            t4205 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * (2 + 3 * t4205) * np.sqrt((1 + t4205)) * np.sqrt(0.22e2) * np.exp((-1*1j) * (4 * phi1 - 5 * phi2)) * ((1 - t4205) ** (0.9e1 / 0.2e1))

        if Bindx == 324:
            t4206 = np.cos(phi)
            t4210 = -1 + t4206
            t4207 = t4210 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.66e2) * t4210 * t4207 ** 2 * (1 + t4206)

        if Bindx == 325:
            t4211 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-3*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.55e2) * ((1 - t4211) ** (0.3e1 / 0.2e1)) * ((1 + t4211) ** (0.9e1 / 0.2e1))

        if Bindx == 326:
            t4212 = np.cos(phi)
            t4215 = 1 + t4212
            t4213 = t4215 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.165e3) * (-1 + t4212) * t4213 ** 2 * (2 * t4212 - 1)

        if Bindx == 327:
            t4216 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.30e2) * np.sqrt((1 - t4216)) * ((1 + t4216) ** (0.7e1 / 0.2e1)) * (2 + (-11 + 11 * t4216) * t4216)

        if Bindx == 328:
            t4217 = np.cos(phi)
            t4218 = t4217 ** 2
            t4220 = t4218 ** 2
            t4219 = t4217 * t4218
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-3*1j) * (phi1 + phi2)) * (12 * t4218 - 105 * t4220 - 1 + (-206 + 110 * t4219) * t4219 + (165 * t4220 + 57) * t4217)

        if Bindx == 329:
            t4223 = np.cos(phi)
            t4224 = t4223 ** 2
            tfunc[..., c] = (0.39e2 / 0.32e2*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * ((1 + t4223) ** (0.5e1 / 0.2e1)) * (-2 * t4223 - 3 + (-110 * t4223 + 60 + 55 * t4224) * t4224) * ((1 - t4223) ** (-0.1e1 / 0.2e1))

        if Bindx == 330:
            t4228 = np.cos(phi)
            t4229 = t4228 ** 2
            t4227 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.10e2) * t4227 ** 2 * (-3 * t4228 + 1 + (11 * t4228 - 15 + 22 * t4229) * t4229)

        if Bindx == 331:
            t4232 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * (11 * t4232 ** 2 - 3) * t4232 * ((1 + t4232) ** (0.3e1 / 0.2e1)) * np.sqrt(0.105e3) * np.exp((-3*1j) * phi1) * ((1 - t4232) ** (0.3e1 / 0.2e1))

        if Bindx == 332:
            t4234 = np.cos(phi)
            t4235 = t4234 ** 2
            t4233 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.10e2) * t4233 ** 2 * (3 * t4234 + 1 + (-11 * t4234 - 15 + 22 * t4235) * t4235)

        if Bindx == 333:
            t4238 = np.cos(phi)
            t4241 = 55 * t4238 ** 2
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * (t4241 - 3 + (t4241 + 5) * t4238) * np.sqrt((1 + t4238)) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t4238) ** (0.5e1 / 0.2e1))

        if Bindx == 334:
            t4242 = np.cos(phi)
            t4243 = t4242 ** 2
            t4245 = t4243 ** 2
            t4244 = t4242 * t4243
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-3*1j) * (phi1 - phi2)) * (12 * t4243 - 105 * t4245 - 1 + (206 + 110 * t4244) * t4244 + (-165 * t4245 - 57) * t4242)

        if Bindx == 335:
            t4248 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (2 + (11 + 11 * t4248) * t4248) * np.sqrt((1 + t4248)) * np.sqrt(0.30e2) * np.exp((-1*1j) * (3 * phi1 - 4 * phi2)) * ((1 - t4248) ** (0.7e1 / 0.2e1))

        if Bindx == 336:
            t4250 = np.cos(phi)
            t4251 = t4250 ** 2
            t4249 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.165e3) * t4249 ** 2 * (t4250 - 1 + (-5 * t4250 + 3 + 2 * t4251) * t4251)

        if Bindx == 337:
            t4254 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((-3*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.55e2) * ((1 - t4254) ** (0.9e1 / 0.2e1)) * ((1 + t4254) ** (0.3e1 / 0.2e1))

        if Bindx == 338:
            t4256 = np.cos(phi)
            t4259 = 1 + t4256
            t4257 = t4259 ** 2
            t4255 = -1 + t4256
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.55e2) * t4255 ** 2 * t4257 ** 2

        if Bindx == 339:
            t4260 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.165e3) * ((1 - t4260) ** (0.3e1 / 0.2e1)) * ((1 + t4260) ** (0.7e1 / 0.2e1)) * (-1 + 3 * t4260)

        if Bindx == 340:
            t4262 = np.cos(phi)
            t4263 = t4262 ** 2
            t4261 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.30e2) * t4261 ** 2 * (-20 * t4262 + 1 + (44 * t4262 - 10 + 33 * t4263) * t4263)

        if Bindx == 341:
            t4266 = np.cos(phi)
            t4267 = t4266 ** 2
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt((1 - t4266)) * ((1 + t4266) ** (0.5e1 / 0.2e1)) * (-55 * t4267 + 3 + (55 * t4267 + 5) * t4266)

        if Bindx == 342:
            t4269 = np.cos(phi)
            t4270 = t4269 ** 2
            t4272 = t4270 ** 2
            t4271 = t4269 * t4270
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + phi2)) * (289 * t4270 - 735 * t4272 - 17 + (-372 + 495 * t4271) * t4271 + (330 * t4272 + 74) * t4269)

        if Bindx == 343:
            t4275 = np.cos(phi)
            t4276 = t4275 ** 2
            t4278 = t4276 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.10e2) * ((1 + t4275) ** (0.3e1 / 0.2e1)) * (54 * t4276 - 165 * t4278 - 1 + (30 * t4276 + 99 * t4278 - 17) * t4275) * ((1 - t4275) ** (-0.1e1 / 0.2e1))

        if Bindx == 344:
            t4281 = np.cos(phi)
            t4282 = t4281 ** 2
            t4280 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-2*1j) * phi1) * np.sqrt(0.105e3) * t4280 ** 2 * (1 + (-18 + 33 * t4282) * t4282)

        if Bindx == 345:
            t4284 = np.cos(phi)
            t4285 = t4284 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (-18 * t4284 + 1 + (66 * t4284 - 36 + 99 * t4285) * t4285) * np.sqrt((1 + t4284)) * np.sqrt(0.10e2) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t4284) ** (0.3e1 / 0.2e1))

        if Bindx == 346:
            t4288 = np.cos(phi)
            t4289 = t4288 ** 2
            t4291 = t4289 ** 2
            t4290 = t4288 * t4289
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - phi2)) * (289 * t4289 - 735 * t4291 - 17 + (372 + 495 * t4290) * t4290 + (-330 * t4291 - 74) * t4288)

        if Bindx == 347:
            t4294 = np.cos(phi)
            t4297 = 55 * t4294 ** 2
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * (t4297 - 3 + (t4297 + 5) * t4294) * np.sqrt((1 + t4294)) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t4294) ** (0.5e1 / 0.2e1))

        if Bindx == 348:
            t4299 = np.cos(phi)
            t4300 = t4299 ** 2
            t4298 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.30e2) * t4298 ** 2 * (20 * t4299 + 1 + (-44 * t4299 - 10 + 33 * t4300) * t4300)

        if Bindx == 349:
            t4303 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (1 + 3 * t4303) * ((1 + t4303) ** (0.3e1 / 0.2e1)) * np.sqrt(0.165e3) * np.exp((-1*1j) * (2 * phi1 - 5 * phi2)) * ((1 - t4303) ** (0.7e1 / 0.2e1))

        if Bindx == 350:
            t4305 = np.cos(phi)
            t4308 = -1 + t4305
            t4306 = t4308 ** 2
            t4304 = 1 + t4305
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.55e2) * t4306 ** 2 * t4304 ** 2

        if Bindx == 351:
            t4309 = np.cos(phi)
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((-1*1j) * (phi1 + 6 * phi2)) * np.sqrt(0.22e2) * ((1 - t4309) ** (0.5e1 / 0.2e1)) * ((1 + t4309) ** (0.7e1 / 0.2e1))

        if Bindx == 352:
            t4313 = np.sin(phi)
            t4311 = t4313 ** 2
            t4310 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-1*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.66e2) * t4311 ** 2 * (-1 + (5 + 6 * t4310) * t4310)

        if Bindx == 353:
            t4314 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * np.exp((-1*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.3e1) * ((1 - t4314) ** (0.3e1 / 0.2e1)) * ((1 + t4314) ** (0.5e1 / 0.2e1)) * (-2 + (-11 + 33 * t4314) * t4314)

        if Bindx == 354:
            t4316 = np.cos(phi)
            t4317 = t4316 ** 2
            t4315 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.10e2) * t4315 ** 2 * (-3 * t4316 + 1 + (11 * t4316 - 15 + 22 * t4317) * t4317)

        if Bindx == 355:
            t4320 = np.cos(phi)
            t4321 = t4320 ** 2
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t4320)) * ((1 + t4320) ** (0.3e1 / 0.2e1)) * (18 * t4320 + 1 + (-66 * t4320 - 36 + 99 * t4321) * t4321)

        if Bindx == 356:
            t4324 = np.cos(phi)
            t4325 = t4324 ** 2
            t4327 = t4325 ** 2
            t4326 = t4324 * t4325
            tfunc[..., c] = (0.13e2 / 0.16e2) * np.exp((-1*1j) * (phi1 + phi2)) * (100 * t4325 - 285 * t4327 - 5 + (-30 + 198 * t4326) * t4326 + (33 * t4327 + 5) * t4324)

        if Bindx == 357:
            t4330 = np.cos(phi)
            t4331 = t4330 ** 2
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.42e2) * np.sqrt((1 + t4330)) * t4330 * np.sqrt((1 - t4330)) * (5 + (-30 + 33 * t4331) * t4331)

        if Bindx == 358:
            t4337 = np.cos(phi)
            t4338 = t4337 ** 2
            t4340 = t4338 ** 2
            t4339 = t4337 * t4338
            tfunc[..., c] = (0.13e2 / 0.16e2) * np.exp((-1*1j) * (phi1 - phi2)) * (100 * t4338 - 285 * t4340 - 5 + (30 + 198 * t4339) * t4339 + (-33 * t4340 - 5) * t4337)

        if Bindx == 359:
            t4343 = np.cos(phi)
            t4344 = t4343 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (-18 * t4343 + 1 + (66 * t4343 - 36 + 99 * t4344) * t4344) * np.sqrt((1 + t4343)) * np.sqrt(0.10e2) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t4343) ** (0.3e1 / 0.2e1))

        if Bindx == 360:
            t4348 = np.cos(phi)
            t4349 = t4348 ** 2
            t4347 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.10e2) * t4347 ** 2 * (3 * t4348 + 1 + (-11 * t4348 - 15 + 22 * t4349) * t4349)

        if Bindx == 361:
            t4352 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * (-2 + (11 + 33 * t4352) * t4352) * ((1 + t4352) ** (0.3e1 / 0.2e1)) * np.sqrt(0.3e1) * np.exp((-1*1j) * (phi1 - 4 * phi2)) * ((1 - t4352) ** (0.5e1 / 0.2e1))

        if Bindx == 362:
            t4356 = np.sin(phi)
            t4354 = t4356 ** 2
            t4353 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-1*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.66e2) * t4354 ** 2 * (-1 + (-5 + 6 * t4353) * t4353)

        if Bindx == 363:
            t4357 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2*1j) * np.exp((-1*1j) * (phi1 - 6 * phi2)) * np.sqrt(0.22e2) * ((1 - t4357) ** (0.7e1 / 0.2e1)) * ((1 + t4357) ** (0.5e1 / 0.2e1))

        if Bindx == 364:
            t4361 = np.sin(phi)
            t4358 = t4361 ** 2
            t4359 = t4361 * t4358
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-6*1j) * phi2) * np.sqrt(0.231e3) * t4359 ** 2

        if Bindx == 365:
            t4362 = np.cos(phi)
            tfunc[..., c] = (-0.39e2 / 0.16e2*1j) * np.exp((-5*1j) * phi2) * np.sqrt(0.77e2) * ((1 - t4362) ** (0.5e1 / 0.2e1)) * ((1 + t4362) ** (0.5e1 / 0.2e1)) * t4362

        if Bindx == 366:
            t4366 = np.sin(phi)
            t4364 = t4366 ** 2
            t4363 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2) * np.exp((-4*1j) * phi2) * np.sqrt(0.14e2) * t4364 ** 2 * (11 * t4363 ** 2 - 1)

        if Bindx == 367:
            t4367 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.105e3) * ((1 - t4367) ** (0.3e1 / 0.2e1)) * ((1 + t4367) ** (0.3e1 / 0.2e1)) * t4367 * (11 * t4367 ** 2 - 3)

        if Bindx == 368:
            t4369 = np.cos(phi)
            t4370 = t4369 ** 2
            t4368 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-2*1j) * phi2) * np.sqrt(0.105e3) * t4368 ** 2 * (1 + (-18 + 33 * t4370) * t4370)

        if Bindx == 369:
            t4372 = np.cos(phi)
            t4373 = t4372 ** 2
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.42e2) * np.sqrt((1 - t4372)) * np.sqrt((1 + t4372)) * t4372 * (5 + (-30 + 33 * t4373) * t4373)

        if Bindx == 370:
            t4375 = np.cos(phi)
            t4376 = t4375 ** 2
            t4377 = t4376 ** 2
            tfunc[..., c] = -0.4095e4 / 0.16e2 * t4377 - 0.65e2 / 0.16e2 + (0.3003e4 / 0.16e2 * t4377 + 0.1365e4 / 0.16e2) * t4376

        if Bindx == 371:
            t4379 = np.cos(phi)
            t4380 = t4379 ** 2
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * np.exp((1j) * phi2) * np.sqrt(0.42e2) * np.sqrt((1 + t4379)) * t4379 * np.sqrt((1 - t4379)) * (5 + (-30 + 33 * t4380) * t4380)

        if Bindx == 372:
            t4387 = np.cos(phi)
            t4388 = t4387 ** 2
            t4386 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((2*1j) * phi2) * np.sqrt(0.105e3) * t4386 ** 2 * (1 + (-18 + 33 * t4388) * t4388)

        if Bindx == 373:
            t4390 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * (11 * t4390 ** 2 - 3) * t4390 * ((1 + t4390) ** (0.3e1 / 0.2e1)) * np.sqrt(0.105e3) * np.exp((3*1j) * phi2) * ((1 - t4390) ** (0.3e1 / 0.2e1))

        if Bindx == 374:
            t4394 = np.sin(phi)
            t4392 = t4394 ** 2
            t4391 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2) * np.exp((4*1j) * phi2) * np.sqrt(0.14e2) * t4392 ** 2 * (11 * t4391 ** 2 - 1)

        if Bindx == 375:
            t4395 = np.cos(phi)
            t4396 = t4395 ** 2
            tfunc[..., c] = (0.39e2 / 0.16e2*1j) * t4395 * ((1 + t4395) ** (0.5e1 / 0.2e1)) * (-3 * t4396 - 1 + (t4396 + 3) * t4395) * np.sqrt(0.77e2) * np.exp((5*1j) * phi2) * ((1 - t4395) ** (-0.1e1 / 0.2e1))

        if Bindx == 376:
            t4401 = np.sin(phi)
            t4398 = t4401 ** 2
            t4399 = t4401 * t4398
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((6*1j) * phi2) * np.sqrt(0.231e3) * t4399 ** 2

        if Bindx == 377:
            t4402 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2*1j) * np.exp((1j) * (phi1 - 6 * phi2)) * np.sqrt(0.22e2) * ((1 - t4402) ** (0.7e1 / 0.2e1)) * ((1 + t4402) ** (0.5e1 / 0.2e1))

        if Bindx == 378:
            t4406 = np.sin(phi)
            t4404 = t4406 ** 2
            t4403 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((1j) * (phi1 - 5 * phi2)) * np.sqrt(0.66e2) * t4404 ** 2 * (-1 + (-5 + 6 * t4403) * t4403)

        if Bindx == 379:
            t4407 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * np.exp((1j) * (phi1 - 4 * phi2)) * np.sqrt(0.3e1) * ((1 - t4407) ** (0.5e1 / 0.2e1)) * ((1 + t4407) ** (0.3e1 / 0.2e1)) * (-2 + (11 + 33 * t4407) * t4407)

        if Bindx == 380:
            t4409 = np.cos(phi)
            t4410 = t4409 ** 2
            t4408 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.10e2) * t4408 ** 2 * (3 * t4409 + 1 + (-11 * t4409 - 15 + 22 * t4410) * t4410)

        if Bindx == 381:
            t4413 = np.cos(phi)
            t4414 = t4413 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.10e2) * ((1 - t4413) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t4413)) * (-18 * t4413 + 1 + (66 * t4413 - 36 + 99 * t4414) * t4414)

        if Bindx == 382:
            t4417 = np.cos(phi)
            t4418 = t4417 ** 2
            t4420 = t4418 ** 2
            t4419 = t4417 * t4418
            tfunc[..., c] = (0.13e2 / 0.16e2) * np.exp((1j) * (phi1 - phi2)) * (100 * t4418 - 285 * t4420 - 5 + (30 + 198 * t4419) * t4419 + (-33 * t4420 - 5) * t4417)

        if Bindx == 383:
            t4423 = np.cos(phi)
            t4424 = t4423 ** 2
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * np.exp((1j) * phi1) * np.sqrt(0.42e2) * np.sqrt((1 - t4423)) * np.sqrt((1 + t4423)) * t4423 * (5 + (-30 + 33 * t4424) * t4424)

        if Bindx == 384:
            t4426 = np.cos(phi)
            t4427 = t4426 ** 2
            t4429 = t4427 ** 2
            t4428 = t4426 * t4427
            tfunc[..., c] = (0.13e2 / 0.16e2) * np.exp((1j) * (phi1 + phi2)) * (100 * t4427 - 285 * t4429 - 5 + (-30 + 198 * t4428) * t4428 + (33 * t4429 + 5) * t4426)

        if Bindx == 385:
            t4432 = np.cos(phi)
            t4433 = t4432 ** 2
            t4435 = t4433 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.10e2) * ((1 + t4432) ** (0.3e1 / 0.2e1)) * (54 * t4433 - 165 * t4435 - 1 + (30 * t4433 + 99 * t4435 - 17) * t4432) * ((1 - t4432) ** (-0.1e1 / 0.2e1))

        if Bindx == 386:
            t4438 = np.cos(phi)
            t4439 = t4438 ** 2
            t4437 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.10e2) * t4437 ** 2 * (-3 * t4438 + 1 + (11 * t4438 - 15 + 22 * t4439) * t4439)

        if Bindx == 387:
            t4442 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * (-2 + (-11 + 33 * t4442) * t4442) * ((1 + t4442) ** (0.5e1 / 0.2e1)) * np.sqrt(0.3e1) * np.exp((1j) * (phi1 + 4 * phi2)) * ((1 - t4442) ** (0.3e1 / 0.2e1))

        if Bindx == 388:
            t4446 = np.sin(phi)
            t4444 = t4446 ** 2
            t4443 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((1j) * (phi1 + 5 * phi2)) * np.sqrt(0.66e2) * t4444 ** 2 * (-1 + (5 + 6 * t4443) * t4443)

        if Bindx == 389:
            t4447 = np.cos(phi)
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((1j) * (phi1 + 6 * phi2)) * np.sqrt(0.22e2) * ((1 - t4447) ** (0.5e1 / 0.2e1)) * ((1 + t4447) ** (0.7e1 / 0.2e1))

        if Bindx == 390:
            t4449 = np.cos(phi)
            t4452 = -1 + t4449
            t4450 = t4452 ** 2
            t4448 = 1 + t4449
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.55e2) * t4450 ** 2 * t4448 ** 2

        if Bindx == 391:
            t4453 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.165e3) * ((1 - t4453) ** (0.7e1 / 0.2e1)) * ((1 + t4453) ** (0.3e1 / 0.2e1)) * (1 + 3 * t4453)

        if Bindx == 392:
            t4455 = np.cos(phi)
            t4456 = t4455 ** 2
            t4454 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.30e2) * t4454 ** 2 * (20 * t4455 + 1 + (-44 * t4455 - 10 + 33 * t4456) * t4456)

        if Bindx == 393:
            t4459 = np.cos(phi)
            t4462 = 55 * t4459 ** 2
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * ((1 - t4459) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t4459)) * (t4462 - 3 + (t4462 + 5) * t4459)

        if Bindx == 394:
            t4463 = np.cos(phi)
            t4464 = t4463 ** 2
            t4466 = t4464 ** 2
            t4465 = t4463 * t4464
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((2*1j) * (phi1 - phi2)) * (289 * t4464 - 735 * t4466 - 17 + (372 + 495 * t4465) * t4465 + (-330 * t4466 - 74) * t4463)

        if Bindx == 395:
            t4469 = np.cos(phi)
            t4470 = t4469 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.10e2) * ((1 - t4469) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t4469)) * (-18 * t4469 + 1 + (66 * t4469 - 36 + 99 * t4470) * t4470)

        if Bindx == 396:
            t4474 = np.cos(phi)
            t4475 = t4474 ** 2
            t4473 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((2*1j) * phi1) * np.sqrt(0.105e3) * t4473 ** 2 * (1 + (-18 + 33 * t4475) * t4475)

        if Bindx == 397:
            t4477 = np.cos(phi)
            t4478 = t4477 ** 2
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t4477)) * ((1 + t4477) ** (0.3e1 / 0.2e1)) * (18 * t4477 + 1 + (-66 * t4477 - 36 + 99 * t4478) * t4478)

        if Bindx == 398:
            t4481 = np.cos(phi)
            t4482 = t4481 ** 2
            t4484 = t4482 ** 2
            t4483 = t4481 * t4482
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((2*1j) * (phi1 + phi2)) * (289 * t4482 - 735 * t4484 - 17 + (-372 + 495 * t4483) * t4483 + (330 * t4484 + 74) * t4481)

        if Bindx == 399:
            t4487 = np.cos(phi)
            t4488 = t4487 ** 2
            tfunc[..., c] = (0.39e2 / 0.32e2*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * ((1 + t4487) ** (0.5e1 / 0.2e1)) * (-2 * t4487 - 3 + (-110 * t4487 + 60 + 55 * t4488) * t4488) * ((1 - t4487) ** (-0.1e1 / 0.2e1))

        if Bindx == 400:
            t4492 = np.cos(phi)
            t4493 = t4492 ** 2
            t4491 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.30e2) * t4491 ** 2 * (-20 * t4492 + 1 + (44 * t4492 - 10 + 33 * t4493) * t4493)

        if Bindx == 401:
            t4496 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (-1 + 3 * t4496) * ((1 + t4496) ** (0.7e1 / 0.2e1)) * np.sqrt(0.165e3) * np.exp((1j) * (2 * phi1 + 5 * phi2)) * ((1 - t4496) ** (0.3e1 / 0.2e1))

        if Bindx == 402:
            t4498 = np.cos(phi)
            t4501 = 1 + t4498
            t4499 = t4501 ** 2
            t4497 = -1 + t4498
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.55e2) * t4497 ** 2 * t4499 ** 2

        if Bindx == 403:
            t4502 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((3*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.55e2) * ((1 - t4502) ** (0.9e1 / 0.2e1)) * ((1 + t4502) ** (0.3e1 / 0.2e1))

        if Bindx == 404:
            t4503 = np.cos(phi)
            t4506 = -1 + t4503
            t4504 = t4506 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.165e3) * t4504 ** 2 * (1 + t4503) * (1 + 2 * t4503)

        if Bindx == 405:
            t4507 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.30e2) * ((1 - t4507) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t4507)) * (2 + (11 + 11 * t4507) * t4507)

        if Bindx == 406:
            t4508 = np.cos(phi)
            t4509 = t4508 ** 2
            t4511 = t4509 ** 2
            t4510 = t4508 * t4509
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((3*1j) * (phi1 - phi2)) * (12 * t4509 - 105 * t4511 - 1 + (206 + 110 * t4510) * t4510 + (-165 * t4511 - 57) * t4508)

        if Bindx == 407:
            t4514 = np.cos(phi)
            t4517 = 55 * t4514 ** 2
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * ((1 - t4514) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t4514)) * (t4517 - 3 + (t4517 + 5) * t4514)

        if Bindx == 408:
            t4519 = np.cos(phi)
            t4520 = t4519 ** 2
            t4518 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.10e2) * t4518 ** 2 * (3 * t4519 + 1 + (-11 * t4519 - 15 + 22 * t4520) * t4520)

        if Bindx == 409:
            t4523 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.105e3) * ((1 - t4523) ** (0.3e1 / 0.2e1)) * ((1 + t4523) ** (0.3e1 / 0.2e1)) * t4523 * (11 * t4523 ** 2 - 3)

        if Bindx == 410:
            t4525 = np.cos(phi)
            t4526 = t4525 ** 2
            t4524 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.10e2) * t4524 ** 2 * (-3 * t4525 + 1 + (11 * t4525 - 15 + 22 * t4526) * t4526)

        if Bindx == 411:
            t4529 = np.cos(phi)
            t4530 = t4529 ** 2
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt((1 - t4529)) * ((1 + t4529) ** (0.5e1 / 0.2e1)) * (-55 * t4530 + 3 + (55 * t4530 + 5) * t4529)

        if Bindx == 412:
            t4532 = np.cos(phi)
            t4533 = t4532 ** 2
            t4535 = t4533 ** 2
            t4534 = t4532 * t4533
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((3*1j) * (phi1 + phi2)) * (12 * t4533 - 105 * t4535 - 1 + (-206 + 110 * t4534) * t4534 + (165 * t4535 + 57) * t4532)

        if Bindx == 413:
            t4538 = np.cos(phi)
            t4539 = t4538 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.30e2) * ((1 + t4538) ** (0.7e1 / 0.2e1)) * (-22 * t4539 - 2 + (11 * t4539 + 13) * t4538) * ((1 - t4538) ** (-0.1e1 / 0.2e1))

        if Bindx == 414:
            t4542 = np.cos(phi)
            t4543 = t4542 ** 2
            t4541 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.165e3) * t4541 ** 2 * (-t4542 - 1 + (5 * t4542 + 3 + 2 * t4543) * t4543)

        if Bindx == 415:
            t4546 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((3*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.55e2) * ((1 - t4546) ** (0.3e1 / 0.2e1)) * ((1 + t4546) ** (0.9e1 / 0.2e1))

        if Bindx == 416:
            t4547 = np.cos(phi)
            t4551 = -1 + t4547
            t4548 = t4551 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.66e2) * t4551 * t4548 ** 2 * (1 + t4547)

        if Bindx == 417:
            t4552 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.22e2) * ((1 - t4552) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t4552)) * (2 + 3 * t4552)

        if Bindx == 418:
            t4553 = np.cos(phi)
            t4554 = t4553 ** 2
            t4556 = t4554 ** 2
            t4555 = t4553 * t4554
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((4*1j) * (phi1 - phi2)) * (-65 * t4554 + 35 * t4556 + 13 + (80 + 33 * t4555) * t4555 + (-88 * t4556 - 8) * t4553)

        if Bindx == 419:
            t4559 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.30e2) * ((1 - t4559) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t4559)) * (2 + (11 + 11 * t4559) * t4559)

        if Bindx == 420:
            t4561 = np.cos(phi)
            t4562 = t4561 ** 2
            t4560 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.30e2) * t4560 ** 2 * (20 * t4561 + 1 + (-44 * t4561 - 10 + 33 * t4562) * t4562)

        if Bindx == 421:
            t4565 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * np.exp((1j) * (4 * phi1 - phi2)) * np.sqrt(0.3e1) * ((1 - t4565) ** (0.5e1 / 0.2e1)) * ((1 + t4565) ** (0.3e1 / 0.2e1)) * (-2 + (11 + 33 * t4565) * t4565)

        if Bindx == 422:
            t4569 = np.sin(phi)
            t4567 = t4569 ** 2
            t4566 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2) * np.exp((4*1j) * phi1) * np.sqrt(0.14e2) * t4567 ** 2 * (11 * t4566 ** 2 - 1)

        if Bindx == 423:
            t4570 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * np.exp((1j) * (4 * phi1 + phi2)) * np.sqrt(0.3e1) * ((1 - t4570) ** (0.3e1 / 0.2e1)) * ((1 + t4570) ** (0.5e1 / 0.2e1)) * (-2 + (-11 + 33 * t4570) * t4570)

        if Bindx == 424:
            t4572 = np.cos(phi)
            t4573 = t4572 ** 2
            t4571 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.30e2) * t4571 ** 2 * (-20 * t4572 + 1 + (44 * t4572 - 10 + 33 * t4573) * t4573)

        if Bindx == 425:
            t4576 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.30e2) * np.sqrt((1 - t4576)) * ((1 + t4576) ** (0.7e1 / 0.2e1)) * (2 + (-11 + 11 * t4576) * t4576)

        if Bindx == 426:
            t4577 = np.cos(phi)
            t4578 = t4577 ** 2
            t4580 = t4578 ** 2
            t4579 = t4577 * t4578
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((4*1j) * (phi1 + phi2)) * (-65 * t4578 + 35 * t4580 + 13 + (-80 + 33 * t4579) * t4579 + (88 * t4580 + 8) * t4577)

        if Bindx == 427:
            t4583 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.22e2) * ((1 + t4583) ** (0.9e1 / 0.2e1)) * (2 + (-5 + 3 * t4583) * t4583) * ((1 - t4583) ** (-0.1e1 / 0.2e1))

        if Bindx == 428:
            t4584 = np.cos(phi)
            t4588 = 1 + t4584
            t4585 = t4588 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.66e2) * (-1 + t4584) * t4588 * t4585 ** 2

        if Bindx == 429:
            t4589 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 - 6 * phi2)) * np.sqrt(0.3e1) * ((1 - t4589) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t4589))

        if Bindx == 430:
            t4590 = np.cos(phi)
            t4591 = t4590 ** 2
            t4593 = t4591 ** 2
            t4592 = t4590 * t4591
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((5*1j) * (phi1 - phi2)) * (-20 * t4591 + 35 * t4593 - 5 + (-10 + 6 * t4592) * t4592 + (-25 * t4593 + 19) * t4590)

        if Bindx == 431:
            t4596 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.22e2) * ((1 - t4596) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t4596)) * (2 + 3 * t4596)

        if Bindx == 432:
            t4598 = np.cos(phi)
            t4599 = t4598 ** 2
            t4597 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.165e3) * t4597 ** 2 * (t4598 - 1 + (-5 * t4598 + 3 + 2 * t4599) * t4599)

        if Bindx == 433:
            t4602 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.165e3) * ((1 - t4602) ** (0.7e1 / 0.2e1)) * ((1 + t4602) ** (0.3e1 / 0.2e1)) * (1 + 3 * t4602)

        if Bindx == 434:
            t4606 = np.sin(phi)
            t4604 = t4606 ** 2
            t4603 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((1j) * (5 * phi1 - phi2)) * np.sqrt(0.66e2) * t4604 ** 2 * (-1 + (-5 + 6 * t4603) * t4603)

        if Bindx == 435:
            t4607 = np.cos(phi)
            tfunc[..., c] = (-0.39e2 / 0.16e2*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.77e2) * ((1 - t4607) ** (0.5e1 / 0.2e1)) * ((1 + t4607) ** (0.5e1 / 0.2e1)) * t4607

        if Bindx == 436:
            t4611 = np.sin(phi)
            t4609 = t4611 ** 2
            t4608 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((1j) * (5 * phi1 + phi2)) * np.sqrt(0.66e2) * t4609 ** 2 * (-1 + (5 + 6 * t4608) * t4608)

        if Bindx == 437:
            t4612 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.165e3) * ((1 - t4612) ** (0.3e1 / 0.2e1)) * ((1 + t4612) ** (0.7e1 / 0.2e1)) * (-1 + 3 * t4612)

        if Bindx == 438:
            t4614 = np.cos(phi)
            t4615 = t4614 ** 2
            t4613 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.165e3) * t4613 ** 2 * (-t4614 - 1 + (5 * t4614 + 3 + 2 * t4615) * t4615)

        if Bindx == 439:
            t4618 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.22e2) * np.sqrt((1 - t4618)) * ((1 + t4618) ** (0.9e1 / 0.2e1)) * (-2 + 3 * t4618)

        if Bindx == 440:
            t4619 = np.cos(phi)
            t4620 = t4619 ** 2
            t4622 = t4620 ** 2
            t4621 = t4619 * t4620
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((5*1j) * (phi1 + phi2)) * (-20 * t4620 + 35 * t4622 - 5 + (10 + 6 * t4621) * t4621 + (25 * t4622 - 19) * t4619)

        if Bindx == 441:
            t4625 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.3e1) * np.sqrt((1 - t4625)) * ((1 + t4625) ** (0.11e2 / 0.2e1))

        if Bindx == 442:
            t4626 = np.cos(phi)
            t4632 = -6 * t4626
            t4627 = t4626 ** 2
            t4628 = t4626 * t4627
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((6*1j) * (phi1 - phi2)) * (t4632 + 1 + (-20 + t4628) * t4628 + (15 + (t4632 + 15) * t4627) * t4627)

        if Bindx == 443:
            t4633 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (6 * phi1 - 5 * phi2)) * np.sqrt(0.3e1) * ((1 - t4633) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t4633))

        if Bindx == 444:
            t4634 = np.cos(phi)
            t4638 = -1 + t4634
            t4635 = t4638 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.66e2) * t4638 * t4635 ** 2 * (1 + t4634)

        if Bindx == 445:
            t4639 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((3*1j) * (2 * phi1 - phi2)) * np.sqrt(0.55e2) * ((1 - t4639) ** (0.9e1 / 0.2e1)) * ((1 + t4639) ** (0.3e1 / 0.2e1))

        if Bindx == 446:
            t4641 = np.cos(phi)
            t4644 = -1 + t4641
            t4642 = t4644 ** 2
            t4640 = 1 + t4641
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.55e2) * t4642 ** 2 * t4640 ** 2

        if Bindx == 447:
            t4645 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2*1j) * np.exp((1j) * (6 * phi1 - phi2)) * np.sqrt(0.22e2) * ((1 - t4645) ** (0.7e1 / 0.2e1)) * ((1 + t4645) ** (0.5e1 / 0.2e1))

        if Bindx == 448:
            t4649 = np.sin(phi)
            t4646 = t4649 ** 2
            t4647 = t4649 * t4646
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((6*1j) * phi1) * np.sqrt(0.231e3) * t4647 ** 2

        if Bindx == 449:
            t4650 = np.cos(phi)
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((1j) * (6 * phi1 + phi2)) * np.sqrt(0.22e2) * ((1 - t4650) ** (0.5e1 / 0.2e1)) * ((1 + t4650) ** (0.7e1 / 0.2e1))

        if Bindx == 450:
            t4652 = np.cos(phi)
            t4655 = 1 + t4652
            t4653 = t4655 ** 2
            t4651 = -1 + t4652
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.55e2) * t4651 ** 2 * t4653 ** 2

        if Bindx == 451:
            t4656 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((3*1j) * (2 * phi1 + phi2)) * np.sqrt(0.55e2) * ((1 - t4656) ** (0.3e1 / 0.2e1)) * ((1 + t4656) ** (0.9e1 / 0.2e1))

        if Bindx == 452:
            t4657 = np.cos(phi)
            t4661 = 1 + t4657
            t4658 = t4661 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.66e2) * (-1 + t4657) * t4661 * t4658 ** 2

        if Bindx == 453:
            t4662 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.3e1) * np.sqrt((1 - t4662)) * ((1 + t4662) ** (0.11e2 / 0.2e1))

        if Bindx == 454:
            t4663 = np.cos(phi)
            t4669 = 6 * t4663
            t4664 = t4663 ** 2
            t4665 = t4663 * t4664
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((6*1j) * (phi1 + phi2)) * (t4669 + 1 + (20 + t4665) * t4665 + (15 + (t4669 + 15) * t4664) * t4664)

        if Bindx == 455:
            t4670 = np.cos(phi)
            t4671 = t4670 ** 2
            t4672 = t4670 * t4671
            t4675 = t4672 ** 2
            t4673 = t4671 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-7*1j) * (phi1 + phi2)) * (21 * t4671 + 35 * t4672 + 35 * t4673 + 7 * t4675 + 1 + (21 * t4673 + t4675 + 7) * t4670)

        if Bindx == 456:
            t4677 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.14e2) * ((1 + t4677) ** (0.13e2 / 0.2e1)) * np.sqrt((1 - t4677))

        if Bindx == 457:
            t4678 = np.cos(phi)
            t4682 = 1 + t4678
            t4679 = t4682 ** 2
            t4680 = t4682 * t4679
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.91e2) * (-1 + t4678) * t4680 ** 2

        if Bindx == 458:
            t4683 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (7 * phi1 + 4 * phi2)) * np.sqrt(0.91e2) * ((1 - t4683) ** (0.3e1 / 0.2e1)) * ((1 + t4683) ** (0.11e2 / 0.2e1))

        if Bindx == 459:
            t4685 = np.cos(phi)
            t4689 = 1 + t4685
            t4686 = t4689 ** 2
            t4684 = -1 + t4685
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.1001e4) * t4684 ** 2 * t4689 * t4686 ** 2

        if Bindx == 460:
            t4690 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (7 * phi1 + 2 * phi2)) * np.sqrt(0.2002e4) * ((1 - t4690) ** (0.5e1 / 0.2e1)) * ((1 + t4690) ** (0.9e1 / 0.2e1))

        if Bindx == 461:
            t4694 = np.sin(phi)
            t4691 = t4694 ** 2
            t4692 = t4694 * t4691
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 + phi2)) * np.sqrt(0.3003e4) * t4692 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 462:
            t4695 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-7*1j) * phi1) * np.sqrt(0.858e3) * ((1 - t4695) ** (0.7e1 / 0.2e1)) * ((1 + t4695) ** (0.7e1 / 0.2e1))

        if Bindx == 463:
            t4699 = np.sin(phi)
            t4696 = t4699 ** 2
            t4697 = t4699 * t4696
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 - phi2)) * np.sqrt(0.3003e4) * t4697 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 464:
            t4700 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (7 * phi1 - 2 * phi2)) * np.sqrt(0.2002e4) * ((1 - t4700) ** (0.9e1 / 0.2e1)) * ((1 + t4700) ** (0.5e1 / 0.2e1))

        if Bindx == 465:
            t4702 = np.cos(phi)
            t4706 = -1 + t4702
            t4703 = t4706 ** 2
            t4701 = 1 + t4702
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.1001e4) * t4706 * t4703 ** 2 * t4701 ** 2

        if Bindx == 466:
            t4707 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (7 * phi1 - 4 * phi2)) * np.sqrt(0.91e2) * ((1 - t4707) ** (0.11e2 / 0.2e1)) * ((1 + t4707) ** (0.3e1 / 0.2e1))

        if Bindx == 467:
            t4708 = np.cos(phi)
            t4712 = -1 + t4708
            t4709 = t4712 ** 2
            t4710 = t4712 * t4709
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.91e2) * t4710 ** 2 * (1 + t4708)

        if Bindx == 468:
            t4713 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (7 * phi1 - 6 * phi2)) * np.sqrt(0.14e2) * ((1 - t4713) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t4713))

        if Bindx == 469:
            t4714 = np.cos(phi)
            t4715 = t4714 ** 2
            t4716 = t4714 * t4715
            t4719 = t4716 ** 2
            t4717 = t4715 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-7*1j) * (phi1 - phi2)) * (-21 * t4715 + 35 * t4716 - 35 * t4717 - 7 * t4719 - 1 + (21 * t4717 + t4719 + 7) * t4714)

        if Bindx == 470:
            t4721 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t4721)) * ((1 + t4721) ** (0.13e2 / 0.2e1))

        if Bindx == 471:
            t4722 = np.cos(phi)
            t4723 = t4722 ** 2
            t4724 = t4722 * t4723
            t4727 = t4724 ** 2
            t4725 = t4723 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-6*1j) * (phi1 + phi2)) * (-48 * t4723 - 15 * t4724 + 50 * t4725 + 36 * t4727 - 6 + (69 * t4725 + 7 * t4727 - 29) * t4722)

        if Bindx == 472:
            t4729 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.26e2) * ((1 + t4729) ** (0.11e2 / 0.2e1)) * (5 + (-12 + 7 * t4729) * t4729) * ((1 - t4729) ** (-0.1e1 / 0.2e1))

        if Bindx == 473:
            t4731 = np.cos(phi)
            t4732 = t4731 ** 2
            t4734 = t4732 ** 2
            t4730 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.26e2) * t4730 ** 2 * (4 * t4732 + 24 * t4734 - 4 + (26 * t4732 + 7 * t4734 - 9) * t4731)

        if Bindx == 474:
            t4736 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (-3 + 7 * t4736) * ((1 + t4736) ** (0.9e1 / 0.2e1)) * np.sqrt(0.286e3) * np.exp((-3*1j) * (2 * phi1 + phi2)) * ((1 - t4736) ** (0.3e1 / 0.2e1))

        if Bindx == 475:
            t4742 = np.sin(phi)
            t4740 = t4742 ** 2
            t4737 = np.cos(phi)
            t4738 = t4737 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.143e3) * t4740 ** 2 * (12 * t4738 - 2 + (7 * t4738 + 3) * t4737)

        if Bindx == 476:
            t4743 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * (-1 + 7 * t4743) * ((1 + t4743) ** (0.7e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((-1*1j) * (6 * phi1 + phi2)) * ((1 - t4743) ** (0.5e1 / 0.2e1))

        if Bindx == 477:
            t4747 = np.sin(phi)
            t4744 = t4747 ** 2
            t4745 = t4747 * t4744
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((-6*1j) * phi1) * np.sqrt(0.3003e4) * t4745 ** 2 * np.cos(phi)

        if Bindx == 478:
            t4748 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (1 + 7 * t4748) * ((1 + t4748) ** (0.5e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((-1*1j) * (6 * phi1 - phi2)) * ((1 - t4748) ** (0.7e1 / 0.2e1))

        if Bindx == 479:
            t4754 = np.sin(phi)
            t4752 = t4754 ** 2
            t4749 = np.cos(phi)
            t4750 = t4749 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.143e3) * t4752 ** 2 * (-12 * t4750 + 2 + (7 * t4750 + 3) * t4749)

        if Bindx == 480:
            t4755 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * (3 + 7 * t4755) * ((1 + t4755) ** (0.3e1 / 0.2e1)) * np.sqrt(0.286e3) * np.exp((-3*1j) * (2 * phi1 - phi2)) * ((1 - t4755) ** (0.9e1 / 0.2e1))

        if Bindx == 481:
            t4757 = np.cos(phi)
            t4758 = t4757 ** 2
            t4760 = t4758 ** 2
            t4756 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.26e2) * t4756 ** 2 * (-4 * t4758 - 24 * t4760 + 4 + (26 * t4758 + 7 * t4760 - 9) * t4757)

        if Bindx == 482:
            t4762 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (5 + 7 * t4762) * np.sqrt((1 + t4762)) * np.sqrt(0.26e2) * np.exp((-1*1j) * (6 * phi1 - 5 * phi2)) * ((1 - t4762) ** (0.11e2 / 0.2e1))

        if Bindx == 483:
            t4763 = np.cos(phi)
            t4764 = t4763 ** 2
            t4765 = t4763 * t4764
            t4768 = t4765 ** 2
            t4766 = t4764 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-6*1j) * (phi1 - phi2)) * (48 * t4764 - 15 * t4765 - 50 * t4766 - 36 * t4768 + 6 + (69 * t4766 + 7 * t4768 - 29) * t4763)

        if Bindx == 484:
            t4770 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (6 * phi1 - 7 * phi2)) * np.sqrt(0.14e2) * ((1 - t4770) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t4770))

        if Bindx == 485:
            t4771 = np.cos(phi)
            t4775 = 1 + t4771
            t4772 = t4775 ** 2
            t4773 = t4775 * t4772
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.91e2) * (-1 + t4771) * t4773 ** 2

        if Bindx == 486:
            t4776 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.26e2) * np.sqrt((1 - t4776)) * ((1 + t4776) ** (0.11e2 / 0.2e1)) * (-5 + 7 * t4776)

        if Bindx == 487:
            t4777 = np.cos(phi)
            t4778 = t4777 ** 2
            t4779 = t4777 * t4778
            t4782 = t4779 ** 2
            t4780 = t4778 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-5*1j) * (phi1 + phi2)) * (-129 * t4778 - 415 * t4779 - 175 * t4780 + 325 * t4782 + 43 + (303 * t4780 + 91 * t4782 + 85) * t4777)

        if Bindx == 488:
            t4784 = np.cos(phi)
            t4785 = t4784 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (5 * phi1 + 4 * phi2)) * ((1 + t4784) ** (0.9e1 / 0.2e1)) * (-195 * t4785 - 25 + (91 * t4785 + 129) * t4784) * ((1 - t4784) ** (-0.1e1 / 0.2e1))

        if Bindx == 489:
            t4788 = np.cos(phi)
            t4789 = t4788 ** 2
            t4791 = t4789 ** 2
            t4787 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.11e2) * t4787 ** 2 * (-110 * t4789 + 195 * t4791 + 11 + (50 * t4789 + 91 * t4791 - 45) * t4788)

        if Bindx == 490:
            t4793 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (1 + (-52 + 91 * t4793) * t4793) * ((1 + t4793) ** (0.7e1 / 0.2e1)) * np.sqrt(0.22e2) * np.exp((-1*1j) * (5 * phi1 + 2 * phi2)) * ((1 - t4793) ** (0.3e1 / 0.2e1))

        if Bindx == 491:
            t4799 = np.sin(phi)
            t4797 = t4799 ** 2
            t4794 = np.cos(phi)
            t4795 = t4794 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 + phi2)) * np.sqrt(0.33e2) * t4797 ** 2 * (65 * t4795 - 5 + (91 * t4795 - 31) * t4794)

        if Bindx == 492:
            t4800 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * (13 * t4800 ** 2 - 1) * ((1 + t4800) ** (0.5e1 / 0.2e1)) * np.sqrt(0.462e3) * np.exp((-5*1j) * phi1) * ((1 - t4800) ** (0.5e1 / 0.2e1))

        if Bindx == 493:
            t4806 = np.sin(phi)
            t4804 = t4806 ** 2
            t4801 = np.cos(phi)
            t4802 = t4801 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 - phi2)) * np.sqrt(0.33e2) * t4804 ** 2 * (-65 * t4802 + 5 + (91 * t4802 - 31) * t4801)

        if Bindx == 494:
            t4807 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (1 + (52 + 91 * t4807) * t4807) * ((1 + t4807) ** (0.3e1 / 0.2e1)) * np.sqrt(0.22e2) * np.exp((-1*1j) * (5 * phi1 - 2 * phi2)) * ((1 - t4807) ** (0.7e1 / 0.2e1))

        if Bindx == 495:
            t4809 = np.cos(phi)
            t4810 = t4809 ** 2
            t4812 = t4810 ** 2
            t4808 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.11e2) * t4808 ** 2 * (110 * t4810 - 195 * t4812 - 11 + (50 * t4810 + 91 * t4812 - 45) * t4809)

        if Bindx == 496:
            t4814 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * (25 + (104 + 91 * t4814) * t4814) * np.sqrt((1 + t4814)) * np.exp((-1*1j) * (5 * phi1 - 4 * phi2)) * ((1 - t4814) ** (0.9e1 / 0.2e1))

        if Bindx == 497:
            t4815 = np.cos(phi)
            t4816 = t4815 ** 2
            t4817 = t4815 * t4816
            t4820 = t4817 ** 2
            t4818 = t4816 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-5*1j) * (phi1 - phi2)) * (129 * t4816 - 415 * t4817 + 175 * t4818 - 325 * t4820 - 43 + (303 * t4818 + 91 * t4820 + 85) * t4815)

        if Bindx == 498:
            t4822 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (5 + 7 * t4822) * np.sqrt((1 + t4822)) * np.sqrt(0.26e2) * np.exp((-1*1j) * (5 * phi1 - 6 * phi2)) * ((1 - t4822) ** (0.11e2 / 0.2e1))

        if Bindx == 499:
            t4823 = np.cos(phi)
            t4827 = -1 + t4823
            t4824 = t4827 ** 2
            t4825 = t4827 * t4824
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.91e2) * t4825 ** 2 * (1 + t4823)

        if Bindx == 500:
            t4828 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (4 * phi1 + 7 * phi2)) * np.sqrt(0.91e2) * ((1 - t4828) ** (0.3e1 / 0.2e1)) * ((1 + t4828) ** (0.11e2 / 0.2e1))

        if Bindx == 501:
            t4829 = np.cos(phi)
            t4833 = 1 + t4829
            t4830 = t4833 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.26e2) * (-1 + t4829) * t4833 * t4830 ** 2 * (-4 + 7 * t4829)

        if Bindx == 502:
            t4834 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt((1 - t4834)) * ((1 + t4834) ** (0.9e1 / 0.2e1)) * (25 + (-104 + 91 * t4834) * t4834)

        if Bindx == 503:
            t4835 = np.cos(phi)
            t4836 = t4835 ** 2
            t4837 = t4835 * t4836
            t4840 = t4837 ** 2
            t4838 = t4836 ** 2
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((-4*1j) * (phi1 + phi2)) * (96 * t4836 - 115 * t4837 - 280 * t4838 + 208 * t4840 - 8 + (-3 * t4838 + 91 * t4840 + 43) * t4835)

        if Bindx == 504:
            t4842 = np.cos(phi)
            t4843 = t4842 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.11e2) * ((1 + t4842) ** (0.7e1 / 0.2e1)) * (-32 * t4842 - 1 + (-208 * t4842 + 150 + 91 * t4843) * t4843) * ((1 - t4842) ** (-0.1e1 / 0.2e1))

        if Bindx == 505:
            t4847 = np.cos(phi)
            t4848 = t4847 ** 2
            t4850 = t4848 ** 2
            t4846 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.22e2) * t4846 ** 2 * (-68 * t4848 + 104 * t4850 + 4 + (-62 * t4848 + 91 * t4850 + 11) * t4847)

        if Bindx == 506:
            t4852 = np.cos(phi)
            t4853 = t4852 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * (-39 * t4853 + 3 + (91 * t4853 - 15) * t4852) * ((1 + t4852) ** (0.5e1 / 0.2e1)) * np.sqrt(0.33e2) * np.exp((-1*1j) * (4 * phi1 + phi2)) * ((1 - t4852) ** (0.3e1 / 0.2e1))

        if Bindx == 507:
            t4858 = np.sin(phi)
            t4856 = t4858 ** 2
            t4855 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((-4*1j) * phi1) * np.sqrt(0.462e3) * t4856 ** 2 * t4855 * (13 * t4855 ** 2 - 3)

        if Bindx == 508:
            t4859 = np.cos(phi)
            t4860 = t4859 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * (39 * t4860 - 3 + (91 * t4860 - 15) * t4859) * ((1 + t4859) ** (0.3e1 / 0.2e1)) * np.sqrt(0.33e2) * np.exp((-1*1j) * (4 * phi1 - phi2)) * ((1 - t4859) ** (0.5e1 / 0.2e1))

        if Bindx == 509:
            t4863 = np.cos(phi)
            t4864 = t4863 ** 2
            t4866 = t4864 ** 2
            t4862 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.22e2) * t4862 ** 2 * (68 * t4864 - 104 * t4866 - 4 + (-62 * t4864 + 91 * t4866 + 11) * t4863)

        if Bindx == 510:
            t4868 = np.cos(phi)
            t4869 = t4868 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * (117 * t4869 - 1 + (91 * t4869 + 33) * t4868) * np.sqrt((1 + t4868)) * np.sqrt(0.11e2) * np.exp((-1*1j) * (4 * phi1 - 3 * phi2)) * ((1 - t4868) ** (0.7e1 / 0.2e1))

        if Bindx == 511:
            t4871 = np.cos(phi)
            t4872 = t4871 ** 2
            t4873 = t4871 * t4872
            t4876 = t4873 ** 2
            t4874 = t4872 ** 2
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((-4*1j) * (phi1 - phi2)) * (-96 * t4872 - 115 * t4873 + 280 * t4874 - 208 * t4876 + 8 + (-3 * t4874 + 91 * t4876 + 43) * t4871)

        if Bindx == 512:
            t4878 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * (25 + (104 + 91 * t4878) * t4878) * np.sqrt((1 + t4878)) * np.exp((-1*1j) * (4 * phi1 - 5 * phi2)) * ((1 - t4878) ** (0.9e1 / 0.2e1))

        if Bindx == 513:
            t4880 = np.cos(phi)
            t4881 = t4880 ** 2
            t4883 = t4881 ** 2
            t4879 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.26e2) * t4879 ** 2 * (-4 * t4881 - 24 * t4883 + 4 + (26 * t4881 + 7 * t4883 - 9) * t4880)

        if Bindx == 514:
            t4885 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (4 * phi1 - 7 * phi2)) * np.sqrt(0.91e2) * ((1 - t4885) ** (0.11e2 / 0.2e1)) * ((1 + t4885) ** (0.3e1 / 0.2e1))

        if Bindx == 515:
            t4887 = np.cos(phi)
            t4891 = 1 + t4887
            t4888 = t4891 ** 2
            t4886 = -1 + t4887
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.1001e4) * t4886 ** 2 * t4891 * t4888 ** 2

        if Bindx == 516:
            t4892 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((-3*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.286e3) * ((1 - t4892) ** (0.3e1 / 0.2e1)) * ((1 + t4892) ** (0.9e1 / 0.2e1)) * (-3 + 7 * t4892)

        if Bindx == 517:
            t4894 = np.cos(phi)
            t4895 = t4894 ** 2
            t4897 = t4895 ** 2
            t4893 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.11e2) * t4893 ** 2 * (-110 * t4895 + 195 * t4897 + 11 + (50 * t4895 + 91 * t4897 - 45) * t4894)

        if Bindx == 518:
            t4899 = np.cos(phi)
            t4900 = t4899 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.11e2) * np.sqrt((1 - t4899)) * ((1 + t4899) ** (0.7e1 / 0.2e1)) * (-117 * t4900 + 1 + (91 * t4900 + 33) * t4899)

        if Bindx == 519:
            t4902 = np.cos(phi)
            t4903 = t4902 ** 2
            t4904 = t4902 * t4903
            t4907 = t4904 ** 2
            t4905 = t4903 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-3*1j) * (phi1 + phi2)) * (741 * t4903 + 555 * t4904 - 1925 * t4905 + 1287 * t4907 - 39 + (-1419 * t4905 + 1001 * t4907 - 73) * t4902)

        if Bindx == 520:
            t4909 = np.cos(phi)
            t4910 = t4909 ** 2
            t4912 = t4910 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.2e1) * ((1 + t4909) ** (0.5e1 / 0.2e1)) * (110 * t4910 - 2145 * t4912 + 19 + (1210 * t4910 + 1001 * t4912 - 195) * t4909) * ((1 - t4909) ** (-0.1e1 / 0.2e1))

        if Bindx == 521:
            t4915 = np.cos(phi)
            t4916 = t4915 ** 2
            t4918 = t4916 ** 2
            t4914 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.3e1) * t4914 ** 2 * (-198 * t4916 + 429 * t4918 + 9 + (-902 * t4916 + 1001 * t4918 + 141) * t4915)

        if Bindx == 522:
            t4920 = np.cos(phi)
            t4921 = t4920 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * (3 + (-66 + 143 * t4921) * t4921) * ((1 + t4920) ** (0.3e1 / 0.2e1)) * np.sqrt(0.42e2) * np.exp((-3*1j) * phi1) * ((1 - t4920) ** (0.3e1 / 0.2e1))

        if Bindx == 523:
            t4924 = np.cos(phi)
            t4925 = t4924 ** 2
            t4927 = t4925 ** 2
            t4923 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.3e1) * t4923 ** 2 * (198 * t4925 - 429 * t4927 - 9 + (-902 * t4925 + 1001 * t4927 + 141) * t4924)

        if Bindx == 524:
            t4929 = np.cos(phi)
            t4930 = t4929 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * (-176 * t4929 - 19 + (1144 * t4929 + 66 + 1001 * t4930) * t4930) * np.sqrt((1 + t4929)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t4929) ** (0.5e1 / 0.2e1))

        if Bindx == 525:
            t4933 = np.cos(phi)
            t4934 = t4933 ** 2
            t4935 = t4933 * t4934
            t4938 = t4935 ** 2
            t4936 = t4934 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-3*1j) * (phi1 - phi2)) * (-741 * t4934 + 555 * t4935 + 1925 * t4936 - 1287 * t4938 + 39 + (-1419 * t4936 + 1001 * t4938 - 73) * t4933)

        if Bindx == 526:
            t4940 = np.cos(phi)
            t4941 = t4940 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * (117 * t4941 - 1 + (91 * t4941 + 33) * t4940) * np.sqrt((1 + t4940)) * np.sqrt(0.11e2) * np.exp((-1*1j) * (3 * phi1 - 4 * phi2)) * ((1 - t4940) ** (0.7e1 / 0.2e1))

        if Bindx == 527:
            t4944 = np.cos(phi)
            t4945 = t4944 ** 2
            t4947 = t4945 ** 2
            t4943 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.11e2) * t4943 ** 2 * (110 * t4945 - 195 * t4947 - 11 + (50 * t4945 + 91 * t4947 - 45) * t4944)

        if Bindx == 528:
            t4949 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * (3 + 7 * t4949) * ((1 + t4949) ** (0.3e1 / 0.2e1)) * np.sqrt(0.286e3) * np.exp((-3*1j) * (phi1 - 2 * phi2)) * ((1 - t4949) ** (0.9e1 / 0.2e1))

        if Bindx == 529:
            t4951 = np.cos(phi)
            t4955 = -1 + t4951
            t4952 = t4955 ** 2
            t4950 = 1 + t4951
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.1001e4) * t4955 * t4952 ** 2 * t4950 ** 2

        if Bindx == 530:
            t4956 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + 7 * phi2)) * np.sqrt(0.2002e4) * ((1 - t4956) ** (0.5e1 / 0.2e1)) * ((1 + t4956) ** (0.9e1 / 0.2e1))

        if Bindx == 531:
            t4962 = np.sin(phi)
            t4960 = t4962 ** 2
            t4957 = np.cos(phi)
            t4958 = t4957 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.143e3) * t4960 ** 2 * (12 * t4958 - 2 + (7 * t4958 + 3) * t4957)

        if Bindx == 532:
            t4963 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.22e2) * ((1 - t4963) ** (0.3e1 / 0.2e1)) * ((1 + t4963) ** (0.7e1 / 0.2e1)) * (1 + (-52 + 91 * t4963) * t4963)

        if Bindx == 533:
            t4965 = np.cos(phi)
            t4966 = t4965 ** 2
            t4968 = t4966 ** 2
            t4964 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.22e2) * t4964 ** 2 * (-68 * t4966 + 104 * t4968 + 4 + (-62 * t4966 + 91 * t4968 + 11) * t4965)

        if Bindx == 534:
            t4970 = np.cos(phi)
            t4971 = t4970 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t4970)) * ((1 + t4970) ** (0.5e1 / 0.2e1)) * (176 * t4970 - 19 + (-1144 * t4970 + 66 + 1001 * t4971) * t4971)

        if Bindx == 535:
            t4974 = np.cos(phi)
            t4975 = t4974 ** 2
            t4976 = t4974 * t4975
            t4979 = t4976 ** 2
            t4977 = t4975 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + phi2)) * (240 * t4975 + 895 * t4976 - 770 * t4977 + 572 * t4979 - 10 + (-1749 * t4977 + 1001 * t4979 - 115) * t4974)

        if Bindx == 536:
            t4981 = np.cos(phi)
            t4982 = t4981 ** 2
            t4984 = t4982 ** 2
            t4983 = t4981 * t4982
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.6e1) * ((1 + t4981) ** (0.3e1 / 0.2e1)) * (-285 * t4982 + 165 * t4984 + 15 + (880 + 1001 * t4983) * t4983 + (-1716 * t4984 - 60) * t4981) * ((1 - t4981) ** (-0.1e1 / 0.2e1))

        if Bindx == 537:
            t4988 = np.cos(phi)
            t4989 = t4988 ** 2
            t4987 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((-2*1j) * phi1) * np.sqrt(0.21e2) * t4987 ** 2 * t4988 * (15 + (-110 + 143 * t4989) * t4989)

        if Bindx == 538:
            t4991 = np.cos(phi)
            t4992 = t4991 ** 2
            t4994 = t4992 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (-330 * t4992 + 715 * t4994 + 15 + (-550 * t4992 + 1001 * t4994 + 45) * t4991) * np.sqrt((1 + t4991)) * np.sqrt(0.6e1) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t4991) ** (0.3e1 / 0.2e1))

        if Bindx == 539:
            t4996 = np.cos(phi)
            t4997 = t4996 ** 2
            t4998 = t4996 * t4997
            t5001 = t4998 ** 2
            t4999 = t4997 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - phi2)) * (-240 * t4997 + 895 * t4998 + 770 * t4999 - 572 * t5001 + 10 + (-1749 * t4999 + 1001 * t5001 - 115) * t4996)

        if Bindx == 540:
            t5003 = np.cos(phi)
            t5004 = t5003 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * (-176 * t5003 - 19 + (1144 * t5003 + 66 + 1001 * t5004) * t5004) * np.sqrt((1 + t5003)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t5003) ** (0.5e1 / 0.2e1))

        if Bindx == 541:
            t5008 = np.cos(phi)
            t5009 = t5008 ** 2
            t5011 = t5009 ** 2
            t5007 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.22e2) * t5007 ** 2 * (68 * t5009 - 104 * t5011 - 4 + (-62 * t5009 + 91 * t5011 + 11) * t5008)

        if Bindx == 542:
            t5013 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (1 + (52 + 91 * t5013) * t5013) * ((1 + t5013) ** (0.3e1 / 0.2e1)) * np.sqrt(0.22e2) * np.exp((-1*1j) * (2 * phi1 - 5 * phi2)) * ((1 - t5013) ** (0.7e1 / 0.2e1))

        if Bindx == 543:
            t5019 = np.sin(phi)
            t5017 = t5019 ** 2
            t5014 = np.cos(phi)
            t5015 = t5014 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.143e3) * t5017 ** 2 * (-12 * t5015 + 2 + (7 * t5015 + 3) * t5014)

        if Bindx == 544:
            t5020 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 - 7 * phi2)) * np.sqrt(0.2002e4) * ((1 - t5020) ** (0.9e1 / 0.2e1)) * ((1 + t5020) ** (0.5e1 / 0.2e1))

        if Bindx == 545:
            t5024 = np.sin(phi)
            t5021 = t5024 ** 2
            t5022 = t5024 * t5021
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + 7 * phi2)) * np.sqrt(0.3003e4) * t5022 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 546:
            t5025 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (phi1 + 6 * phi2)) * np.sqrt(0.858e3) * ((1 - t5025) ** (0.5e1 / 0.2e1)) * ((1 + t5025) ** (0.7e1 / 0.2e1)) * (-1 + 7 * t5025)

        if Bindx == 547:
            t5031 = np.sin(phi)
            t5029 = t5031 ** 2
            t5026 = np.cos(phi)
            t5027 = t5026 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.33e2) * t5029 ** 2 * (65 * t5027 - 5 + (91 * t5027 - 31) * t5026)

        if Bindx == 548:
            t5032 = np.cos(phi)
            t5033 = t5032 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.33e2) * ((1 - t5032) ** (0.3e1 / 0.2e1)) * ((1 + t5032) ** (0.5e1 / 0.2e1)) * (-39 * t5033 + 3 + (91 * t5033 - 15) * t5032)

        if Bindx == 549:
            t5036 = np.cos(phi)
            t5037 = t5036 ** 2
            t5039 = t5037 ** 2
            t5035 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.3e1) * t5035 ** 2 * (-198 * t5037 + 429 * t5039 + 9 + (-902 * t5037 + 1001 * t5039 + 141) * t5036)

        if Bindx == 550:
            t5041 = np.cos(phi)
            t5042 = t5041 ** 2
            t5044 = t5042 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t5041)) * ((1 + t5041) ** (0.3e1 / 0.2e1)) * (330 * t5042 - 715 * t5044 - 15 + (-550 * t5042 + 1001 * t5044 + 45) * t5041)

        if Bindx == 551:
            t5046 = np.cos(phi)
            t5047 = t5046 ** 2
            t5048 = t5046 * t5047
            t5051 = t5048 ** 2
            t5049 = t5047 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + phi2)) * (135 * t5047 + 2385 * t5048 - 495 * t5049 + 429 * t5051 - 5 + (-5049 * t5049 + 3003 * t5051 - 275) * t5046)

        if Bindx == 552:
            t5053 = np.cos(phi)
            t5054 = t5053 ** 2
            t5055 = t5053 * t5054
            t5060 = -495 * t5054 ** 2 + 429 * t5055 ** 2 - 5
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.14e2) * np.sqrt((1 + t5053)) * (t5060 * t5053 - 135 * t5054 + 135 * t5055 - t5060) * ((1 - t5053) ** (-0.1e1 / 0.2e1))

        if Bindx == 553:
            t5061 = np.cos(phi)
            t5062 = t5061 ** 2
            t5063 = t5061 * t5062
            t5066 = t5063 ** 2
            t5064 = t5062 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - phi2)) * (-135 * t5062 + 2385 * t5063 + 495 * t5064 - 429 * t5066 + 5 + (-5049 * t5064 + 3003 * t5066 - 275) * t5061)

        if Bindx == 554:
            t5068 = np.cos(phi)
            t5069 = t5068 ** 2
            t5071 = t5069 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (-330 * t5069 + 715 * t5071 + 15 + (-550 * t5069 + 1001 * t5071 + 45) * t5068) * np.sqrt((1 + t5068)) * np.sqrt(0.6e1) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t5068) ** (0.3e1 / 0.2e1))

        if Bindx == 555:
            t5074 = np.cos(phi)
            t5075 = t5074 ** 2
            t5077 = t5075 ** 2
            t5073 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.3e1) * t5073 ** 2 * (198 * t5075 - 429 * t5077 - 9 + (-902 * t5075 + 1001 * t5077 + 141) * t5074)

        if Bindx == 556:
            t5079 = np.cos(phi)
            t5080 = t5079 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * (39 * t5080 - 3 + (91 * t5080 - 15) * t5079) * ((1 + t5079) ** (0.3e1 / 0.2e1)) * np.sqrt(0.33e2) * np.exp((-1*1j) * (phi1 - 4 * phi2)) * ((1 - t5079) ** (0.5e1 / 0.2e1))

        if Bindx == 557:
            t5087 = np.sin(phi)
            t5085 = t5087 ** 2
            t5082 = np.cos(phi)
            t5083 = t5082 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.33e2) * t5085 ** 2 * (-65 * t5083 + 5 + (91 * t5083 - 31) * t5082)

        if Bindx == 558:
            t5088 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (1 + 7 * t5088) * ((1 + t5088) ** (0.5e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((-1*1j) * (phi1 - 6 * phi2)) * ((1 - t5088) ** (0.7e1 / 0.2e1))

        if Bindx == 559:
            t5092 = np.sin(phi)
            t5089 = t5092 ** 2
            t5090 = t5092 * t5089
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - 7 * phi2)) * np.sqrt(0.3003e4) * t5090 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 560:
            t5093 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-7*1j) * phi2) * np.sqrt(0.858e3) * ((1 - t5093) ** (0.7e1 / 0.2e1)) * ((1 + t5093) ** (0.7e1 / 0.2e1))

        if Bindx == 561:
            t5097 = np.sin(phi)
            t5094 = t5097 ** 2
            t5095 = t5097 * t5094
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((-6*1j) * phi2) * np.sqrt(0.3003e4) * t5095 ** 2 * np.cos(phi)

        if Bindx == 562:
            t5098 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((-5*1j) * phi2) * np.sqrt(0.462e3) * ((1 - t5098) ** (0.5e1 / 0.2e1)) * ((1 + t5098) ** (0.5e1 / 0.2e1)) * (13 * t5098 ** 2 - 1)

        if Bindx == 563:
            t5102 = np.sin(phi)
            t5100 = t5102 ** 2
            t5099 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((-4*1j) * phi2) * np.sqrt(0.462e3) * t5100 ** 2 * t5099 * (13 * t5099 ** 2 - 3)

        if Bindx == 564:
            t5103 = np.cos(phi)
            t5104 = t5103 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.42e2) * ((1 - t5103) ** (0.3e1 / 0.2e1)) * ((1 + t5103) ** (0.3e1 / 0.2e1)) * (3 + (-66 + 143 * t5104) * t5104)

        if Bindx == 565:
            t5107 = np.cos(phi)
            t5108 = t5107 ** 2
            t5106 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((-2*1j) * phi2) * np.sqrt(0.21e2) * t5106 ** 2 * t5107 * (15 + (-110 + 143 * t5108) * t5108)

        if Bindx == 566:
            t5110 = np.cos(phi)
            t5111 = t5110 ** 2
            t5112 = t5111 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.14e2) * np.sqrt((1 - t5110)) * np.sqrt((1 + t5110)) * (-495 * t5112 - 5 + (429 * t5112 + 135) * t5111)

        if Bindx == 567:
            t5114 = np.cos(phi)
            t5115 = t5114 ** 2
            t5116 = t5115 ** 2
            tfunc[..., c] = 0.15e2 / 0.16e2 * t5114 * (-693 * t5116 - 35 + (429 * t5116 + 315) * t5115)

        if Bindx == 568:
            t5118 = np.cos(phi)
            t5119 = t5118 ** 2
            t5120 = t5118 * t5119
            t5125 = -495 * t5119 ** 2 + 429 * t5120 ** 2 - 5
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * phi2) * np.sqrt(0.14e2) * np.sqrt((1 + t5118)) * (t5125 * t5118 - 135 * t5119 + 135 * t5120 - t5125) * ((1 - t5118) ** (-0.1e1 / 0.2e1))

        if Bindx == 569:
            t5127 = np.cos(phi)
            t5128 = t5127 ** 2
            t5126 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((2*1j) * phi2) * np.sqrt(0.21e2) * t5126 ** 2 * t5127 * (15 + (-110 + 143 * t5128) * t5128)

        if Bindx == 570:
            t5130 = np.cos(phi)
            t5131 = t5130 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * (3 + (-66 + 143 * t5131) * t5131) * ((1 + t5130) ** (0.3e1 / 0.2e1)) * np.sqrt(0.42e2) * np.exp((3*1j) * phi2) * ((1 - t5130) ** (0.3e1 / 0.2e1))

        if Bindx == 571:
            t5136 = np.sin(phi)
            t5134 = t5136 ** 2
            t5133 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((4*1j) * phi2) * np.sqrt(0.462e3) * t5134 ** 2 * t5133 * (13 * t5133 ** 2 - 3)

        if Bindx == 572:
            t5137 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * (13 * t5137 ** 2 - 1) * ((1 + t5137) ** (0.5e1 / 0.2e1)) * np.sqrt(0.462e3) * np.exp((5*1j) * phi2) * ((1 - t5137) ** (0.5e1 / 0.2e1))

        if Bindx == 573:
            t5141 = np.sin(phi)
            t5138 = t5141 ** 2
            t5139 = t5141 * t5138
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((6*1j) * phi2) * np.sqrt(0.3003e4) * t5139 ** 2 * np.cos(phi)

        if Bindx == 574:
            t5142 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((7*1j) * phi2) * np.sqrt(0.858e3) * ((1 - t5142) ** (0.7e1 / 0.2e1)) * ((1 + t5142) ** (0.7e1 / 0.2e1))

        if Bindx == 575:
            t5146 = np.sin(phi)
            t5143 = t5146 ** 2
            t5144 = t5146 * t5143
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (phi1 - 7 * phi2)) * np.sqrt(0.3003e4) * t5144 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 576:
            t5147 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (phi1 - 6 * phi2)) * np.sqrt(0.858e3) * ((1 - t5147) ** (0.7e1 / 0.2e1)) * ((1 + t5147) ** (0.5e1 / 0.2e1)) * (1 + 7 * t5147)

        if Bindx == 577:
            t5153 = np.sin(phi)
            t5151 = t5153 ** 2
            t5148 = np.cos(phi)
            t5149 = t5148 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (phi1 - 5 * phi2)) * np.sqrt(0.33e2) * t5151 ** 2 * (-65 * t5149 + 5 + (91 * t5149 - 31) * t5148)

        if Bindx == 578:
            t5154 = np.cos(phi)
            t5155 = t5154 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((1j) * (phi1 - 4 * phi2)) * np.sqrt(0.33e2) * ((1 - t5154) ** (0.5e1 / 0.2e1)) * ((1 + t5154) ** (0.3e1 / 0.2e1)) * (39 * t5155 - 3 + (91 * t5155 - 15) * t5154)

        if Bindx == 579:
            t5158 = np.cos(phi)
            t5159 = t5158 ** 2
            t5161 = t5159 ** 2
            t5157 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.3e1) * t5157 ** 2 * (198 * t5159 - 429 * t5161 - 9 + (-902 * t5159 + 1001 * t5161 + 141) * t5158)

        if Bindx == 580:
            t5163 = np.cos(phi)
            t5164 = t5163 ** 2
            t5166 = t5164 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.6e1) * ((1 - t5163) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t5163)) * (-330 * t5164 + 715 * t5166 + 15 + (-550 * t5164 + 1001 * t5166 + 45) * t5163)

        if Bindx == 581:
            t5168 = np.cos(phi)
            t5169 = t5168 ** 2
            t5170 = t5168 * t5169
            t5173 = t5170 ** 2
            t5171 = t5169 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (phi1 - phi2)) * (-135 * t5169 + 2385 * t5170 + 495 * t5171 - 429 * t5173 + 5 + (-5049 * t5171 + 3003 * t5173 - 275) * t5168)

        if Bindx == 582:
            t5175 = np.cos(phi)
            t5176 = t5175 ** 2
            t5177 = t5176 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((1j) * phi1) * np.sqrt(0.14e2) * np.sqrt((1 - t5175)) * np.sqrt((1 + t5175)) * (-495 * t5177 - 5 + (429 * t5177 + 135) * t5176)

        if Bindx == 583:
            t5179 = np.cos(phi)
            t5180 = t5179 ** 2
            t5181 = t5179 * t5180
            t5184 = t5181 ** 2
            t5182 = t5180 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (phi1 + phi2)) * (135 * t5180 + 2385 * t5181 - 495 * t5182 + 429 * t5184 - 5 + (-5049 * t5182 + 3003 * t5184 - 275) * t5179)

        if Bindx == 584:
            t5186 = np.cos(phi)
            t5187 = t5186 ** 2
            t5189 = t5187 ** 2
            t5188 = t5186 * t5187
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.6e1) * ((1 + t5186) ** (0.3e1 / 0.2e1)) * (-285 * t5187 + 165 * t5189 + 15 + (880 + 1001 * t5188) * t5188 + (-1716 * t5189 - 60) * t5186) * ((1 - t5186) ** (-0.1e1 / 0.2e1))

        if Bindx == 585:
            t5193 = np.cos(phi)
            t5194 = t5193 ** 2
            t5196 = t5194 ** 2
            t5192 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.3e1) * t5192 ** 2 * (-198 * t5194 + 429 * t5196 + 9 + (-902 * t5194 + 1001 * t5196 + 141) * t5193)

        if Bindx == 586:
            t5198 = np.cos(phi)
            t5199 = t5198 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * (-39 * t5199 + 3 + (91 * t5199 - 15) * t5198) * ((1 + t5198) ** (0.5e1 / 0.2e1)) * np.sqrt(0.33e2) * np.exp((1j) * (phi1 + 4 * phi2)) * ((1 - t5198) ** (0.3e1 / 0.2e1))

        if Bindx == 587:
            t5206 = np.sin(phi)
            t5204 = t5206 ** 2
            t5201 = np.cos(phi)
            t5202 = t5201 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (phi1 + 5 * phi2)) * np.sqrt(0.33e2) * t5204 ** 2 * (65 * t5202 - 5 + (91 * t5202 - 31) * t5201)

        if Bindx == 588:
            t5207 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * (-1 + 7 * t5207) * ((1 + t5207) ** (0.7e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((1j) * (phi1 + 6 * phi2)) * ((1 - t5207) ** (0.5e1 / 0.2e1))

        if Bindx == 589:
            t5211 = np.sin(phi)
            t5208 = t5211 ** 2
            t5209 = t5211 * t5208
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (phi1 + 7 * phi2)) * np.sqrt(0.3003e4) * t5209 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 590:
            t5212 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - 7 * phi2)) * np.sqrt(0.2002e4) * ((1 - t5212) ** (0.9e1 / 0.2e1)) * ((1 + t5212) ** (0.5e1 / 0.2e1))

        if Bindx == 591:
            t5218 = np.sin(phi)
            t5216 = t5218 ** 2
            t5213 = np.cos(phi)
            t5214 = t5213 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.143e3) * t5216 ** 2 * (-12 * t5214 + 2 + (7 * t5214 + 3) * t5213)

        if Bindx == 592:
            t5219 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.22e2) * ((1 - t5219) ** (0.7e1 / 0.2e1)) * ((1 + t5219) ** (0.3e1 / 0.2e1)) * (1 + (52 + 91 * t5219) * t5219)

        if Bindx == 593:
            t5221 = np.cos(phi)
            t5222 = t5221 ** 2
            t5224 = t5222 ** 2
            t5220 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.22e2) * t5220 ** 2 * (68 * t5222 - 104 * t5224 - 4 + (-62 * t5222 + 91 * t5224 + 11) * t5221)

        if Bindx == 594:
            t5226 = np.cos(phi)
            t5227 = t5226 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.2e1) * ((1 - t5226) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t5226)) * (-176 * t5226 - 19 + (1144 * t5226 + 66 + 1001 * t5227) * t5227)

        if Bindx == 595:
            t5230 = np.cos(phi)
            t5231 = t5230 ** 2
            t5232 = t5230 * t5231
            t5235 = t5232 ** 2
            t5233 = t5231 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((2*1j) * (phi1 - phi2)) * (-240 * t5231 + 895 * t5232 + 770 * t5233 - 572 * t5235 + 10 + (-1749 * t5233 + 1001 * t5235 - 115) * t5230)

        if Bindx == 596:
            t5237 = np.cos(phi)
            t5238 = t5237 ** 2
            t5240 = t5238 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.6e1) * ((1 - t5237) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t5237)) * (-330 * t5238 + 715 * t5240 + 15 + (-550 * t5238 + 1001 * t5240 + 45) * t5237)

        if Bindx == 597:
            t5243 = np.cos(phi)
            t5244 = t5243 ** 2
            t5242 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((2*1j) * phi1) * np.sqrt(0.21e2) * t5242 ** 2 * t5243 * (15 + (-110 + 143 * t5244) * t5244)

        if Bindx == 598:
            t5246 = np.cos(phi)
            t5247 = t5246 ** 2
            t5249 = t5247 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t5246)) * ((1 + t5246) ** (0.3e1 / 0.2e1)) * (330 * t5247 - 715 * t5249 - 15 + (-550 * t5247 + 1001 * t5249 + 45) * t5246)

        if Bindx == 599:
            t5251 = np.cos(phi)
            t5252 = t5251 ** 2
            t5253 = t5251 * t5252
            t5256 = t5253 ** 2
            t5254 = t5252 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((2*1j) * (phi1 + phi2)) * (240 * t5252 + 895 * t5253 - 770 * t5254 + 572 * t5256 - 10 + (-1749 * t5254 + 1001 * t5256 - 115) * t5251)

        if Bindx == 600:
            t5258 = np.cos(phi)
            t5259 = t5258 ** 2
            t5261 = t5259 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * ((1 + t5258) ** (0.5e1 / 0.2e1)) * (110 * t5259 - 2145 * t5261 + 19 + (1210 * t5259 + 1001 * t5261 - 195) * t5258) * ((1 - t5258) ** (-0.1e1 / 0.2e1))

        if Bindx == 601:
            t5264 = np.cos(phi)
            t5265 = t5264 ** 2
            t5267 = t5265 ** 2
            t5263 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.22e2) * t5263 ** 2 * (-68 * t5265 + 104 * t5267 + 4 + (-62 * t5265 + 91 * t5267 + 11) * t5264)

        if Bindx == 602:
            t5269 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (1 + (-52 + 91 * t5269) * t5269) * ((1 + t5269) ** (0.7e1 / 0.2e1)) * np.sqrt(0.22e2) * np.exp((1j) * (2 * phi1 + 5 * phi2)) * ((1 - t5269) ** (0.3e1 / 0.2e1))

        if Bindx == 603:
            t5275 = np.sin(phi)
            t5273 = t5275 ** 2
            t5270 = np.cos(phi)
            t5271 = t5270 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.143e3) * t5273 ** 2 * (12 * t5271 - 2 + (7 * t5271 + 3) * t5270)

        if Bindx == 604:
            t5276 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 + 7 * phi2)) * np.sqrt(0.2002e4) * ((1 - t5276) ** (0.5e1 / 0.2e1)) * ((1 + t5276) ** (0.9e1 / 0.2e1))

        if Bindx == 605:
            t5278 = np.cos(phi)
            t5282 = -1 + t5278
            t5279 = t5282 ** 2
            t5277 = 1 + t5278
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.1001e4) * t5282 * t5279 ** 2 * t5277 ** 2

        if Bindx == 606:
            t5283 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((3*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.286e3) * ((1 - t5283) ** (0.9e1 / 0.2e1)) * ((1 + t5283) ** (0.3e1 / 0.2e1)) * (3 + 7 * t5283)

        if Bindx == 607:
            t5285 = np.cos(phi)
            t5286 = t5285 ** 2
            t5288 = t5286 ** 2
            t5284 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.11e2) * t5284 ** 2 * (110 * t5286 - 195 * t5288 - 11 + (50 * t5286 + 91 * t5288 - 45) * t5285)

        if Bindx == 608:
            t5290 = np.cos(phi)
            t5291 = t5290 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.11e2) * ((1 - t5290) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t5290)) * (117 * t5291 - 1 + (91 * t5291 + 33) * t5290)

        if Bindx == 609:
            t5293 = np.cos(phi)
            t5294 = t5293 ** 2
            t5295 = t5293 * t5294
            t5298 = t5295 ** 2
            t5296 = t5294 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((3*1j) * (phi1 - phi2)) * (-741 * t5294 + 555 * t5295 + 1925 * t5296 - 1287 * t5298 + 39 + (-1419 * t5296 + 1001 * t5298 - 73) * t5293)

        if Bindx == 610:
            t5300 = np.cos(phi)
            t5301 = t5300 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.2e1) * ((1 - t5300) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t5300)) * (-176 * t5300 - 19 + (1144 * t5300 + 66 + 1001 * t5301) * t5301)

        if Bindx == 611:
            t5305 = np.cos(phi)
            t5306 = t5305 ** 2
            t5308 = t5306 ** 2
            t5304 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.3e1) * t5304 ** 2 * (198 * t5306 - 429 * t5308 - 9 + (-902 * t5306 + 1001 * t5308 + 141) * t5305)

        if Bindx == 612:
            t5310 = np.cos(phi)
            t5311 = t5310 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.42e2) * ((1 - t5310) ** (0.3e1 / 0.2e1)) * ((1 + t5310) ** (0.3e1 / 0.2e1)) * (3 + (-66 + 143 * t5311) * t5311)

        if Bindx == 613:
            t5314 = np.cos(phi)
            t5315 = t5314 ** 2
            t5317 = t5315 ** 2
            t5313 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.3e1) * t5313 ** 2 * (-198 * t5315 + 429 * t5317 + 9 + (-902 * t5315 + 1001 * t5317 + 141) * t5314)

        if Bindx == 614:
            t5319 = np.cos(phi)
            t5320 = t5319 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t5319)) * ((1 + t5319) ** (0.5e1 / 0.2e1)) * (176 * t5319 - 19 + (-1144 * t5319 + 66 + 1001 * t5320) * t5320)

        if Bindx == 615:
            t5323 = np.cos(phi)
            t5324 = t5323 ** 2
            t5325 = t5323 * t5324
            t5328 = t5325 ** 2
            t5326 = t5324 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((3*1j) * (phi1 + phi2)) * (741 * t5324 + 555 * t5325 - 1925 * t5326 + 1287 * t5328 - 39 + (-1419 * t5326 + 1001 * t5328 - 73) * t5323)

        if Bindx == 616:
            t5330 = np.cos(phi)
            t5331 = t5330 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.11e2) * ((1 + t5330) ** (0.7e1 / 0.2e1)) * (-32 * t5330 - 1 + (-208 * t5330 + 150 + 91 * t5331) * t5331) * ((1 - t5330) ** (-0.1e1 / 0.2e1))

        if Bindx == 617:
            t5335 = np.cos(phi)
            t5336 = t5335 ** 2
            t5338 = t5336 ** 2
            t5334 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.11e2) * t5334 ** 2 * (-110 * t5336 + 195 * t5338 + 11 + (50 * t5336 + 91 * t5338 - 45) * t5335)

        if Bindx == 618:
            t5340 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (-3 + 7 * t5340) * ((1 + t5340) ** (0.9e1 / 0.2e1)) * np.sqrt(0.286e3) * np.exp((3*1j) * (phi1 + 2 * phi2)) * ((1 - t5340) ** (0.3e1 / 0.2e1))

        if Bindx == 619:
            t5342 = np.cos(phi)
            t5346 = 1 + t5342
            t5343 = t5346 ** 2
            t5341 = -1 + t5342
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.1001e4) * t5341 ** 2 * t5346 * t5343 ** 2

        if Bindx == 620:
            t5347 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - 7 * phi2)) * np.sqrt(0.91e2) * ((1 - t5347) ** (0.11e2 / 0.2e1)) * ((1 + t5347) ** (0.3e1 / 0.2e1))

        if Bindx == 621:
            t5348 = np.cos(phi)
            t5352 = -1 + t5348
            t5349 = t5352 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.26e2) * t5352 * t5349 ** 2 * (1 + t5348) * (4 + 7 * t5348)

        if Bindx == 622:
            t5353 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - 5 * phi2)) * ((1 - t5353) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t5353)) * (25 + (104 + 91 * t5353) * t5353)

        if Bindx == 623:
            t5354 = np.cos(phi)
            t5355 = t5354 ** 2
            t5356 = t5354 * t5355
            t5359 = t5356 ** 2
            t5357 = t5355 ** 2
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((4*1j) * (phi1 - phi2)) * (-96 * t5355 - 115 * t5356 + 280 * t5357 - 208 * t5359 + 8 + (-3 * t5357 + 91 * t5359 + 43) * t5354)

        if Bindx == 624:
            t5361 = np.cos(phi)
            t5362 = t5361 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.11e2) * ((1 - t5361) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t5361)) * (117 * t5362 - 1 + (91 * t5362 + 33) * t5361)

        if Bindx == 625:
            t5365 = np.cos(phi)
            t5366 = t5365 ** 2
            t5368 = t5366 ** 2
            t5364 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.22e2) * t5364 ** 2 * (68 * t5366 - 104 * t5368 - 4 + (-62 * t5366 + 91 * t5368 + 11) * t5365)

        if Bindx == 626:
            t5370 = np.cos(phi)
            t5371 = t5370 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - phi2)) * np.sqrt(0.33e2) * ((1 - t5370) ** (0.5e1 / 0.2e1)) * ((1 + t5370) ** (0.3e1 / 0.2e1)) * (39 * t5371 - 3 + (91 * t5371 - 15) * t5370)

        if Bindx == 627:
            t5376 = np.sin(phi)
            t5374 = t5376 ** 2
            t5373 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((4*1j) * phi1) * np.sqrt(0.462e3) * t5374 ** 2 * t5373 * (13 * t5373 ** 2 - 3)

        if Bindx == 628:
            t5377 = np.cos(phi)
            t5378 = t5377 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 + phi2)) * np.sqrt(0.33e2) * ((1 - t5377) ** (0.3e1 / 0.2e1)) * ((1 + t5377) ** (0.5e1 / 0.2e1)) * (-39 * t5378 + 3 + (91 * t5378 - 15) * t5377)

        if Bindx == 629:
            t5381 = np.cos(phi)
            t5382 = t5381 ** 2
            t5384 = t5382 ** 2
            t5380 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.22e2) * t5380 ** 2 * (-68 * t5382 + 104 * t5384 + 4 + (-62 * t5382 + 91 * t5384 + 11) * t5381)

        if Bindx == 630:
            t5386 = np.cos(phi)
            t5387 = t5386 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.11e2) * np.sqrt((1 - t5386)) * ((1 + t5386) ** (0.7e1 / 0.2e1)) * (-117 * t5387 + 1 + (91 * t5387 + 33) * t5386)

        if Bindx == 631:
            t5389 = np.cos(phi)
            t5390 = t5389 ** 2
            t5391 = t5389 * t5390
            t5394 = t5391 ** 2
            t5392 = t5390 ** 2
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((4*1j) * (phi1 + phi2)) * (96 * t5390 - 115 * t5391 - 280 * t5392 + 208 * t5394 - 8 + (-3 * t5392 + 91 * t5394 + 43) * t5389)

        if Bindx == 632:
            t5396 = np.cos(phi)
            t5397 = t5396 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 + 5 * phi2)) * ((1 + t5396) ** (0.9e1 / 0.2e1)) * (-195 * t5397 - 25 + (91 * t5397 + 129) * t5396) * ((1 - t5396) ** (-0.1e1 / 0.2e1))

        if Bindx == 633:
            t5400 = np.cos(phi)
            t5401 = t5400 ** 2
            t5403 = t5401 ** 2
            t5399 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.26e2) * t5399 ** 2 * (4 * t5401 + 24 * t5403 - 4 + (26 * t5401 + 7 * t5403 - 9) * t5400)

        if Bindx == 634:
            t5405 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 + 7 * phi2)) * np.sqrt(0.91e2) * ((1 - t5405) ** (0.3e1 / 0.2e1)) * ((1 + t5405) ** (0.11e2 / 0.2e1))

        if Bindx == 635:
            t5406 = np.cos(phi)
            t5410 = -1 + t5406
            t5407 = t5410 ** 2
            t5408 = t5410 * t5407
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.91e2) * t5408 ** 2 * (1 + t5406)

        if Bindx == 636:
            t5411 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 - 6 * phi2)) * np.sqrt(0.26e2) * ((1 - t5411) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t5411)) * (5 + 7 * t5411)

        if Bindx == 637:
            t5412 = np.cos(phi)
            t5413 = t5412 ** 2
            t5414 = t5412 * t5413
            t5417 = t5414 ** 2
            t5415 = t5413 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((5*1j) * (phi1 - phi2)) * (129 * t5413 - 415 * t5414 + 175 * t5415 - 325 * t5417 - 43 + (303 * t5415 + 91 * t5417 + 85) * t5412)

        if Bindx == 638:
            t5419 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 - 4 * phi2)) * ((1 - t5419) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t5419)) * (25 + (104 + 91 * t5419) * t5419)

        if Bindx == 639:
            t5421 = np.cos(phi)
            t5422 = t5421 ** 2
            t5424 = t5422 ** 2
            t5420 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.11e2) * t5420 ** 2 * (110 * t5422 - 195 * t5424 - 11 + (50 * t5422 + 91 * t5424 - 45) * t5421)

        if Bindx == 640:
            t5426 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.22e2) * ((1 - t5426) ** (0.7e1 / 0.2e1)) * ((1 + t5426) ** (0.3e1 / 0.2e1)) * (1 + (52 + 91 * t5426) * t5426)

        if Bindx == 641:
            t5432 = np.sin(phi)
            t5430 = t5432 ** 2
            t5427 = np.cos(phi)
            t5428 = t5427 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (5 * phi1 - phi2)) * np.sqrt(0.33e2) * t5430 ** 2 * (-65 * t5428 + 5 + (91 * t5428 - 31) * t5427)

        if Bindx == 642:
            t5433 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.462e3) * ((1 - t5433) ** (0.5e1 / 0.2e1)) * ((1 + t5433) ** (0.5e1 / 0.2e1)) * (13 * t5433 ** 2 - 1)

        if Bindx == 643:
            t5439 = np.sin(phi)
            t5437 = t5439 ** 2
            t5434 = np.cos(phi)
            t5435 = t5434 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (5 * phi1 + phi2)) * np.sqrt(0.33e2) * t5437 ** 2 * (65 * t5435 - 5 + (91 * t5435 - 31) * t5434)

        if Bindx == 644:
            t5440 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.22e2) * ((1 - t5440) ** (0.3e1 / 0.2e1)) * ((1 + t5440) ** (0.7e1 / 0.2e1)) * (1 + (-52 + 91 * t5440) * t5440)

        if Bindx == 645:
            t5442 = np.cos(phi)
            t5443 = t5442 ** 2
            t5445 = t5443 ** 2
            t5441 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.11e2) * t5441 ** 2 * (-110 * t5443 + 195 * t5445 + 11 + (50 * t5443 + 91 * t5445 - 45) * t5442)

        if Bindx == 646:
            t5447 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 + 4 * phi2)) * np.sqrt((1 - t5447)) * ((1 + t5447) ** (0.9e1 / 0.2e1)) * (25 + (-104 + 91 * t5447) * t5447)

        if Bindx == 647:
            t5448 = np.cos(phi)
            t5449 = t5448 ** 2
            t5450 = t5448 * t5449
            t5453 = t5450 ** 2
            t5451 = t5449 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((5*1j) * (phi1 + phi2)) * (-129 * t5449 - 415 * t5450 - 175 * t5451 + 325 * t5453 + 43 + (303 * t5451 + 91 * t5453 + 85) * t5448)

        if Bindx == 648:
            t5455 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.26e2) * ((1 + t5455) ** (0.11e2 / 0.2e1)) * (5 + (-12 + 7 * t5455) * t5455) * ((1 - t5455) ** (-0.1e1 / 0.2e1))

        if Bindx == 649:
            t5456 = np.cos(phi)
            t5460 = 1 + t5456
            t5457 = t5460 ** 2
            t5458 = t5460 * t5457
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.91e2) * (-1 + t5456) * t5458 ** 2

        if Bindx == 650:
            t5461 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 - 7 * phi2)) * np.sqrt(0.14e2) * ((1 - t5461) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t5461))

        if Bindx == 651:
            t5462 = np.cos(phi)
            t5463 = t5462 ** 2
            t5464 = t5462 * t5463
            t5467 = t5464 ** 2
            t5465 = t5463 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((6*1j) * (phi1 - phi2)) * (48 * t5463 - 15 * t5464 - 50 * t5465 - 36 * t5467 + 6 + (69 * t5465 + 7 * t5467 - 29) * t5462)

        if Bindx == 652:
            t5469 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 - 5 * phi2)) * np.sqrt(0.26e2) * ((1 - t5469) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t5469)) * (5 + 7 * t5469)

        if Bindx == 653:
            t5471 = np.cos(phi)
            t5472 = t5471 ** 2
            t5474 = t5472 ** 2
            t5470 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.26e2) * t5470 ** 2 * (-4 * t5472 - 24 * t5474 + 4 + (26 * t5472 + 7 * t5474 - 9) * t5471)

        if Bindx == 654:
            t5476 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((3*1j) * (2 * phi1 - phi2)) * np.sqrt(0.286e3) * ((1 - t5476) ** (0.9e1 / 0.2e1)) * ((1 + t5476) ** (0.3e1 / 0.2e1)) * (3 + 7 * t5476)

        if Bindx == 655:
            t5482 = np.sin(phi)
            t5480 = t5482 ** 2
            t5477 = np.cos(phi)
            t5478 = t5477 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.143e3) * t5480 ** 2 * (-12 * t5478 + 2 + (7 * t5478 + 3) * t5477)

        if Bindx == 656:
            t5483 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 - phi2)) * np.sqrt(0.858e3) * ((1 - t5483) ** (0.7e1 / 0.2e1)) * ((1 + t5483) ** (0.5e1 / 0.2e1)) * (1 + 7 * t5483)

        if Bindx == 657:
            t5487 = np.sin(phi)
            t5484 = t5487 ** 2
            t5485 = t5487 * t5484
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((6*1j) * phi1) * np.sqrt(0.3003e4) * t5485 ** 2 * np.cos(phi)

        if Bindx == 658:
            t5488 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 + phi2)) * np.sqrt(0.858e3) * ((1 - t5488) ** (0.5e1 / 0.2e1)) * ((1 + t5488) ** (0.7e1 / 0.2e1)) * (-1 + 7 * t5488)

        if Bindx == 659:
            t5494 = np.sin(phi)
            t5492 = t5494 ** 2
            t5489 = np.cos(phi)
            t5490 = t5489 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.143e3) * t5492 ** 2 * (12 * t5490 - 2 + (7 * t5490 + 3) * t5489)

        if Bindx == 660:
            t5495 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((3*1j) * (2 * phi1 + phi2)) * np.sqrt(0.286e3) * ((1 - t5495) ** (0.3e1 / 0.2e1)) * ((1 + t5495) ** (0.9e1 / 0.2e1)) * (-3 + 7 * t5495)

        if Bindx == 661:
            t5497 = np.cos(phi)
            t5498 = t5497 ** 2
            t5500 = t5498 ** 2
            t5496 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.26e2) * t5496 ** 2 * (4 * t5498 + 24 * t5500 - 4 + (26 * t5498 + 7 * t5500 - 9) * t5497)

        if Bindx == 662:
            t5502 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.26e2) * np.sqrt((1 - t5502)) * ((1 + t5502) ** (0.11e2 / 0.2e1)) * (-5 + 7 * t5502)

        if Bindx == 663:
            t5503 = np.cos(phi)
            t5504 = t5503 ** 2
            t5505 = t5503 * t5504
            t5508 = t5505 ** 2
            t5506 = t5504 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((6*1j) * (phi1 + phi2)) * (-48 * t5504 - 15 * t5505 + 50 * t5506 + 36 * t5508 - 6 + (69 * t5506 + 7 * t5508 - 29) * t5503)

        if Bindx == 664:
            t5510 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t5510)) * ((1 + t5510) ** (0.13e2 / 0.2e1))

        if Bindx == 665:
            t5511 = np.cos(phi)
            t5512 = t5511 ** 2
            t5513 = t5511 * t5512
            t5516 = t5513 ** 2
            t5514 = t5512 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((7*1j) * (phi1 - phi2)) * (-21 * t5512 + 35 * t5513 - 35 * t5514 - 7 * t5516 - 1 + (21 * t5514 + t5516 + 7) * t5511)

        if Bindx == 666:
            t5518 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 - 6 * phi2)) * np.sqrt(0.14e2) * ((1 - t5518) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t5518))

        if Bindx == 667:
            t5519 = np.cos(phi)
            t5523 = -1 + t5519
            t5520 = t5523 ** 2
            t5521 = t5523 * t5520
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.91e2) * t5521 ** 2 * (1 + t5519)

        if Bindx == 668:
            t5524 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (7 * phi1 - 4 * phi2)) * np.sqrt(0.91e2) * ((1 - t5524) ** (0.11e2 / 0.2e1)) * ((1 + t5524) ** (0.3e1 / 0.2e1))

        if Bindx == 669:
            t5526 = np.cos(phi)
            t5530 = -1 + t5526
            t5527 = t5530 ** 2
            t5525 = 1 + t5526
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.1001e4) * t5530 * t5527 ** 2 * t5525 ** 2

        if Bindx == 670:
            t5531 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 - 2 * phi2)) * np.sqrt(0.2002e4) * ((1 - t5531) ** (0.9e1 / 0.2e1)) * ((1 + t5531) ** (0.5e1 / 0.2e1))

        if Bindx == 671:
            t5535 = np.sin(phi)
            t5532 = t5535 ** 2
            t5533 = t5535 * t5532
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (7 * phi1 - phi2)) * np.sqrt(0.3003e4) * t5533 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 672:
            t5536 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.858e3) * ((1 - t5536) ** (0.7e1 / 0.2e1)) * ((1 + t5536) ** (0.7e1 / 0.2e1))

        if Bindx == 673:
            t5540 = np.sin(phi)
            t5537 = t5540 ** 2
            t5538 = t5540 * t5537
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (7 * phi1 + phi2)) * np.sqrt(0.3003e4) * t5538 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 674:
            t5541 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 + 2 * phi2)) * np.sqrt(0.2002e4) * ((1 - t5541) ** (0.5e1 / 0.2e1)) * ((1 + t5541) ** (0.9e1 / 0.2e1))

        if Bindx == 675:
            t5543 = np.cos(phi)
            t5547 = 1 + t5543
            t5544 = t5547 ** 2
            t5542 = -1 + t5543
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.1001e4) * t5542 ** 2 * t5547 * t5544 ** 2

        if Bindx == 676:
            t5548 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (7 * phi1 + 4 * phi2)) * np.sqrt(0.91e2) * ((1 - t5548) ** (0.3e1 / 0.2e1)) * ((1 + t5548) ** (0.11e2 / 0.2e1))

        if Bindx == 677:
            t5549 = np.cos(phi)
            t5553 = 1 + t5549
            t5550 = t5553 ** 2
            t5551 = t5553 * t5550
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.91e2) * (-1 + t5549) * t5551 ** 2

        if Bindx == 678:
            t5554 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t5554)) * ((1 + t5554) ** (0.13e2 / 0.2e1))

        if Bindx == 679:
            t5555 = np.cos(phi)
            t5556 = t5555 ** 2
            t5557 = t5555 * t5556
            t5560 = t5557 ** 2
            t5558 = t5556 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((7*1j) * (phi1 + phi2)) * (21 * t5556 + 35 * t5557 + 35 * t5558 + 7 * t5560 + 1 + (21 * t5558 + t5560 + 7) * t5555)

        if Bindx == 680:
            t5562 = np.cos(phi)
            t5570 = 8 * t5562
            t5563 = t5562 ** 2
            t5565 = t5563 ** 2
            t5564 = t5562 * t5563
            tfunc[..., c] = (0.17e2 / 0.256e3) * np.exp((-8*1j) * (phi1 + phi2)) * (28 * t5563 + t5570 + 1 + (56 * t5562 + 70 + t5565) * t5565 + (56 + (t5570 + 28) * t5564) * t5564)

        if Bindx == 681:
            t5571 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 + 7 * phi2)) * ((1 + t5571) ** (0.15e2 / 0.2e1)) * np.sqrt((1 - t5571))

        if Bindx == 682:
            t5572 = np.cos(phi)
            t5577 = 1 + t5572
            t5573 = t5577 ** 2
            t5574 = t5577 * t5573
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.30e2) * (-1 + t5572) * t5577 * t5574 ** 2

        if Bindx == 683:
            t5578 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 + 5 * phi2)) * np.sqrt(0.35e2) * ((1 - t5578) ** (0.3e1 / 0.2e1)) * ((1 + t5578) ** (0.13e2 / 0.2e1))

        if Bindx == 684:
            t5580 = np.cos(phi)
            t5584 = 1 + t5580
            t5581 = t5584 ** 2
            t5582 = t5584 * t5581
            t5579 = -1 + t5580
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-4*1j) * (2 * phi1 + phi2)) * np.sqrt(0.455e3) * t5579 ** 2 * t5582 ** 2

        if Bindx == 685:
            t5585 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 + 3 * phi2)) * np.sqrt(0.273e3) * ((1 - t5585) ** (0.5e1 / 0.2e1)) * ((1 + t5585) ** (0.11e2 / 0.2e1))

        if Bindx == 686:
            t5586 = np.cos(phi)
            t5593 = -1 + t5586
            t5592 = 1 + t5586
            t5589 = t5592 ** 2
            t5587 = t5593 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (4 * phi1 + phi2)) * np.sqrt(0.2002e4) * t5593 * t5587 * t5592 * t5589 ** 2

        if Bindx == 687:
            t5594 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 + phi2)) * np.sqrt(0.715e3) * ((1 - t5594) ** (0.7e1 / 0.2e1)) * ((1 + t5594) ** (0.9e1 / 0.2e1))

        if Bindx == 688:
            t5598 = np.sin(phi)
            t5595 = t5598 ** 2
            t5596 = t5595 ** 2
            tfunc[..., c] = (0.51e2 / 0.256e3) * np.exp((-8*1j) * phi1) * np.sqrt(0.1430e4) * t5596 ** 2

        if Bindx == 689:
            t5599 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 - phi2)) * np.sqrt(0.715e3) * ((1 - t5599) ** (0.9e1 / 0.2e1)) * ((1 + t5599) ** (0.7e1 / 0.2e1))

        if Bindx == 690:
            t5600 = np.cos(phi)
            t5607 = -1 + t5600
            t5606 = 1 + t5600
            t5604 = t5606 ** 2
            t5601 = t5607 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (4 * phi1 - phi2)) * np.sqrt(0.2002e4) * t5607 * t5601 ** 2 * t5606 * t5604

        if Bindx == 691:
            t5608 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 - 3 * phi2)) * np.sqrt(0.273e3) * ((1 - t5608) ** (0.11e2 / 0.2e1)) * ((1 + t5608) ** (0.5e1 / 0.2e1))

        if Bindx == 692:
            t5610 = np.cos(phi)
            t5614 = -1 + t5610
            t5611 = t5614 ** 2
            t5612 = t5614 * t5611
            t5609 = 1 + t5610
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-4*1j) * (2 * phi1 - phi2)) * np.sqrt(0.455e3) * t5612 ** 2 * t5609 ** 2

        if Bindx == 693:
            t5615 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 - 5 * phi2)) * np.sqrt(0.35e2) * ((1 - t5615) ** (0.13e2 / 0.2e1)) * ((1 + t5615) ** (0.3e1 / 0.2e1))

        if Bindx == 694:
            t5616 = np.cos(phi)
            t5621 = -1 + t5616
            t5617 = t5621 ** 2
            t5618 = t5621 * t5617
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.30e2) * t5621 * t5618 ** 2 * (1 + t5616)

        if Bindx == 695:
            t5622 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 - 7 * phi2)) * ((1 - t5622) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t5622))

        if Bindx == 696:
            t5623 = np.cos(phi)
            t5631 = -8 * t5623
            t5624 = t5623 ** 2
            t5626 = t5624 ** 2
            t5625 = t5623 * t5624
            tfunc[..., c] = (0.17e2 / 0.256e3) * np.exp((-8*1j) * (phi1 - phi2)) * (28 * t5624 + t5631 + 1 + (-56 * t5623 + 70 + t5626) * t5626 + (-56 + (t5631 + 28) * t5625) * t5625)

        if Bindx == 697:
            t5632 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (7 * phi1 + 8 * phi2)) * np.sqrt((1 - t5632)) * ((1 + t5632) ** (0.15e2 / 0.2e1))

        if Bindx == 698:
            t5633 = np.cos(phi)
            t5634 = t5633 ** 2
            t5635 = t5633 * t5634
            t5638 = t5635 ** 2
            t5636 = t5634 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-7*1j) * (phi1 + phi2)) * (-91 * t5634 - 77 * t5635 + 119 * t5638 - 7 + (35 + 8 * t5636) * t5636 + (133 * t5636 + 49 * t5638 - 41) * t5633)

        if Bindx == 699:
            t5641 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.30e2) * ((1 + t5641) ** (0.13e2 / 0.2e1)) * (3 + (-7 + 4 * t5641) * t5641) * ((1 - t5641) ** (-0.1e1 / 0.2e1))

        if Bindx == 700:
            t5643 = np.cos(phi)
            t5644 = t5643 ** 2
            t5646 = t5644 ** 2
            t5645 = t5643 * t5644
            t5642 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.35e2) * t5642 ** 2 * (-10 * t5644 + 55 * t5646 - 5 + (30 + 8 * t5645) * t5645 + (35 * t5646 - 17) * t5643)

        if Bindx == 701:
            t5649 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (2 * t5649 - 1) * ((1 + t5649) ** (0.11e2 / 0.2e1)) * np.sqrt(0.455e3) * np.exp((-1*1j) * (7 * phi1 + 4 * phi2)) * ((1 - t5649) ** (0.3e1 / 0.2e1))

        if Bindx == 702:
            t5656 = np.sin(phi)
            t5654 = t5656 ** 2
            t5650 = np.cos(phi)
            t5651 = t5650 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.273e3) * t5654 ** 2 * (-t5650 - 3 + (21 * t5650 + 15 + 8 * t5651) * t5651)

        if Bindx == 703:
            t5657 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (-1 + 4 * t5657) * ((1 + t5657) ** (0.9e1 / 0.2e1)) * np.sqrt(0.2002e4) * np.exp((-1*1j) * (7 * phi1 + 2 * phi2)) * ((1 - t5657) ** (0.5e1 / 0.2e1))

        if Bindx == 704:
            t5662 = np.sin(phi)
            t5659 = t5662 ** 2
            t5660 = t5662 * t5659
            t5658 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 + phi2)) * np.sqrt(0.715e3) * t5660 ** 2 * (-1 + (7 + 8 * t5658) * t5658)

        if Bindx == 705:
            t5663 = np.cos(phi)
            t5667 = -4 * t5663
            t5664 = t5663 ** 2
            tfunc[..., c] = (0.51e2 / 0.64e2*1j) * t5663 * (t5667 + 1 + (t5667 + 6 + t5664) * t5664) * ((1 + t5663) ** (0.7e1 / 0.2e1)) * np.sqrt(0.1430e4) * np.exp((-7*1j) * phi1) * ((1 - t5663) ** (-0.1e1 / 0.2e1))

        if Bindx == 706:
            t5672 = np.sin(phi)
            t5669 = t5672 ** 2
            t5670 = t5672 * t5669
            t5668 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 - phi2)) * np.sqrt(0.715e3) * t5670 ** 2 * (-1 + (-7 + 8 * t5668) * t5668)

        if Bindx == 707:
            t5673 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (1 + 4 * t5673) * ((1 + t5673) ** (0.5e1 / 0.2e1)) * np.sqrt(0.2002e4) * np.exp((-1*1j) * (7 * phi1 - 2 * phi2)) * ((1 - t5673) ** (0.9e1 / 0.2e1))

        if Bindx == 708:
            t5680 = np.sin(phi)
            t5678 = t5680 ** 2
            t5674 = np.cos(phi)
            t5675 = t5674 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.273e3) * t5678 ** 2 * (t5674 - 3 + (-21 * t5674 + 15 + 8 * t5675) * t5675)

        if Bindx == 709:
            t5681 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (1 + 2 * t5681) * ((1 + t5681) ** (0.3e1 / 0.2e1)) * np.sqrt(0.455e3) * np.exp((-1*1j) * (7 * phi1 - 4 * phi2)) * ((1 - t5681) ** (0.11e2 / 0.2e1))

        if Bindx == 710:
            t5683 = np.cos(phi)
            t5684 = t5683 ** 2
            t5686 = t5684 ** 2
            t5685 = t5683 * t5684
            t5682 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.35e2) * t5682 ** 2 * (-10 * t5684 + 55 * t5686 - 5 + (-30 + 8 * t5685) * t5685 + (-35 * t5686 + 17) * t5683)

        if Bindx == 711:
            t5689 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (3 + 4 * t5689) * np.sqrt((1 + t5689)) * np.sqrt(0.30e2) * np.exp((-1*1j) * (7 * phi1 - 6 * phi2)) * ((1 - t5689) ** (0.13e2 / 0.2e1))

        if Bindx == 712:
            t5690 = np.cos(phi)
            t5691 = t5690 ** 2
            t5692 = t5690 * t5691
            t5695 = t5692 ** 2
            t5693 = t5691 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-7*1j) * (phi1 - phi2)) * (-91 * t5691 + 77 * t5692 + 119 * t5695 - 7 + (35 + 8 * t5693) * t5693 + (-133 * t5693 - 49 * t5695 + 41) * t5690)

        if Bindx == 713:
            t5698 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (7 * phi1 - 8 * phi2)) * ((1 - t5698) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t5698))

        if Bindx == 714:
            t5699 = np.cos(phi)
            t5704 = 1 + t5699
            t5700 = t5704 ** 2
            t5701 = t5704 * t5700
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.30e2) * (-1 + t5699) * t5704 * t5701 ** 2

        if Bindx == 715:
            t5705 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.30e2) * np.sqrt((1 - t5705)) * ((1 + t5705) ** (0.13e2 / 0.2e1)) * (-3 + 4 * t5705)

        if Bindx == 716:
            t5706 = np.cos(phi)
            t5707 = t5706 ** 2
            t5708 = t5706 * t5707
            t5711 = t5708 ** 2
            t5709 = t5707 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-6*1j) * (phi1 + phi2)) * (-175 * t5708 + 196 * t5711 + 16 + (-210 + 30 * t5709) * t5709 + (21 * t5709 + 135 * t5711 + 51) * t5706)

        if Bindx == 717:
            t5714 = np.cos(phi)
            t5715 = t5714 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.42e2) * ((1 + t5714) ** (0.11e2 / 0.2e1)) * (-45 * t5715 - 7 + (20 * t5715 + 32) * t5714) * ((1 - t5714) ** (-0.1e1 / 0.2e1))

        if Bindx == 718:
            t5718 = np.cos(phi)
            t5719 = t5718 ** 2
            t5720 = t5718 * t5719
            t5717 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.546e3) * t5717 ** 2 * (-t5718 + 1 + (-6 + 5 * t5720) * t5720 + (-9 + (15 * t5718 + 11) * t5719) * t5719)

        if Bindx == 719:
            t5724 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (1 + (-9 + 12 * t5724) * t5724) * ((1 + t5724) ** (0.9e1 / 0.2e1)) * np.sqrt(0.910e3) * np.exp((-3*1j) * (2 * phi1 + phi2)) * ((1 - t5724) ** (0.3e1 / 0.2e1))

        if Bindx == 720:
            t5730 = np.sin(phi)
            t5728 = t5730 ** 2
            t5725 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.15015e5) * t5728 ** 2 * t5725 * (-1 + (2 * t5725 + 3) * t5725 ** 2)

        if Bindx == 721:
            t5731 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (-1 + (-5 + 20 * t5731) * t5731) * ((1 + t5731) ** (0.7e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((-1*1j) * (6 * phi1 + phi2)) * ((1 - t5731) ** (0.5e1 / 0.2e1))

        if Bindx == 722:
            t5736 = np.sin(phi)
            t5733 = t5736 ** 2
            t5734 = t5736 * t5733
            t5732 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-6*1j) * phi1) * np.sqrt(0.429e3) * t5734 ** 2 * (15 * t5732 ** 2 - 1)

        if Bindx == 723:
            t5737 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (-1 + (5 + 20 * t5737) * t5737) * ((1 + t5737) ** (0.5e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((-1*1j) * (6 * phi1 - phi2)) * ((1 - t5737) ** (0.7e1 / 0.2e1))

        if Bindx == 724:
            t5743 = np.sin(phi)
            t5741 = t5743 ** 2
            t5738 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.15015e5) * t5741 ** 2 * t5738 * (1 + (2 * t5738 - 3) * t5738 ** 2)

        if Bindx == 725:
            t5744 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (1 + (9 + 12 * t5744) * t5744) * ((1 + t5744) ** (0.3e1 / 0.2e1)) * np.sqrt(0.910e3) * np.exp((-3*1j) * (2 * phi1 - phi2)) * ((1 - t5744) ** (0.9e1 / 0.2e1))

        if Bindx == 726:
            t5746 = np.cos(phi)
            t5747 = t5746 ** 2
            t5748 = t5746 * t5747
            t5745 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.546e3) * t5745 ** 2 * (t5746 + 1 + (6 + 5 * t5748) * t5748 + (-9 + (-15 * t5746 + 11) * t5747) * t5747)

        if Bindx == 727:
            t5752 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (7 + (25 + 20 * t5752) * t5752) * np.sqrt((1 + t5752)) * np.sqrt(0.42e2) * np.exp((-1*1j) * (6 * phi1 - 5 * phi2)) * ((1 - t5752) ** (0.11e2 / 0.2e1))

        if Bindx == 728:
            t5753 = np.cos(phi)
            t5754 = t5753 ** 2
            t5755 = t5753 * t5754
            t5758 = t5755 ** 2
            t5756 = t5754 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-6*1j) * (phi1 - phi2)) * (175 * t5755 + 196 * t5758 + 16 + (-210 + 30 * t5756) * t5756 + (-21 * t5756 - 135 * t5758 - 51) * t5753)

        if Bindx == 729:
            t5761 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (3 + 4 * t5761) * np.sqrt((1 + t5761)) * np.sqrt(0.30e2) * np.exp((-1*1j) * (6 * phi1 - 7 * phi2)) * ((1 - t5761) ** (0.13e2 / 0.2e1))

        if Bindx == 730:
            t5762 = np.cos(phi)
            t5767 = -1 + t5762
            t5763 = t5767 ** 2
            t5764 = t5767 * t5763
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.30e2) * t5767 * t5764 ** 2 * (1 + t5762)

        if Bindx == 731:
            t5768 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (5 * phi1 + 8 * phi2)) * np.sqrt(0.35e2) * ((1 - t5768) ** (0.3e1 / 0.2e1)) * ((1 + t5768) ** (0.13e2 / 0.2e1))

        if Bindx == 732:
            t5769 = np.cos(phi)
            t5773 = 1 + t5769
            t5770 = t5773 ** 2
            t5771 = t5773 * t5770
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.35e2) * (-1 + t5769) * t5771 ** 2 * (-5 + 8 * t5769)

        if Bindx == 733:
            t5774 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.42e2) * np.sqrt((1 - t5774)) * ((1 + t5774) ** (0.11e2 / 0.2e1)) * (7 + (-25 + 20 * t5774) * t5774)

        if Bindx == 734:
            t5775 = np.cos(phi)
            t5776 = t5775 ** 2
            t5777 = t5775 * t5776
            t5780 = t5777 ** 2
            t5778 = t5776 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-5*1j) * (phi1 + phi2)) * (495 * t5776 + 145 * t5777 + 469 * t5780 - 45 + (-1135 + 280 * t5778) * t5778 + (-1025 * t5778 + 875 * t5780 + 69) * t5775)

        if Bindx == 735:
            t5783 = np.cos(phi)
            t5784 = t5783 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.13e2) * ((1 + t5783) ** (0.9e1 / 0.2e1)) * (-45 * t5783 + 3 + (-175 * t5783 + 147 + 70 * t5784) * t5784) * ((1 - t5783) ** (-0.1e1 / 0.2e1))

        if Bindx == 736:
            t5788 = np.cos(phi)
            t5789 = t5788 ** 2
            t5791 = t5789 ** 2
            t5790 = t5788 * t5789
            t5787 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.195e3) * t5787 ** 2 * (-18 * t5789 - 7 * t5791 + 1 + (-90 + 56 * t5790) * t5790 + (105 * t5791 + 17) * t5788)

        if Bindx == 737:
            t5794 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (1 + (28 * t5794 - 21) * t5794 ** 2) * ((1 + t5794) ** (0.7e1 / 0.2e1)) * np.sqrt(0.1430e4) * np.exp((-1*1j) * (5 * phi1 + 2 * phi2)) * ((1 - t5794) ** (0.3e1 / 0.2e1))

        if Bindx == 738:
            t5803 = np.sin(phi)
            t5801 = t5803 ** 2
            t5797 = np.cos(phi)
            t5798 = t5797 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 + phi2)) * np.sqrt(0.1001e4) * t5801 ** 2 * (-5 * t5797 + 1 + (25 * t5797 - 21 + 40 * t5798) * t5798)

        if Bindx == 739:
            t5804 = np.cos(phi)
            tfunc[..., c] = (-0.51e2 / 0.64e2*1j) * (5 * t5804 ** 2 - 1) * t5804 * ((1 + t5804) ** (0.5e1 / 0.2e1)) * np.sqrt(0.2002e4) * np.exp((-5*1j) * phi1) * ((1 - t5804) ** (0.5e1 / 0.2e1))

        if Bindx == 740:
            t5811 = np.sin(phi)
            t5809 = t5811 ** 2
            t5805 = np.cos(phi)
            t5806 = t5805 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 - phi2)) * np.sqrt(0.1001e4) * t5809 ** 2 * (5 * t5805 + 1 + (-25 * t5805 - 21 + 40 * t5806) * t5806)

        if Bindx == 741:
            t5812 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (-1 + (28 * t5812 + 21) * t5812 ** 2) * ((1 + t5812) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1430e4) * np.exp((-1*1j) * (5 * phi1 - 2 * phi2)) * ((1 - t5812) ** (0.7e1 / 0.2e1))

        if Bindx == 742:
            t5816 = np.cos(phi)
            t5817 = t5816 ** 2
            t5819 = t5817 ** 2
            t5818 = t5816 * t5817
            t5815 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.195e3) * t5815 ** 2 * (-18 * t5817 - 7 * t5819 + 1 + (90 + 56 * t5818) * t5818 + (-105 * t5819 - 17) * t5816)

        if Bindx == 743:
            t5822 = np.cos(phi)
            t5823 = t5822 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * (105 * t5823 + 3 + (70 * t5823 + 42) * t5822) * np.sqrt((1 + t5822)) * np.sqrt(0.13e2) * np.exp((-1*1j) * (5 * phi1 - 4 * phi2)) * ((1 - t5822) ** (0.9e1 / 0.2e1))

        if Bindx == 744:
            t5825 = np.cos(phi)
            t5826 = t5825 ** 2
            t5827 = t5825 * t5826
            t5830 = t5827 ** 2
            t5828 = t5826 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-5*1j) * (phi1 - phi2)) * (495 * t5826 - 145 * t5827 + 469 * t5830 - 45 + (-1135 + 280 * t5828) * t5828 + (1025 * t5828 - 875 * t5830 - 69) * t5825)

        if Bindx == 745:
            t5833 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (7 + (25 + 20 * t5833) * t5833) * np.sqrt((1 + t5833)) * np.sqrt(0.42e2) * np.exp((-1*1j) * (5 * phi1 - 6 * phi2)) * ((1 - t5833) ** (0.11e2 / 0.2e1))

        if Bindx == 746:
            t5835 = np.cos(phi)
            t5836 = t5835 ** 2
            t5838 = t5836 ** 2
            t5837 = t5835 * t5836
            t5834 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.35e2) * t5834 ** 2 * (-10 * t5836 + 55 * t5838 - 5 + (-30 + 8 * t5837) * t5837 + (-35 * t5838 + 17) * t5835)

        if Bindx == 747:
            t5841 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (5 * phi1 - 8 * phi2)) * np.sqrt(0.35e2) * ((1 - t5841) ** (0.13e2 / 0.2e1)) * ((1 + t5841) ** (0.3e1 / 0.2e1))

        if Bindx == 748:
            t5843 = np.cos(phi)
            t5847 = 1 + t5843
            t5844 = t5847 ** 2
            t5845 = t5847 * t5844
            t5842 = -1 + t5843
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-4*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.455e3) * t5842 ** 2 * t5845 ** 2

        if Bindx == 749:
            t5848 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (4 * phi1 + 7 * phi2)) * np.sqrt(0.455e3) * ((1 - t5848) ** (0.3e1 / 0.2e1)) * ((1 + t5848) ** (0.11e2 / 0.2e1)) * (2 * t5848 - 1)

        if Bindx == 750:
            t5850 = np.cos(phi)
            t5851 = t5850 ** 2
            t5852 = t5850 * t5851
            t5849 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.546e3) * t5849 ** 2 * (-t5850 + 1 + (-6 + 5 * t5852) * t5852 + (-9 + (15 * t5850 + 11) * t5851) * t5851)

        if Bindx == 751:
            t5856 = np.cos(phi)
            t5857 = t5856 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.13e2) * np.sqrt((1 - t5856)) * ((1 + t5856) ** (0.9e1 / 0.2e1)) * (-105 * t5857 - 3 + (70 * t5857 + 42) * t5856)

        if Bindx == 752:
            t5859 = np.cos(phi)
            t5860 = t5859 ** 2
            t5861 = t5859 * t5860
            t5864 = t5861 ** 2
            t5862 = t5860 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-4*1j) * (phi1 + phi2)) * (180 * t5860 + 770 * t5861 - 364 * t5864 - 9 + (-230 + 455 * t5862) * t5862 + (-1534 * t5862 + 910 * t5864 - 114) * t5859)

        if Bindx == 753:
            t5867 = np.cos(phi)
            t5868 = t5867 ** 2
            t5870 = t5868 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.15e2) * ((1 + t5867) ** (0.7e1 / 0.2e1)) * (-78 * t5868 - 455 * t5870 + 5 + (364 * t5868 + 182 * t5870 - 18) * t5867) * ((1 - t5867) ** (-0.1e1 / 0.2e1))

        if Bindx == 754:
            t5873 = np.cos(phi)
            t5874 = t5873 ** 2
            t5876 = t5874 ** 2
            t5875 = t5873 * t5874
            t5872 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.110e3) * t5872 ** 2 * (25 * t5874 - 91 * t5876 - 1 + (-78 + 91 * t5875) * t5875 + (91 * t5876 + 11) * t5873)

        if Bindx == 755:
            t5879 = np.cos(phi)
            t5880 = t5879 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (13 * t5879 + 1 + (-65 * t5879 - 39 + 130 * t5880) * t5880) * ((1 + t5879) ** (0.5e1 / 0.2e1)) * np.sqrt(0.77e2) * np.exp((-1*1j) * (4 * phi1 + phi2)) * ((1 - t5879) ** (0.3e1 / 0.2e1))

        if Bindx == 756:
            t5888 = np.sin(phi)
            t5886 = t5888 ** 2
            t5883 = np.cos(phi)
            t5884 = t5883 ** 2
            tfunc[..., c] = (0.51e2 / 0.128e3) * np.exp((-4*1j) * phi1) * np.sqrt(0.154e3) * t5886 ** 2 * (1 + (-26 + 65 * t5884) * t5884)

        if Bindx == 757:
            t5889 = np.cos(phi)
            t5890 = t5889 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * (-13 * t5889 + 1 + (65 * t5889 - 39 + 130 * t5890) * t5890) * ((1 + t5889) ** (0.3e1 / 0.2e1)) * np.sqrt(0.77e2) * np.exp((-1*1j) * (4 * phi1 - phi2)) * ((1 - t5889) ** (0.5e1 / 0.2e1))

        if Bindx == 758:
            t5894 = np.cos(phi)
            t5895 = t5894 ** 2
            t5900 = -91 * t5895 ** 2
            t5896 = t5894 * t5895
            t5893 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.110e3) * t5893 ** 2 * (25 * t5895 + t5900 - 1 + (78 + 91 * t5896) * t5896 + (t5900 - 11) * t5894)

        if Bindx == 759:
            t5901 = np.cos(phi)
            t5902 = t5901 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (-13 * t5901 - 5 + (273 * t5901 + 91 + 182 * t5902) * t5902) * np.sqrt((1 + t5901)) * np.sqrt(0.15e2) * np.exp((-1*1j) * (4 * phi1 - 3 * phi2)) * ((1 - t5901) ** (0.7e1 / 0.2e1))

        if Bindx == 760:
            t5905 = np.cos(phi)
            t5906 = t5905 ** 2
            t5907 = t5905 * t5906
            t5910 = t5907 ** 2
            t5908 = t5906 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-4*1j) * (phi1 - phi2)) * (180 * t5906 - 770 * t5907 - 364 * t5910 - 9 + (-230 + 455 * t5908) * t5908 + (1534 * t5908 - 910 * t5910 + 114) * t5905)

        if Bindx == 761:
            t5913 = np.cos(phi)
            t5914 = t5913 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * (105 * t5914 + 3 + (70 * t5914 + 42) * t5913) * np.sqrt((1 + t5913)) * np.sqrt(0.13e2) * np.exp((-1*1j) * (4 * phi1 - 5 * phi2)) * ((1 - t5913) ** (0.9e1 / 0.2e1))

        if Bindx == 762:
            t5917 = np.cos(phi)
            t5918 = t5917 ** 2
            t5919 = t5917 * t5918
            t5916 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.546e3) * t5916 ** 2 * (t5917 + 1 + (6 + 5 * t5919) * t5919 + (-9 + (-15 * t5917 + 11) * t5918) * t5918)

        if Bindx == 763:
            t5923 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (1 + 2 * t5923) * ((1 + t5923) ** (0.3e1 / 0.2e1)) * np.sqrt(0.455e3) * np.exp((-1*1j) * (4 * phi1 - 7 * phi2)) * ((1 - t5923) ** (0.11e2 / 0.2e1))

        if Bindx == 764:
            t5925 = np.cos(phi)
            t5929 = -1 + t5925
            t5926 = t5929 ** 2
            t5927 = t5929 * t5926
            t5924 = 1 + t5925
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-4*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.455e3) * t5927 ** 2 * t5924 ** 2

        if Bindx == 765:
            t5930 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (3 * phi1 + 8 * phi2)) * np.sqrt(0.273e3) * ((1 - t5930) ** (0.5e1 / 0.2e1)) * ((1 + t5930) ** (0.11e2 / 0.2e1))

        if Bindx == 766:
            t5932 = np.cos(phi)
            t5936 = 1 + t5932
            t5933 = t5936 ** 2
            t5931 = -1 + t5932
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.273e3) * t5931 ** 2 * t5936 * t5933 ** 2 * (-3 + 8 * t5932)

        if Bindx == 767:
            t5937 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((-3*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.910e3) * ((1 - t5937) ** (0.3e1 / 0.2e1)) * ((1 + t5937) ** (0.9e1 / 0.2e1)) * (1 + (-9 + 12 * t5937) * t5937)

        if Bindx == 768:
            t5939 = np.cos(phi)
            t5940 = t5939 ** 2
            t5942 = t5940 ** 2
            t5941 = t5939 * t5940
            t5938 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.195e3) * t5938 ** 2 * (-18 * t5940 - 7 * t5942 + 1 + (-90 + 56 * t5941) * t5941 + (105 * t5942 + 17) * t5939)

        if Bindx == 769:
            t5945 = np.cos(phi)
            t5946 = t5945 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.15e2) * np.sqrt((1 - t5945)) * ((1 + t5945) ** (0.7e1 / 0.2e1)) * (13 * t5945 - 5 + (-273 * t5945 + 91 + 182 * t5946) * t5946)

        if Bindx == 770:
            t5949 = np.cos(phi)
            t5950 = t5949 ** 2
            t5951 = t5949 * t5950
            t5954 = t5951 ** 2
            t5952 = t5950 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-3*1j) * (phi1 + phi2)) * (-459 * t5950 + 2107 * t5951 - 3913 * t5954 + 17 + (2235 + 2184 * t5952) * t5952 + (-4251 * t5952 + 2457 * t5954 - 249) * t5949)

        if Bindx == 771:
            t5957 = np.cos(phi)
            t5958 = t5957 ** 2
            t5960 = t5958 ** 2
            t5959 = t5957 * t5958
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.66e2) * ((1 + t5957) ** (0.5e1 / 0.2e1)) * (-150 * t5958 + 455 * t5960 + 3 + (130 + 364 * t5959) * t5959 + (-819 * t5960 + 17) * t5957) * ((1 - t5957) ** (-0.1e1 / 0.2e1))

        if Bindx == 772:
            t5964 = np.cos(phi)
            t5965 = t5964 ** 2
            t5967 = t5965 ** 2
            t5966 = t5964 * t5965
            t5963 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.1155e4) * t5963 ** 2 * (30 * t5965 - 117 * t5967 - 1 + (-26 + 104 * t5966) * t5966 + (39 * t5967 + 3) * t5964)

        if Bindx == 773:
            t5970 = np.cos(phi)
            t5971 = t5970 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (3 + (-26 + 39 * t5971) * t5971) * t5970 * ((1 + t5970) ** (0.3e1 / 0.2e1)) * np.sqrt(0.2310e4) * np.exp((-3*1j) * phi1) * ((1 - t5970) ** (0.3e1 / 0.2e1))

        if Bindx == 774:
            t5974 = np.cos(phi)
            t5975 = t5974 ** 2
            t5977 = t5975 ** 2
            t5976 = t5974 * t5975
            t5973 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.1155e4) * t5973 ** 2 * (30 * t5975 - 117 * t5977 - 1 + (26 + 104 * t5976) * t5976 + (-39 * t5977 - 3) * t5974)

        if Bindx == 775:
            t5980 = np.cos(phi)
            t5981 = t5980 ** 2
            t5982 = t5981 ** 2
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (-130 * t5981 + 455 * t5982 + 3 + (364 * t5982 - 20) * t5980) * np.sqrt((1 + t5980)) * np.sqrt(0.66e2) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t5980) ** (0.5e1 / 0.2e1))

        if Bindx == 776:
            t5984 = np.cos(phi)
            t5985 = t5984 ** 2
            t5986 = t5984 * t5985
            t5989 = t5986 ** 2
            t5987 = t5985 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-3*1j) * (phi1 - phi2)) * (-459 * t5985 - 2107 * t5986 - 3913 * t5989 + 17 + (2235 + 2184 * t5987) * t5987 + (4251 * t5987 - 2457 * t5989 + 249) * t5984)

        if Bindx == 777:
            t5992 = np.cos(phi)
            t5993 = t5992 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (-13 * t5992 - 5 + (273 * t5992 + 91 + 182 * t5993) * t5993) * np.sqrt((1 + t5992)) * np.sqrt(0.15e2) * np.exp((-1*1j) * (3 * phi1 - 4 * phi2)) * ((1 - t5992) ** (0.7e1 / 0.2e1))

        if Bindx == 778:
            t5997 = np.cos(phi)
            t5998 = t5997 ** 2
            t6000 = t5998 ** 2
            t5999 = t5997 * t5998
            t5996 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.195e3) * t5996 ** 2 * (-18 * t5998 - 7 * t6000 + 1 + (90 + 56 * t5999) * t5999 + (-105 * t6000 - 17) * t5997)

        if Bindx == 779:
            t6003 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (1 + (9 + 12 * t6003) * t6003) * ((1 + t6003) ** (0.3e1 / 0.2e1)) * np.sqrt(0.910e3) * np.exp((-3*1j) * (phi1 - 2 * phi2)) * ((1 - t6003) ** (0.9e1 / 0.2e1))

        if Bindx == 780:
            t6010 = np.sin(phi)
            t6008 = t6010 ** 2
            t6004 = np.cos(phi)
            t6005 = t6004 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.273e3) * t6008 ** 2 * (t6004 - 3 + (-21 * t6004 + 15 + 8 * t6005) * t6005)

        if Bindx == 781:
            t6011 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (3 * phi1 - 8 * phi2)) * np.sqrt(0.273e3) * ((1 - t6011) ** (0.11e2 / 0.2e1)) * ((1 + t6011) ** (0.5e1 / 0.2e1))

        if Bindx == 782:
            t6012 = np.cos(phi)
            t6019 = -1 + t6012
            t6018 = 1 + t6012
            t6015 = t6018 ** 2
            t6013 = t6019 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.2002e4) * t6019 * t6013 * t6018 * t6015 ** 2

        if Bindx == 783:
            t6020 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + 7 * phi2)) * np.sqrt(0.2002e4) * ((1 - t6020) ** (0.5e1 / 0.2e1)) * ((1 + t6020) ** (0.9e1 / 0.2e1)) * (-1 + 4 * t6020)

        if Bindx == 784:
            t6026 = np.sin(phi)
            t6024 = t6026 ** 2
            t6021 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.15015e5) * t6024 ** 2 * t6021 * (-1 + (2 * t6021 + 3) * t6021 ** 2)

        if Bindx == 785:
            t6027 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.1430e4) * ((1 - t6027) ** (0.3e1 / 0.2e1)) * ((1 + t6027) ** (0.7e1 / 0.2e1)) * (1 + (28 * t6027 - 21) * t6027 ** 2)

        if Bindx == 786:
            t6031 = np.cos(phi)
            t6032 = t6031 ** 2
            t6034 = t6032 ** 2
            t6033 = t6031 * t6032
            t6030 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.110e3) * t6030 ** 2 * (25 * t6032 - 91 * t6034 - 1 + (-78 + 91 * t6033) * t6033 + (91 * t6034 + 11) * t6031)

        if Bindx == 787:
            t6037 = np.cos(phi)
            t6038 = t6037 ** 2
            t6039 = t6038 ** 2
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.66e2) * np.sqrt((1 - t6037)) * ((1 + t6037) ** (0.5e1 / 0.2e1)) * (130 * t6038 - 455 * t6039 - 3 + (364 * t6039 - 20) * t6037)

        if Bindx == 788:
            t6041 = np.cos(phi)
            t6042 = t6041 ** 2
            t6043 = t6041 * t6042
            t6046 = t6043 ** 2
            t6044 = t6042 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + phi2)) * (-512 * t6042 + 671 * t6043 - 4004 * t6046 + 16 + (2530 + 2002 * t6044) * t6044 + (-1573 * t6044 + 1001 * t6046 - 67) * t6041)

        if Bindx == 789:
            t6049 = np.cos(phi)
            t6050 = t6049 ** 2
            t6051 = t6049 * t6050
            t6053 = t6051 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.70e2) * ((1 + t6049) ** (0.3e1 / 0.2e1)) * (-220 * t6051 - 1001 * t6053 + 1 + (-99 + 715 * t6050) * t6050 + (572 * t6053 + 32) * t6049) * ((1 - t6049) ** (-0.1e1 / 0.2e1))

        if Bindx == 790:
            t6056 = np.cos(phi)
            t6057 = t6056 ** 2
            t6058 = t6057 ** 2
            t6055 = np.sin(phi)
            tfunc[..., c] = -(0.51e2 / 0.64e2) * np.exp((-2*1j) * phi1) * np.sqrt(0.35e2) * t6055 ** 2 * (-143 * t6058 - 1 + (143 * t6058 + 33) * t6057)

        if Bindx == 791:
            t6060 = np.cos(phi)
            t6061 = t6060 ** 2
            t6063 = t6061 ** 2
            t6062 = t6060 * t6061
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (66 * t6061 - 429 * t6063 - 1 + (-286 + 572 * t6062) * t6062 + (429 * t6063 + 33) * t6060) * np.sqrt((1 + t6060)) * np.sqrt(0.70e2) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t6060) ** (0.3e1 / 0.2e1))

        if Bindx == 792:
            t6066 = np.cos(phi)
            t6067 = t6066 ** 2
            t6068 = t6066 * t6067
            t6071 = t6068 ** 2
            t6069 = t6067 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - phi2)) * (-512 * t6067 - 671 * t6068 - 4004 * t6071 + 16 + (2530 + 2002 * t6069) * t6069 + (1573 * t6069 - 1001 * t6071 + 67) * t6066)

        if Bindx == 793:
            t6074 = np.cos(phi)
            t6075 = t6074 ** 2
            t6076 = t6075 ** 2
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (-130 * t6075 + 455 * t6076 + 3 + (364 * t6076 - 20) * t6074) * np.sqrt((1 + t6074)) * np.sqrt(0.66e2) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t6074) ** (0.5e1 / 0.2e1))

        if Bindx == 794:
            t6079 = np.cos(phi)
            t6080 = t6079 ** 2
            t6085 = -91 * t6080 ** 2
            t6081 = t6079 * t6080
            t6078 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.110e3) * t6078 ** 2 * (25 * t6080 + t6085 - 1 + (78 + 91 * t6081) * t6081 + (t6085 - 11) * t6079)

        if Bindx == 795:
            t6086 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (-1 + (28 * t6086 + 21) * t6086 ** 2) * ((1 + t6086) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1430e4) * np.exp((-1*1j) * (2 * phi1 - 5 * phi2)) * ((1 - t6086) ** (0.7e1 / 0.2e1))

        if Bindx == 796:
            t6094 = np.sin(phi)
            t6092 = t6094 ** 2
            t6089 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.15015e5) * t6092 ** 2 * t6089 * (1 + (2 * t6089 - 3) * t6089 ** 2)

        if Bindx == 797:
            t6095 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (1 + 4 * t6095) * ((1 + t6095) ** (0.5e1 / 0.2e1)) * np.sqrt(0.2002e4) * np.exp((-1*1j) * (2 * phi1 - 7 * phi2)) * ((1 - t6095) ** (0.9e1 / 0.2e1))

        if Bindx == 798:
            t6096 = np.cos(phi)
            t6103 = -1 + t6096
            t6102 = 1 + t6096
            t6100 = t6102 ** 2
            t6097 = t6103 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.2002e4) * t6103 * t6097 ** 2 * t6102 * t6100

        if Bindx == 799:
            t6104 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (phi1 + 8 * phi2)) * np.sqrt(0.715e3) * ((1 - t6104) ** (0.7e1 / 0.2e1)) * ((1 + t6104) ** (0.9e1 / 0.2e1))

        if Bindx == 800:
            t6109 = np.sin(phi)
            t6106 = t6109 ** 2
            t6107 = t6109 * t6106
            t6105 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + 7 * phi2)) * np.sqrt(0.715e3) * t6107 ** 2 * (-1 + (7 + 8 * t6105) * t6105)

        if Bindx == 801:
            t6110 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (phi1 + 6 * phi2)) * np.sqrt(0.858e3) * ((1 - t6110) ** (0.5e1 / 0.2e1)) * ((1 + t6110) ** (0.7e1 / 0.2e1)) * (-1 + (-5 + 20 * t6110) * t6110)

        if Bindx == 802:
            t6117 = np.sin(phi)
            t6115 = t6117 ** 2
            t6111 = np.cos(phi)
            t6112 = t6111 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.1001e4) * t6115 ** 2 * (-5 * t6111 + 1 + (25 * t6111 - 21 + 40 * t6112) * t6112)

        if Bindx == 803:
            t6118 = np.cos(phi)
            t6119 = t6118 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.77e2) * ((1 - t6118) ** (0.3e1 / 0.2e1)) * ((1 + t6118) ** (0.5e1 / 0.2e1)) * (13 * t6118 + 1 + (-65 * t6118 - 39 + 130 * t6119) * t6119)

        if Bindx == 804:
            t6123 = np.cos(phi)
            t6124 = t6123 ** 2
            t6126 = t6124 ** 2
            t6125 = t6123 * t6124
            t6122 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.1155e4) * t6122 ** 2 * (30 * t6124 - 117 * t6126 - 1 + (-26 + 104 * t6125) * t6125 + (39 * t6126 + 3) * t6123)

        if Bindx == 805:
            t6129 = np.cos(phi)
            t6130 = t6129 ** 2
            t6135 = -429 * t6130 ** 2
            t6131 = t6129 * t6130
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.70e2) * np.sqrt((1 - t6129)) * ((1 + t6129) ** (0.3e1 / 0.2e1)) * (66 * t6130 + t6135 - 1 + (286 + 572 * t6131) * t6131 + (t6135 - 33) * t6129)

        if Bindx == 806:
            t6136 = np.cos(phi)
            t6137 = t6136 ** 2
            t6138 = t6136 * t6137
            t6141 = t6138 ** 2
            t6139 = t6137 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + phi2)) * (-1225 * t6137 + 385 * t6138 - 11011 * t6141 + 35 + (6545 + 5720 * t6139) * t6139 + (-1001 * t6139 + 715 * t6141 - 35) * t6136)

        if Bindx == 807:
            t6144 = np.cos(phi)
            t6145 = t6144 ** 2
            t6146 = t6144 * t6145
            t6151 = -1001 * t6145 ** 2 + 715 * t6146 ** 2 - 35
            tfunc[..., c] = (0.51e2 / 0.64e2*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.2e1) * np.sqrt((1 + t6144)) * t6144 * (t6151 * t6144 - 385 * t6145 + 385 * t6146 - t6151) * ((1 - t6144) ** (-0.1e1 / 0.2e1))

        if Bindx == 808:
            t6152 = np.cos(phi)
            t6153 = t6152 ** 2
            t6154 = t6152 * t6153
            t6157 = t6154 ** 2
            t6155 = t6153 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - phi2)) * (-1225 * t6153 - 385 * t6154 - 11011 * t6157 + 35 + (6545 + 5720 * t6155) * t6155 + (1001 * t6155 - 715 * t6157 + 35) * t6152)

        if Bindx == 809:
            t6160 = np.cos(phi)
            t6161 = t6160 ** 2
            t6163 = t6161 ** 2
            t6162 = t6160 * t6161
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (66 * t6161 - 429 * t6163 - 1 + (-286 + 572 * t6162) * t6162 + (429 * t6163 + 33) * t6160) * np.sqrt((1 + t6160)) * np.sqrt(0.70e2) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t6160) ** (0.3e1 / 0.2e1))

        if Bindx == 810:
            t6167 = np.cos(phi)
            t6168 = t6167 ** 2
            t6170 = t6168 ** 2
            t6169 = t6167 * t6168
            t6166 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.1155e4) * t6166 ** 2 * (30 * t6168 - 117 * t6170 - 1 + (26 + 104 * t6169) * t6169 + (-39 * t6170 - 3) * t6167)

        if Bindx == 811:
            t6173 = np.cos(phi)
            t6174 = t6173 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * (-13 * t6173 + 1 + (65 * t6173 - 39 + 130 * t6174) * t6174) * ((1 + t6173) ** (0.3e1 / 0.2e1)) * np.sqrt(0.77e2) * np.exp((-1*1j) * (phi1 - 4 * phi2)) * ((1 - t6173) ** (0.5e1 / 0.2e1))

        if Bindx == 812:
            t6183 = np.sin(phi)
            t6181 = t6183 ** 2
            t6177 = np.cos(phi)
            t6178 = t6177 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.1001e4) * t6181 ** 2 * (5 * t6177 + 1 + (-25 * t6177 - 21 + 40 * t6178) * t6178)

        if Bindx == 813:
            t6184 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (-1 + (5 + 20 * t6184) * t6184) * ((1 + t6184) ** (0.5e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((-1*1j) * (phi1 - 6 * phi2)) * ((1 - t6184) ** (0.7e1 / 0.2e1))

        if Bindx == 814:
            t6189 = np.sin(phi)
            t6186 = t6189 ** 2
            t6187 = t6189 * t6186
            t6185 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - 7 * phi2)) * np.sqrt(0.715e3) * t6187 ** 2 * (-1 + (-7 + 8 * t6185) * t6185)

        if Bindx == 815:
            t6190 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (phi1 - 8 * phi2)) * np.sqrt(0.715e3) * ((1 - t6190) ** (0.9e1 / 0.2e1)) * ((1 + t6190) ** (0.7e1 / 0.2e1))

        if Bindx == 816:
            t6194 = np.sin(phi)
            t6191 = t6194 ** 2
            t6192 = t6191 ** 2
            tfunc[..., c] = (0.51e2 / 0.256e3) * np.exp((-8*1j) * phi2) * np.sqrt(0.1430e4) * t6192 ** 2

        if Bindx == 817:
            t6195 = np.cos(phi)
            tfunc[..., c] = (0.51e2 / 0.64e2*1j) * np.exp((-7*1j) * phi2) * np.sqrt(0.1430e4) * ((1 - t6195) ** (0.7e1 / 0.2e1)) * ((1 + t6195) ** (0.7e1 / 0.2e1)) * t6195

        if Bindx == 818:
            t6200 = np.sin(phi)
            t6197 = t6200 ** 2
            t6198 = t6200 * t6197
            t6196 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-6*1j) * phi2) * np.sqrt(0.429e3) * t6198 ** 2 * (15 * t6196 ** 2 - 1)

        if Bindx == 819:
            t6201 = np.cos(phi)
            tfunc[..., c] = (-0.51e2 / 0.64e2*1j) * np.exp((-5*1j) * phi2) * np.sqrt(0.2002e4) * ((1 - t6201) ** (0.5e1 / 0.2e1)) * ((1 + t6201) ** (0.5e1 / 0.2e1)) * t6201 * (5 * t6201 ** 2 - 1)

        if Bindx == 820:
            t6207 = np.sin(phi)
            t6205 = t6207 ** 2
            t6202 = np.cos(phi)
            t6203 = t6202 ** 2
            tfunc[..., c] = (0.51e2 / 0.128e3) * np.exp((-4*1j) * phi2) * np.sqrt(0.154e3) * t6205 ** 2 * (1 + (-26 + 65 * t6203) * t6203)

        if Bindx == 821:
            t6208 = np.cos(phi)
            t6209 = t6208 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.2310e4) * ((1 - t6208) ** (0.3e1 / 0.2e1)) * ((1 + t6208) ** (0.3e1 / 0.2e1)) * t6208 * (3 + (-26 + 39 * t6209) * t6209)

        if Bindx == 822:
            t6212 = np.cos(phi)
            t6213 = t6212 ** 2
            t6214 = t6213 ** 2
            t6211 = np.sin(phi)
            tfunc[..., c] = -(0.51e2 / 0.64e2) * np.exp((-2*1j) * phi2) * np.sqrt(0.35e2) * t6211 ** 2 * (-143 * t6214 - 1 + (143 * t6214 + 33) * t6213)

        if Bindx == 823:
            t6216 = np.cos(phi)
            t6217 = t6216 ** 2
            t6218 = t6217 ** 2
            tfunc[..., c] = (-0.51e2 / 0.64e2*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.2e1) * np.sqrt((1 - t6216)) * np.sqrt((1 + t6216)) * t6216 * (-1001 * t6218 - 35 + (715 * t6218 + 385) * t6217)

        if Bindx == 824:
            t6220 = np.cos(phi)
            t6221 = t6220 ** 2
            t6222 = t6221 ** 2
            tfunc[..., c] = -0.5355e4 / 0.32e2 * t6221 + 0.595e3 / 0.128e3 + (-0.51051e5 / 0.32e2 * t6221 + 0.58905e5 / 0.64e2 + 0.109395e6 / 0.128e3 * t6222) * t6222

        if Bindx == 825:
            t6225 = np.cos(phi)
            t6226 = t6225 ** 2
            t6227 = t6225 * t6226
            t6232 = -1001 * t6226 ** 2 + 715 * t6227 ** 2 - 35
            tfunc[..., c] = (0.51e2 / 0.64e2*1j) * np.exp((1j) * phi2) * np.sqrt(0.2e1) * np.sqrt((1 + t6225)) * t6225 * (t6232 * t6225 - 385 * t6226 + 385 * t6227 - t6232) * ((1 - t6225) ** (-0.1e1 / 0.2e1))

        if Bindx == 826:
            t6234 = np.cos(phi)
            t6235 = t6234 ** 2
            t6236 = t6235 ** 2
            t6233 = np.sin(phi)
            tfunc[..., c] = -(0.51e2 / 0.64e2) * np.exp((2*1j) * phi2) * np.sqrt(0.35e2) * t6233 ** 2 * (-143 * t6236 - 1 + (143 * t6236 + 33) * t6235)

        if Bindx == 827:
            t6238 = np.cos(phi)
            t6239 = t6238 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (3 + (-26 + 39 * t6239) * t6239) * t6238 * ((1 + t6238) ** (0.3e1 / 0.2e1)) * np.sqrt(0.2310e4) * np.exp((3*1j) * phi2) * ((1 - t6238) ** (0.3e1 / 0.2e1))

        if Bindx == 828:
            t6246 = np.sin(phi)
            t6244 = t6246 ** 2
            t6241 = np.cos(phi)
            t6242 = t6241 ** 2
            tfunc[..., c] = (0.51e2 / 0.128e3) * np.exp((4*1j) * phi2) * np.sqrt(0.154e3) * t6244 ** 2 * (1 + (-26 + 65 * t6242) * t6242)

        if Bindx == 829:
            t6247 = np.cos(phi)
            tfunc[..., c] = (-0.51e2 / 0.64e2*1j) * (5 * t6247 ** 2 - 1) * t6247 * ((1 + t6247) ** (0.5e1 / 0.2e1)) * np.sqrt(0.2002e4) * np.exp((5*1j) * phi2) * ((1 - t6247) ** (0.5e1 / 0.2e1))

        if Bindx == 830:
            t6252 = np.sin(phi)
            t6249 = t6252 ** 2
            t6250 = t6252 * t6249
            t6248 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((6*1j) * phi2) * np.sqrt(0.429e3) * t6250 ** 2 * (15 * t6248 ** 2 - 1)

        if Bindx == 831:
            t6253 = np.cos(phi)
            t6257 = -4 * t6253
            t6254 = t6253 ** 2
            tfunc[..., c] = (0.51e2 / 0.64e2*1j) * t6253 * (t6257 + 1 + (t6257 + 6 + t6254) * t6254) * ((1 + t6253) ** (0.7e1 / 0.2e1)) * np.sqrt(0.1430e4) * np.exp((7*1j) * phi2) * ((1 - t6253) ** (-0.1e1 / 0.2e1))

        if Bindx == 832:
            t6261 = np.sin(phi)
            t6258 = t6261 ** 2
            t6259 = t6258 ** 2
            tfunc[..., c] = (0.51e2 / 0.256e3) * np.exp((8*1j) * phi2) * np.sqrt(0.1430e4) * t6259 ** 2

        if Bindx == 833:
            t6262 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (phi1 - 8 * phi2)) * np.sqrt(0.715e3) * ((1 - t6262) ** (0.9e1 / 0.2e1)) * ((1 + t6262) ** (0.7e1 / 0.2e1))

        if Bindx == 834:
            t6267 = np.sin(phi)
            t6264 = t6267 ** 2
            t6265 = t6267 * t6264
            t6263 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (phi1 - 7 * phi2)) * np.sqrt(0.715e3) * t6265 ** 2 * (-1 + (-7 + 8 * t6263) * t6263)

        if Bindx == 835:
            t6268 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (phi1 - 6 * phi2)) * np.sqrt(0.858e3) * ((1 - t6268) ** (0.7e1 / 0.2e1)) * ((1 + t6268) ** (0.5e1 / 0.2e1)) * (-1 + (5 + 20 * t6268) * t6268)

        if Bindx == 836:
            t6275 = np.sin(phi)
            t6273 = t6275 ** 2
            t6269 = np.cos(phi)
            t6270 = t6269 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (phi1 - 5 * phi2)) * np.sqrt(0.1001e4) * t6273 ** 2 * (5 * t6269 + 1 + (-25 * t6269 - 21 + 40 * t6270) * t6270)

        if Bindx == 837:
            t6276 = np.cos(phi)
            t6277 = t6276 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (phi1 - 4 * phi2)) * np.sqrt(0.77e2) * ((1 - t6276) ** (0.5e1 / 0.2e1)) * ((1 + t6276) ** (0.3e1 / 0.2e1)) * (-13 * t6276 + 1 + (65 * t6276 - 39 + 130 * t6277) * t6277)

        if Bindx == 838:
            t6281 = np.cos(phi)
            t6282 = t6281 ** 2
            t6284 = t6282 ** 2
            t6283 = t6281 * t6282
            t6280 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.1155e4) * t6280 ** 2 * (30 * t6282 - 117 * t6284 - 1 + (26 + 104 * t6283) * t6283 + (-39 * t6284 - 3) * t6281)

        if Bindx == 839:
            t6287 = np.cos(phi)
            t6288 = t6287 ** 2
            t6290 = t6288 ** 2
            t6289 = t6287 * t6288
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.70e2) * ((1 - t6287) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t6287)) * (66 * t6288 - 429 * t6290 - 1 + (-286 + 572 * t6289) * t6289 + (429 * t6290 + 33) * t6287)

        if Bindx == 840:
            t6293 = np.cos(phi)
            t6294 = t6293 ** 2
            t6295 = t6293 * t6294
            t6298 = t6295 ** 2
            t6296 = t6294 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (phi1 - phi2)) * (-1225 * t6294 - 385 * t6295 - 11011 * t6298 + 35 + (6545 + 5720 * t6296) * t6296 + (1001 * t6296 - 715 * t6298 + 35) * t6293)

        if Bindx == 841:
            t6301 = np.cos(phi)
            t6302 = t6301 ** 2
            t6303 = t6302 ** 2
            tfunc[..., c] = (-0.51e2 / 0.64e2*1j) * np.exp((1j) * phi1) * np.sqrt(0.2e1) * np.sqrt((1 - t6301)) * np.sqrt((1 + t6301)) * t6301 * (-1001 * t6303 - 35 + (715 * t6303 + 385) * t6302)

        if Bindx == 842:
            t6305 = np.cos(phi)
            t6306 = t6305 ** 2
            t6307 = t6305 * t6306
            t6310 = t6307 ** 2
            t6308 = t6306 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (phi1 + phi2)) * (-1225 * t6306 + 385 * t6307 - 11011 * t6310 + 35 + (6545 + 5720 * t6308) * t6308 + (-1001 * t6308 + 715 * t6310 - 35) * t6305)

        if Bindx == 843:
            t6313 = np.cos(phi)
            t6314 = t6313 ** 2
            t6315 = t6313 * t6314
            t6317 = t6315 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.70e2) * ((1 + t6313) ** (0.3e1 / 0.2e1)) * (-220 * t6315 - 1001 * t6317 + 1 + (-99 + 715 * t6314) * t6314 + (572 * t6317 + 32) * t6313) * ((1 - t6313) ** (-0.1e1 / 0.2e1))

        if Bindx == 844:
            t6320 = np.cos(phi)
            t6321 = t6320 ** 2
            t6323 = t6321 ** 2
            t6322 = t6320 * t6321
            t6319 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.1155e4) * t6319 ** 2 * (30 * t6321 - 117 * t6323 - 1 + (-26 + 104 * t6322) * t6322 + (39 * t6323 + 3) * t6320)

        if Bindx == 845:
            t6326 = np.cos(phi)
            t6327 = t6326 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (13 * t6326 + 1 + (-65 * t6326 - 39 + 130 * t6327) * t6327) * ((1 + t6326) ** (0.5e1 / 0.2e1)) * np.sqrt(0.77e2) * np.exp((1j) * (phi1 + 4 * phi2)) * ((1 - t6326) ** (0.3e1 / 0.2e1))

        if Bindx == 846:
            t6336 = np.sin(phi)
            t6334 = t6336 ** 2
            t6330 = np.cos(phi)
            t6331 = t6330 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (phi1 + 5 * phi2)) * np.sqrt(0.1001e4) * t6334 ** 2 * (-5 * t6330 + 1 + (25 * t6330 - 21 + 40 * t6331) * t6331)

        if Bindx == 847:
            t6337 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (-1 + (-5 + 20 * t6337) * t6337) * ((1 + t6337) ** (0.7e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((1j) * (phi1 + 6 * phi2)) * ((1 - t6337) ** (0.5e1 / 0.2e1))

        if Bindx == 848:
            t6342 = np.sin(phi)
            t6339 = t6342 ** 2
            t6340 = t6342 * t6339
            t6338 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (phi1 + 7 * phi2)) * np.sqrt(0.715e3) * t6340 ** 2 * (-1 + (7 + 8 * t6338) * t6338)

        if Bindx == 849:
            t6343 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (phi1 + 8 * phi2)) * np.sqrt(0.715e3) * ((1 - t6343) ** (0.7e1 / 0.2e1)) * ((1 + t6343) ** (0.9e1 / 0.2e1))

        if Bindx == 850:
            t6344 = np.cos(phi)
            t6351 = -1 + t6344
            t6350 = 1 + t6344
            t6348 = t6350 ** 2
            t6345 = t6351 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.2002e4) * t6351 * t6345 ** 2 * t6350 * t6348

        if Bindx == 851:
            t6352 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - 7 * phi2)) * np.sqrt(0.2002e4) * ((1 - t6352) ** (0.9e1 / 0.2e1)) * ((1 + t6352) ** (0.5e1 / 0.2e1)) * (1 + 4 * t6352)

        if Bindx == 852:
            t6358 = np.sin(phi)
            t6356 = t6358 ** 2
            t6353 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.15015e5) * t6356 ** 2 * t6353 * (1 + (2 * t6353 - 3) * t6353 ** 2)

        if Bindx == 853:
            t6359 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.1430e4) * ((1 - t6359) ** (0.7e1 / 0.2e1)) * ((1 + t6359) ** (0.3e1 / 0.2e1)) * (-1 + (28 * t6359 + 21) * t6359 ** 2)

        if Bindx == 854:
            t6363 = np.cos(phi)
            t6364 = t6363 ** 2
            t6369 = -91 * t6364 ** 2
            t6365 = t6363 * t6364
            t6362 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.110e3) * t6362 ** 2 * (25 * t6364 + t6369 - 1 + (78 + 91 * t6365) * t6365 + (t6369 - 11) * t6363)

        if Bindx == 855:
            t6370 = np.cos(phi)
            t6371 = t6370 ** 2
            t6372 = t6371 ** 2
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.66e2) * ((1 - t6370) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t6370)) * (-130 * t6371 + 455 * t6372 + 3 + (364 * t6372 - 20) * t6370)

        if Bindx == 856:
            t6374 = np.cos(phi)
            t6375 = t6374 ** 2
            t6376 = t6374 * t6375
            t6379 = t6376 ** 2
            t6377 = t6375 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((2*1j) * (phi1 - phi2)) * (-512 * t6375 - 671 * t6376 - 4004 * t6379 + 16 + (2530 + 2002 * t6377) * t6377 + (1573 * t6377 - 1001 * t6379 + 67) * t6374)

        if Bindx == 857:
            t6382 = np.cos(phi)
            t6383 = t6382 ** 2
            t6385 = t6383 ** 2
            t6384 = t6382 * t6383
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.70e2) * ((1 - t6382) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t6382)) * (66 * t6383 - 429 * t6385 - 1 + (-286 + 572 * t6384) * t6384 + (429 * t6385 + 33) * t6382)

        if Bindx == 858:
            t6389 = np.cos(phi)
            t6390 = t6389 ** 2
            t6391 = t6390 ** 2
            t6388 = np.sin(phi)
            tfunc[..., c] = -(0.51e2 / 0.64e2) * np.exp((2*1j) * phi1) * np.sqrt(0.35e2) * t6388 ** 2 * (-143 * t6391 - 1 + (143 * t6391 + 33) * t6390)

        if Bindx == 859:
            t6393 = np.cos(phi)
            t6394 = t6393 ** 2
            t6399 = -429 * t6394 ** 2
            t6395 = t6393 * t6394
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.70e2) * np.sqrt((1 - t6393)) * ((1 + t6393) ** (0.3e1 / 0.2e1)) * (66 * t6394 + t6399 - 1 + (286 + 572 * t6395) * t6395 + (t6399 - 33) * t6393)

        if Bindx == 860:
            t6400 = np.cos(phi)
            t6401 = t6400 ** 2
            t6402 = t6400 * t6401
            t6405 = t6402 ** 2
            t6403 = t6401 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((2*1j) * (phi1 + phi2)) * (-512 * t6401 + 671 * t6402 - 4004 * t6405 + 16 + (2530 + 2002 * t6403) * t6403 + (-1573 * t6403 + 1001 * t6405 - 67) * t6400)

        if Bindx == 861:
            t6408 = np.cos(phi)
            t6409 = t6408 ** 2
            t6411 = t6409 ** 2
            t6410 = t6408 * t6409
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.66e2) * ((1 + t6408) ** (0.5e1 / 0.2e1)) * (-150 * t6409 + 455 * t6411 + 3 + (130 + 364 * t6410) * t6410 + (-819 * t6411 + 17) * t6408) * ((1 - t6408) ** (-0.1e1 / 0.2e1))

        if Bindx == 862:
            t6415 = np.cos(phi)
            t6416 = t6415 ** 2
            t6418 = t6416 ** 2
            t6417 = t6415 * t6416
            t6414 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.110e3) * t6414 ** 2 * (25 * t6416 - 91 * t6418 - 1 + (-78 + 91 * t6417) * t6417 + (91 * t6418 + 11) * t6415)

        if Bindx == 863:
            t6421 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (1 + (28 * t6421 - 21) * t6421 ** 2) * ((1 + t6421) ** (0.7e1 / 0.2e1)) * np.sqrt(0.1430e4) * np.exp((1j) * (2 * phi1 + 5 * phi2)) * ((1 - t6421) ** (0.3e1 / 0.2e1))

        if Bindx == 864:
            t6429 = np.sin(phi)
            t6427 = t6429 ** 2
            t6424 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.15015e5) * t6427 ** 2 * t6424 * (-1 + (2 * t6424 + 3) * t6424 ** 2)

        if Bindx == 865:
            t6430 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (-1 + 4 * t6430) * ((1 + t6430) ** (0.9e1 / 0.2e1)) * np.sqrt(0.2002e4) * np.exp((1j) * (2 * phi1 + 7 * phi2)) * ((1 - t6430) ** (0.5e1 / 0.2e1))

        if Bindx == 866:
            t6431 = np.cos(phi)
            t6438 = -1 + t6431
            t6437 = 1 + t6431
            t6434 = t6437 ** 2
            t6432 = t6438 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.2002e4) * t6438 * t6432 * t6437 * t6434 ** 2

        if Bindx == 867:
            t6439 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (3 * phi1 - 8 * phi2)) * np.sqrt(0.273e3) * ((1 - t6439) ** (0.11e2 / 0.2e1)) * ((1 + t6439) ** (0.5e1 / 0.2e1))

        if Bindx == 868:
            t6441 = np.cos(phi)
            t6445 = -1 + t6441
            t6442 = t6445 ** 2
            t6440 = 1 + t6441
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.273e3) * t6445 * t6442 ** 2 * t6440 ** 2 * (3 + 8 * t6441)

        if Bindx == 869:
            t6446 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((3*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.910e3) * ((1 - t6446) ** (0.9e1 / 0.2e1)) * ((1 + t6446) ** (0.3e1 / 0.2e1)) * (1 + (9 + 12 * t6446) * t6446)

        if Bindx == 870:
            t6448 = np.cos(phi)
            t6449 = t6448 ** 2
            t6451 = t6449 ** 2
            t6450 = t6448 * t6449
            t6447 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.195e3) * t6447 ** 2 * (-18 * t6449 - 7 * t6451 + 1 + (90 + 56 * t6450) * t6450 + (-105 * t6451 - 17) * t6448)

        if Bindx == 871:
            t6454 = np.cos(phi)
            t6455 = t6454 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.15e2) * ((1 - t6454) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t6454)) * (-13 * t6454 - 5 + (273 * t6454 + 91 + 182 * t6455) * t6455)

        if Bindx == 872:
            t6458 = np.cos(phi)
            t6459 = t6458 ** 2
            t6460 = t6458 * t6459
            t6463 = t6460 ** 2
            t6461 = t6459 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((3*1j) * (phi1 - phi2)) * (-459 * t6459 - 2107 * t6460 - 3913 * t6463 + 17 + (2235 + 2184 * t6461) * t6461 + (4251 * t6461 - 2457 * t6463 + 249) * t6458)

        if Bindx == 873:
            t6466 = np.cos(phi)
            t6467 = t6466 ** 2
            t6468 = t6467 ** 2
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.66e2) * ((1 - t6466) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t6466)) * (-130 * t6467 + 455 * t6468 + 3 + (364 * t6468 - 20) * t6466)

        if Bindx == 874:
            t6471 = np.cos(phi)
            t6472 = t6471 ** 2
            t6474 = t6472 ** 2
            t6473 = t6471 * t6472
            t6470 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.1155e4) * t6470 ** 2 * (30 * t6472 - 117 * t6474 - 1 + (26 + 104 * t6473) * t6473 + (-39 * t6474 - 3) * t6471)

        if Bindx == 875:
            t6477 = np.cos(phi)
            t6478 = t6477 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.2310e4) * ((1 - t6477) ** (0.3e1 / 0.2e1)) * ((1 + t6477) ** (0.3e1 / 0.2e1)) * t6477 * (3 + (-26 + 39 * t6478) * t6478)

        if Bindx == 876:
            t6481 = np.cos(phi)
            t6482 = t6481 ** 2
            t6484 = t6482 ** 2
            t6483 = t6481 * t6482
            t6480 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.1155e4) * t6480 ** 2 * (30 * t6482 - 117 * t6484 - 1 + (-26 + 104 * t6483) * t6483 + (39 * t6484 + 3) * t6481)

        if Bindx == 877:
            t6487 = np.cos(phi)
            t6488 = t6487 ** 2
            t6489 = t6488 ** 2
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.66e2) * np.sqrt((1 - t6487)) * ((1 + t6487) ** (0.5e1 / 0.2e1)) * (130 * t6488 - 455 * t6489 - 3 + (364 * t6489 - 20) * t6487)

        if Bindx == 878:
            t6491 = np.cos(phi)
            t6492 = t6491 ** 2
            t6493 = t6491 * t6492
            t6496 = t6493 ** 2
            t6494 = t6492 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((3*1j) * (phi1 + phi2)) * (-459 * t6492 + 2107 * t6493 - 3913 * t6496 + 17 + (2235 + 2184 * t6494) * t6494 + (-4251 * t6494 + 2457 * t6496 - 249) * t6491)

        if Bindx == 879:
            t6499 = np.cos(phi)
            t6500 = t6499 ** 2
            t6502 = t6500 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.15e2) * ((1 + t6499) ** (0.7e1 / 0.2e1)) * (-78 * t6500 - 455 * t6502 + 5 + (364 * t6500 + 182 * t6502 - 18) * t6499) * ((1 - t6499) ** (-0.1e1 / 0.2e1))

        if Bindx == 880:
            t6505 = np.cos(phi)
            t6506 = t6505 ** 2
            t6508 = t6506 ** 2
            t6507 = t6505 * t6506
            t6504 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.195e3) * t6504 ** 2 * (-18 * t6506 - 7 * t6508 + 1 + (-90 + 56 * t6507) * t6507 + (105 * t6508 + 17) * t6505)

        if Bindx == 881:
            t6511 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (1 + (-9 + 12 * t6511) * t6511) * ((1 + t6511) ** (0.9e1 / 0.2e1)) * np.sqrt(0.910e3) * np.exp((3*1j) * (phi1 + 2 * phi2)) * ((1 - t6511) ** (0.3e1 / 0.2e1))

        if Bindx == 882:
            t6518 = np.sin(phi)
            t6516 = t6518 ** 2
            t6512 = np.cos(phi)
            t6513 = t6512 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.273e3) * t6516 ** 2 * (-t6512 - 3 + (21 * t6512 + 15 + 8 * t6513) * t6513)

        if Bindx == 883:
            t6519 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (3 * phi1 + 8 * phi2)) * np.sqrt(0.273e3) * ((1 - t6519) ** (0.5e1 / 0.2e1)) * ((1 + t6519) ** (0.11e2 / 0.2e1))

        if Bindx == 884:
            t6521 = np.cos(phi)
            t6525 = -1 + t6521
            t6522 = t6525 ** 2
            t6523 = t6525 * t6522
            t6520 = 1 + t6521
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((4*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.455e3) * t6523 ** 2 * t6520 ** 2

        if Bindx == 885:
            t6526 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - 7 * phi2)) * np.sqrt(0.455e3) * ((1 - t6526) ** (0.11e2 / 0.2e1)) * ((1 + t6526) ** (0.3e1 / 0.2e1)) * (1 + 2 * t6526)

        if Bindx == 886:
            t6528 = np.cos(phi)
            t6529 = t6528 ** 2
            t6530 = t6528 * t6529
            t6527 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.546e3) * t6527 ** 2 * (t6528 + 1 + (6 + 5 * t6530) * t6530 + (-9 + (-15 * t6528 + 11) * t6529) * t6529)

        if Bindx == 887:
            t6534 = np.cos(phi)
            t6535 = t6534 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.13e2) * ((1 - t6534) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t6534)) * (105 * t6535 + 3 + (70 * t6535 + 42) * t6534)

        if Bindx == 888:
            t6537 = np.cos(phi)
            t6538 = t6537 ** 2
            t6539 = t6537 * t6538
            t6542 = t6539 ** 2
            t6540 = t6538 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((4*1j) * (phi1 - phi2)) * (180 * t6538 - 770 * t6539 - 364 * t6542 - 9 + (-230 + 455 * t6540) * t6540 + (1534 * t6540 - 910 * t6542 + 114) * t6537)

        if Bindx == 889:
            t6545 = np.cos(phi)
            t6546 = t6545 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.15e2) * ((1 - t6545) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t6545)) * (-13 * t6545 - 5 + (273 * t6545 + 91 + 182 * t6546) * t6546)

        if Bindx == 890:
            t6550 = np.cos(phi)
            t6551 = t6550 ** 2
            t6556 = -91 * t6551 ** 2
            t6552 = t6550 * t6551
            t6549 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.110e3) * t6549 ** 2 * (25 * t6551 + t6556 - 1 + (78 + 91 * t6552) * t6552 + (t6556 - 11) * t6550)

        if Bindx == 891:
            t6557 = np.cos(phi)
            t6558 = t6557 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - phi2)) * np.sqrt(0.77e2) * ((1 - t6557) ** (0.5e1 / 0.2e1)) * ((1 + t6557) ** (0.3e1 / 0.2e1)) * (-13 * t6557 + 1 + (65 * t6557 - 39 + 130 * t6558) * t6558)

        if Bindx == 892:
            t6566 = np.sin(phi)
            t6564 = t6566 ** 2
            t6561 = np.cos(phi)
            t6562 = t6561 ** 2
            tfunc[..., c] = (0.51e2 / 0.128e3) * np.exp((4*1j) * phi1) * np.sqrt(0.154e3) * t6564 ** 2 * (1 + (-26 + 65 * t6562) * t6562)

        if Bindx == 893:
            t6567 = np.cos(phi)
            t6568 = t6567 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 + phi2)) * np.sqrt(0.77e2) * ((1 - t6567) ** (0.3e1 / 0.2e1)) * ((1 + t6567) ** (0.5e1 / 0.2e1)) * (13 * t6567 + 1 + (-65 * t6567 - 39 + 130 * t6568) * t6568)

        if Bindx == 894:
            t6572 = np.cos(phi)
            t6573 = t6572 ** 2
            t6575 = t6573 ** 2
            t6574 = t6572 * t6573
            t6571 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.110e3) * t6571 ** 2 * (25 * t6573 - 91 * t6575 - 1 + (-78 + 91 * t6574) * t6574 + (91 * t6575 + 11) * t6572)

        if Bindx == 895:
            t6578 = np.cos(phi)
            t6579 = t6578 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.15e2) * np.sqrt((1 - t6578)) * ((1 + t6578) ** (0.7e1 / 0.2e1)) * (13 * t6578 - 5 + (-273 * t6578 + 91 + 182 * t6579) * t6579)

        if Bindx == 896:
            t6582 = np.cos(phi)
            t6583 = t6582 ** 2
            t6584 = t6582 * t6583
            t6587 = t6584 ** 2
            t6585 = t6583 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((4*1j) * (phi1 + phi2)) * (180 * t6583 + 770 * t6584 - 364 * t6587 - 9 + (-230 + 455 * t6585) * t6585 + (-1534 * t6585 + 910 * t6587 - 114) * t6582)

        if Bindx == 897:
            t6590 = np.cos(phi)
            t6591 = t6590 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.13e2) * ((1 + t6590) ** (0.9e1 / 0.2e1)) * (-45 * t6590 + 3 + (-175 * t6590 + 147 + 70 * t6591) * t6591) * ((1 - t6590) ** (-0.1e1 / 0.2e1))

        if Bindx == 898:
            t6595 = np.cos(phi)
            t6596 = t6595 ** 2
            t6597 = t6595 * t6596
            t6594 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.546e3) * t6594 ** 2 * (-t6595 + 1 + (-6 + 5 * t6597) * t6597 + (-9 + (15 * t6595 + 11) * t6596) * t6596)

        if Bindx == 899:
            t6601 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (2 * t6601 - 1) * ((1 + t6601) ** (0.11e2 / 0.2e1)) * np.sqrt(0.455e3) * np.exp((1j) * (4 * phi1 + 7 * phi2)) * ((1 - t6601) ** (0.3e1 / 0.2e1))

        if Bindx == 900:
            t6603 = np.cos(phi)
            t6607 = 1 + t6603
            t6604 = t6607 ** 2
            t6605 = t6607 * t6604
            t6602 = -1 + t6603
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((4*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.455e3) * t6602 ** 2 * t6605 ** 2

        if Bindx == 901:
            t6608 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 - 8 * phi2)) * np.sqrt(0.35e2) * ((1 - t6608) ** (0.13e2 / 0.2e1)) * ((1 + t6608) ** (0.3e1 / 0.2e1))

        if Bindx == 902:
            t6609 = np.cos(phi)
            t6613 = -1 + t6609
            t6610 = t6613 ** 2
            t6611 = t6613 * t6610
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.35e2) * t6611 ** 2 * (1 + t6609) * (5 + 8 * t6609)

        if Bindx == 903:
            t6614 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 - 6 * phi2)) * np.sqrt(0.42e2) * ((1 - t6614) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t6614)) * (7 + (25 + 20 * t6614) * t6614)

        if Bindx == 904:
            t6615 = np.cos(phi)
            t6616 = t6615 ** 2
            t6617 = t6615 * t6616
            t6620 = t6617 ** 2
            t6618 = t6616 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((5*1j) * (phi1 - phi2)) * (495 * t6616 - 145 * t6617 + 469 * t6620 - 45 + (-1135 + 280 * t6618) * t6618 + (1025 * t6618 - 875 * t6620 - 69) * t6615)

        if Bindx == 905:
            t6623 = np.cos(phi)
            t6624 = t6623 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.13e2) * ((1 - t6623) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t6623)) * (105 * t6624 + 3 + (70 * t6624 + 42) * t6623)

        if Bindx == 906:
            t6627 = np.cos(phi)
            t6628 = t6627 ** 2
            t6630 = t6628 ** 2
            t6629 = t6627 * t6628
            t6626 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.195e3) * t6626 ** 2 * (-18 * t6628 - 7 * t6630 + 1 + (90 + 56 * t6629) * t6629 + (-105 * t6630 - 17) * t6627)

        if Bindx == 907:
            t6633 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.1430e4) * ((1 - t6633) ** (0.7e1 / 0.2e1)) * ((1 + t6633) ** (0.3e1 / 0.2e1)) * (-1 + (28 * t6633 + 21) * t6633 ** 2)

        if Bindx == 908:
            t6642 = np.sin(phi)
            t6640 = t6642 ** 2
            t6636 = np.cos(phi)
            t6637 = t6636 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (5 * phi1 - phi2)) * np.sqrt(0.1001e4) * t6640 ** 2 * (5 * t6636 + 1 + (-25 * t6636 - 21 + 40 * t6637) * t6637)

        if Bindx == 909:
            t6643 = np.cos(phi)
            tfunc[..., c] = (-0.51e2 / 0.64e2*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.2002e4) * ((1 - t6643) ** (0.5e1 / 0.2e1)) * ((1 + t6643) ** (0.5e1 / 0.2e1)) * t6643 * (5 * t6643 ** 2 - 1)

        if Bindx == 910:
            t6650 = np.sin(phi)
            t6648 = t6650 ** 2
            t6644 = np.cos(phi)
            t6645 = t6644 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (5 * phi1 + phi2)) * np.sqrt(0.1001e4) * t6648 ** 2 * (-5 * t6644 + 1 + (25 * t6644 - 21 + 40 * t6645) * t6645)

        if Bindx == 911:
            t6651 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.1430e4) * ((1 - t6651) ** (0.3e1 / 0.2e1)) * ((1 + t6651) ** (0.7e1 / 0.2e1)) * (1 + (28 * t6651 - 21) * t6651 ** 2)

        if Bindx == 912:
            t6655 = np.cos(phi)
            t6656 = t6655 ** 2
            t6658 = t6656 ** 2
            t6657 = t6655 * t6656
            t6654 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.195e3) * t6654 ** 2 * (-18 * t6656 - 7 * t6658 + 1 + (-90 + 56 * t6657) * t6657 + (105 * t6658 + 17) * t6655)

        if Bindx == 913:
            t6661 = np.cos(phi)
            t6662 = t6661 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.13e2) * np.sqrt((1 - t6661)) * ((1 + t6661) ** (0.9e1 / 0.2e1)) * (-105 * t6662 - 3 + (70 * t6662 + 42) * t6661)

        if Bindx == 914:
            t6664 = np.cos(phi)
            t6665 = t6664 ** 2
            t6666 = t6664 * t6665
            t6669 = t6666 ** 2
            t6667 = t6665 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((5*1j) * (phi1 + phi2)) * (495 * t6665 + 145 * t6666 + 469 * t6669 - 45 + (-1135 + 280 * t6667) * t6667 + (-1025 * t6667 + 875 * t6669 + 69) * t6664)

        if Bindx == 915:
            t6672 = np.cos(phi)
            t6673 = t6672 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.42e2) * ((1 + t6672) ** (0.11e2 / 0.2e1)) * (-45 * t6673 - 7 + (20 * t6673 + 32) * t6672) * ((1 - t6672) ** (-0.1e1 / 0.2e1))

        if Bindx == 916:
            t6676 = np.cos(phi)
            t6677 = t6676 ** 2
            t6679 = t6677 ** 2
            t6678 = t6676 * t6677
            t6675 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.35e2) * t6675 ** 2 * (-10 * t6677 + 55 * t6679 - 5 + (30 + 8 * t6678) * t6678 + (35 * t6679 - 17) * t6676)

        if Bindx == 917:
            t6682 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 + 8 * phi2)) * np.sqrt(0.35e2) * ((1 - t6682) ** (0.3e1 / 0.2e1)) * ((1 + t6682) ** (0.13e2 / 0.2e1))

        if Bindx == 918:
            t6683 = np.cos(phi)
            t6688 = -1 + t6683
            t6684 = t6688 ** 2
            t6685 = t6688 * t6684
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.30e2) * t6688 * t6685 ** 2 * (1 + t6683)

        if Bindx == 919:
            t6689 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 - 7 * phi2)) * np.sqrt(0.30e2) * ((1 - t6689) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t6689)) * (3 + 4 * t6689)

        if Bindx == 920:
            t6690 = np.cos(phi)
            t6691 = t6690 ** 2
            t6692 = t6690 * t6691
            t6695 = t6692 ** 2
            t6693 = t6691 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((6*1j) * (phi1 - phi2)) * (175 * t6692 + 196 * t6695 + 16 + (-210 + 30 * t6693) * t6693 + (-21 * t6693 - 135 * t6695 - 51) * t6690)

        if Bindx == 921:
            t6698 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 - 5 * phi2)) * np.sqrt(0.42e2) * ((1 - t6698) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t6698)) * (7 + (25 + 20 * t6698) * t6698)

        if Bindx == 922:
            t6700 = np.cos(phi)
            t6701 = t6700 ** 2
            t6702 = t6700 * t6701
            t6699 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.546e3) * t6699 ** 2 * (t6700 + 1 + (6 + 5 * t6702) * t6702 + (-9 + (-15 * t6700 + 11) * t6701) * t6701)

        if Bindx == 923:
            t6706 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((3*1j) * (2 * phi1 - phi2)) * np.sqrt(0.910e3) * ((1 - t6706) ** (0.9e1 / 0.2e1)) * ((1 + t6706) ** (0.3e1 / 0.2e1)) * (1 + (9 + 12 * t6706) * t6706)

        if Bindx == 924:
            t6712 = np.sin(phi)
            t6710 = t6712 ** 2
            t6707 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.15015e5) * t6710 ** 2 * t6707 * (1 + (2 * t6707 - 3) * t6707 ** 2)

        if Bindx == 925:
            t6713 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 - phi2)) * np.sqrt(0.858e3) * ((1 - t6713) ** (0.7e1 / 0.2e1)) * ((1 + t6713) ** (0.5e1 / 0.2e1)) * (-1 + (5 + 20 * t6713) * t6713)

        if Bindx == 926:
            t6718 = np.sin(phi)
            t6715 = t6718 ** 2
            t6716 = t6718 * t6715
            t6714 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((6*1j) * phi1) * np.sqrt(0.429e3) * t6716 ** 2 * (15 * t6714 ** 2 - 1)

        if Bindx == 927:
            t6719 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 + phi2)) * np.sqrt(0.858e3) * ((1 - t6719) ** (0.5e1 / 0.2e1)) * ((1 + t6719) ** (0.7e1 / 0.2e1)) * (-1 + (-5 + 20 * t6719) * t6719)

        if Bindx == 928:
            t6725 = np.sin(phi)
            t6723 = t6725 ** 2
            t6720 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.15015e5) * t6723 ** 2 * t6720 * (-1 + (2 * t6720 + 3) * t6720 ** 2)

        if Bindx == 929:
            t6726 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((3*1j) * (2 * phi1 + phi2)) * np.sqrt(0.910e3) * ((1 - t6726) ** (0.3e1 / 0.2e1)) * ((1 + t6726) ** (0.9e1 / 0.2e1)) * (1 + (-9 + 12 * t6726) * t6726)

        if Bindx == 930:
            t6728 = np.cos(phi)
            t6729 = t6728 ** 2
            t6730 = t6728 * t6729
            t6727 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.546e3) * t6727 ** 2 * (-t6728 + 1 + (-6 + 5 * t6730) * t6730 + (-9 + (15 * t6728 + 11) * t6729) * t6729)

        if Bindx == 931:
            t6734 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.42e2) * np.sqrt((1 - t6734)) * ((1 + t6734) ** (0.11e2 / 0.2e1)) * (7 + (-25 + 20 * t6734) * t6734)

        if Bindx == 932:
            t6735 = np.cos(phi)
            t6736 = t6735 ** 2
            t6737 = t6735 * t6736
            t6740 = t6737 ** 2
            t6738 = t6736 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((6*1j) * (phi1 + phi2)) * (-175 * t6737 + 196 * t6740 + 16 + (-210 + 30 * t6738) * t6738 + (21 * t6738 + 135 * t6740 + 51) * t6735)

        if Bindx == 933:
            t6743 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.30e2) * ((1 + t6743) ** (0.13e2 / 0.2e1)) * (3 + (-7 + 4 * t6743) * t6743) * ((1 - t6743) ** (-0.1e1 / 0.2e1))

        if Bindx == 934:
            t6744 = np.cos(phi)
            t6749 = 1 + t6744
            t6745 = t6749 ** 2
            t6746 = t6749 * t6745
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.30e2) * (-1 + t6744) * t6749 * t6746 ** 2

        if Bindx == 935:
            t6750 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (7 * phi1 - 8 * phi2)) * ((1 - t6750) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t6750))

        if Bindx == 936:
            t6751 = np.cos(phi)
            t6752 = t6751 ** 2
            t6753 = t6751 * t6752
            t6756 = t6753 ** 2
            t6754 = t6752 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((7*1j) * (phi1 - phi2)) * (-91 * t6752 + 77 * t6753 + 119 * t6756 - 7 + (35 + 8 * t6754) * t6754 + (-133 * t6754 - 49 * t6756 + 41) * t6751)

        if Bindx == 937:
            t6759 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 - 6 * phi2)) * np.sqrt(0.30e2) * ((1 - t6759) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t6759)) * (3 + 4 * t6759)

        if Bindx == 938:
            t6761 = np.cos(phi)
            t6762 = t6761 ** 2
            t6764 = t6762 ** 2
            t6763 = t6761 * t6762
            t6760 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.35e2) * t6760 ** 2 * (-10 * t6762 + 55 * t6764 - 5 + (-30 + 8 * t6763) * t6763 + (-35 * t6764 + 17) * t6761)

        if Bindx == 939:
            t6767 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (7 * phi1 - 4 * phi2)) * np.sqrt(0.455e3) * ((1 - t6767) ** (0.11e2 / 0.2e1)) * ((1 + t6767) ** (0.3e1 / 0.2e1)) * (1 + 2 * t6767)

        if Bindx == 940:
            t6774 = np.sin(phi)
            t6772 = t6774 ** 2
            t6768 = np.cos(phi)
            t6769 = t6768 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.273e3) * t6772 ** 2 * (t6768 - 3 + (-21 * t6768 + 15 + 8 * t6769) * t6769)

        if Bindx == 941:
            t6775 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 - 2 * phi2)) * np.sqrt(0.2002e4) * ((1 - t6775) ** (0.9e1 / 0.2e1)) * ((1 + t6775) ** (0.5e1 / 0.2e1)) * (1 + 4 * t6775)

        if Bindx == 942:
            t6780 = np.sin(phi)
            t6777 = t6780 ** 2
            t6778 = t6780 * t6777
            t6776 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (7 * phi1 - phi2)) * np.sqrt(0.715e3) * t6778 ** 2 * (-1 + (-7 + 8 * t6776) * t6776)

        if Bindx == 943:
            t6781 = np.cos(phi)
            tfunc[..., c] = (0.51e2 / 0.64e2*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.1430e4) * ((1 - t6781) ** (0.7e1 / 0.2e1)) * ((1 + t6781) ** (0.7e1 / 0.2e1)) * t6781

        if Bindx == 944:
            t6786 = np.sin(phi)
            t6783 = t6786 ** 2
            t6784 = t6786 * t6783
            t6782 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (7 * phi1 + phi2)) * np.sqrt(0.715e3) * t6784 ** 2 * (-1 + (7 + 8 * t6782) * t6782)

        if Bindx == 945:
            t6787 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 + 2 * phi2)) * np.sqrt(0.2002e4) * ((1 - t6787) ** (0.5e1 / 0.2e1)) * ((1 + t6787) ** (0.9e1 / 0.2e1)) * (-1 + 4 * t6787)

        if Bindx == 946:
            t6794 = np.sin(phi)
            t6792 = t6794 ** 2
            t6788 = np.cos(phi)
            t6789 = t6788 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.273e3) * t6792 ** 2 * (-t6788 - 3 + (21 * t6788 + 15 + 8 * t6789) * t6789)

        if Bindx == 947:
            t6795 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (7 * phi1 + 4 * phi2)) * np.sqrt(0.455e3) * ((1 - t6795) ** (0.3e1 / 0.2e1)) * ((1 + t6795) ** (0.11e2 / 0.2e1)) * (2 * t6795 - 1)

        if Bindx == 948:
            t6797 = np.cos(phi)
            t6798 = t6797 ** 2
            t6800 = t6798 ** 2
            t6799 = t6797 * t6798
            t6796 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.35e2) * t6796 ** 2 * (-10 * t6798 + 55 * t6800 - 5 + (30 + 8 * t6799) * t6799 + (35 * t6800 - 17) * t6797)

        if Bindx == 949:
            t6803 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.30e2) * np.sqrt((1 - t6803)) * ((1 + t6803) ** (0.13e2 / 0.2e1)) * (-3 + 4 * t6803)

        if Bindx == 950:
            t6804 = np.cos(phi)
            t6805 = t6804 ** 2
            t6806 = t6804 * t6805
            t6809 = t6806 ** 2
            t6807 = t6805 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((7*1j) * (phi1 + phi2)) * (-91 * t6805 - 77 * t6806 + 119 * t6809 - 7 + (35 + 8 * t6807) * t6807 + (133 * t6807 + 49 * t6809 - 41) * t6804)

        if Bindx == 951:
            t6812 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (7 * phi1 + 8 * phi2)) * np.sqrt((1 - t6812)) * ((1 + t6812) ** (0.15e2 / 0.2e1))

        if Bindx == 952:
            t6813 = np.cos(phi)
            t6821 = -8 * t6813
            t6814 = t6813 ** 2
            t6816 = t6814 ** 2
            t6815 = t6813 * t6814
            tfunc[..., c] = (0.17e2 / 0.256e3) * np.exp((8*1j) * (phi1 - phi2)) * (28 * t6814 + t6821 + 1 + (-56 * t6813 + 70 + t6816) * t6816 + (-56 + (t6821 + 28) * t6815) * t6815)

        if Bindx == 953:
            t6822 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 - 7 * phi2)) * ((1 - t6822) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t6822))

        if Bindx == 954:
            t6823 = np.cos(phi)
            t6828 = -1 + t6823
            t6824 = t6828 ** 2
            t6825 = t6828 * t6824
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.30e2) * t6828 * t6825 ** 2 * (1 + t6823)

        if Bindx == 955:
            t6829 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 - 5 * phi2)) * np.sqrt(0.35e2) * ((1 - t6829) ** (0.13e2 / 0.2e1)) * ((1 + t6829) ** (0.3e1 / 0.2e1))

        if Bindx == 956:
            t6831 = np.cos(phi)
            t6835 = -1 + t6831
            t6832 = t6835 ** 2
            t6833 = t6835 * t6832
            t6830 = 1 + t6831
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((4*1j) * (2 * phi1 - phi2)) * np.sqrt(0.455e3) * t6833 ** 2 * t6830 ** 2

        if Bindx == 957:
            t6836 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 - 3 * phi2)) * np.sqrt(0.273e3) * ((1 - t6836) ** (0.11e2 / 0.2e1)) * ((1 + t6836) ** (0.5e1 / 0.2e1))

        if Bindx == 958:
            t6837 = np.cos(phi)
            t6844 = -1 + t6837
            t6843 = 1 + t6837
            t6841 = t6843 ** 2
            t6838 = t6844 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (4 * phi1 - phi2)) * np.sqrt(0.2002e4) * t6844 * t6838 ** 2 * t6843 * t6841

        if Bindx == 959:
            t6845 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 - phi2)) * np.sqrt(0.715e3) * ((1 - t6845) ** (0.9e1 / 0.2e1)) * ((1 + t6845) ** (0.7e1 / 0.2e1))

        if Bindx == 960:
            t6849 = np.sin(phi)
            t6846 = t6849 ** 2
            t6847 = t6846 ** 2
            tfunc[..., c] = (0.51e2 / 0.256e3) * np.exp((8*1j) * phi1) * np.sqrt(0.1430e4) * t6847 ** 2

        if Bindx == 961:
            t6850 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 + phi2)) * np.sqrt(0.715e3) * ((1 - t6850) ** (0.7e1 / 0.2e1)) * ((1 + t6850) ** (0.9e1 / 0.2e1))

        if Bindx == 962:
            t6851 = np.cos(phi)
            t6858 = -1 + t6851
            t6857 = 1 + t6851
            t6854 = t6857 ** 2
            t6852 = t6858 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (4 * phi1 + phi2)) * np.sqrt(0.2002e4) * t6858 * t6852 * t6857 * t6854 ** 2

        if Bindx == 963:
            t6859 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 + 3 * phi2)) * np.sqrt(0.273e3) * ((1 - t6859) ** (0.5e1 / 0.2e1)) * ((1 + t6859) ** (0.11e2 / 0.2e1))

        if Bindx == 964:
            t6861 = np.cos(phi)
            t6865 = 1 + t6861
            t6862 = t6865 ** 2
            t6863 = t6865 * t6862
            t6860 = -1 + t6861
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((4*1j) * (2 * phi1 + phi2)) * np.sqrt(0.455e3) * t6860 ** 2 * t6863 ** 2

        if Bindx == 965:
            t6866 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 + 5 * phi2)) * np.sqrt(0.35e2) * ((1 - t6866) ** (0.3e1 / 0.2e1)) * ((1 + t6866) ** (0.13e2 / 0.2e1))

        if Bindx == 966:
            t6867 = np.cos(phi)
            t6872 = 1 + t6867
            t6868 = t6872 ** 2
            t6869 = t6872 * t6868
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.30e2) * (-1 + t6867) * t6872 * t6869 ** 2

        if Bindx == 967:
            t6873 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 + 7 * phi2)) * np.sqrt((1 - t6873)) * ((1 + t6873) ** (0.15e2 / 0.2e1))

        if Bindx == 968:
            t6874 = np.cos(phi)
            t6882 = 8 * t6874
            t6875 = t6874 ** 2
            t6877 = t6875 ** 2
            t6876 = t6874 * t6875
            tfunc[..., c] = (0.17e2 / 0.256e3) * np.exp((8*1j) * (phi1 + phi2)) * (28 * t6875 + t6882 + 1 + (56 * t6874 + 70 + t6877) * t6877 + (56 + (t6882 + 28) * t6876) * t6876)

        if Bindx == 969:
            t6883 = np.cos(phi)
            t6884 = t6883 ** 2
            t6886 = t6884 ** 2
            t6892 = 126 * t6886
            t6890 = t6886 ** 2
            t6885 = t6883 * t6884
            t6888 = t6885 ** 2
            tfunc[..., c] = (0.19e2 / 0.512e3) * np.exp((-9*1j) * (phi1 + phi2)) * (36 * t6884 + 84 * t6885 + 84 * t6888 + 9 * t6890 + t6892 + 1 + (36 * t6888 + t6890 + t6892 + 9) * t6883)

        if Bindx == 970:
            t6893 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.512e3*1j) * np.exp((-1*1j) * (9 * phi1 + 8 * phi2)) * np.sqrt(0.2e1) * ((1 + t6893) ** (0.17e2 / 0.2e1)) * np.sqrt((1 - t6893))

        if Bindx == 971:
            t6894 = np.cos(phi)
            t6898 = 1 + t6894
            t6895 = t6898 ** 2
            t6896 = t6895 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((-1*1j) * (9 * phi1 + 7 * phi2)) * np.sqrt(0.17e2) * (-1 + t6894) * t6896 ** 2

        if Bindx == 972:
            t6899 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((-3*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.51e2) * ((1 - t6899) ** (0.3e1 / 0.2e1)) * ((1 + t6899) ** (0.15e2 / 0.2e1))

        if Bindx == 973:
            t6901 = np.cos(phi)
            t6906 = 1 + t6901
            t6902 = t6906 ** 2
            t6903 = t6906 * t6902
            t6900 = -1 + t6901
            tfunc[..., c] = (0.57e2 / 0.256e3) * np.exp((-1*1j) * (9 * phi1 + 5 * phi2)) * np.sqrt(0.85e2) * t6900 ** 2 * t6906 * t6903 ** 2

        if Bindx == 974:
            t6907 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.256e3*1j) * np.exp((-1*1j) * (9 * phi1 + 4 * phi2)) * np.sqrt(0.238e3) * ((1 - t6907) ** (0.5e1 / 0.2e1)) * ((1 + t6907) ** (0.13e2 / 0.2e1))

        if Bindx == 975:
            t6908 = np.cos(phi)
            t6915 = -1 + t6908
            t6914 = 1 + t6908
            t6911 = t6914 ** 2
            t6912 = t6914 * t6911
            t6909 = t6915 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-3*1j) * (3 * phi1 + phi2)) * np.sqrt(0.4641e4) * t6915 * t6909 * t6912 ** 2

        if Bindx == 976:
            t6916 = np.cos(phi)
            tfunc[..., c] = (0.57e2 / 0.128e3*1j) * np.exp((-1*1j) * (9 * phi1 + 2 * phi2)) * np.sqrt(0.221e3) * ((1 - t6916) ** (0.7e1 / 0.2e1)) * ((1 + t6916) ** (0.11e2 / 0.2e1))

        if Bindx == 977:
            t6920 = np.sin(phi)
            t6917 = t6920 ** 2
            t6918 = t6917 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((-1*1j) * (9 * phi1 + phi2)) * np.sqrt(0.4862e4) * t6918 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 978:
            t6921 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * np.exp((-9*1j) * phi1) * np.sqrt(0.12155e5) * ((1 - t6921) ** (0.9e1 / 0.2e1)) * ((1 + t6921) ** (0.9e1 / 0.2e1))

        if Bindx == 979:
            t6925 = np.sin(phi)
            t6922 = t6925 ** 2
            t6923 = t6922 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((-1*1j) * (9 * phi1 - phi2)) * np.sqrt(0.4862e4) * t6923 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 980:
            t6926 = np.cos(phi)
            tfunc[..., c] = (0.57e2 / 0.128e3*1j) * np.exp((-1*1j) * (9 * phi1 - 2 * phi2)) * np.sqrt(0.221e3) * ((1 - t6926) ** (0.11e2 / 0.2e1)) * ((1 + t6926) ** (0.7e1 / 0.2e1))

        if Bindx == 981:
            t6927 = np.cos(phi)
            t6934 = -1 + t6927
            t6933 = 1 + t6927
            t6931 = t6933 ** 2
            t6928 = t6934 ** 2
            t6929 = t6934 * t6928
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-3*1j) * (3 * phi1 - phi2)) * np.sqrt(0.4641e4) * t6929 ** 2 * t6933 * t6931

        if Bindx == 982:
            t6935 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.256e3*1j) * np.exp((-1*1j) * (9 * phi1 - 4 * phi2)) * np.sqrt(0.238e3) * ((1 - t6935) ** (0.13e2 / 0.2e1)) * ((1 + t6935) ** (0.5e1 / 0.2e1))

        if Bindx == 983:
            t6937 = np.cos(phi)
            t6942 = -1 + t6937
            t6938 = t6942 ** 2
            t6939 = t6942 * t6938
            t6936 = 1 + t6937
            tfunc[..., c] = (0.57e2 / 0.256e3) * np.exp((-1*1j) * (9 * phi1 - 5 * phi2)) * np.sqrt(0.85e2) * t6942 * t6939 ** 2 * t6936 ** 2

        if Bindx == 984:
            t6943 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((-3*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.51e2) * ((1 - t6943) ** (0.15e2 / 0.2e1)) * ((1 + t6943) ** (0.3e1 / 0.2e1))

        if Bindx == 985:
            t6944 = np.cos(phi)
            t6948 = -1 + t6944
            t6945 = t6948 ** 2
            t6946 = t6945 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((-1*1j) * (9 * phi1 - 7 * phi2)) * np.sqrt(0.17e2) * t6946 ** 2 * (1 + t6944)

        if Bindx == 986:
            t6949 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.512e3*1j) * np.exp((-1*1j) * (9 * phi1 - 8 * phi2)) * np.sqrt(0.2e1) * ((1 - t6949) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t6949))

        if Bindx == 987:
            t6950 = np.cos(phi)
            t6951 = t6950 ** 2
            t6953 = t6951 ** 2
            t6957 = t6953 ** 2
            t6952 = t6950 * t6951
            t6955 = t6952 ** 2
            tfunc[..., c] = (0.19e2 / 0.512e3) * np.exp((-9*1j) * (phi1 - phi2)) * (-36 * t6951 + 84 * t6952 - 126 * t6953 - 84 * t6955 - 9 * t6957 - 1 + (126 * t6953 + 36 * t6955 + t6957 + 9) * t6950)

        if Bindx == 988:
            t6959 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.512e3*1j) * np.exp((-1*1j) * (8 * phi1 + 9 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t6959)) * ((1 + t6959) ** (0.17e2 / 0.2e1))

        if Bindx == 989:
            t6960 = np.cos(phi)
            t6961 = t6960 ** 2
            t6963 = t6961 ** 2
            t6967 = t6963 ** 2
            t6962 = t6960 * t6961
            t6965 = t6962 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-8*1j) * (phi1 + phi2)) * (-152 * t6961 - 196 * t6962 - 56 * t6963 + 280 * t6965 + 64 * t6967 - 8 + (182 * t6963 + 188 * t6965 + 9 * t6967 - 55) * t6960)

        if Bindx == 990:
            t6969 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.512e3*1j) * np.exp((-1*1j) * (8 * phi1 + 7 * phi2)) * np.sqrt(0.34e2) * ((1 + t6969) ** (0.15e2 / 0.2e1)) * (7 + (-16 + 9 * t6969) * t6969) * ((1 - t6969) ** (-0.1e1 / 0.2e1))

        if Bindx == 991:
            t6970 = np.cos(phi)
            t6975 = 1 + t6970
            t6971 = t6975 ** 2
            t6972 = t6975 * t6971
            tfunc[..., c] = (0.19e2 / 0.128e3) * (-2 + 3 * t6970) * (-1 + t6970) * t6975 * t6972 ** 2 * np.sqrt(0.102e3) * np.exp((-2*1j) * (4 * phi1 + 3 * phi2))

        if Bindx == 992:
            t6976 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * (-5 + 9 * t6976) * ((1 + t6976) ** (0.13e2 / 0.2e1)) * np.sqrt(0.170e3) * np.exp((-1*1j) * (8 * phi1 + 5 * phi2)) * ((1 - t6976) ** (0.3e1 / 0.2e1))

        if Bindx == 993:
            t6984 = np.sin(phi)
            t6982 = t6984 ** 2
            t6977 = np.cos(phi)
            t6978 = t6977 ** 2
            t6980 = t6978 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((-4*1j) * (2 * phi1 + phi2)) * np.sqrt(0.119e3) * t6982 ** 2 * (12 * t6978 + 32 * t6980 - 4 + (38 * t6978 + 9 * t6980 - 7) * t6977)

        if Bindx == 994:
            t6985 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * (-1 + 3 * t6985) * ((1 + t6985) ** (0.11e2 / 0.2e1)) * np.sqrt(0.9282e4) * np.exp((-1*1j) * (8 * phi1 + 3 * phi2)) * ((1 - t6985) ** (0.5e1 / 0.2e1))

        if Bindx == 995:
            t6992 = np.sin(phi)
            t6989 = t6992 ** 2
            t6990 = t6992 * t6989
            t6986 = np.cos(phi)
            t6987 = t6986 ** 2
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((-2*1j) * (4 * phi1 + phi2)) * np.sqrt(0.442e3) * t6990 ** 2 * (16 * t6987 - 2 + (9 * t6987 + 5) * t6986)

        if Bindx == 996:
            t6993 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * (-1 + 9 * t6993) * ((1 + t6993) ** (0.9e1 / 0.2e1)) * np.sqrt(0.2431e4) * np.exp((-1*1j) * (8 * phi1 + phi2)) * ((1 - t6993) ** (0.7e1 / 0.2e1))

        if Bindx == 997:
            t6997 = np.sin(phi)
            t6994 = t6997 ** 2
            t6995 = t6994 ** 2
            tfunc[..., c] = (0.57e2 / 0.256e3) * np.exp((-8*1j) * phi1) * np.sqrt(0.24310e5) * t6995 ** 2 * np.cos(phi)

        if Bindx == 998:
            t6998 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * (9 * t6998 + 1) * ((1 + t6998) ** (0.7e1 / 0.2e1)) * np.sqrt(0.2431e4) * np.exp((-1*1j) * (8 * phi1 - phi2)) * ((1 - t6998) ** (0.9e1 / 0.2e1))

        if Bindx == 999:
            t7005 = np.sin(phi)
            t7002 = t7005 ** 2
            t7003 = t7005 * t7002
            t6999 = np.cos(phi)
            t7000 = t6999 ** 2
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((-2*1j) * (4 * phi1 - phi2)) * np.sqrt(0.442e3) * t7003 ** 2 * (-16 * t7000 + 2 + (9 * t7000 + 5) * t6999)

        if Bindx == 1000:
            t7006 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * (1 + 3 * t7006) * ((1 + t7006) ** (0.5e1 / 0.2e1)) * np.sqrt(0.9282e4) * np.exp((-1*1j) * (8 * phi1 - 3 * phi2)) * ((1 - t7006) ** (0.11e2 / 0.2e1))

        if Bindx == 1001:
            t7014 = np.sin(phi)
            t7012 = t7014 ** 2
            t7007 = np.cos(phi)
            t7008 = t7007 ** 2
            t7010 = t7008 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((-4*1j) * (2 * phi1 - phi2)) * np.sqrt(0.119e3) * t7012 ** 2 * (-12 * t7008 - 32 * t7010 + 4 + (38 * t7008 + 9 * t7010 - 7) * t7007)

        if Bindx == 1002:
            t7015 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * (5 + 9 * t7015) * ((1 + t7015) ** (0.3e1 / 0.2e1)) * np.sqrt(0.170e3) * np.exp((-1*1j) * (8 * phi1 - 5 * phi2)) * ((1 - t7015) ** (0.13e2 / 0.2e1))

        if Bindx == 1003:
            t7016 = np.cos(phi)
            t7021 = -1 + t7016
            t7017 = t7021 ** 2
            t7018 = t7021 * t7017
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((-2*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.102e3) * (1 + t7016) * t7021 * t7018 ** 2 * (2 + 3 * t7016)

        if Bindx == 1004:
            t7022 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.512e3*1j) * (7 + 9 * t7022) * np.sqrt((1 + t7022)) * np.sqrt(0.34e2) * np.exp((-1*1j) * (8 * phi1 - 7 * phi2)) * ((1 - t7022) ** (0.15e2 / 0.2e1))

        if Bindx == 1005:
            t7023 = np.cos(phi)
            t7024 = t7023 ** 2
            t7026 = t7024 ** 2
            t7030 = t7026 ** 2
            t7025 = t7023 * t7024
            t7028 = t7025 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-8*1j) * (phi1 - phi2)) * (152 * t7024 - 196 * t7025 + 56 * t7026 - 280 * t7028 - 64 * t7030 + 8 + (182 * t7026 + 188 * t7028 + 9 * t7030 - 55) * t7023)

        if Bindx == 1006:
            t7032 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.512e3*1j) * np.exp((-1*1j) * (8 * phi1 - 9 * phi2)) * np.sqrt(0.2e1) * ((1 - t7032) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t7032))

        if Bindx == 1007:
            t7033 = np.cos(phi)
            t7037 = 1 + t7033
            t7034 = t7037 ** 2
            t7035 = t7034 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((-1*1j) * (7 * phi1 + 9 * phi2)) * np.sqrt(0.17e2) * (-1 + t7033) * t7035 ** 2

        if Bindx == 1008:
            t7038 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.512e3*1j) * np.exp((-1*1j) * (7 * phi1 + 8 * phi2)) * np.sqrt(0.34e2) * np.sqrt((1 - t7038)) * ((1 + t7038) ** (0.15e2 / 0.2e1)) * (-7 + 9 * t7038)

        if Bindx == 1009:
            t7039 = np.cos(phi)
            t7040 = t7039 ** 2
            t7042 = t7040 ** 2
            t7046 = t7042 ** 2
            t7041 = t7039 * t7040
            t7044 = t7041 ** 2
            tfunc[..., c] = (0.19e2 / 0.512e3) * np.exp((-7*1j) * (phi1 + phi2)) * (356 * t7040 - 812 * t7041 - 2002 * t7042 + 980 * t7044 + 833 * t7046 + 89 + (-1106 * t7042 + 1636 * t7044 + 153 * t7046 + 385) * t7039)

        if Bindx == 1010:
            t7048 = np.cos(phi)
            t7049 = t7048 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((-1*1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.3e1) * ((1 + t7048) ** (0.13e2 / 0.2e1)) * (-119 * t7049 - 21 + (51 * t7049 + 89) * t7048) * ((1 - t7048) ** (-0.1e1 / 0.2e1))

        if Bindx == 1011:
            t7052 = np.cos(phi)
            t7053 = t7052 ** 2
            t7054 = t7052 * t7053
            t7057 = t7054 ** 2
            t7055 = t7053 ** 2
            t7051 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((-1*1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.5e1) * t7051 ** 2 * (-287 * t7053 - 525 * t7054 + 35 * t7055 + 595 * t7057 + 41 + (721 * t7055 + 153 * t7057 + 35) * t7052)

        if Bindx == 1012:
            t7059 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * (23 + (-136 + 153 * t7059) * t7059) * ((1 + t7059) ** (0.11e2 / 0.2e1)) * np.sqrt(0.14e2) * np.exp((-1*1j) * (7 * phi1 + 4 * phi2)) * ((1 - t7059) ** (0.3e1 / 0.2e1))

        if Bindx == 1013:
            t7067 = np.sin(phi)
            t7065 = t7067 ** 2
            t7060 = np.cos(phi)
            t7061 = t7060 ** 2
            t7063 = t7061 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-1*1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.273e3) * t7065 ** 2 * (-42 * t7061 + 119 * t7063 + 3 + (54 * t7061 + 51 * t7063 - 25) * t7060)

        if Bindx == 1014:
            t7068 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * (-1 + (-68 + 153 * t7068) * t7068) * ((1 + t7068) ** (0.9e1 / 0.2e1)) * np.sqrt(0.13e2) * np.exp((-1*1j) * (7 * phi1 + 2 * phi2)) * ((1 - t7068) ** (0.5e1 / 0.2e1))

        if Bindx == 1015:
            t7075 = np.sin(phi)
            t7072 = t7075 ** 2
            t7073 = t7075 * t7072
            t7069 = np.cos(phi)
            t7070 = t7069 ** 2
            tfunc[..., c] = -(0.19e2 / 0.512e3) * np.exp((-1*1j) * (7 * phi1 + phi2)) * np.sqrt(0.286e3) * t7073 ** 2 * (119 * t7070 - 7 + (153 * t7070 - 41) * t7069)

        if Bindx == 1016:
            t7076 = np.cos(phi)
            tfunc[..., c] = (0.57e2 / 0.256e3*1j) * (17 * t7076 ** 2 - 1) * ((1 + t7076) ** (0.7e1 / 0.2e1)) * np.sqrt(0.715e3) * np.exp((-7*1j) * phi1) * ((1 - t7076) ** (0.7e1 / 0.2e1))

        if Bindx == 1017:
            t7083 = np.sin(phi)
            t7080 = t7083 ** 2
            t7081 = t7083 * t7080
            t7077 = np.cos(phi)
            t7078 = t7077 ** 2
            tfunc[..., c] = -(0.19e2 / 0.512e3) * np.exp((-1*1j) * (7 * phi1 - phi2)) * np.sqrt(0.286e3) * t7081 ** 2 * (-119 * t7078 + 7 + (153 * t7078 - 41) * t7077)

        if Bindx == 1018:
            t7084 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * (-1 + (68 + 153 * t7084) * t7084) * ((1 + t7084) ** (0.5e1 / 0.2e1)) * np.sqrt(0.13e2) * np.exp((-1*1j) * (7 * phi1 - 2 * phi2)) * ((1 - t7084) ** (0.9e1 / 0.2e1))

        if Bindx == 1019:
            t7092 = np.sin(phi)
            t7090 = t7092 ** 2
            t7085 = np.cos(phi)
            t7086 = t7085 ** 2
            t7088 = t7086 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-1*1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.273e3) * t7090 ** 2 * (42 * t7086 - 119 * t7088 - 3 + (54 * t7086 + 51 * t7088 - 25) * t7085)

        if Bindx == 1020:
            t7093 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * (23 + (136 + 153 * t7093) * t7093) * ((1 + t7093) ** (0.3e1 / 0.2e1)) * np.sqrt(0.14e2) * np.exp((-1*1j) * (7 * phi1 - 4 * phi2)) * ((1 - t7093) ** (0.11e2 / 0.2e1))

        if Bindx == 1021:
            t7095 = np.cos(phi)
            t7096 = t7095 ** 2
            t7097 = t7095 * t7096
            t7100 = t7097 ** 2
            t7098 = t7096 ** 2
            t7094 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((-1*1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.5e1) * t7094 ** 2 * (287 * t7096 - 525 * t7097 - 35 * t7098 - 595 * t7100 - 41 + (721 * t7098 + 153 * t7100 + 35) * t7095)

        if Bindx == 1022:
            t7102 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * (21 + (68 + 51 * t7102) * t7102) * np.sqrt((1 + t7102)) * np.sqrt(0.3e1) * np.exp((-1*1j) * (7 * phi1 - 6 * phi2)) * ((1 - t7102) ** (0.13e2 / 0.2e1))

        if Bindx == 1023:
            t7103 = np.cos(phi)
            t7104 = t7103 ** 2
            t7106 = t7104 ** 2
            t7110 = t7106 ** 2
            t7105 = t7103 * t7104
            t7108 = t7105 ** 2
            tfunc[..., c] = (0.19e2 / 0.512e3) * np.exp((-7*1j) * (phi1 - phi2)) * (-356 * t7104 - 812 * t7105 + 2002 * t7106 - 980 * t7108 - 833 * t7110 - 89 + (-1106 * t7106 + 1636 * t7108 + 153 * t7110 + 385) * t7103)

        if Bindx == 1024:
            t7112 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.512e3*1j) * (7 + 9 * t7112) * np.sqrt((1 + t7112)) * np.sqrt(0.34e2) * np.exp((-1*1j) * (7 * phi1 - 8 * phi2)) * ((1 - t7112) ** (0.15e2 / 0.2e1))

        if Bindx == 1025:
            t7113 = np.cos(phi)
            t7117 = -1 + t7113
            t7114 = t7117 ** 2
            t7115 = t7114 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((-1*1j) * (7 * phi1 - 9 * phi2)) * np.sqrt(0.17e2) * t7115 ** 2 * (1 + t7113)

        if Bindx == 1026:
            t7118 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((-3*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.51e2) * ((1 - t7118) ** (0.3e1 / 0.2e1)) * ((1 + t7118) ** (0.15e2 / 0.2e1))

        if Bindx == 1027:
            t7119 = np.cos(phi)
            t7124 = 1 + t7119
            t7120 = t7124 ** 2
            t7121 = t7124 * t7120
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((-2*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.102e3) * (-1 + t7119) * t7124 * t7121 ** 2 * (-2 + 3 * t7119)

        if Bindx == 1028:
            t7125 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((-1*1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.3e1) * np.sqrt((1 - t7125)) * ((1 + t7125) ** (0.13e2 / 0.2e1)) * (21 + (-68 + 51 * t7125) * t7125)

        if Bindx == 1029:
            t7126 = np.cos(phi)
            t7127 = t7126 ** 2
            t7129 = t7127 ** 2
            t7133 = t7129 ** 2
            t7128 = t7126 * t7127
            t7131 = t7128 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((-6*1j) * (phi1 + phi2)) * (207 * t7127 + 308 * t7128 - 273 * t7129 - 287 * t7131 + 408 * t7133 - 23 + (-798 * t7129 + 432 * t7131 + 102 * t7133 - 12) * t7126)

        if Bindx == 1030:
            t7135 = np.cos(phi)
            t7136 = t7135 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * np.exp((-1*1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.15e2) * ((1 + t7135) ** (0.11e2 / 0.2e1)) * (-46 * t7135 + 5 + (-136 * t7135 + 126 + 51 * t7136) * t7136) * ((1 - t7135) ** (-0.1e1 / 0.2e1))

        if Bindx == 1031:
            t7140 = np.cos(phi)
            t7141 = t7140 ** 2
            t7142 = t7140 * t7141
            t7145 = t7142 ** 2
            t7143 = t7141 ** 2
            t7139 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.42e2) * t7139 ** 2 * (18 * t7141 - 87 * t7142 - 113 * t7143 + 136 * t7145 - 1 + (57 * t7143 + 51 * t7145 + 19) * t7140)

        if Bindx == 1032:
            t7147 = np.cos(phi)
            t7148 = t7147 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * (-51 * t7148 + 1 + (51 * t7148 + 9) * t7147) * ((1 + t7147) ** (0.9e1 / 0.2e1)) * np.sqrt(0.91e2) * np.exp((-3*1j) * (2 * phi1 + phi2)) * ((1 - t7147) ** (0.3e1 / 0.2e1))

        if Bindx == 1033:
            t7157 = np.sin(phi)
            t7155 = t7157 ** 2
            t7150 = np.cos(phi)
            t7151 = t7150 ** 2
            t7153 = t7151 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.39e2) * t7155 ** 2 * (-69 * t7151 + 136 * t7153 + 3 + (-36 * t7151 + 102 * t7153 + 4) * t7150)

        if Bindx == 1034:
            t7158 = np.cos(phi)
            t7159 = t7158 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * (-17 * t7159 + 1 + (51 * t7159 - 7) * t7158) * ((1 + t7158) ** (0.7e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((-1*1j) * (6 * phi1 + phi2)) * ((1 - t7158) ** (0.5e1 / 0.2e1))

        if Bindx == 1035:
            t7165 = np.sin(phi)
            t7162 = t7165 ** 2
            t7163 = t7165 * t7162
            t7161 = np.cos(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((-6*1j) * phi1) * np.sqrt(0.2145e4) * t7163 ** 2 * t7161 * (17 * t7161 ** 2 - 3)

        if Bindx == 1036:
            t7166 = np.cos(phi)
            t7167 = t7166 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * (17 * t7167 - 1 + (51 * t7167 - 7) * t7166) * ((1 + t7166) ** (0.5e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((-1*1j) * (6 * phi1 - phi2)) * ((1 - t7166) ** (0.7e1 / 0.2e1))

        if Bindx == 1037:
            t7176 = np.sin(phi)
            t7174 = t7176 ** 2
            t7169 = np.cos(phi)
            t7170 = t7169 ** 2
            t7172 = t7170 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.39e2) * t7174 ** 2 * (69 * t7170 - 136 * t7172 - 3 + (-36 * t7170 + 102 * t7172 + 4) * t7169)

        if Bindx == 1038:
            t7177 = np.cos(phi)
            t7180 = 51 * t7177 ** 2
            tfunc[..., c] = (-0.19e2 / 0.64e2*1j) * (t7180 - 1 + (t7180 + 9) * t7177) * ((1 + t7177) ** (0.3e1 / 0.2e1)) * np.sqrt(0.91e2) * np.exp((-3*1j) * (2 * phi1 - phi2)) * ((1 - t7177) ** (0.9e1 / 0.2e1))

        if Bindx == 1039:
            t7182 = np.cos(phi)
            t7183 = t7182 ** 2
            t7184 = t7182 * t7183
            t7187 = t7184 ** 2
            t7185 = t7183 ** 2
            t7181 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.42e2) * t7181 ** 2 * (-18 * t7183 - 87 * t7184 + 113 * t7185 - 136 * t7187 + 1 + (57 * t7185 + 51 * t7187 + 19) * t7182)

        if Bindx == 1040:
            t7189 = np.cos(phi)
            t7190 = t7189 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * (85 * t7190 + 5 + (51 * t7190 + 41) * t7189) * np.sqrt((1 + t7189)) * np.sqrt(0.15e2) * np.exp((-1*1j) * (6 * phi1 - 5 * phi2)) * ((1 - t7189) ** (0.11e2 / 0.2e1))

        if Bindx == 1041:
            t7192 = np.cos(phi)
            t7193 = t7192 ** 2
            t7195 = t7193 ** 2
            t7199 = t7195 ** 2
            t7194 = t7192 * t7193
            t7197 = t7194 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((-6*1j) * (phi1 - phi2)) * (-207 * t7193 + 308 * t7194 + 273 * t7195 + 287 * t7197 - 408 * t7199 + 23 + (-798 * t7195 + 432 * t7197 + 102 * t7199 - 12) * t7192)

        if Bindx == 1042:
            t7201 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * (21 + (68 + 51 * t7201) * t7201) * np.sqrt((1 + t7201)) * np.sqrt(0.3e1) * np.exp((-1*1j) * (6 * phi1 - 7 * phi2)) * ((1 - t7201) ** (0.13e2 / 0.2e1))

        if Bindx == 1043:
            t7203 = np.cos(phi)
            t7204 = t7203 ** 2
            t7205 = t7203 * t7204
            t7208 = t7205 ** 2
            t7206 = t7204 ** 2
            t7202 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((-2*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.102e3) * t7202 ** 2 * (12 * t7204 + 5 * t7205 - 30 * t7206 - 16 * t7208 + 2 + (33 * t7206 + 3 * t7208 - 9) * t7203)

        if Bindx == 1044:
            t7210 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((-3*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.51e2) * ((1 - t7210) ** (0.15e2 / 0.2e1)) * ((1 + t7210) ** (0.3e1 / 0.2e1))

        if Bindx == 1045:
            t7212 = np.cos(phi)
            t7217 = 1 + t7212
            t7213 = t7217 ** 2
            t7214 = t7217 * t7213
            t7211 = -1 + t7212
            tfunc[..., c] = (0.57e2 / 0.256e3) * np.exp((-1*1j) * (5 * phi1 + 9 * phi2)) * np.sqrt(0.85e2) * t7211 ** 2 * t7217 * t7214 ** 2

        if Bindx == 1046:
            t7218 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * np.exp((-1*1j) * (5 * phi1 + 8 * phi2)) * np.sqrt(0.170e3) * ((1 - t7218) ** (0.3e1 / 0.2e1)) * ((1 + t7218) ** (0.13e2 / 0.2e1)) * (-5 + 9 * t7218)

        if Bindx == 1047:
            t7220 = np.cos(phi)
            t7221 = t7220 ** 2
            t7222 = t7220 * t7221
            t7225 = t7222 ** 2
            t7223 = t7221 ** 2
            t7219 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((-1*1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.5e1) * t7219 ** 2 * (-287 * t7221 - 525 * t7222 + 35 * t7223 + 595 * t7225 + 41 + (721 * t7223 + 153 * t7225 + 35) * t7220)

        if Bindx == 1048:
            t7227 = np.cos(phi)
            t7228 = t7227 ** 2
            tfunc[..., c] = (-0.19e2 / 0.64e2*1j) * np.exp((-1*1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.15e2) * np.sqrt((1 - t7227)) * ((1 + t7227) ** (0.11e2 / 0.2e1)) * (-85 * t7228 - 5 + (51 * t7228 + 41) * t7227)

        if Bindx == 1049:
            t7230 = np.cos(phi)
            t7231 = t7230 ** 2
            t7233 = t7231 ** 2
            t7237 = t7233 ** 2
            t7232 = t7230 * t7231
            t7235 = t7232 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((-5*1j) * (phi1 + phi2)) * (-180 * t7231 + 1540 * t7232 + 1610 * t7233 - 3500 * t7235 + 2125 * t7237 + 9 + (-2366 * t7233 + 380 * t7235 + 765 * t7237 - 255) * t7230)

        if Bindx == 1050:
            t7239 = np.cos(phi)
            t7240 = t7239 ** 2
            t7242 = t7240 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((-1*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.70e2) * ((1 + t7239) ** (0.9e1 / 0.2e1)) * (-150 * t7240 - 425 * t7242 + 3 + (410 * t7240 + 153 * t7242 + 9) * t7239) * ((1 - t7239) ** (-0.1e1 / 0.2e1))

        if Bindx == 1051:
            t7245 = np.cos(phi)
            t7246 = t7245 ** 2
            t7247 = t7245 * t7246
            t7250 = t7247 ** 2
            t7248 = t7246 ** 2
            t7244 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.1365e4) * t7244 ** 2 * (27 * t7246 - 3 * t7247 - 95 * t7248 + 85 * t7250 - 1 + (-33 * t7248 + 51 * t7250 + 1) * t7245)

        if Bindx == 1052:
            t7252 = np.cos(phi)
            t7253 = t7252 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * (18 * t7252 - 1 + (-136 * t7252 - 6 + 153 * t7253) * t7253) * ((1 + t7252) ** (0.7e1 / 0.2e1)) * np.sqrt(0.65e2) * np.exp((-1*1j) * (5 * phi1 + 2 * phi2)) * ((1 - t7252) ** (0.3e1 / 0.2e1))

        if Bindx == 1053:
            t7263 = np.sin(phi)
            t7261 = t7263 ** 2
            t7256 = np.cos(phi)
            t7257 = t7256 ** 2
            t7259 = t7257 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-1*1j) * (5 * phi1 + phi2)) * np.sqrt(0.1430e4) * t7261 ** 2 * (-30 * t7257 + 85 * t7259 + 1 + (-110 * t7257 + 153 * t7259 + 13) * t7256)

        if Bindx == 1054:
            t7264 = np.cos(phi)
            t7265 = t7264 ** 2
            tfunc[..., c] = (-0.57e2 / 0.128e3*1j) * (1 + (-30 + 85 * t7265) * t7265) * ((1 + t7264) ** (0.5e1 / 0.2e1)) * np.sqrt(0.143e3) * np.exp((-5*1j) * phi1) * ((1 - t7264) ** (0.5e1 / 0.2e1))

        if Bindx == 1055:
            t7274 = np.sin(phi)
            t7272 = t7274 ** 2
            t7267 = np.cos(phi)
            t7268 = t7267 ** 2
            t7270 = t7268 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-1*1j) * (5 * phi1 - phi2)) * np.sqrt(0.1430e4) * t7272 ** 2 * (30 * t7268 - 85 * t7270 - 1 + (-110 * t7268 + 153 * t7270 + 13) * t7267)

        if Bindx == 1056:
            t7275 = np.cos(phi)
            t7276 = t7275 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * (-18 * t7275 - 1 + (136 * t7275 - 6 + 153 * t7276) * t7276) * ((1 + t7275) ** (0.3e1 / 0.2e1)) * np.sqrt(0.65e2) * np.exp((-1*1j) * (5 * phi1 - 2 * phi2)) * ((1 - t7275) ** (0.7e1 / 0.2e1))

        if Bindx == 1057:
            t7280 = np.cos(phi)
            t7281 = t7280 ** 2
            t7282 = t7280 * t7281
            t7285 = t7282 ** 2
            t7283 = t7281 ** 2
            t7279 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.1365e4) * t7279 ** 2 * (-27 * t7281 - 3 * t7282 + 95 * t7283 - 85 * t7285 + 1 + (-33 * t7283 + 51 * t7285 + 1) * t7280)

        if Bindx == 1058:
            t7287 = np.cos(phi)
            t7288 = t7287 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * (12 * t7287 - 3 + (272 * t7287 + 138 + 153 * t7288) * t7288) * np.sqrt((1 + t7287)) * np.sqrt(0.70e2) * np.exp((-1*1j) * (5 * phi1 - 4 * phi2)) * ((1 - t7287) ** (0.9e1 / 0.2e1))

        if Bindx == 1059:
            t7291 = np.cos(phi)
            t7292 = t7291 ** 2
            t7294 = t7292 ** 2
            t7298 = t7294 ** 2
            t7293 = t7291 * t7292
            t7296 = t7293 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((-5*1j) * (phi1 - phi2)) * (180 * t7292 + 1540 * t7293 - 1610 * t7294 + 3500 * t7296 - 2125 * t7298 - 9 + (-2366 * t7294 + 380 * t7296 + 765 * t7298 - 255) * t7291)

        if Bindx == 1060:
            t7300 = np.cos(phi)
            t7301 = t7300 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * (85 * t7301 + 5 + (51 * t7301 + 41) * t7300) * np.sqrt((1 + t7300)) * np.sqrt(0.15e2) * np.exp((-1*1j) * (5 * phi1 - 6 * phi2)) * ((1 - t7300) ** (0.11e2 / 0.2e1))

        if Bindx == 1061:
            t7304 = np.cos(phi)
            t7305 = t7304 ** 2
            t7306 = t7304 * t7305
            t7309 = t7306 ** 2
            t7307 = t7305 ** 2
            t7303 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((-1*1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.5e1) * t7303 ** 2 * (287 * t7305 - 525 * t7306 - 35 * t7307 - 595 * t7309 - 41 + (721 * t7307 + 153 * t7309 + 35) * t7304)

        if Bindx == 1062:
            t7311 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * (5 + 9 * t7311) * ((1 + t7311) ** (0.3e1 / 0.2e1)) * np.sqrt(0.170e3) * np.exp((-1*1j) * (5 * phi1 - 8 * phi2)) * ((1 - t7311) ** (0.13e2 / 0.2e1))

        if Bindx == 1063:
            t7313 = np.cos(phi)
            t7318 = -1 + t7313
            t7314 = t7318 ** 2
            t7315 = t7318 * t7314
            t7312 = 1 + t7313
            tfunc[..., c] = (0.57e2 / 0.256e3) * np.exp((-1*1j) * (5 * phi1 - 9 * phi2)) * np.sqrt(0.85e2) * t7318 * t7315 ** 2 * t7312 ** 2

        if Bindx == 1064:
            t7319 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.256e3*1j) * np.exp((-1*1j) * (4 * phi1 + 9 * phi2)) * np.sqrt(0.238e3) * ((1 - t7319) ** (0.5e1 / 0.2e1)) * ((1 + t7319) ** (0.13e2 / 0.2e1))

        if Bindx == 1065:
            t7321 = np.cos(phi)
            t7325 = 1 + t7321
            t7322 = t7325 ** 2
            t7323 = t7325 * t7322
            t7320 = -1 + t7321
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((-4*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.119e3) * t7320 ** 2 * t7323 ** 2 * (-4 + 9 * t7321)

        if Bindx == 1066:
            t7326 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * np.exp((-1*1j) * (4 * phi1 + 7 * phi2)) * np.sqrt(0.14e2) * ((1 - t7326) ** (0.3e1 / 0.2e1)) * ((1 + t7326) ** (0.11e2 / 0.2e1)) * (23 + (-136 + 153 * t7326) * t7326)

        if Bindx == 1067:
            t7328 = np.cos(phi)
            t7329 = t7328 ** 2
            t7330 = t7328 * t7329
            t7333 = t7330 ** 2
            t7331 = t7329 ** 2
            t7327 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.42e2) * t7327 ** 2 * (18 * t7329 - 87 * t7330 - 113 * t7331 + 136 * t7333 - 1 + (57 * t7331 + 51 * t7333 + 19) * t7328)

        if Bindx == 1068:
            t7335 = np.cos(phi)
            t7336 = t7335 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((-1*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.70e2) * np.sqrt((1 - t7335)) * ((1 + t7335) ** (0.9e1 / 0.2e1)) * (-12 * t7335 - 3 + (-272 * t7335 + 138 + 153 * t7336) * t7336)

        if Bindx == 1069:
            t7339 = np.cos(phi)
            t7340 = t7339 ** 2
            t7342 = t7340 ** 2
            t7346 = t7342 ** 2
            t7341 = t7339 * t7340
            t7344 = t7341 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((-4*1j) * (phi1 + phi2)) * (-522 * t7340 + 212 * t7341 + 2398 * t7342 - 3766 * t7344 + 1904 * t7346 + 18 + (266 * t7342 - 1484 * t7344 + 1071 * t7346 - 33) * t7339)

        if Bindx == 1070:
            t7348 = np.cos(phi)
            t7349 = t7348 ** 2
            t7351 = t7349 ** 2
            t7350 = t7348 * t7349
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((-1*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.78e2) * ((1 + t7348) ** (0.7e1 / 0.2e1)) * (-105 * t7349 + 805 * t7351 - 1 + (-140 + 357 * t7350) * t7350 + (-952 * t7351 + 36) * t7348) * ((1 - t7348) ** (-0.1e1 / 0.2e1))

        if Bindx == 1071:
            t7355 = np.cos(phi)
            t7356 = t7355 ** 2
            t7357 = t7355 * t7356
            t7360 = t7357 ** 2
            t7358 = t7356 ** 2
            t7354 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.182e3) * t7354 ** 2 * (34 * t7356 + 75 * t7357 - 145 * t7358 + 136 * t7360 - 1 + (-197 * t7358 + 153 * t7360 - 7) * t7355)

        if Bindx == 1072:
            t7362 = np.cos(phi)
            t7363 = t7362 ** 2
            t7365 = t7363 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * (30 * t7363 - 85 * t7365 - 1 + (-70 * t7363 + 153 * t7365 + 5) * t7362) * ((1 + t7362) ** (0.5e1 / 0.2e1)) * np.sqrt(0.1001e4) * np.exp((-1*1j) * (4 * phi1 + phi2)) * ((1 - t7362) ** (0.3e1 / 0.2e1))

        if Bindx == 1073:
            t7372 = np.sin(phi)
            t7370 = t7372 ** 2
            t7367 = np.cos(phi)
            t7368 = t7367 ** 2
            tfunc[..., c] = (0.57e2 / 0.128e3) * np.exp((-4*1j) * phi1) * np.sqrt(0.10010e5) * t7370 ** 2 * t7367 * (1 + (-10 + 17 * t7368) * t7368)

        if Bindx == 1074:
            t7373 = np.cos(phi)
            t7374 = t7373 ** 2
            t7376 = t7374 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * (-30 * t7374 + 85 * t7376 + 1 + (-70 * t7374 + 153 * t7376 + 5) * t7373) * ((1 + t7373) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1001e4) * np.exp((-1*1j) * (4 * phi1 - phi2)) * ((1 - t7373) ** (0.5e1 / 0.2e1))

        if Bindx == 1075:
            t7379 = np.cos(phi)
            t7380 = t7379 ** 2
            t7381 = t7379 * t7380
            t7384 = t7381 ** 2
            t7382 = t7380 ** 2
            t7378 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.182e3) * t7378 ** 2 * (-34 * t7380 + 75 * t7381 + 145 * t7382 - 136 * t7384 + 1 + (-197 * t7382 + 153 * t7384 - 7) * t7379)

        if Bindx == 1076:
            t7386 = np.cos(phi)
            t7387 = t7386 ** 2
            t7389 = t7387 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * (-70 * t7387 + 595 * t7389 - 1 + (210 * t7387 + 357 * t7389 - 35) * t7386) * np.sqrt((1 + t7386)) * np.sqrt(0.78e2) * np.exp((-1*1j) * (4 * phi1 - 3 * phi2)) * ((1 - t7386) ** (0.7e1 / 0.2e1))

        if Bindx == 1077:
            t7391 = np.cos(phi)
            t7392 = t7391 ** 2
            t7394 = t7392 ** 2
            t7398 = t7394 ** 2
            t7393 = t7391 * t7392
            t7396 = t7393 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((-4*1j) * (phi1 - phi2)) * (522 * t7392 + 212 * t7393 - 2398 * t7394 + 3766 * t7396 - 1904 * t7398 - 18 + (266 * t7394 - 1484 * t7396 + 1071 * t7398 - 33) * t7391)

        if Bindx == 1078:
            t7400 = np.cos(phi)
            t7401 = t7400 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * (12 * t7400 - 3 + (272 * t7400 + 138 + 153 * t7401) * t7401) * np.sqrt((1 + t7400)) * np.sqrt(0.70e2) * np.exp((-1*1j) * (4 * phi1 - 5 * phi2)) * ((1 - t7400) ** (0.9e1 / 0.2e1))

        if Bindx == 1079:
            t7405 = np.cos(phi)
            t7406 = t7405 ** 2
            t7407 = t7405 * t7406
            t7410 = t7407 ** 2
            t7408 = t7406 ** 2
            t7404 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.42e2) * t7404 ** 2 * (-18 * t7406 - 87 * t7407 + 113 * t7408 - 136 * t7410 + 1 + (57 * t7408 + 51 * t7410 + 19) * t7405)

        if Bindx == 1080:
            t7412 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * (23 + (136 + 153 * t7412) * t7412) * ((1 + t7412) ** (0.3e1 / 0.2e1)) * np.sqrt(0.14e2) * np.exp((-1*1j) * (4 * phi1 - 7 * phi2)) * ((1 - t7412) ** (0.11e2 / 0.2e1))

        if Bindx == 1081:
            t7420 = np.sin(phi)
            t7418 = t7420 ** 2
            t7413 = np.cos(phi)
            t7414 = t7413 ** 2
            t7416 = t7414 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((-4*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.119e3) * t7418 ** 2 * (-12 * t7414 - 32 * t7416 + 4 + (38 * t7414 + 9 * t7416 - 7) * t7413)

        if Bindx == 1082:
            t7421 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.256e3*1j) * np.exp((-1*1j) * (4 * phi1 - 9 * phi2)) * np.sqrt(0.238e3) * ((1 - t7421) ** (0.13e2 / 0.2e1)) * ((1 + t7421) ** (0.5e1 / 0.2e1))

        if Bindx == 1083:
            t7422 = np.cos(phi)
            t7429 = -1 + t7422
            t7428 = 1 + t7422
            t7425 = t7428 ** 2
            t7426 = t7428 * t7425
            t7423 = t7429 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-3*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.4641e4) * t7429 * t7423 * t7426 ** 2

        if Bindx == 1084:
            t7430 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * np.exp((-1*1j) * (3 * phi1 + 8 * phi2)) * np.sqrt(0.9282e4) * ((1 - t7430) ** (0.5e1 / 0.2e1)) * ((1 + t7430) ** (0.11e2 / 0.2e1)) * (-1 + 3 * t7430)

        if Bindx == 1085:
            t7438 = np.sin(phi)
            t7436 = t7438 ** 2
            t7431 = np.cos(phi)
            t7432 = t7431 ** 2
            t7434 = t7432 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-1*1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.273e3) * t7436 ** 2 * (-42 * t7432 + 119 * t7434 + 3 + (54 * t7432 + 51 * t7434 - 25) * t7431)

        if Bindx == 1086:
            t7439 = np.cos(phi)
            t7440 = t7439 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * np.exp((-3*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.91e2) * ((1 - t7439) ** (0.3e1 / 0.2e1)) * ((1 + t7439) ** (0.9e1 / 0.2e1)) * (-51 * t7440 + 1 + (51 * t7440 + 9) * t7439)

        if Bindx == 1087:
            t7443 = np.cos(phi)
            t7444 = t7443 ** 2
            t7445 = t7443 * t7444
            t7448 = t7445 ** 2
            t7446 = t7444 ** 2
            t7442 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.1365e4) * t7442 ** 2 * (27 * t7444 - 3 * t7445 - 95 * t7446 + 85 * t7448 - 1 + (-33 * t7446 + 51 * t7448 + 1) * t7443)

        if Bindx == 1088:
            t7450 = np.cos(phi)
            t7451 = t7450 ** 2
            t7453 = t7451 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((-1*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.78e2) * np.sqrt((1 - t7450)) * ((1 + t7450) ** (0.7e1 / 0.2e1)) * (70 * t7451 - 595 * t7453 + 1 + (210 * t7451 + 357 * t7453 - 35) * t7450)

        if Bindx == 1089:
            t7455 = np.cos(phi)
            t7456 = t7455 ** 2
            t7458 = t7456 ** 2
            t7464 = 4641 * t7458 ** 2
            t7457 = t7455 * t7456
            t7460 = t7457 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((-3*1j) * (phi1 + phi2)) * (-1044 * t7456 - 2012 * t7457 + 5538 * t7458 - 9100 * t7460 + t7464 + 29 + (7098 * t7458 - 9828 * t7460 + t7464 + 165) * t7455)

        if Bindx == 1090:
            t7465 = np.cos(phi)
            t7466 = t7465 ** 2
            t7467 = t7465 * t7466
            t7470 = t7467 ** 2
            t7468 = t7466 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.21e2) * ((1 + t7465) ** (0.5e1 / 0.2e1)) * (39 * t7466 - 455 * t7467 + 455 * t7468 - 1547 * t7470 - 3 + (819 * t7468 + 663 * t7470 + 29) * t7465) * ((1 - t7465) ** (-0.1e1 / 0.2e1))

        if Bindx == 1091:
            t7473 = np.cos(phi)
            t7474 = t7473 ** 2
            t7475 = t7473 * t7474
            t7478 = t7475 ** 2
            t7476 = t7474 ** 2
            t7472 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.462e3) * t7472 ** 2 * (39 * t7474 + 325 * t7475 - 195 * t7476 + 221 * t7478 - 1 + (-897 * t7476 + 663 * t7478 - 27) * t7473)

        if Bindx == 1092:
            t7480 = np.cos(phi)
            t7481 = t7480 ** 2
            t7482 = t7481 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * (-195 * t7482 - 1 + (221 * t7482 + 39) * t7481) * ((1 + t7480) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1155e4) * np.exp((-3*1j) * phi1) * ((1 - t7480) ** (0.3e1 / 0.2e1))

        if Bindx == 1093:
            t7485 = np.cos(phi)
            t7486 = t7485 ** 2
            t7487 = t7485 * t7486
            t7490 = t7487 ** 2
            t7488 = t7486 ** 2
            t7484 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.462e3) * t7484 ** 2 * (-39 * t7486 + 325 * t7487 + 195 * t7488 - 221 * t7490 + 1 + (-897 * t7488 + 663 * t7490 - 27) * t7485)

        if Bindx == 1094:
            t7492 = np.cos(phi)
            t7493 = t7492 ** 2
            t7495 = t7493 ** 2
            t7494 = t7492 * t7493
            tfunc[..., c] = (-0.19e2 / 0.64e2*1j) * (-65 * t7493 - 65 * t7495 + 3 + (-390 + 663 * t7494) * t7494 + (884 * t7495 + 26) * t7492) * np.sqrt((1 + t7492)) * np.sqrt(0.21e2) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t7492) ** (0.5e1 / 0.2e1))

        if Bindx == 1095:
            t7498 = np.cos(phi)
            t7499 = t7498 ** 2
            t7501 = t7499 ** 2
            t7505 = t7501 ** 2
            t7500 = t7498 * t7499
            t7503 = t7500 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((-3*1j) * (phi1 - phi2)) * (1044 * t7499 - 2012 * t7500 - 5538 * t7501 + 9100 * t7503 - 4641 * t7505 - 29 + (7098 * t7501 - 9828 * t7503 + 4641 * t7505 + 165) * t7498)

        if Bindx == 1096:
            t7507 = np.cos(phi)
            t7508 = t7507 ** 2
            t7510 = t7508 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * (-70 * t7508 + 595 * t7510 - 1 + (210 * t7508 + 357 * t7510 - 35) * t7507) * np.sqrt((1 + t7507)) * np.sqrt(0.78e2) * np.exp((-1*1j) * (3 * phi1 - 4 * phi2)) * ((1 - t7507) ** (0.7e1 / 0.2e1))

        if Bindx == 1097:
            t7513 = np.cos(phi)
            t7514 = t7513 ** 2
            t7515 = t7513 * t7514
            t7518 = t7515 ** 2
            t7516 = t7514 ** 2
            t7512 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.1365e4) * t7512 ** 2 * (-27 * t7514 - 3 * t7515 + 95 * t7516 - 85 * t7518 + 1 + (-33 * t7516 + 51 * t7518 + 1) * t7513)

        if Bindx == 1098:
            t7520 = np.cos(phi)
            t7523 = 51 * t7520 ** 2
            tfunc[..., c] = (-0.19e2 / 0.64e2*1j) * (t7523 - 1 + (t7523 + 9) * t7520) * ((1 + t7520) ** (0.3e1 / 0.2e1)) * np.sqrt(0.91e2) * np.exp((-3*1j) * (phi1 - 2 * phi2)) * ((1 - t7520) ** (0.9e1 / 0.2e1))

        if Bindx == 1099:
            t7531 = np.sin(phi)
            t7529 = t7531 ** 2
            t7524 = np.cos(phi)
            t7525 = t7524 ** 2
            t7527 = t7525 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-1*1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.273e3) * t7529 ** 2 * (42 * t7525 - 119 * t7527 - 3 + (54 * t7525 + 51 * t7527 - 25) * t7524)

        if Bindx == 1100:
            t7532 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * (1 + 3 * t7532) * ((1 + t7532) ** (0.5e1 / 0.2e1)) * np.sqrt(0.9282e4) * np.exp((-1*1j) * (3 * phi1 - 8 * phi2)) * ((1 - t7532) ** (0.11e2 / 0.2e1))

        if Bindx == 1101:
            t7533 = np.cos(phi)
            t7540 = -1 + t7533
            t7539 = 1 + t7533
            t7537 = t7539 ** 2
            t7534 = t7540 ** 2
            t7535 = t7540 * t7534
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-3*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.4641e4) * t7535 ** 2 * t7539 * t7537

        if Bindx == 1102:
            t7541 = np.cos(phi)
            tfunc[..., c] = (0.57e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + 9 * phi2)) * np.sqrt(0.221e3) * ((1 - t7541) ** (0.7e1 / 0.2e1)) * ((1 + t7541) ** (0.11e2 / 0.2e1))

        if Bindx == 1103:
            t7548 = np.sin(phi)
            t7545 = t7548 ** 2
            t7546 = t7548 * t7545
            t7542 = np.cos(phi)
            t7543 = t7542 ** 2
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((-2*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.442e3) * t7546 ** 2 * (16 * t7543 - 2 + (9 * t7543 + 5) * t7542)

        if Bindx == 1104:
            t7549 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + 7 * phi2)) * np.sqrt(0.13e2) * ((1 - t7549) ** (0.5e1 / 0.2e1)) * ((1 + t7549) ** (0.9e1 / 0.2e1)) * (-1 + (-68 + 153 * t7549) * t7549)

        if Bindx == 1105:
            t7557 = np.sin(phi)
            t7555 = t7557 ** 2
            t7550 = np.cos(phi)
            t7551 = t7550 ** 2
            t7553 = t7551 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.39e2) * t7555 ** 2 * (-69 * t7551 + 136 * t7553 + 3 + (-36 * t7551 + 102 * t7553 + 4) * t7550)

        if Bindx == 1106:
            t7558 = np.cos(phi)
            t7559 = t7558 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * np.exp((-1*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.65e2) * ((1 - t7558) ** (0.3e1 / 0.2e1)) * ((1 + t7558) ** (0.7e1 / 0.2e1)) * (18 * t7558 - 1 + (-136 * t7558 - 6 + 153 * t7559) * t7559)

        if Bindx == 1107:
            t7563 = np.cos(phi)
            t7564 = t7563 ** 2
            t7565 = t7563 * t7564
            t7568 = t7565 ** 2
            t7566 = t7564 ** 2
            t7562 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.182e3) * t7562 ** 2 * (34 * t7564 + 75 * t7565 - 145 * t7566 + 136 * t7568 - 1 + (-197 * t7566 + 153 * t7568 - 7) * t7563)

        if Bindx == 1108:
            t7570 = np.cos(phi)
            t7571 = t7570 ** 2
            t7573 = t7571 ** 2
            t7572 = t7570 * t7571
            tfunc[..., c] = (-0.19e2 / 0.64e2*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.21e2) * np.sqrt((1 - t7570)) * ((1 + t7570) ** (0.5e1 / 0.2e1)) * (-65 * t7571 - 65 * t7573 + 3 + (390 + 663 * t7572) * t7572 + (-884 * t7573 - 26) * t7570)

        if Bindx == 1109:
            t7576 = np.cos(phi)
            t7577 = t7576 ** 2
            t7579 = t7577 ** 2
            t7583 = t7579 ** 2
            t7578 = t7576 * t7577
            t7581 = t7578 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + phi2)) * (-287 * t7577 - 1876 * t7578 + 1729 * t7579 - 3185 * t7581 + 1768 * t7583 + 7 + (6734 * t7579 - 8944 * t7581 + 3978 * t7583 + 140) * t7576)

        if Bindx == 1110:
            t7585 = np.cos(phi)
            t7586 = t7585 ** 2
            t7587 = t7585 * t7586
            t7590 = t7587 ** 2
            t7588 = t7586 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.22e2) * ((1 + t7585) ** (0.3e1 / 0.2e1)) * (252 * t7586 - 728 * t7587 - 364 * t7590 - 7 + (-910 + 1989 * t7588) * t7588 + (3276 * t7588 - 3536 * t7590 + 28) * t7585) * ((1 - t7585) ** (-0.1e1 / 0.2e1))

        if Bindx == 1111:
            t7594 = np.cos(phi)
            t7595 = t7594 ** 2
            t7596 = t7595 ** 2
            t7593 = np.sin(phi)
            tfunc[..., c] = -(0.57e2 / 0.64e2) * np.exp((-2*1j) * phi1) * np.sqrt(0.55e2) * t7593 ** 2 * t7594 * (-273 * t7596 - 7 + (221 * t7596 + 91) * t7595)

        if Bindx == 1112:
            t7598 = np.cos(phi)
            t7599 = t7598 ** 2
            t7600 = t7598 * t7599
            t7603 = t7600 ** 2
            t7601 = t7599 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * (273 * t7599 + 455 * t7600 - 1365 * t7601 + 1547 * t7603 - 7 + (-1911 * t7601 + 1989 * t7603 - 21) * t7598) * np.sqrt((1 + t7598)) * np.sqrt(0.22e2) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t7598) ** (0.3e1 / 0.2e1))

        if Bindx == 1113:
            t7605 = np.cos(phi)
            t7606 = t7605 ** 2
            t7608 = t7606 ** 2
            t7612 = t7608 ** 2
            t7607 = t7605 * t7606
            t7610 = t7607 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - phi2)) * (287 * t7606 - 1876 * t7607 - 1729 * t7608 + 3185 * t7610 - 1768 * t7612 - 7 + (6734 * t7608 - 8944 * t7610 + 3978 * t7612 + 140) * t7605)

        if Bindx == 1114:
            t7614 = np.cos(phi)
            t7615 = t7614 ** 2
            t7617 = t7615 ** 2
            t7616 = t7614 * t7615
            tfunc[..., c] = (-0.19e2 / 0.64e2*1j) * (-65 * t7615 - 65 * t7617 + 3 + (-390 + 663 * t7616) * t7616 + (884 * t7617 + 26) * t7614) * np.sqrt((1 + t7614)) * np.sqrt(0.21e2) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t7614) ** (0.5e1 / 0.2e1))

        if Bindx == 1115:
            t7621 = np.cos(phi)
            t7622 = t7621 ** 2
            t7623 = t7621 * t7622
            t7626 = t7623 ** 2
            t7624 = t7622 ** 2
            t7620 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.182e3) * t7620 ** 2 * (-34 * t7622 + 75 * t7623 + 145 * t7624 - 136 * t7626 + 1 + (-197 * t7624 + 153 * t7626 - 7) * t7621)

        if Bindx == 1116:
            t7628 = np.cos(phi)
            t7629 = t7628 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * (-18 * t7628 - 1 + (136 * t7628 - 6 + 153 * t7629) * t7629) * ((1 + t7628) ** (0.3e1 / 0.2e1)) * np.sqrt(0.65e2) * np.exp((-1*1j) * (2 * phi1 - 5 * phi2)) * ((1 - t7628) ** (0.7e1 / 0.2e1))

        if Bindx == 1117:
            t7639 = np.sin(phi)
            t7637 = t7639 ** 2
            t7632 = np.cos(phi)
            t7633 = t7632 ** 2
            t7635 = t7633 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.39e2) * t7637 ** 2 * (69 * t7633 - 136 * t7635 - 3 + (-36 * t7633 + 102 * t7635 + 4) * t7632)

        if Bindx == 1118:
            t7640 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * (-1 + (68 + 153 * t7640) * t7640) * ((1 + t7640) ** (0.5e1 / 0.2e1)) * np.sqrt(0.13e2) * np.exp((-1*1j) * (2 * phi1 - 7 * phi2)) * ((1 - t7640) ** (0.9e1 / 0.2e1))

        if Bindx == 1119:
            t7647 = np.sin(phi)
            t7644 = t7647 ** 2
            t7645 = t7647 * t7644
            t7641 = np.cos(phi)
            t7642 = t7641 ** 2
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((-2*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.442e3) * t7645 ** 2 * (-16 * t7642 + 2 + (9 * t7642 + 5) * t7641)

        if Bindx == 1120:
            t7648 = np.cos(phi)
            tfunc[..., c] = (0.57e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 - 9 * phi2)) * np.sqrt(0.221e3) * ((1 - t7648) ** (0.11e2 / 0.2e1)) * ((1 + t7648) ** (0.7e1 / 0.2e1))

        if Bindx == 1121:
            t7652 = np.sin(phi)
            t7649 = t7652 ** 2
            t7650 = t7649 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((-1*1j) * (phi1 + 9 * phi2)) * np.sqrt(0.4862e4) * t7650 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 1122:
            t7653 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * np.exp((-1*1j) * (phi1 + 8 * phi2)) * np.sqrt(0.2431e4) * ((1 - t7653) ** (0.7e1 / 0.2e1)) * ((1 + t7653) ** (0.9e1 / 0.2e1)) * (-1 + 9 * t7653)

        if Bindx == 1123:
            t7660 = np.sin(phi)
            t7657 = t7660 ** 2
            t7658 = t7660 * t7657
            t7654 = np.cos(phi)
            t7655 = t7654 ** 2
            tfunc[..., c] = -(0.19e2 / 0.512e3) * np.exp((-1*1j) * (phi1 + 7 * phi2)) * np.sqrt(0.286e3) * t7658 ** 2 * (119 * t7655 - 7 + (153 * t7655 - 41) * t7654)

        if Bindx == 1124:
            t7661 = np.cos(phi)
            t7662 = t7661 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((-1*1j) * (phi1 + 6 * phi2)) * np.sqrt(0.858e3) * ((1 - t7661) ** (0.5e1 / 0.2e1)) * ((1 + t7661) ** (0.7e1 / 0.2e1)) * (-17 * t7662 + 1 + (51 * t7662 - 7) * t7661)

        if Bindx == 1125:
            t7671 = np.sin(phi)
            t7669 = t7671 ** 2
            t7664 = np.cos(phi)
            t7665 = t7664 ** 2
            t7667 = t7665 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-1*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.1430e4) * t7669 ** 2 * (-30 * t7665 + 85 * t7667 + 1 + (-110 * t7665 + 153 * t7667 + 13) * t7664)

        if Bindx == 1126:
            t7672 = np.cos(phi)
            t7673 = t7672 ** 2
            t7675 = t7673 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((-1*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.1001e4) * ((1 - t7672) ** (0.3e1 / 0.2e1)) * ((1 + t7672) ** (0.5e1 / 0.2e1)) * (30 * t7673 - 85 * t7675 - 1 + (-70 * t7673 + 153 * t7675 + 5) * t7672)

        if Bindx == 1127:
            t7678 = np.cos(phi)
            t7679 = t7678 ** 2
            t7680 = t7678 * t7679
            t7683 = t7680 ** 2
            t7681 = t7679 ** 2
            t7677 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.462e3) * t7677 ** 2 * (39 * t7679 + 325 * t7680 - 195 * t7681 + 221 * t7683 - 1 + (-897 * t7681 + 663 * t7683 - 27) * t7678)

        if Bindx == 1128:
            t7685 = np.cos(phi)
            t7686 = t7685 ** 2
            t7687 = t7685 * t7686
            t7690 = t7687 ** 2
            t7688 = t7686 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.22e2) * np.sqrt((1 - t7685)) * ((1 + t7685) ** (0.3e1 / 0.2e1)) * (-273 * t7686 + 455 * t7687 + 1365 * t7688 - 1547 * t7690 + 7 + (-1911 * t7688 + 1989 * t7690 - 21) * t7685)

        if Bindx == 1129:
            t7692 = np.cos(phi)
            t7693 = t7692 ** 2
            t7695 = t7693 ** 2
            t7699 = t7695 ** 2
            t7694 = t7692 * t7693
            t7697 = t7694 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-1*1j) * (phi1 + phi2)) * (-308 * t7693 - 8932 * t7694 + 2002 * t7695 - 4004 * t7697 + 2431 * t7699 + 7 + (34034 * t7695 - 47476 * t7697 + 21879 * t7699 + 623) * t7692)

        if Bindx == 1130:
            t7701 = np.cos(phi)
            t7702 = t7701 ** 2
            t7703 = t7701 * t7702
            t7704 = t7702 ** 2
            t7710 = -4004 * t7703 ** 2 + 7 + (2002 + 2431 * t7704) * t7704
            tfunc[..., c] = (0.57e2 / 0.256e3*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.10e2) * np.sqrt((1 + t7701)) * (t7710 * t7701 + 308 * t7702 - 308 * t7703 - t7710) * ((1 - t7701) ** (-0.1e1 / 0.2e1))

        if Bindx == 1131:
            t7711 = np.cos(phi)
            t7712 = t7711 ** 2
            t7714 = t7712 ** 2
            t7718 = t7714 ** 2
            t7713 = t7711 * t7712
            t7716 = t7713 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-1*1j) * (phi1 - phi2)) * (308 * t7712 - 8932 * t7713 - 2002 * t7714 + 4004 * t7716 - 2431 * t7718 - 7 + (34034 * t7714 - 47476 * t7716 + 21879 * t7718 + 623) * t7711)

        if Bindx == 1132:
            t7720 = np.cos(phi)
            t7721 = t7720 ** 2
            t7722 = t7720 * t7721
            t7725 = t7722 ** 2
            t7723 = t7721 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * (273 * t7721 + 455 * t7722 - 1365 * t7723 + 1547 * t7725 - 7 + (-1911 * t7723 + 1989 * t7725 - 21) * t7720) * np.sqrt((1 + t7720)) * np.sqrt(0.22e2) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t7720) ** (0.3e1 / 0.2e1))

        if Bindx == 1133:
            t7728 = np.cos(phi)
            t7729 = t7728 ** 2
            t7730 = t7728 * t7729
            t7733 = t7730 ** 2
            t7731 = t7729 ** 2
            t7727 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.462e3) * t7727 ** 2 * (-39 * t7729 + 325 * t7730 + 195 * t7731 - 221 * t7733 + 1 + (-897 * t7731 + 663 * t7733 - 27) * t7728)

        if Bindx == 1134:
            t7735 = np.cos(phi)
            t7736 = t7735 ** 2
            t7738 = t7736 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * (-30 * t7736 + 85 * t7738 + 1 + (-70 * t7736 + 153 * t7738 + 5) * t7735) * ((1 + t7735) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1001e4) * np.exp((-1*1j) * (phi1 - 4 * phi2)) * ((1 - t7735) ** (0.5e1 / 0.2e1))

        if Bindx == 1135:
            t7747 = np.sin(phi)
            t7745 = t7747 ** 2
            t7740 = np.cos(phi)
            t7741 = t7740 ** 2
            t7743 = t7741 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((-1*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.1430e4) * t7745 ** 2 * (30 * t7741 - 85 * t7743 - 1 + (-110 * t7741 + 153 * t7743 + 13) * t7740)

        if Bindx == 1136:
            t7748 = np.cos(phi)
            t7749 = t7748 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * (17 * t7749 - 1 + (51 * t7749 - 7) * t7748) * ((1 + t7748) ** (0.5e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((-1*1j) * (phi1 - 6 * phi2)) * ((1 - t7748) ** (0.7e1 / 0.2e1))

        if Bindx == 1137:
            t7757 = np.sin(phi)
            t7754 = t7757 ** 2
            t7755 = t7757 * t7754
            t7751 = np.cos(phi)
            t7752 = t7751 ** 2
            tfunc[..., c] = -(0.19e2 / 0.512e3) * np.exp((-1*1j) * (phi1 - 7 * phi2)) * np.sqrt(0.286e3) * t7755 ** 2 * (-119 * t7752 + 7 + (153 * t7752 - 41) * t7751)

        if Bindx == 1138:
            t7758 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * (9 * t7758 + 1) * ((1 + t7758) ** (0.7e1 / 0.2e1)) * np.sqrt(0.2431e4) * np.exp((-1*1j) * (phi1 - 8 * phi2)) * ((1 - t7758) ** (0.9e1 / 0.2e1))

        if Bindx == 1139:
            t7762 = np.sin(phi)
            t7759 = t7762 ** 2
            t7760 = t7759 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((-1*1j) * (phi1 - 9 * phi2)) * np.sqrt(0.4862e4) * t7760 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 1140:
            t7763 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * np.exp((-9*1j) * phi2) * np.sqrt(0.12155e5) * ((1 - t7763) ** (0.9e1 / 0.2e1)) * ((1 + t7763) ** (0.9e1 / 0.2e1))

        if Bindx == 1141:
            t7767 = np.sin(phi)
            t7764 = t7767 ** 2
            t7765 = t7764 ** 2
            tfunc[..., c] = (0.57e2 / 0.256e3) * np.exp((-8*1j) * phi2) * np.sqrt(0.24310e5) * t7765 ** 2 * np.cos(phi)

        if Bindx == 1142:
            t7768 = np.cos(phi)
            tfunc[..., c] = (0.57e2 / 0.256e3*1j) * np.exp((-7*1j) * phi2) * np.sqrt(0.715e3) * ((1 - t7768) ** (0.7e1 / 0.2e1)) * ((1 + t7768) ** (0.7e1 / 0.2e1)) * (17 * t7768 ** 2 - 1)

        if Bindx == 1143:
            t7773 = np.sin(phi)
            t7770 = t7773 ** 2
            t7771 = t7773 * t7770
            t7769 = np.cos(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((-6*1j) * phi2) * np.sqrt(0.2145e4) * t7771 ** 2 * t7769 * (17 * t7769 ** 2 - 3)

        if Bindx == 1144:
            t7774 = np.cos(phi)
            t7775 = t7774 ** 2
            tfunc[..., c] = (-0.57e2 / 0.128e3*1j) * np.exp((-5*1j) * phi2) * np.sqrt(0.143e3) * ((1 - t7774) ** (0.5e1 / 0.2e1)) * ((1 + t7774) ** (0.5e1 / 0.2e1)) * (1 + (-30 + 85 * t7775) * t7775)

        if Bindx == 1145:
            t7782 = np.sin(phi)
            t7780 = t7782 ** 2
            t7777 = np.cos(phi)
            t7778 = t7777 ** 2
            tfunc[..., c] = (0.57e2 / 0.128e3) * np.exp((-4*1j) * phi2) * np.sqrt(0.10010e5) * t7780 ** 2 * t7777 * (1 + (-10 + 17 * t7778) * t7778)

        if Bindx == 1146:
            t7783 = np.cos(phi)
            t7784 = t7783 ** 2
            t7785 = t7784 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.1155e4) * ((1 - t7783) ** (0.3e1 / 0.2e1)) * ((1 + t7783) ** (0.3e1 / 0.2e1)) * (-195 * t7785 - 1 + (221 * t7785 + 39) * t7784)

        if Bindx == 1147:
            t7788 = np.cos(phi)
            t7789 = t7788 ** 2
            t7790 = t7789 ** 2
            t7787 = np.sin(phi)
            tfunc[..., c] = -(0.57e2 / 0.64e2) * np.exp((-2*1j) * phi2) * np.sqrt(0.55e2) * t7787 ** 2 * t7788 * (-273 * t7790 - 7 + (221 * t7790 + 91) * t7789)

        if Bindx == 1148:
            t7792 = np.cos(phi)
            t7793 = t7792 ** 2
            t7794 = t7793 ** 2
            tfunc[..., c] = (-0.57e2 / 0.256e3*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.10e2) * np.sqrt((1 - t7792)) * np.sqrt((1 + t7792)) * (-308 * t7793 + 7 + (-4004 * t7793 + 2002 + 2431 * t7794) * t7794)

        if Bindx == 1149:
            t7797 = np.cos(phi)
            t7798 = t7797 ** 2
            t7799 = t7798 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * t7797 * (-4620 * t7798 + 315 + (-25740 * t7798 + 18018 + 12155 * t7799) * t7799)

        if Bindx == 1150:
            t7802 = np.cos(phi)
            t7803 = t7802 ** 2
            t7804 = t7802 * t7803
            t7805 = t7803 ** 2
            t7811 = -4004 * t7804 ** 2 + 7 + (2002 + 2431 * t7805) * t7805
            tfunc[..., c] = (0.57e2 / 0.256e3*1j) * np.exp((1j) * phi2) * np.sqrt(0.10e2) * np.sqrt((1 + t7802)) * (t7811 * t7802 + 308 * t7803 - 308 * t7804 - t7811) * ((1 - t7802) ** (-0.1e1 / 0.2e1))

        if Bindx == 1151:
            t7813 = np.cos(phi)
            t7814 = t7813 ** 2
            t7815 = t7814 ** 2
            t7812 = np.sin(phi)
            tfunc[..., c] = -(0.57e2 / 0.64e2) * np.exp((2*1j) * phi2) * np.sqrt(0.55e2) * t7812 ** 2 * t7813 * (-273 * t7815 - 7 + (221 * t7815 + 91) * t7814)

        if Bindx == 1152:
            t7817 = np.cos(phi)
            t7818 = t7817 ** 2
            t7819 = t7818 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * (-195 * t7819 - 1 + (221 * t7819 + 39) * t7818) * ((1 + t7817) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1155e4) * np.exp((3*1j) * phi2) * ((1 - t7817) ** (0.3e1 / 0.2e1))

        if Bindx == 1153:
            t7826 = np.sin(phi)
            t7824 = t7826 ** 2
            t7821 = np.cos(phi)
            t7822 = t7821 ** 2
            tfunc[..., c] = (0.57e2 / 0.128e3) * np.exp((4*1j) * phi2) * np.sqrt(0.10010e5) * t7824 ** 2 * t7821 * (1 + (-10 + 17 * t7822) * t7822)

        if Bindx == 1154:
            t7827 = np.cos(phi)
            t7828 = t7827 ** 2
            tfunc[..., c] = (-0.57e2 / 0.128e3*1j) * (1 + (-30 + 85 * t7828) * t7828) * ((1 + t7827) ** (0.5e1 / 0.2e1)) * np.sqrt(0.143e3) * np.exp((5*1j) * phi2) * ((1 - t7827) ** (0.5e1 / 0.2e1))

        if Bindx == 1155:
            t7834 = np.sin(phi)
            t7831 = t7834 ** 2
            t7832 = t7834 * t7831
            t7830 = np.cos(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((6*1j) * phi2) * np.sqrt(0.2145e4) * t7832 ** 2 * t7830 * (17 * t7830 ** 2 - 3)

        if Bindx == 1156:
            t7835 = np.cos(phi)
            tfunc[..., c] = (0.57e2 / 0.256e3*1j) * (17 * t7835 ** 2 - 1) * ((1 + t7835) ** (0.7e1 / 0.2e1)) * np.sqrt(0.715e3) * np.exp((7*1j) * phi2) * ((1 - t7835) ** (0.7e1 / 0.2e1))

        if Bindx == 1157:
            t7839 = np.sin(phi)
            t7836 = t7839 ** 2
            t7837 = t7836 ** 2
            tfunc[..., c] = (0.57e2 / 0.256e3) * np.exp((8*1j) * phi2) * np.sqrt(0.24310e5) * t7837 ** 2 * np.cos(phi)

        if Bindx == 1158:
            t7840 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * np.exp((9*1j) * phi2) * np.sqrt(0.12155e5) * ((1 - t7840) ** (0.9e1 / 0.2e1)) * ((1 + t7840) ** (0.9e1 / 0.2e1))

        if Bindx == 1159:
            t7844 = np.sin(phi)
            t7841 = t7844 ** 2
            t7842 = t7841 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((1j) * (phi1 - 9 * phi2)) * np.sqrt(0.4862e4) * t7842 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 1160:
            t7845 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * np.exp((1j) * (phi1 - 8 * phi2)) * np.sqrt(0.2431e4) * ((1 - t7845) ** (0.9e1 / 0.2e1)) * ((1 + t7845) ** (0.7e1 / 0.2e1)) * (9 * t7845 + 1)

        if Bindx == 1161:
            t7852 = np.sin(phi)
            t7849 = t7852 ** 2
            t7850 = t7852 * t7849
            t7846 = np.cos(phi)
            t7847 = t7846 ** 2
            tfunc[..., c] = -(0.19e2 / 0.512e3) * np.exp((1j) * (phi1 - 7 * phi2)) * np.sqrt(0.286e3) * t7850 ** 2 * (-119 * t7847 + 7 + (153 * t7847 - 41) * t7846)

        if Bindx == 1162:
            t7853 = np.cos(phi)
            t7854 = t7853 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((1j) * (phi1 - 6 * phi2)) * np.sqrt(0.858e3) * ((1 - t7853) ** (0.7e1 / 0.2e1)) * ((1 + t7853) ** (0.5e1 / 0.2e1)) * (17 * t7854 - 1 + (51 * t7854 - 7) * t7853)

        if Bindx == 1163:
            t7863 = np.sin(phi)
            t7861 = t7863 ** 2
            t7856 = np.cos(phi)
            t7857 = t7856 ** 2
            t7859 = t7857 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((1j) * (phi1 - 5 * phi2)) * np.sqrt(0.1430e4) * t7861 ** 2 * (30 * t7857 - 85 * t7859 - 1 + (-110 * t7857 + 153 * t7859 + 13) * t7856)

        if Bindx == 1164:
            t7864 = np.cos(phi)
            t7865 = t7864 ** 2
            t7867 = t7865 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((1j) * (phi1 - 4 * phi2)) * np.sqrt(0.1001e4) * ((1 - t7864) ** (0.5e1 / 0.2e1)) * ((1 + t7864) ** (0.3e1 / 0.2e1)) * (-30 * t7865 + 85 * t7867 + 1 + (-70 * t7865 + 153 * t7867 + 5) * t7864)

        if Bindx == 1165:
            t7870 = np.cos(phi)
            t7871 = t7870 ** 2
            t7872 = t7870 * t7871
            t7875 = t7872 ** 2
            t7873 = t7871 ** 2
            t7869 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.462e3) * t7869 ** 2 * (-39 * t7871 + 325 * t7872 + 195 * t7873 - 221 * t7875 + 1 + (-897 * t7873 + 663 * t7875 - 27) * t7870)

        if Bindx == 1166:
            t7877 = np.cos(phi)
            t7878 = t7877 ** 2
            t7879 = t7877 * t7878
            t7882 = t7879 ** 2
            t7880 = t7878 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.22e2) * ((1 - t7877) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t7877)) * (273 * t7878 + 455 * t7879 - 1365 * t7880 + 1547 * t7882 - 7 + (-1911 * t7880 + 1989 * t7882 - 21) * t7877)

        if Bindx == 1167:
            t7884 = np.cos(phi)
            t7885 = t7884 ** 2
            t7887 = t7885 ** 2
            t7891 = t7887 ** 2
            t7886 = t7884 * t7885
            t7889 = t7886 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((1j) * (phi1 - phi2)) * (308 * t7885 - 8932 * t7886 - 2002 * t7887 + 4004 * t7889 - 2431 * t7891 - 7 + (34034 * t7887 - 47476 * t7889 + 21879 * t7891 + 623) * t7884)

        if Bindx == 1168:
            t7893 = np.cos(phi)
            t7894 = t7893 ** 2
            t7895 = t7894 ** 2
            tfunc[..., c] = (-0.57e2 / 0.256e3*1j) * np.exp((1j) * phi1) * np.sqrt(0.10e2) * np.sqrt((1 - t7893)) * np.sqrt((1 + t7893)) * (-308 * t7894 + 7 + (-4004 * t7894 + 2002 + 2431 * t7895) * t7895)

        if Bindx == 1169:
            t7898 = np.cos(phi)
            t7899 = t7898 ** 2
            t7901 = t7899 ** 2
            t7905 = t7901 ** 2
            t7900 = t7898 * t7899
            t7903 = t7900 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((1j) * (phi1 + phi2)) * (-308 * t7899 - 8932 * t7900 + 2002 * t7901 - 4004 * t7903 + 2431 * t7905 + 7 + (34034 * t7901 - 47476 * t7903 + 21879 * t7905 + 623) * t7898)

        if Bindx == 1170:
            t7907 = np.cos(phi)
            t7908 = t7907 ** 2
            t7909 = t7907 * t7908
            t7912 = t7909 ** 2
            t7910 = t7908 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.22e2) * ((1 + t7907) ** (0.3e1 / 0.2e1)) * (252 * t7908 - 728 * t7909 - 364 * t7912 - 7 + (-910 + 1989 * t7910) * t7910 + (3276 * t7910 - 3536 * t7912 + 28) * t7907) * ((1 - t7907) ** (-0.1e1 / 0.2e1))

        if Bindx == 1171:
            t7916 = np.cos(phi)
            t7917 = t7916 ** 2
            t7918 = t7916 * t7917
            t7921 = t7918 ** 2
            t7919 = t7917 ** 2
            t7915 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.462e3) * t7915 ** 2 * (39 * t7917 + 325 * t7918 - 195 * t7919 + 221 * t7921 - 1 + (-897 * t7919 + 663 * t7921 - 27) * t7916)

        if Bindx == 1172:
            t7923 = np.cos(phi)
            t7924 = t7923 ** 2
            t7926 = t7924 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * (30 * t7924 - 85 * t7926 - 1 + (-70 * t7924 + 153 * t7926 + 5) * t7923) * ((1 + t7923) ** (0.5e1 / 0.2e1)) * np.sqrt(0.1001e4) * np.exp((1j) * (phi1 + 4 * phi2)) * ((1 - t7923) ** (0.3e1 / 0.2e1))

        if Bindx == 1173:
            t7935 = np.sin(phi)
            t7933 = t7935 ** 2
            t7928 = np.cos(phi)
            t7929 = t7928 ** 2
            t7931 = t7929 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((1j) * (phi1 + 5 * phi2)) * np.sqrt(0.1430e4) * t7933 ** 2 * (-30 * t7929 + 85 * t7931 + 1 + (-110 * t7929 + 153 * t7931 + 13) * t7928)

        if Bindx == 1174:
            t7936 = np.cos(phi)
            t7937 = t7936 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * (-17 * t7937 + 1 + (51 * t7937 - 7) * t7936) * ((1 + t7936) ** (0.7e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((1j) * (phi1 + 6 * phi2)) * ((1 - t7936) ** (0.5e1 / 0.2e1))

        if Bindx == 1175:
            t7945 = np.sin(phi)
            t7942 = t7945 ** 2
            t7943 = t7945 * t7942
            t7939 = np.cos(phi)
            t7940 = t7939 ** 2
            tfunc[..., c] = -(0.19e2 / 0.512e3) * np.exp((1j) * (phi1 + 7 * phi2)) * np.sqrt(0.286e3) * t7943 ** 2 * (119 * t7940 - 7 + (153 * t7940 - 41) * t7939)

        if Bindx == 1176:
            t7946 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * (-1 + 9 * t7946) * ((1 + t7946) ** (0.9e1 / 0.2e1)) * np.sqrt(0.2431e4) * np.exp((1j) * (phi1 + 8 * phi2)) * ((1 - t7946) ** (0.7e1 / 0.2e1))

        if Bindx == 1177:
            t7950 = np.sin(phi)
            t7947 = t7950 ** 2
            t7948 = t7947 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((1j) * (phi1 + 9 * phi2)) * np.sqrt(0.4862e4) * t7948 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 1178:
            t7951 = np.cos(phi)
            tfunc[..., c] = (0.57e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - 9 * phi2)) * np.sqrt(0.221e3) * ((1 - t7951) ** (0.11e2 / 0.2e1)) * ((1 + t7951) ** (0.7e1 / 0.2e1))

        if Bindx == 1179:
            t7958 = np.sin(phi)
            t7955 = t7958 ** 2
            t7956 = t7958 * t7955
            t7952 = np.cos(phi)
            t7953 = t7952 ** 2
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((2*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.442e3) * t7956 ** 2 * (-16 * t7953 + 2 + (9 * t7953 + 5) * t7952)

        if Bindx == 1180:
            t7959 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - 7 * phi2)) * np.sqrt(0.13e2) * ((1 - t7959) ** (0.9e1 / 0.2e1)) * ((1 + t7959) ** (0.5e1 / 0.2e1)) * (-1 + (68 + 153 * t7959) * t7959)

        if Bindx == 1181:
            t7967 = np.sin(phi)
            t7965 = t7967 ** 2
            t7960 = np.cos(phi)
            t7961 = t7960 ** 2
            t7963 = t7961 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.39e2) * t7965 ** 2 * (69 * t7961 - 136 * t7963 - 3 + (-36 * t7961 + 102 * t7963 + 4) * t7960)

        if Bindx == 1182:
            t7968 = np.cos(phi)
            t7969 = t7968 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * np.exp((1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.65e2) * ((1 - t7968) ** (0.7e1 / 0.2e1)) * ((1 + t7968) ** (0.3e1 / 0.2e1)) * (-18 * t7968 - 1 + (136 * t7968 - 6 + 153 * t7969) * t7969)

        if Bindx == 1183:
            t7973 = np.cos(phi)
            t7974 = t7973 ** 2
            t7975 = t7973 * t7974
            t7978 = t7975 ** 2
            t7976 = t7974 ** 2
            t7972 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.182e3) * t7972 ** 2 * (-34 * t7974 + 75 * t7975 + 145 * t7976 - 136 * t7978 + 1 + (-197 * t7976 + 153 * t7978 - 7) * t7973)

        if Bindx == 1184:
            t7980 = np.cos(phi)
            t7981 = t7980 ** 2
            t7983 = t7981 ** 2
            t7982 = t7980 * t7981
            tfunc[..., c] = (-0.19e2 / 0.64e2*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.21e2) * ((1 - t7980) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t7980)) * (-65 * t7981 - 65 * t7983 + 3 + (-390 + 663 * t7982) * t7982 + (884 * t7983 + 26) * t7980)

        if Bindx == 1185:
            t7986 = np.cos(phi)
            t7987 = t7986 ** 2
            t7989 = t7987 ** 2
            t7993 = t7989 ** 2
            t7988 = t7986 * t7987
            t7991 = t7988 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((2*1j) * (phi1 - phi2)) * (287 * t7987 - 1876 * t7988 - 1729 * t7989 + 3185 * t7991 - 1768 * t7993 - 7 + (6734 * t7989 - 8944 * t7991 + 3978 * t7993 + 140) * t7986)

        if Bindx == 1186:
            t7995 = np.cos(phi)
            t7996 = t7995 ** 2
            t7997 = t7995 * t7996
            t8000 = t7997 ** 2
            t7998 = t7996 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.22e2) * ((1 - t7995) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t7995)) * (273 * t7996 + 455 * t7997 - 1365 * t7998 + 1547 * t8000 - 7 + (-1911 * t7998 + 1989 * t8000 - 21) * t7995)

        if Bindx == 1187:
            t8003 = np.cos(phi)
            t8004 = t8003 ** 2
            t8005 = t8004 ** 2
            t8002 = np.sin(phi)
            tfunc[..., c] = -(0.57e2 / 0.64e2) * np.exp((2*1j) * phi1) * np.sqrt(0.55e2) * t8002 ** 2 * t8003 * (-273 * t8005 - 7 + (221 * t8005 + 91) * t8004)

        if Bindx == 1188:
            t8007 = np.cos(phi)
            t8008 = t8007 ** 2
            t8009 = t8007 * t8008
            t8012 = t8009 ** 2
            t8010 = t8008 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.22e2) * np.sqrt((1 - t8007)) * ((1 + t8007) ** (0.3e1 / 0.2e1)) * (-273 * t8008 + 455 * t8009 + 1365 * t8010 - 1547 * t8012 + 7 + (-1911 * t8010 + 1989 * t8012 - 21) * t8007)

        if Bindx == 1189:
            t8014 = np.cos(phi)
            t8015 = t8014 ** 2
            t8017 = t8015 ** 2
            t8021 = t8017 ** 2
            t8016 = t8014 * t8015
            t8019 = t8016 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((2*1j) * (phi1 + phi2)) * (-287 * t8015 - 1876 * t8016 + 1729 * t8017 - 3185 * t8019 + 1768 * t8021 + 7 + (6734 * t8017 - 8944 * t8019 + 3978 * t8021 + 140) * t8014)

        if Bindx == 1190:
            t8023 = np.cos(phi)
            t8024 = t8023 ** 2
            t8025 = t8023 * t8024
            t8028 = t8025 ** 2
            t8026 = t8024 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.21e2) * ((1 + t8023) ** (0.5e1 / 0.2e1)) * (39 * t8024 - 455 * t8025 + 455 * t8026 - 1547 * t8028 - 3 + (819 * t8026 + 663 * t8028 + 29) * t8023) * ((1 - t8023) ** (-0.1e1 / 0.2e1))

        if Bindx == 1191:
            t8031 = np.cos(phi)
            t8032 = t8031 ** 2
            t8033 = t8031 * t8032
            t8036 = t8033 ** 2
            t8034 = t8032 ** 2
            t8030 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.182e3) * t8030 ** 2 * (34 * t8032 + 75 * t8033 - 145 * t8034 + 136 * t8036 - 1 + (-197 * t8034 + 153 * t8036 - 7) * t8031)

        if Bindx == 1192:
            t8038 = np.cos(phi)
            t8039 = t8038 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * (18 * t8038 - 1 + (-136 * t8038 - 6 + 153 * t8039) * t8039) * ((1 + t8038) ** (0.7e1 / 0.2e1)) * np.sqrt(0.65e2) * np.exp((1j) * (2 * phi1 + 5 * phi2)) * ((1 - t8038) ** (0.3e1 / 0.2e1))

        if Bindx == 1193:
            t8049 = np.sin(phi)
            t8047 = t8049 ** 2
            t8042 = np.cos(phi)
            t8043 = t8042 ** 2
            t8045 = t8043 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.39e2) * t8047 ** 2 * (-69 * t8043 + 136 * t8045 + 3 + (-36 * t8043 + 102 * t8045 + 4) * t8042)

        if Bindx == 1194:
            t8050 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * (-1 + (-68 + 153 * t8050) * t8050) * ((1 + t8050) ** (0.9e1 / 0.2e1)) * np.sqrt(0.13e2) * np.exp((1j) * (2 * phi1 + 7 * phi2)) * ((1 - t8050) ** (0.5e1 / 0.2e1))

        if Bindx == 1195:
            t8057 = np.sin(phi)
            t8054 = t8057 ** 2
            t8055 = t8057 * t8054
            t8051 = np.cos(phi)
            t8052 = t8051 ** 2
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((2*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.442e3) * t8055 ** 2 * (16 * t8052 - 2 + (9 * t8052 + 5) * t8051)

        if Bindx == 1196:
            t8058 = np.cos(phi)
            tfunc[..., c] = (0.57e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 + 9 * phi2)) * np.sqrt(0.221e3) * ((1 - t8058) ** (0.7e1 / 0.2e1)) * ((1 + t8058) ** (0.11e2 / 0.2e1))

        if Bindx == 1197:
            t8059 = np.cos(phi)
            t8066 = -1 + t8059
            t8065 = 1 + t8059
            t8063 = t8065 ** 2
            t8060 = t8066 ** 2
            t8061 = t8066 * t8060
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((3*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.4641e4) * t8061 ** 2 * t8065 * t8063

        if Bindx == 1198:
            t8067 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * np.exp((1j) * (3 * phi1 - 8 * phi2)) * np.sqrt(0.9282e4) * ((1 - t8067) ** (0.11e2 / 0.2e1)) * ((1 + t8067) ** (0.5e1 / 0.2e1)) * (1 + 3 * t8067)

        if Bindx == 1199:
            t8075 = np.sin(phi)
            t8073 = t8075 ** 2
            t8068 = np.cos(phi)
            t8069 = t8068 ** 2
            t8071 = t8069 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.273e3) * t8073 ** 2 * (42 * t8069 - 119 * t8071 - 3 + (54 * t8069 + 51 * t8071 - 25) * t8068)

        if Bindx == 1200:
            t8076 = np.cos(phi)
            t8079 = 51 * t8076 ** 2
            tfunc[..., c] = (-0.19e2 / 0.64e2*1j) * np.exp((3*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.91e2) * ((1 - t8076) ** (0.9e1 / 0.2e1)) * ((1 + t8076) ** (0.3e1 / 0.2e1)) * (t8079 - 1 + (t8079 + 9) * t8076)

        if Bindx == 1201:
            t8081 = np.cos(phi)
            t8082 = t8081 ** 2
            t8083 = t8081 * t8082
            t8086 = t8083 ** 2
            t8084 = t8082 ** 2
            t8080 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.1365e4) * t8080 ** 2 * (-27 * t8082 - 3 * t8083 + 95 * t8084 - 85 * t8086 + 1 + (-33 * t8084 + 51 * t8086 + 1) * t8081)

        if Bindx == 1202:
            t8088 = np.cos(phi)
            t8089 = t8088 ** 2
            t8091 = t8089 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.78e2) * ((1 - t8088) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t8088)) * (-70 * t8089 + 595 * t8091 - 1 + (210 * t8089 + 357 * t8091 - 35) * t8088)

        if Bindx == 1203:
            t8093 = np.cos(phi)
            t8094 = t8093 ** 2
            t8096 = t8094 ** 2
            t8100 = t8096 ** 2
            t8095 = t8093 * t8094
            t8098 = t8095 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((3*1j) * (phi1 - phi2)) * (1044 * t8094 - 2012 * t8095 - 5538 * t8096 + 9100 * t8098 - 4641 * t8100 - 29 + (7098 * t8096 - 9828 * t8098 + 4641 * t8100 + 165) * t8093)

        if Bindx == 1204:
            t8102 = np.cos(phi)
            t8103 = t8102 ** 2
            t8105 = t8103 ** 2
            t8104 = t8102 * t8103
            tfunc[..., c] = (-0.19e2 / 0.64e2*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.21e2) * ((1 - t8102) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t8102)) * (-65 * t8103 - 65 * t8105 + 3 + (-390 + 663 * t8104) * t8104 + (884 * t8105 + 26) * t8102)

        if Bindx == 1205:
            t8109 = np.cos(phi)
            t8110 = t8109 ** 2
            t8111 = t8109 * t8110
            t8114 = t8111 ** 2
            t8112 = t8110 ** 2
            t8108 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.462e3) * t8108 ** 2 * (-39 * t8110 + 325 * t8111 + 195 * t8112 - 221 * t8114 + 1 + (-897 * t8112 + 663 * t8114 - 27) * t8109)

        if Bindx == 1206:
            t8116 = np.cos(phi)
            t8117 = t8116 ** 2
            t8118 = t8117 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.1155e4) * ((1 - t8116) ** (0.3e1 / 0.2e1)) * ((1 + t8116) ** (0.3e1 / 0.2e1)) * (-195 * t8118 - 1 + (221 * t8118 + 39) * t8117)

        if Bindx == 1207:
            t8121 = np.cos(phi)
            t8122 = t8121 ** 2
            t8123 = t8121 * t8122
            t8126 = t8123 ** 2
            t8124 = t8122 ** 2
            t8120 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.462e3) * t8120 ** 2 * (39 * t8122 + 325 * t8123 - 195 * t8124 + 221 * t8126 - 1 + (-897 * t8124 + 663 * t8126 - 27) * t8121)

        if Bindx == 1208:
            t8128 = np.cos(phi)
            t8129 = t8128 ** 2
            t8131 = t8129 ** 2
            t8130 = t8128 * t8129
            tfunc[..., c] = (-0.19e2 / 0.64e2*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.21e2) * np.sqrt((1 - t8128)) * ((1 + t8128) ** (0.5e1 / 0.2e1)) * (-65 * t8129 - 65 * t8131 + 3 + (390 + 663 * t8130) * t8130 + (-884 * t8131 - 26) * t8128)

        if Bindx == 1209:
            t8134 = np.cos(phi)
            t8135 = t8134 ** 2
            t8137 = t8135 ** 2
            t8143 = 4641 * t8137 ** 2
            t8136 = t8134 * t8135
            t8139 = t8136 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((3*1j) * (phi1 + phi2)) * (-1044 * t8135 - 2012 * t8136 + 5538 * t8137 - 9100 * t8139 + t8143 + 29 + (7098 * t8137 - 9828 * t8139 + t8143 + 165) * t8134)

        if Bindx == 1210:
            t8144 = np.cos(phi)
            t8145 = t8144 ** 2
            t8147 = t8145 ** 2
            t8146 = t8144 * t8145
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.78e2) * ((1 + t8144) ** (0.7e1 / 0.2e1)) * (-105 * t8145 + 805 * t8147 - 1 + (-140 + 357 * t8146) * t8146 + (-952 * t8147 + 36) * t8144) * ((1 - t8144) ** (-0.1e1 / 0.2e1))

        if Bindx == 1211:
            t8151 = np.cos(phi)
            t8152 = t8151 ** 2
            t8153 = t8151 * t8152
            t8156 = t8153 ** 2
            t8154 = t8152 ** 2
            t8150 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.1365e4) * t8150 ** 2 * (27 * t8152 - 3 * t8153 - 95 * t8154 + 85 * t8156 - 1 + (-33 * t8154 + 51 * t8156 + 1) * t8151)

        if Bindx == 1212:
            t8158 = np.cos(phi)
            t8159 = t8158 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * (-51 * t8159 + 1 + (51 * t8159 + 9) * t8158) * ((1 + t8158) ** (0.9e1 / 0.2e1)) * np.sqrt(0.91e2) * np.exp((3*1j) * (phi1 + 2 * phi2)) * ((1 - t8158) ** (0.3e1 / 0.2e1))

        if Bindx == 1213:
            t8168 = np.sin(phi)
            t8166 = t8168 ** 2
            t8161 = np.cos(phi)
            t8162 = t8161 ** 2
            t8164 = t8162 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.273e3) * t8166 ** 2 * (-42 * t8162 + 119 * t8164 + 3 + (54 * t8162 + 51 * t8164 - 25) * t8161)

        if Bindx == 1214:
            t8169 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * (-1 + 3 * t8169) * ((1 + t8169) ** (0.11e2 / 0.2e1)) * np.sqrt(0.9282e4) * np.exp((1j) * (3 * phi1 + 8 * phi2)) * ((1 - t8169) ** (0.5e1 / 0.2e1))

        if Bindx == 1215:
            t8170 = np.cos(phi)
            t8177 = -1 + t8170
            t8176 = 1 + t8170
            t8173 = t8176 ** 2
            t8174 = t8176 * t8173
            t8171 = t8177 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((3*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.4641e4) * t8177 * t8171 * t8174 ** 2

        if Bindx == 1216:
            t8178 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.256e3*1j) * np.exp((1j) * (4 * phi1 - 9 * phi2)) * np.sqrt(0.238e3) * ((1 - t8178) ** (0.13e2 / 0.2e1)) * ((1 + t8178) ** (0.5e1 / 0.2e1))

        if Bindx == 1217:
            t8180 = np.cos(phi)
            t8184 = -1 + t8180
            t8181 = t8184 ** 2
            t8182 = t8184 * t8181
            t8179 = 1 + t8180
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((4*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.119e3) * t8182 ** 2 * t8179 ** 2 * (4 + 9 * t8180)

        if Bindx == 1218:
            t8185 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * np.exp((1j) * (4 * phi1 - 7 * phi2)) * np.sqrt(0.14e2) * ((1 - t8185) ** (0.11e2 / 0.2e1)) * ((1 + t8185) ** (0.3e1 / 0.2e1)) * (23 + (136 + 153 * t8185) * t8185)

        if Bindx == 1219:
            t8187 = np.cos(phi)
            t8188 = t8187 ** 2
            t8189 = t8187 * t8188
            t8192 = t8189 ** 2
            t8190 = t8188 ** 2
            t8186 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.42e2) * t8186 ** 2 * (-18 * t8188 - 87 * t8189 + 113 * t8190 - 136 * t8192 + 1 + (57 * t8190 + 51 * t8192 + 19) * t8187)

        if Bindx == 1220:
            t8194 = np.cos(phi)
            t8195 = t8194 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.70e2) * ((1 - t8194) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t8194)) * (12 * t8194 - 3 + (272 * t8194 + 138 + 153 * t8195) * t8195)

        if Bindx == 1221:
            t8198 = np.cos(phi)
            t8199 = t8198 ** 2
            t8201 = t8199 ** 2
            t8205 = t8201 ** 2
            t8200 = t8198 * t8199
            t8203 = t8200 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((4*1j) * (phi1 - phi2)) * (522 * t8199 + 212 * t8200 - 2398 * t8201 + 3766 * t8203 - 1904 * t8205 - 18 + (266 * t8201 - 1484 * t8203 + 1071 * t8205 - 33) * t8198)

        if Bindx == 1222:
            t8207 = np.cos(phi)
            t8208 = t8207 ** 2
            t8210 = t8208 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.78e2) * ((1 - t8207) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t8207)) * (-70 * t8208 + 595 * t8210 - 1 + (210 * t8208 + 357 * t8210 - 35) * t8207)

        if Bindx == 1223:
            t8213 = np.cos(phi)
            t8214 = t8213 ** 2
            t8215 = t8213 * t8214
            t8218 = t8215 ** 2
            t8216 = t8214 ** 2
            t8212 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.182e3) * t8212 ** 2 * (-34 * t8214 + 75 * t8215 + 145 * t8216 - 136 * t8218 + 1 + (-197 * t8216 + 153 * t8218 - 7) * t8213)

        if Bindx == 1224:
            t8220 = np.cos(phi)
            t8221 = t8220 ** 2
            t8223 = t8221 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((1j) * (4 * phi1 - phi2)) * np.sqrt(0.1001e4) * ((1 - t8220) ** (0.5e1 / 0.2e1)) * ((1 + t8220) ** (0.3e1 / 0.2e1)) * (-30 * t8221 + 85 * t8223 + 1 + (-70 * t8221 + 153 * t8223 + 5) * t8220)

        if Bindx == 1225:
            t8230 = np.sin(phi)
            t8228 = t8230 ** 2
            t8225 = np.cos(phi)
            t8226 = t8225 ** 2
            tfunc[..., c] = (0.57e2 / 0.128e3) * np.exp((4*1j) * phi1) * np.sqrt(0.10010e5) * t8228 ** 2 * t8225 * (1 + (-10 + 17 * t8226) * t8226)

        if Bindx == 1226:
            t8231 = np.cos(phi)
            t8232 = t8231 ** 2
            t8234 = t8232 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((1j) * (4 * phi1 + phi2)) * np.sqrt(0.1001e4) * ((1 - t8231) ** (0.3e1 / 0.2e1)) * ((1 + t8231) ** (0.5e1 / 0.2e1)) * (30 * t8232 - 85 * t8234 - 1 + (-70 * t8232 + 153 * t8234 + 5) * t8231)

        if Bindx == 1227:
            t8237 = np.cos(phi)
            t8238 = t8237 ** 2
            t8239 = t8237 * t8238
            t8242 = t8239 ** 2
            t8240 = t8238 ** 2
            t8236 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.182e3) * t8236 ** 2 * (34 * t8238 + 75 * t8239 - 145 * t8240 + 136 * t8242 - 1 + (-197 * t8240 + 153 * t8242 - 7) * t8237)

        if Bindx == 1228:
            t8244 = np.cos(phi)
            t8245 = t8244 ** 2
            t8247 = t8245 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.78e2) * np.sqrt((1 - t8244)) * ((1 + t8244) ** (0.7e1 / 0.2e1)) * (70 * t8245 - 595 * t8247 + 1 + (210 * t8245 + 357 * t8247 - 35) * t8244)

        if Bindx == 1229:
            t8249 = np.cos(phi)
            t8250 = t8249 ** 2
            t8252 = t8250 ** 2
            t8256 = t8252 ** 2
            t8251 = t8249 * t8250
            t8254 = t8251 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((4*1j) * (phi1 + phi2)) * (-522 * t8250 + 212 * t8251 + 2398 * t8252 - 3766 * t8254 + 1904 * t8256 + 18 + (266 * t8252 - 1484 * t8254 + 1071 * t8256 - 33) * t8249)

        if Bindx == 1230:
            t8258 = np.cos(phi)
            t8259 = t8258 ** 2
            t8261 = t8259 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.70e2) * ((1 + t8258) ** (0.9e1 / 0.2e1)) * (-150 * t8259 - 425 * t8261 + 3 + (410 * t8259 + 153 * t8261 + 9) * t8258) * ((1 - t8258) ** (-0.1e1 / 0.2e1))

        if Bindx == 1231:
            t8264 = np.cos(phi)
            t8265 = t8264 ** 2
            t8266 = t8264 * t8265
            t8269 = t8266 ** 2
            t8267 = t8265 ** 2
            t8263 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.42e2) * t8263 ** 2 * (18 * t8265 - 87 * t8266 - 113 * t8267 + 136 * t8269 - 1 + (57 * t8267 + 51 * t8269 + 19) * t8264)

        if Bindx == 1232:
            t8271 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * (23 + (-136 + 153 * t8271) * t8271) * ((1 + t8271) ** (0.11e2 / 0.2e1)) * np.sqrt(0.14e2) * np.exp((1j) * (4 * phi1 + 7 * phi2)) * ((1 - t8271) ** (0.3e1 / 0.2e1))

        if Bindx == 1233:
            t8279 = np.sin(phi)
            t8277 = t8279 ** 2
            t8272 = np.cos(phi)
            t8273 = t8272 ** 2
            t8275 = t8273 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((4*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.119e3) * t8277 ** 2 * (12 * t8273 + 32 * t8275 - 4 + (38 * t8273 + 9 * t8275 - 7) * t8272)

        if Bindx == 1234:
            t8280 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.256e3*1j) * np.exp((1j) * (4 * phi1 + 9 * phi2)) * np.sqrt(0.238e3) * ((1 - t8280) ** (0.5e1 / 0.2e1)) * ((1 + t8280) ** (0.13e2 / 0.2e1))

        if Bindx == 1235:
            t8282 = np.cos(phi)
            t8287 = -1 + t8282
            t8283 = t8287 ** 2
            t8284 = t8287 * t8283
            t8281 = 1 + t8282
            tfunc[..., c] = (0.57e2 / 0.256e3) * np.exp((1j) * (5 * phi1 - 9 * phi2)) * np.sqrt(0.85e2) * t8287 * t8284 ** 2 * t8281 ** 2

        if Bindx == 1236:
            t8288 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * np.exp((1j) * (5 * phi1 - 8 * phi2)) * np.sqrt(0.170e3) * ((1 - t8288) ** (0.13e2 / 0.2e1)) * ((1 + t8288) ** (0.3e1 / 0.2e1)) * (5 + 9 * t8288)

        if Bindx == 1237:
            t8290 = np.cos(phi)
            t8291 = t8290 ** 2
            t8292 = t8290 * t8291
            t8295 = t8292 ** 2
            t8293 = t8291 ** 2
            t8289 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.5e1) * t8289 ** 2 * (287 * t8291 - 525 * t8292 - 35 * t8293 - 595 * t8295 - 41 + (721 * t8293 + 153 * t8295 + 35) * t8290)

        if Bindx == 1238:
            t8297 = np.cos(phi)
            t8298 = t8297 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 - 6 * phi2)) * np.sqrt(0.15e2) * ((1 - t8297) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t8297)) * (85 * t8298 + 5 + (51 * t8298 + 41) * t8297)

        if Bindx == 1239:
            t8300 = np.cos(phi)
            t8301 = t8300 ** 2
            t8303 = t8301 ** 2
            t8307 = t8303 ** 2
            t8302 = t8300 * t8301
            t8305 = t8302 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((5*1j) * (phi1 - phi2)) * (180 * t8301 + 1540 * t8302 - 1610 * t8303 + 3500 * t8305 - 2125 * t8307 - 9 + (-2366 * t8303 + 380 * t8305 + 765 * t8307 - 255) * t8300)

        if Bindx == 1240:
            t8309 = np.cos(phi)
            t8310 = t8309 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.70e2) * ((1 - t8309) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t8309)) * (12 * t8309 - 3 + (272 * t8309 + 138 + 153 * t8310) * t8310)

        if Bindx == 1241:
            t8314 = np.cos(phi)
            t8315 = t8314 ** 2
            t8316 = t8314 * t8315
            t8319 = t8316 ** 2
            t8317 = t8315 ** 2
            t8313 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.1365e4) * t8313 ** 2 * (-27 * t8315 - 3 * t8316 + 95 * t8317 - 85 * t8319 + 1 + (-33 * t8317 + 51 * t8319 + 1) * t8314)

        if Bindx == 1242:
            t8321 = np.cos(phi)
            t8322 = t8321 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.65e2) * ((1 - t8321) ** (0.7e1 / 0.2e1)) * ((1 + t8321) ** (0.3e1 / 0.2e1)) * (-18 * t8321 - 1 + (136 * t8321 - 6 + 153 * t8322) * t8322)

        if Bindx == 1243:
            t8332 = np.sin(phi)
            t8330 = t8332 ** 2
            t8325 = np.cos(phi)
            t8326 = t8325 ** 2
            t8328 = t8326 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((1j) * (5 * phi1 - phi2)) * np.sqrt(0.1430e4) * t8330 ** 2 * (30 * t8326 - 85 * t8328 - 1 + (-110 * t8326 + 153 * t8328 + 13) * t8325)

        if Bindx == 1244:
            t8333 = np.cos(phi)
            t8334 = t8333 ** 2
            tfunc[..., c] = (-0.57e2 / 0.128e3*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.143e3) * ((1 - t8333) ** (0.5e1 / 0.2e1)) * ((1 + t8333) ** (0.5e1 / 0.2e1)) * (1 + (-30 + 85 * t8334) * t8334)

        if Bindx == 1245:
            t8343 = np.sin(phi)
            t8341 = t8343 ** 2
            t8336 = np.cos(phi)
            t8337 = t8336 ** 2
            t8339 = t8337 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((1j) * (5 * phi1 + phi2)) * np.sqrt(0.1430e4) * t8341 ** 2 * (-30 * t8337 + 85 * t8339 + 1 + (-110 * t8337 + 153 * t8339 + 13) * t8336)

        if Bindx == 1246:
            t8344 = np.cos(phi)
            t8345 = t8344 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.65e2) * ((1 - t8344) ** (0.3e1 / 0.2e1)) * ((1 + t8344) ** (0.7e1 / 0.2e1)) * (18 * t8344 - 1 + (-136 * t8344 - 6 + 153 * t8345) * t8345)

        if Bindx == 1247:
            t8349 = np.cos(phi)
            t8350 = t8349 ** 2
            t8351 = t8349 * t8350
            t8354 = t8351 ** 2
            t8352 = t8350 ** 2
            t8348 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.1365e4) * t8348 ** 2 * (27 * t8350 - 3 * t8351 - 95 * t8352 + 85 * t8354 - 1 + (-33 * t8352 + 51 * t8354 + 1) * t8349)

        if Bindx == 1248:
            t8356 = np.cos(phi)
            t8357 = t8356 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.70e2) * np.sqrt((1 - t8356)) * ((1 + t8356) ** (0.9e1 / 0.2e1)) * (-12 * t8356 - 3 + (-272 * t8356 + 138 + 153 * t8357) * t8357)

        if Bindx == 1249:
            t8360 = np.cos(phi)
            t8361 = t8360 ** 2
            t8363 = t8361 ** 2
            t8367 = t8363 ** 2
            t8362 = t8360 * t8361
            t8365 = t8362 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((5*1j) * (phi1 + phi2)) * (-180 * t8361 + 1540 * t8362 + 1610 * t8363 - 3500 * t8365 + 2125 * t8367 + 9 + (-2366 * t8363 + 380 * t8365 + 765 * t8367 - 255) * t8360)

        if Bindx == 1250:
            t8369 = np.cos(phi)
            t8370 = t8369 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.15e2) * ((1 + t8369) ** (0.11e2 / 0.2e1)) * (-46 * t8369 + 5 + (-136 * t8369 + 126 + 51 * t8370) * t8370) * ((1 - t8369) ** (-0.1e1 / 0.2e1))

        if Bindx == 1251:
            t8374 = np.cos(phi)
            t8375 = t8374 ** 2
            t8376 = t8374 * t8375
            t8379 = t8376 ** 2
            t8377 = t8375 ** 2
            t8373 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.5e1) * t8373 ** 2 * (-287 * t8375 - 525 * t8376 + 35 * t8377 + 595 * t8379 + 41 + (721 * t8377 + 153 * t8379 + 35) * t8374)

        if Bindx == 1252:
            t8381 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * (-5 + 9 * t8381) * ((1 + t8381) ** (0.13e2 / 0.2e1)) * np.sqrt(0.170e3) * np.exp((1j) * (5 * phi1 + 8 * phi2)) * ((1 - t8381) ** (0.3e1 / 0.2e1))

        if Bindx == 1253:
            t8383 = np.cos(phi)
            t8388 = 1 + t8383
            t8384 = t8388 ** 2
            t8385 = t8388 * t8384
            t8382 = -1 + t8383
            tfunc[..., c] = (0.57e2 / 0.256e3) * np.exp((1j) * (5 * phi1 + 9 * phi2)) * np.sqrt(0.85e2) * t8382 ** 2 * t8388 * t8385 ** 2

        if Bindx == 1254:
            t8389 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((3*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.51e2) * ((1 - t8389) ** (0.15e2 / 0.2e1)) * ((1 + t8389) ** (0.3e1 / 0.2e1))

        if Bindx == 1255:
            t8390 = np.cos(phi)
            t8395 = -1 + t8390
            t8391 = t8395 ** 2
            t8392 = t8395 * t8391
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((2*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.102e3) * t8395 * t8392 ** 2 * (1 + t8390) * (2 + 3 * t8390)

        if Bindx == 1256:
            t8396 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 - 7 * phi2)) * np.sqrt(0.3e1) * ((1 - t8396) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t8396)) * (21 + (68 + 51 * t8396) * t8396)

        if Bindx == 1257:
            t8397 = np.cos(phi)
            t8398 = t8397 ** 2
            t8400 = t8398 ** 2
            t8404 = t8400 ** 2
            t8399 = t8397 * t8398
            t8402 = t8399 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((6*1j) * (phi1 - phi2)) * (-207 * t8398 + 308 * t8399 + 273 * t8400 + 287 * t8402 - 408 * t8404 + 23 + (-798 * t8400 + 432 * t8402 + 102 * t8404 - 12) * t8397)

        if Bindx == 1258:
            t8406 = np.cos(phi)
            t8407 = t8406 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * np.exp((1j) * (6 * phi1 - 5 * phi2)) * np.sqrt(0.15e2) * ((1 - t8406) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t8406)) * (85 * t8407 + 5 + (51 * t8407 + 41) * t8406)

        if Bindx == 1259:
            t8410 = np.cos(phi)
            t8411 = t8410 ** 2
            t8412 = t8410 * t8411
            t8415 = t8412 ** 2
            t8413 = t8411 ** 2
            t8409 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.42e2) * t8409 ** 2 * (-18 * t8411 - 87 * t8412 + 113 * t8413 - 136 * t8415 + 1 + (57 * t8413 + 51 * t8415 + 19) * t8410)

        if Bindx == 1260:
            t8417 = np.cos(phi)
            t8420 = 51 * t8417 ** 2
            tfunc[..., c] = (-0.19e2 / 0.64e2*1j) * np.exp((3*1j) * (2 * phi1 - phi2)) * np.sqrt(0.91e2) * ((1 - t8417) ** (0.9e1 / 0.2e1)) * ((1 + t8417) ** (0.3e1 / 0.2e1)) * (t8420 - 1 + (t8420 + 9) * t8417)

        if Bindx == 1261:
            t8428 = np.sin(phi)
            t8426 = t8428 ** 2
            t8421 = np.cos(phi)
            t8422 = t8421 ** 2
            t8424 = t8422 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.39e2) * t8426 ** 2 * (69 * t8422 - 136 * t8424 - 3 + (-36 * t8422 + 102 * t8424 + 4) * t8421)

        if Bindx == 1262:
            t8429 = np.cos(phi)
            t8430 = t8429 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 - phi2)) * np.sqrt(0.858e3) * ((1 - t8429) ** (0.7e1 / 0.2e1)) * ((1 + t8429) ** (0.5e1 / 0.2e1)) * (17 * t8430 - 1 + (51 * t8430 - 7) * t8429)

        if Bindx == 1263:
            t8436 = np.sin(phi)
            t8433 = t8436 ** 2
            t8434 = t8436 * t8433
            t8432 = np.cos(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((6*1j) * phi1) * np.sqrt(0.2145e4) * t8434 ** 2 * t8432 * (17 * t8432 ** 2 - 3)

        if Bindx == 1264:
            t8437 = np.cos(phi)
            t8438 = t8437 ** 2
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 + phi2)) * np.sqrt(0.858e3) * ((1 - t8437) ** (0.5e1 / 0.2e1)) * ((1 + t8437) ** (0.7e1 / 0.2e1)) * (-17 * t8438 + 1 + (51 * t8438 - 7) * t8437)

        if Bindx == 1265:
            t8447 = np.sin(phi)
            t8445 = t8447 ** 2
            t8440 = np.cos(phi)
            t8441 = t8440 ** 2
            t8443 = t8441 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.39e2) * t8445 ** 2 * (-69 * t8441 + 136 * t8443 + 3 + (-36 * t8441 + 102 * t8443 + 4) * t8440)

        if Bindx == 1266:
            t8448 = np.cos(phi)
            t8449 = t8448 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2*1j) * np.exp((3*1j) * (2 * phi1 + phi2)) * np.sqrt(0.91e2) * ((1 - t8448) ** (0.3e1 / 0.2e1)) * ((1 + t8448) ** (0.9e1 / 0.2e1)) * (-51 * t8449 + 1 + (51 * t8449 + 9) * t8448)

        if Bindx == 1267:
            t8452 = np.cos(phi)
            t8453 = t8452 ** 2
            t8454 = t8452 * t8453
            t8457 = t8454 ** 2
            t8455 = t8453 ** 2
            t8451 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.42e2) * t8451 ** 2 * (18 * t8453 - 87 * t8454 - 113 * t8455 + 136 * t8457 - 1 + (57 * t8455 + 51 * t8457 + 19) * t8452)

        if Bindx == 1268:
            t8459 = np.cos(phi)
            t8460 = t8459 ** 2
            tfunc[..., c] = (-0.19e2 / 0.64e2*1j) * np.exp((1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.15e2) * np.sqrt((1 - t8459)) * ((1 + t8459) ** (0.11e2 / 0.2e1)) * (-85 * t8460 - 5 + (51 * t8460 + 41) * t8459)

        if Bindx == 1269:
            t8462 = np.cos(phi)
            t8463 = t8462 ** 2
            t8465 = t8463 ** 2
            t8469 = t8465 ** 2
            t8464 = t8462 * t8463
            t8467 = t8464 ** 2
            tfunc[..., c] = (0.19e2 / 0.64e2) * np.exp((6*1j) * (phi1 + phi2)) * (207 * t8463 + 308 * t8464 - 273 * t8465 - 287 * t8467 + 408 * t8469 - 23 + (-798 * t8465 + 432 * t8467 + 102 * t8469 - 12) * t8462)

        if Bindx == 1270:
            t8471 = np.cos(phi)
            t8472 = t8471 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.3e1) * ((1 + t8471) ** (0.13e2 / 0.2e1)) * (-119 * t8472 - 21 + (51 * t8472 + 89) * t8471) * ((1 - t8471) ** (-0.1e1 / 0.2e1))

        if Bindx == 1271:
            t8475 = np.cos(phi)
            t8476 = t8475 ** 2
            t8477 = t8475 * t8476
            t8480 = t8477 ** 2
            t8478 = t8476 ** 2
            t8474 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((2*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.102e3) * t8474 ** 2 * (-12 * t8476 + 5 * t8477 + 30 * t8478 + 16 * t8480 - 2 + (33 * t8478 + 3 * t8480 - 9) * t8475)

        if Bindx == 1272:
            t8482 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((3*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.51e2) * ((1 - t8482) ** (0.3e1 / 0.2e1)) * ((1 + t8482) ** (0.15e2 / 0.2e1))

        if Bindx == 1273:
            t8483 = np.cos(phi)
            t8487 = -1 + t8483
            t8484 = t8487 ** 2
            t8485 = t8484 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((1j) * (7 * phi1 - 9 * phi2)) * np.sqrt(0.17e2) * t8485 ** 2 * (1 + t8483)

        if Bindx == 1274:
            t8488 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.512e3*1j) * np.exp((1j) * (7 * phi1 - 8 * phi2)) * np.sqrt(0.34e2) * ((1 - t8488) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t8488)) * (7 + 9 * t8488)

        if Bindx == 1275:
            t8489 = np.cos(phi)
            t8490 = t8489 ** 2
            t8492 = t8490 ** 2
            t8496 = t8492 ** 2
            t8491 = t8489 * t8490
            t8494 = t8491 ** 2
            tfunc[..., c] = (0.19e2 / 0.512e3) * np.exp((7*1j) * (phi1 - phi2)) * (-356 * t8490 - 812 * t8491 + 2002 * t8492 - 980 * t8494 - 833 * t8496 - 89 + (-1106 * t8492 + 1636 * t8494 + 153 * t8496 + 385) * t8489)

        if Bindx == 1276:
            t8498 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 - 6 * phi2)) * np.sqrt(0.3e1) * ((1 - t8498) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t8498)) * (21 + (68 + 51 * t8498) * t8498)

        if Bindx == 1277:
            t8500 = np.cos(phi)
            t8501 = t8500 ** 2
            t8502 = t8500 * t8501
            t8505 = t8502 ** 2
            t8503 = t8501 ** 2
            t8499 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.5e1) * t8499 ** 2 * (287 * t8501 - 525 * t8502 - 35 * t8503 - 595 * t8505 - 41 + (721 * t8503 + 153 * t8505 + 35) * t8500)

        if Bindx == 1278:
            t8507 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * np.exp((1j) * (7 * phi1 - 4 * phi2)) * np.sqrt(0.14e2) * ((1 - t8507) ** (0.11e2 / 0.2e1)) * ((1 + t8507) ** (0.3e1 / 0.2e1)) * (23 + (136 + 153 * t8507) * t8507)

        if Bindx == 1279:
            t8515 = np.sin(phi)
            t8513 = t8515 ** 2
            t8508 = np.cos(phi)
            t8509 = t8508 ** 2
            t8511 = t8509 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.273e3) * t8513 ** 2 * (42 * t8509 - 119 * t8511 - 3 + (54 * t8509 + 51 * t8511 - 25) * t8508)

        if Bindx == 1280:
            t8516 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 - 2 * phi2)) * np.sqrt(0.13e2) * ((1 - t8516) ** (0.9e1 / 0.2e1)) * ((1 + t8516) ** (0.5e1 / 0.2e1)) * (-1 + (68 + 153 * t8516) * t8516)

        if Bindx == 1281:
            t8523 = np.sin(phi)
            t8520 = t8523 ** 2
            t8521 = t8523 * t8520
            t8517 = np.cos(phi)
            t8518 = t8517 ** 2
            tfunc[..., c] = -(0.19e2 / 0.512e3) * np.exp((1j) * (7 * phi1 - phi2)) * np.sqrt(0.286e3) * t8521 ** 2 * (-119 * t8518 + 7 + (153 * t8518 - 41) * t8517)

        if Bindx == 1282:
            t8524 = np.cos(phi)
            tfunc[..., c] = (0.57e2 / 0.256e3*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.715e3) * ((1 - t8524) ** (0.7e1 / 0.2e1)) * ((1 + t8524) ** (0.7e1 / 0.2e1)) * (17 * t8524 ** 2 - 1)

        if Bindx == 1283:
            t8531 = np.sin(phi)
            t8528 = t8531 ** 2
            t8529 = t8531 * t8528
            t8525 = np.cos(phi)
            t8526 = t8525 ** 2
            tfunc[..., c] = -(0.19e2 / 0.512e3) * np.exp((1j) * (7 * phi1 + phi2)) * np.sqrt(0.286e3) * t8529 ** 2 * (119 * t8526 - 7 + (153 * t8526 - 41) * t8525)

        if Bindx == 1284:
            t8532 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 + 2 * phi2)) * np.sqrt(0.13e2) * ((1 - t8532) ** (0.5e1 / 0.2e1)) * ((1 + t8532) ** (0.9e1 / 0.2e1)) * (-1 + (-68 + 153 * t8532) * t8532)

        if Bindx == 1285:
            t8540 = np.sin(phi)
            t8538 = t8540 ** 2
            t8533 = np.cos(phi)
            t8534 = t8533 ** 2
            t8536 = t8534 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.273e3) * t8538 ** 2 * (-42 * t8534 + 119 * t8536 + 3 + (54 * t8534 + 51 * t8536 - 25) * t8533)

        if Bindx == 1286:
            t8541 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * np.exp((1j) * (7 * phi1 + 4 * phi2)) * np.sqrt(0.14e2) * ((1 - t8541) ** (0.3e1 / 0.2e1)) * ((1 + t8541) ** (0.11e2 / 0.2e1)) * (23 + (-136 + 153 * t8541) * t8541)

        if Bindx == 1287:
            t8543 = np.cos(phi)
            t8544 = t8543 ** 2
            t8545 = t8543 * t8544
            t8548 = t8545 ** 2
            t8546 = t8544 ** 2
            t8542 = np.sin(phi)
            tfunc[..., c] = -(0.19e2 / 0.256e3) * np.exp((1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.5e1) * t8542 ** 2 * (-287 * t8544 - 525 * t8545 + 35 * t8546 + 595 * t8548 + 41 + (721 * t8546 + 153 * t8548 + 35) * t8543)

        if Bindx == 1288:
            t8550 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.3e1) * np.sqrt((1 - t8550)) * ((1 + t8550) ** (0.13e2 / 0.2e1)) * (21 + (-68 + 51 * t8550) * t8550)

        if Bindx == 1289:
            t8551 = np.cos(phi)
            t8552 = t8551 ** 2
            t8554 = t8552 ** 2
            t8558 = t8554 ** 2
            t8553 = t8551 * t8552
            t8556 = t8553 ** 2
            tfunc[..., c] = (0.19e2 / 0.512e3) * np.exp((7*1j) * (phi1 + phi2)) * (356 * t8552 - 812 * t8553 - 2002 * t8554 + 980 * t8556 + 833 * t8558 + 89 + (-1106 * t8554 + 1636 * t8556 + 153 * t8558 + 385) * t8551)

        if Bindx == 1290:
            t8560 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.512e3*1j) * np.exp((1j) * (7 * phi1 + 8 * phi2)) * np.sqrt(0.34e2) * ((1 + t8560) ** (0.15e2 / 0.2e1)) * (7 + (-16 + 9 * t8560) * t8560) * ((1 - t8560) ** (-0.1e1 / 0.2e1))

        if Bindx == 1291:
            t8561 = np.cos(phi)
            t8565 = 1 + t8561
            t8562 = t8565 ** 2
            t8563 = t8562 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((1j) * (7 * phi1 + 9 * phi2)) * np.sqrt(0.17e2) * (-1 + t8561) * t8563 ** 2

        if Bindx == 1292:
            t8566 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.512e3*1j) * np.exp((1j) * (8 * phi1 - 9 * phi2)) * np.sqrt(0.2e1) * ((1 - t8566) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t8566))

        if Bindx == 1293:
            t8567 = np.cos(phi)
            t8568 = t8567 ** 2
            t8570 = t8568 ** 2
            t8574 = t8570 ** 2
            t8569 = t8567 * t8568
            t8572 = t8569 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((8*1j) * (phi1 - phi2)) * (152 * t8568 - 196 * t8569 + 56 * t8570 - 280 * t8572 - 64 * t8574 + 8 + (182 * t8570 + 188 * t8572 + 9 * t8574 - 55) * t8567)

        if Bindx == 1294:
            t8576 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.512e3*1j) * np.exp((1j) * (8 * phi1 - 7 * phi2)) * np.sqrt(0.34e2) * ((1 - t8576) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t8576)) * (7 + 9 * t8576)

        if Bindx == 1295:
            t8577 = np.cos(phi)
            t8582 = -1 + t8577
            t8578 = t8582 ** 2
            t8579 = t8582 * t8578
            tfunc[..., c] = (0.19e2 / 0.128e3) * (2 + 3 * t8577) * (1 + t8577) * t8582 * t8579 ** 2 * np.sqrt(0.102e3) * np.exp((2*1j) * (4 * phi1 - 3 * phi2))

        if Bindx == 1296:
            t8583 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * np.exp((1j) * (8 * phi1 - 5 * phi2)) * np.sqrt(0.170e3) * ((1 - t8583) ** (0.13e2 / 0.2e1)) * ((1 + t8583) ** (0.3e1 / 0.2e1)) * (5 + 9 * t8583)

        if Bindx == 1297:
            t8591 = np.sin(phi)
            t8589 = t8591 ** 2
            t8584 = np.cos(phi)
            t8585 = t8584 ** 2
            t8587 = t8585 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((4*1j) * (2 * phi1 - phi2)) * np.sqrt(0.119e3) * t8589 ** 2 * (-12 * t8585 - 32 * t8587 + 4 + (38 * t8585 + 9 * t8587 - 7) * t8584)

        if Bindx == 1298:
            t8592 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * np.exp((1j) * (8 * phi1 - 3 * phi2)) * np.sqrt(0.9282e4) * ((1 - t8592) ** (0.11e2 / 0.2e1)) * ((1 + t8592) ** (0.5e1 / 0.2e1)) * (1 + 3 * t8592)

        if Bindx == 1299:
            t8599 = np.sin(phi)
            t8596 = t8599 ** 2
            t8597 = t8599 * t8596
            t8593 = np.cos(phi)
            t8594 = t8593 ** 2
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((2*1j) * (4 * phi1 - phi2)) * np.sqrt(0.442e3) * t8597 ** 2 * (-16 * t8594 + 2 + (9 * t8594 + 5) * t8593)

        if Bindx == 1300:
            t8600 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * np.exp((1j) * (8 * phi1 - phi2)) * np.sqrt(0.2431e4) * ((1 - t8600) ** (0.9e1 / 0.2e1)) * ((1 + t8600) ** (0.7e1 / 0.2e1)) * (9 * t8600 + 1)

        if Bindx == 1301:
            t8604 = np.sin(phi)
            t8601 = t8604 ** 2
            t8602 = t8601 ** 2
            tfunc[..., c] = (0.57e2 / 0.256e3) * np.exp((8*1j) * phi1) * np.sqrt(0.24310e5) * t8602 ** 2 * np.cos(phi)

        if Bindx == 1302:
            t8605 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * np.exp((1j) * (8 * phi1 + phi2)) * np.sqrt(0.2431e4) * ((1 - t8605) ** (0.7e1 / 0.2e1)) * ((1 + t8605) ** (0.9e1 / 0.2e1)) * (-1 + 9 * t8605)

        if Bindx == 1303:
            t8612 = np.sin(phi)
            t8609 = t8612 ** 2
            t8610 = t8612 * t8609
            t8606 = np.cos(phi)
            t8607 = t8606 ** 2
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.exp((2*1j) * (4 * phi1 + phi2)) * np.sqrt(0.442e3) * t8610 ** 2 * (16 * t8607 - 2 + (9 * t8607 + 5) * t8606)

        if Bindx == 1304:
            t8613 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * np.exp((1j) * (8 * phi1 + 3 * phi2)) * np.sqrt(0.9282e4) * ((1 - t8613) ** (0.5e1 / 0.2e1)) * ((1 + t8613) ** (0.11e2 / 0.2e1)) * (-1 + 3 * t8613)

        if Bindx == 1305:
            t8621 = np.sin(phi)
            t8619 = t8621 ** 2
            t8614 = np.cos(phi)
            t8615 = t8614 ** 2
            t8617 = t8615 ** 2
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((4*1j) * (2 * phi1 + phi2)) * np.sqrt(0.119e3) * t8619 ** 2 * (12 * t8615 + 32 * t8617 - 4 + (38 * t8615 + 9 * t8617 - 7) * t8614)

        if Bindx == 1306:
            t8622 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * np.exp((1j) * (8 * phi1 + 5 * phi2)) * np.sqrt(0.170e3) * ((1 - t8622) ** (0.3e1 / 0.2e1)) * ((1 + t8622) ** (0.13e2 / 0.2e1)) * (-5 + 9 * t8622)

        if Bindx == 1307:
            t8623 = np.cos(phi)
            t8628 = 1 + t8623
            t8624 = t8628 ** 2
            t8625 = t8628 * t8624
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.exp((2*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.102e3) * (-1 + t8623) * t8628 * t8625 ** 2 * (-2 + 3 * t8623)

        if Bindx == 1308:
            t8629 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.512e3*1j) * np.exp((1j) * (8 * phi1 + 7 * phi2)) * np.sqrt(0.34e2) * np.sqrt((1 - t8629)) * ((1 + t8629) ** (0.15e2 / 0.2e1)) * (-7 + 9 * t8629)

        if Bindx == 1309:
            t8630 = np.cos(phi)
            t8631 = t8630 ** 2
            t8633 = t8631 ** 2
            t8637 = t8633 ** 2
            t8632 = t8630 * t8631
            t8635 = t8632 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((8*1j) * (phi1 + phi2)) * (-152 * t8631 - 196 * t8632 - 56 * t8633 + 280 * t8635 + 64 * t8637 - 8 + (182 * t8633 + 188 * t8635 + 9 * t8637 - 55) * t8630)

        if Bindx == 1310:
            t8639 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.512e3*1j) * np.exp((1j) * (8 * phi1 + 9 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t8639)) * ((1 + t8639) ** (0.17e2 / 0.2e1))

        if Bindx == 1311:
            t8640 = np.cos(phi)
            t8641 = t8640 ** 2
            t8643 = t8641 ** 2
            t8647 = t8643 ** 2
            t8642 = t8640 * t8641
            t8645 = t8642 ** 2
            tfunc[..., c] = (0.19e2 / 0.512e3) * np.exp((9*1j) * (phi1 - phi2)) * (-36 * t8641 + 84 * t8642 - 126 * t8643 - 84 * t8645 - 9 * t8647 - 1 + (126 * t8643 + 36 * t8645 + t8647 + 9) * t8640)

        if Bindx == 1312:
            t8649 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.512e3*1j) * np.exp((1j) * (9 * phi1 - 8 * phi2)) * np.sqrt(0.2e1) * ((1 - t8649) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t8649))

        if Bindx == 1313:
            t8650 = np.cos(phi)
            t8654 = -1 + t8650
            t8651 = t8654 ** 2
            t8652 = t8651 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((1j) * (9 * phi1 - 7 * phi2)) * np.sqrt(0.17e2) * t8652 ** 2 * (1 + t8650)

        if Bindx == 1314:
            t8655 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((3*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.51e2) * ((1 - t8655) ** (0.15e2 / 0.2e1)) * ((1 + t8655) ** (0.3e1 / 0.2e1))

        if Bindx == 1315:
            t8657 = np.cos(phi)
            t8662 = -1 + t8657
            t8658 = t8662 ** 2
            t8659 = t8662 * t8658
            t8656 = 1 + t8657
            tfunc[..., c] = (0.57e2 / 0.256e3) * np.exp((1j) * (9 * phi1 - 5 * phi2)) * np.sqrt(0.85e2) * t8662 * t8659 ** 2 * t8656 ** 2

        if Bindx == 1316:
            t8663 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.256e3*1j) * np.exp((1j) * (9 * phi1 - 4 * phi2)) * np.sqrt(0.238e3) * ((1 - t8663) ** (0.13e2 / 0.2e1)) * ((1 + t8663) ** (0.5e1 / 0.2e1))

        if Bindx == 1317:
            t8664 = np.cos(phi)
            t8671 = -1 + t8664
            t8670 = 1 + t8664
            t8668 = t8670 ** 2
            t8665 = t8671 ** 2
            t8666 = t8671 * t8665
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((3*1j) * (3 * phi1 - phi2)) * np.sqrt(0.4641e4) * t8666 ** 2 * t8670 * t8668

        if Bindx == 1318:
            t8672 = np.cos(phi)
            tfunc[..., c] = (0.57e2 / 0.128e3*1j) * np.exp((1j) * (9 * phi1 - 2 * phi2)) * np.sqrt(0.221e3) * ((1 - t8672) ** (0.11e2 / 0.2e1)) * ((1 + t8672) ** (0.7e1 / 0.2e1))

        if Bindx == 1319:
            t8676 = np.sin(phi)
            t8673 = t8676 ** 2
            t8674 = t8673 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((1j) * (9 * phi1 - phi2)) * np.sqrt(0.4862e4) * t8674 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 1320:
            t8677 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * np.exp((9*1j) * phi1) * np.sqrt(0.12155e5) * ((1 - t8677) ** (0.9e1 / 0.2e1)) * ((1 + t8677) ** (0.9e1 / 0.2e1))

        if Bindx == 1321:
            t8681 = np.sin(phi)
            t8678 = t8681 ** 2
            t8679 = t8678 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((1j) * (9 * phi1 + phi2)) * np.sqrt(0.4862e4) * t8679 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 1322:
            t8682 = np.cos(phi)
            tfunc[..., c] = (0.57e2 / 0.128e3*1j) * np.exp((1j) * (9 * phi1 + 2 * phi2)) * np.sqrt(0.221e3) * ((1 - t8682) ** (0.7e1 / 0.2e1)) * ((1 + t8682) ** (0.11e2 / 0.2e1))

        if Bindx == 1323:
            t8683 = np.cos(phi)
            t8690 = -1 + t8683
            t8689 = 1 + t8683
            t8686 = t8689 ** 2
            t8687 = t8689 * t8686
            t8684 = t8690 ** 2
            tfunc[..., c] = (0.19e2 / 0.256e3) * np.exp((3*1j) * (3 * phi1 + phi2)) * np.sqrt(0.4641e4) * t8690 * t8684 * t8687 ** 2

        if Bindx == 1324:
            t8691 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.256e3*1j) * np.exp((1j) * (9 * phi1 + 4 * phi2)) * np.sqrt(0.238e3) * ((1 - t8691) ** (0.5e1 / 0.2e1)) * ((1 + t8691) ** (0.13e2 / 0.2e1))

        if Bindx == 1325:
            t8693 = np.cos(phi)
            t8698 = 1 + t8693
            t8694 = t8698 ** 2
            t8695 = t8698 * t8694
            t8692 = -1 + t8693
            tfunc[..., c] = (0.57e2 / 0.256e3) * np.exp((1j) * (9 * phi1 + 5 * phi2)) * np.sqrt(0.85e2) * t8692 ** 2 * t8698 * t8695 ** 2

        if Bindx == 1326:
            t8699 = np.cos(phi)
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.exp((3*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.51e2) * ((1 - t8699) ** (0.3e1 / 0.2e1)) * ((1 + t8699) ** (0.15e2 / 0.2e1))

        if Bindx == 1327:
            t8700 = np.cos(phi)
            t8704 = 1 + t8700
            t8701 = t8704 ** 2
            t8702 = t8701 ** 2
            tfunc[..., c] = (0.57e2 / 0.512e3) * np.exp((1j) * (9 * phi1 + 7 * phi2)) * np.sqrt(0.17e2) * (-1 + t8700) * t8702 ** 2

        if Bindx == 1328:
            t8705 = np.cos(phi)
            tfunc[..., c] = (-0.57e2 / 0.512e3*1j) * np.exp((1j) * (9 * phi1 + 8 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t8705)) * ((1 + t8705) ** (0.17e2 / 0.2e1))

        if Bindx == 1329:
            t8706 = np.cos(phi)
            t8707 = t8706 ** 2
            t8709 = t8707 ** 2
            t8715 = 126 * t8709
            t8713 = t8709 ** 2
            t8708 = t8706 * t8707
            t8711 = t8708 ** 2
            tfunc[..., c] = (0.19e2 / 0.512e3) * np.exp((9*1j) * (phi1 + phi2)) * (36 * t8707 + 84 * t8708 + 84 * t8711 + 9 * t8713 + t8715 + 1 + (36 * t8711 + t8713 + t8715 + 9) * t8706)

        if Bindx == 1330:
            t8716 = np.cos(phi)
            t8726 = 10 * t8716
            t8717 = t8716 ** 2
            t8719 = t8717 ** 2
            t8720 = t8716 * t8719
            t8718 = t8716 * t8717
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-10*1j) * (phi1 + phi2)) * (45 * t8717 + t8726 + 1 + (252 + t8720) * t8720 + (210 + (t8726 + 45) * t8719) * t8719 + (120 + (120 * t8716 + 210) * t8718) * t8718)

        if Bindx == 1331:
            t8727 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (10 * phi1 + 9 * phi2)) * np.sqrt(0.5e1) * ((1 + t8727) ** (0.19e2 / 0.2e1)) * np.sqrt((1 - t8727))

        if Bindx == 1332:
            t8728 = np.cos(phi)
            t8733 = 1 + t8728
            t8729 = t8733 ** 2
            t8730 = t8729 ** 2
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.190e3) * (-1 + t8728) * t8733 * t8730 ** 2

        if Bindx == 1333:
            t8734 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (10 * phi1 + 7 * phi2)) * np.sqrt(0.285e3) * ((1 - t8734) ** (0.3e1 / 0.2e1)) * ((1 + t8734) ** (0.17e2 / 0.2e1))

        if Bindx == 1334:
            t8736 = np.cos(phi)
            t8740 = 1 + t8736
            t8737 = t8740 ** 2
            t8738 = t8737 ** 2
            t8735 = -1 + t8736
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.4845e4) * t8735 ** 2 * t8738 ** 2

        if Bindx == 1335:
            t8741 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((-5*1j) * (2 * phi1 + phi2)) * np.sqrt(0.969e3) * ((1 - t8741) ** (0.5e1 / 0.2e1)) * ((1 + t8741) ** (0.15e2 / 0.2e1))

        if Bindx == 1336:
            t8742 = np.cos(phi)
            t8750 = -1 + t8742
            t8749 = 1 + t8742
            t8745 = t8749 ** 2
            t8746 = t8749 * t8745
            t8743 = t8750 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-2*1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.9690e4) * t8750 * t8743 * t8749 * t8746 ** 2

        if Bindx == 1337:
            t8751 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (10 * phi1 + 3 * phi2)) * np.sqrt(0.4845e4) * ((1 - t8751) ** (0.7e1 / 0.2e1)) * ((1 + t8751) ** (0.13e2 / 0.2e1))

        if Bindx == 1338:
            t8752 = np.cos(phi)
            t8759 = -1 + t8752
            t8758 = 1 + t8752
            t8755 = t8758 ** 2
            t8756 = t8758 * t8755
            t8753 = t8759 ** 2
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 + phi2)) * np.sqrt(0.125970e6) * t8753 ** 2 * t8756 ** 2

        if Bindx == 1339:
            t8760 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (10 * phi1 + phi2)) * np.sqrt(0.41990e5) * ((1 - t8760) ** (0.9e1 / 0.2e1)) * ((1 + t8760) ** (0.11e2 / 0.2e1))

        if Bindx == 1340:
            t8765 = np.sin(phi)
            t8761 = t8765 ** 2
            t8763 = t8765 * t8761 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-10*1j) * phi1) * np.sqrt(0.46189e5) * t8763 ** 2

        if Bindx == 1341:
            t8766 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (10 * phi1 - phi2)) * np.sqrt(0.41990e5) * ((1 - t8766) ** (0.11e2 / 0.2e1)) * ((1 + t8766) ** (0.9e1 / 0.2e1))

        if Bindx == 1342:
            t8767 = np.cos(phi)
            t8774 = -1 + t8767
            t8773 = 1 + t8767
            t8771 = t8773 ** 2
            t8768 = t8774 ** 2
            t8769 = t8774 * t8768
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 - phi2)) * np.sqrt(0.125970e6) * t8769 ** 2 * t8771 ** 2

        if Bindx == 1343:
            t8775 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (10 * phi1 - 3 * phi2)) * np.sqrt(0.4845e4) * ((1 - t8775) ** (0.13e2 / 0.2e1)) * ((1 + t8775) ** (0.7e1 / 0.2e1))

        if Bindx == 1344:
            t8776 = np.cos(phi)
            t8784 = -1 + t8776
            t8783 = 1 + t8776
            t8781 = t8783 ** 2
            t8777 = t8784 ** 2
            t8778 = t8784 * t8777
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-2*1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.9690e4) * t8784 * t8778 ** 2 * t8783 * t8781

        if Bindx == 1345:
            t8785 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((-5*1j) * (2 * phi1 - phi2)) * np.sqrt(0.969e3) * ((1 - t8785) ** (0.15e2 / 0.2e1)) * ((1 + t8785) ** (0.5e1 / 0.2e1))

        if Bindx == 1346:
            t8787 = np.cos(phi)
            t8791 = -1 + t8787
            t8788 = t8791 ** 2
            t8789 = t8788 ** 2
            t8786 = 1 + t8787
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.4845e4) * t8789 ** 2 * t8786 ** 2

        if Bindx == 1347:
            t8792 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (10 * phi1 - 7 * phi2)) * np.sqrt(0.285e3) * ((1 - t8792) ** (0.17e2 / 0.2e1)) * ((1 + t8792) ** (0.3e1 / 0.2e1))

        if Bindx == 1348:
            t8793 = np.cos(phi)
            t8798 = -1 + t8793
            t8794 = t8798 ** 2
            t8795 = t8794 ** 2
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.190e3) * t8798 * t8795 ** 2 * (1 + t8793)

        if Bindx == 1349:
            t8799 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (10 * phi1 - 9 * phi2)) * np.sqrt(0.5e1) * ((1 - t8799) ** (0.19e2 / 0.2e1)) * np.sqrt((1 + t8799))

        if Bindx == 1350:
            t8800 = np.cos(phi)
            t8810 = -10 * t8800
            t8801 = t8800 ** 2
            t8803 = t8801 ** 2
            t8804 = t8800 * t8803
            t8802 = t8800 * t8801
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-10*1j) * (phi1 - phi2)) * (45 * t8801 + t8810 + 1 + (-252 + t8804) * t8804 + (210 + (t8810 + 45) * t8803) * t8803 + (-120 + (-120 * t8800 + 210) * t8802) * t8802)

        if Bindx == 1351:
            t8811 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (9 * phi1 + 10 * phi2)) * np.sqrt(0.5e1) * np.sqrt((1 - t8811)) * ((1 + t8811) ** (0.19e2 / 0.2e1))

        if Bindx == 1352:
            t8812 = np.cos(phi)
            t8813 = t8812 ** 2
            t8815 = t8813 ** 2
            t8819 = t8815 ** 2
            t8814 = t8812 * t8813
            t8817 = t8814 ** 2
            t8816 = t8812 * t8815
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-9*1j) * (phi1 + phi2)) * (-234 * t8813 - 396 * t8814 - 294 * t8815 + 504 * t8817 + 279 * t8819 - 9 + (126 + 10 * t8816) * t8816 + (516 * t8817 + 81 * t8819 - 71) * t8812)

        if Bindx == 1353:
            t8822 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (9 * phi1 + 8 * phi2)) * np.sqrt(0.38e2) * ((1 + t8822) ** (0.17e2 / 0.2e1)) * (4 + (-9 + 5 * t8822) * t8822) * ((1 - t8822) ** (-0.1e1 / 0.2e1))

        if Bindx == 1354:
            t8823 = np.cos(phi)
            t8827 = 1 + t8823
            t8824 = t8827 ** 2
            t8825 = t8824 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3) * (-7 + 10 * t8823) * (-1 + t8823) * t8825 ** 2 * np.sqrt(0.57e2) * np.exp((-1*1j) * (9 * phi1 + 7 * phi2))

        if Bindx == 1355:
            t8828 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * (-3 + 5 * t8828) * ((1 + t8828) ** (0.15e2 / 0.2e1)) * np.sqrt(0.969e3) * np.exp((-3*1j) * (3 * phi1 + 2 * phi2)) * ((1 - t8828) ** (0.3e1 / 0.2e1))

        if Bindx == 1356:
            t8837 = np.sin(phi)
            t8835 = t8837 ** 2
            t8829 = np.cos(phi)
            t8830 = t8829 ** 2
            t8832 = t8830 ** 2
            t8831 = t8829 * t8830
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-1*1j) * (9 * phi1 + 5 * phi2)) * np.sqrt(0.4845e4) * t8835 ** 2 * (15 * t8832 - 1 + (10 + 2 * t8831) * t8831 + (9 * t8832 - 3) * t8829)

        if Bindx == 1357:
            t8838 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * (-2 + 5 * t8838) * ((1 + t8838) ** (0.13e2 / 0.2e1)) * np.sqrt(0.1938e4) * np.exp((-1*1j) * (9 * phi1 + 4 * phi2)) * ((1 - t8838) ** (0.5e1 / 0.2e1))

        if Bindx == 1358:
            t8846 = np.sin(phi)
            t8843 = t8846 ** 2
            t8844 = t8846 * t8843
            t8839 = np.cos(phi)
            t8840 = t8839 ** 2
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((-3*1j) * (3 * phi1 + phi2)) * np.sqrt(0.969e3) * t8844 ** 2 * (t8839 - 3 + (27 * t8839 + 21 + 10 * t8840) * t8840)

        if Bindx == 1359:
            t8847 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * (-1 + 5 * t8847) * ((1 + t8847) ** (0.11e2 / 0.2e1)) * np.sqrt(0.25194e5) * np.exp((-1*1j) * (9 * phi1 + 2 * phi2)) * ((1 - t8847) ** (0.7e1 / 0.2e1))

        if Bindx == 1360:
            t8852 = np.sin(phi)
            t8849 = t8852 ** 2
            t8850 = t8849 ** 2
            t8848 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-1*1j) * (9 * phi1 + phi2)) * np.sqrt(0.8398e4) * t8850 ** 2 * (-1 + (9 + 10 * t8848) * t8848)

        if Bindx == 1361:
            t8853 = np.cos(phi)
            t8854 = t8853 ** 2
            t8856 = t8854 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * t8853 * (-10 * t8854 - 5 * t8856 - 1 + (10 * t8854 + t8856 + 5) * t8853) * ((1 + t8853) ** (0.9e1 / 0.2e1)) * np.sqrt(0.230945e6) * np.exp((-9*1j) * phi1) * ((1 - t8853) ** (-0.1e1 / 0.2e1))

        if Bindx == 1362:
            t8862 = np.sin(phi)
            t8859 = t8862 ** 2
            t8860 = t8859 ** 2
            t8858 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-1*1j) * (9 * phi1 - phi2)) * np.sqrt(0.8398e4) * t8860 ** 2 * (-1 + (-9 + 10 * t8858) * t8858)

        if Bindx == 1363:
            t8863 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * (1 + 5 * t8863) * ((1 + t8863) ** (0.7e1 / 0.2e1)) * np.sqrt(0.25194e5) * np.exp((-1*1j) * (9 * phi1 - 2 * phi2)) * ((1 - t8863) ** (0.11e2 / 0.2e1))

        if Bindx == 1364:
            t8871 = np.sin(phi)
            t8868 = t8871 ** 2
            t8869 = t8871 * t8868
            t8864 = np.cos(phi)
            t8865 = t8864 ** 2
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((-3*1j) * (3 * phi1 - phi2)) * np.sqrt(0.969e3) * t8869 ** 2 * (-t8864 - 3 + (-27 * t8864 + 21 + 10 * t8865) * t8865)

        if Bindx == 1365:
            t8872 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * (2 + 5 * t8872) * ((1 + t8872) ** (0.5e1 / 0.2e1)) * np.sqrt(0.1938e4) * np.exp((-1*1j) * (9 * phi1 - 4 * phi2)) * ((1 - t8872) ** (0.13e2 / 0.2e1))

        if Bindx == 1366:
            t8881 = np.sin(phi)
            t8879 = t8881 ** 2
            t8873 = np.cos(phi)
            t8874 = t8873 ** 2
            t8876 = t8874 ** 2
            t8875 = t8873 * t8874
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-1*1j) * (9 * phi1 - 5 * phi2)) * np.sqrt(0.4845e4) * t8879 ** 2 * (15 * t8876 - 1 + (-10 + 2 * t8875) * t8875 + (-9 * t8876 + 3) * t8873)

        if Bindx == 1367:
            t8882 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * (3 + 5 * t8882) * ((1 + t8882) ** (0.3e1 / 0.2e1)) * np.sqrt(0.969e3) * np.exp((-3*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t8882) ** (0.15e2 / 0.2e1))

        if Bindx == 1368:
            t8883 = np.cos(phi)
            t8887 = -1 + t8883
            t8884 = t8887 ** 2
            t8885 = t8884 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-1*1j) * (9 * phi1 - 7 * phi2)) * np.sqrt(0.57e2) * (1 + t8883) * t8885 ** 2 * (7 + 10 * t8883)

        if Bindx == 1369:
            t8888 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * (4 + 5 * t8888) * np.sqrt((1 + t8888)) * np.sqrt(0.38e2) * np.exp((-1*1j) * (9 * phi1 - 8 * phi2)) * ((1 - t8888) ** (0.17e2 / 0.2e1))

        if Bindx == 1370:
            t8889 = np.cos(phi)
            t8890 = t8889 ** 2
            t8892 = t8890 ** 2
            t8896 = t8892 ** 2
            t8891 = t8889 * t8890
            t8894 = t8891 ** 2
            t8893 = t8889 * t8892
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-9*1j) * (phi1 - phi2)) * (-234 * t8890 + 396 * t8891 - 294 * t8892 + 504 * t8894 + 279 * t8896 - 9 + (-126 + 10 * t8893) * t8893 + (-516 * t8894 - 81 * t8896 + 71) * t8889)

        if Bindx == 1371:
            t8899 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (9 * phi1 - 10 * phi2)) * np.sqrt(0.5e1) * ((1 - t8899) ** (0.19e2 / 0.2e1)) * np.sqrt((1 + t8899))

        if Bindx == 1372:
            t8900 = np.cos(phi)
            t8905 = 1 + t8900
            t8901 = t8905 ** 2
            t8902 = t8901 ** 2
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.190e3) * (-1 + t8900) * t8905 * t8902 ** 2

        if Bindx == 1373:
            t8906 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (8 * phi1 + 9 * phi2)) * np.sqrt(0.38e2) * np.sqrt((1 - t8906)) * ((1 + t8906) ** (0.17e2 / 0.2e1)) * (-4 + 5 * t8906)

        if Bindx == 1374:
            t8907 = np.cos(phi)
            t8908 = t8907 ** 2
            t8910 = t8908 ** 2
            t8914 = t8910 ** 2
            t8909 = t8907 * t8908
            t8912 = t8909 ** 2
            t8911 = t8907 * t8910
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-8*1j) * (phi1 + phi2)) * (531 * t8908 - 192 * t8909 - 1722 * t8910 - 210 * t8912 + 1503 * t8914 + 59 + (-2016 + 95 * t8911) * t8911 + (1536 * t8912 + 608 * t8914 + 320) * t8907)

        if Bindx == 1375:
            t8917 = np.cos(phi)
            t8918 = t8917 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (8 * phi1 + 7 * phi2)) * np.sqrt(0.6e1) * ((1 + t8917) ** (0.15e2 / 0.2e1)) * (-228 * t8918 - 44 + (95 * t8918 + 177) * t8917) * ((1 - t8917) ** (-0.1e1 / 0.2e1))

        if Bindx == 1376:
            t8921 = np.cos(phi)
            t8922 = t8921 ** 2
            t8923 = t8921 * t8922
            t8926 = t8923 ** 2
            t8924 = t8922 ** 2
            t8920 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.1024e4) * np.exp((-2*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.102e3) * t8920 ** 2 * (-124 * t8922 - 520 * t8923 + 772 * t8926 + 31 + (-390 + 95 * t8924) * t8924 + (376 * t8924 + 456 * t8926 + 72) * t8921)

        if Bindx == 1377:
            t8929 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (4 + (-19 + 19 * t8929) * t8929) * ((1 + t8929) ** (0.13e2 / 0.2e1)) * np.sqrt(0.510e3) * np.exp((-1*1j) * (8 * phi1 + 5 * phi2)) * ((1 - t8929) ** (0.3e1 / 0.2e1))

        if Bindx == 1378:
            t8938 = np.sin(phi)
            t8936 = t8938 ** 2
            t8930 = np.cos(phi)
            t8931 = t8930 ** 2
            t8933 = t8931 ** 2
            t8932 = t8930 * t8931
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-4*1j) * (2 * phi1 + phi2)) * np.sqrt(0.51e2) * t8936 ** 2 * (-143 * t8931 + 277 * t8933 + 11 + (-32 + 95 * t8932) * t8932 + (304 * t8933 - 32) * t8930)

        if Bindx == 1379:
            t8939 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * (4 + (-57 + 95 * t8939) * t8939) * ((1 + t8939) ** (0.11e2 / 0.2e1)) * np.sqrt(0.102e3) * np.exp((-1*1j) * (8 * phi1 + 3 * phi2)) * ((1 - t8939) ** (0.5e1 / 0.2e1))

        if Bindx == 1380:
            t8947 = np.sin(phi)
            t8944 = t8947 ** 2
            t8945 = t8947 * t8944
            t8940 = np.cos(phi)
            t8941 = t8940 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-2*1j) * (4 * phi1 + phi2)) * np.sqrt(0.663e3) * t8945 ** 2 * (-40 * t8940 - 1 + (152 * t8940 + 18 + 95 * t8941) * t8941)

        if Bindx == 1381:
            t8948 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (-4 + (-19 + 95 * t8948) * t8948) * ((1 + t8948) ** (0.9e1 / 0.2e1)) * np.sqrt(0.221e3) * np.exp((-1*1j) * (8 * phi1 + phi2)) * ((1 - t8948) ** (0.7e1 / 0.2e1))

        if Bindx == 1382:
            t8953 = np.sin(phi)
            t8950 = t8953 ** 2
            t8951 = t8950 ** 2
            t8949 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-8*1j) * phi1) * np.sqrt(0.24310e5) * t8951 ** 2 * (19 * t8949 ** 2 - 1)

        if Bindx == 1383:
            t8954 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * (-4 + (19 + 95 * t8954) * t8954) * ((1 + t8954) ** (0.7e1 / 0.2e1)) * np.sqrt(0.221e3) * np.exp((-1*1j) * (8 * phi1 - phi2)) * ((1 - t8954) ** (0.9e1 / 0.2e1))

        if Bindx == 1384:
            t8962 = np.sin(phi)
            t8959 = t8962 ** 2
            t8960 = t8962 * t8959
            t8955 = np.cos(phi)
            t8956 = t8955 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-2*1j) * (4 * phi1 - phi2)) * np.sqrt(0.663e3) * t8960 ** 2 * (40 * t8955 - 1 + (-152 * t8955 + 18 + 95 * t8956) * t8956)

        if Bindx == 1385:
            t8963 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (4 + (57 + 95 * t8963) * t8963) * ((1 + t8963) ** (0.5e1 / 0.2e1)) * np.sqrt(0.102e3) * np.exp((-1*1j) * (8 * phi1 - 3 * phi2)) * ((1 - t8963) ** (0.11e2 / 0.2e1))

        if Bindx == 1386:
            t8972 = np.sin(phi)
            t8970 = t8972 ** 2
            t8964 = np.cos(phi)
            t8965 = t8964 ** 2
            t8967 = t8965 ** 2
            t8966 = t8964 * t8965
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-4*1j) * (2 * phi1 - phi2)) * np.sqrt(0.51e2) * t8970 ** 2 * (-143 * t8965 + 277 * t8967 + 11 + (32 + 95 * t8966) * t8966 + (-304 * t8967 + 32) * t8964)

        if Bindx == 1387:
            t8973 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * (4 + (19 + 19 * t8973) * t8973) * ((1 + t8973) ** (0.3e1 / 0.2e1)) * np.sqrt(0.510e3) * np.exp((-1*1j) * (8 * phi1 - 5 * phi2)) * ((1 - t8973) ** (0.13e2 / 0.2e1))

        if Bindx == 1388:
            t8975 = np.cos(phi)
            t8976 = t8975 ** 2
            t8977 = t8975 * t8976
            t8980 = t8977 ** 2
            t8978 = t8976 ** 2
            t8974 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.1024e4) * np.exp((-2*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.102e3) * t8974 ** 2 * (-124 * t8976 + 520 * t8977 + 772 * t8980 + 31 + (-390 + 95 * t8978) * t8978 + (-376 * t8978 - 456 * t8980 - 72) * t8975)

        if Bindx == 1389:
            t8983 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * (44 + (133 + 95 * t8983) * t8983) * np.sqrt((1 + t8983)) * np.sqrt(0.6e1) * np.exp((-1*1j) * (8 * phi1 - 7 * phi2)) * ((1 - t8983) ** (0.15e2 / 0.2e1))

        if Bindx == 1390:
            t8984 = np.cos(phi)
            t8985 = t8984 ** 2
            t8987 = t8985 ** 2
            t8991 = t8987 ** 2
            t8986 = t8984 * t8985
            t8989 = t8986 ** 2
            t8988 = t8984 * t8987
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-8*1j) * (phi1 - phi2)) * (531 * t8985 + 192 * t8986 - 1722 * t8987 - 210 * t8989 + 1503 * t8991 + 59 + (2016 + 95 * t8988) * t8988 + (-1536 * t8989 - 608 * t8991 - 320) * t8984)

        if Bindx == 1391:
            t8994 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * (4 + 5 * t8994) * np.sqrt((1 + t8994)) * np.sqrt(0.38e2) * np.exp((-1*1j) * (8 * phi1 - 9 * phi2)) * ((1 - t8994) ** (0.17e2 / 0.2e1))

        if Bindx == 1392:
            t8995 = np.cos(phi)
            t9000 = -1 + t8995
            t8996 = t9000 ** 2
            t8997 = t8996 ** 2
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.190e3) * t9000 * t8997 ** 2 * (1 + t8995)

        if Bindx == 1393:
            t9001 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (7 * phi1 + 10 * phi2)) * np.sqrt(0.285e3) * ((1 - t9001) ** (0.3e1 / 0.2e1)) * ((1 + t9001) ** (0.17e2 / 0.2e1))

        if Bindx == 1394:
            t9002 = np.cos(phi)
            t9006 = 1 + t9002
            t9003 = t9006 ** 2
            t9004 = t9003 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-1*1j) * (7 * phi1 + 9 * phi2)) * np.sqrt(0.57e2) * (-1 + t9002) * t9004 ** 2 * (-7 + 10 * t9002)

        if Bindx == 1395:
            t9007 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (7 * phi1 + 8 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t9007)) * ((1 + t9007) ** (0.15e2 / 0.2e1)) * (44 + (-133 + 95 * t9007) * t9007)

        if Bindx == 1396:
            t9008 = np.cos(phi)
            t9009 = t9008 ** 2
            t9011 = t9009 ** 2
            t9015 = t9011 ** 2
            t9010 = t9008 * t9009
            t9013 = t9010 ** 2
            t9012 = t9008 * t9011
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-7*1j) * (phi1 + phi2)) * (966 * t9009 + 3188 * t9010 + 938 * t9011 - 6440 * t9013 + 4383 * t9015 - 161 + (-5586 + 570 * t9012) * t9012 + (196 * t9013 + 2793 * t9015 - 335) * t9008)

        if Bindx == 1397:
            t9018 = np.cos(phi)
            t9019 = t9018 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.17e2) * ((1 + t9018) ** (0.13e2 / 0.2e1)) * (-322 * t9018 + 43 + (-798 * t9018 + 792 + 285 * t9019) * t9019) * ((1 - t9018) ** (-0.1e1 / 0.2e1))

        if Bindx == 1398:
            t9023 = np.cos(phi)
            t9024 = t9023 ** 2
            t9025 = t9023 * t9024
            t9028 = t9025 ** 2
            t9026 = t9024 ** 2
            t9022 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((-1*1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.85e2) * t9022 ** 2 * (119 * t9024 - 91 * t9025 + 357 * t9028 - 7 + (-455 + 114 * t9026) * t9026 + (-217 * t9026 + 399 * t9028 + 37) * t9023)

        if Bindx == 1399:
            t9031 = np.cos(phi)
            t9032 = t9031 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (-342 * t9032 - 2 + (285 * t9032 + 99) * t9031) * ((1 + t9031) ** (0.11e2 / 0.2e1)) * np.sqrt(0.34e2) * np.exp((-1*1j) * (7 * phi1 + 4 * phi2)) * ((1 - t9031) ** (0.3e1 / 0.2e1))

        if Bindx == 1400:
            t9042 = np.sin(phi)
            t9040 = t9042 ** 2
            t9034 = np.cos(phi)
            t9035 = t9034 ** 2
            t9037 = t9035 ** 2
            t9036 = t9034 * t9035
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-1*1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.17e2) * t9040 ** 2 * (-264 * t9035 + 243 * t9037 + 11 + (-742 + 570 * t9036) * t9036 + (1197 * t9037 + 105) * t9034)

        if Bindx == 1401:
            t9043 = np.cos(phi)
            t9044 = t9043 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * (-171 * t9044 + 7 + (285 * t9044 - 9) * t9043) * ((1 + t9043) ** (0.9e1 / 0.2e1)) * np.sqrt(0.442e3) * np.exp((-1*1j) * (7 * phi1 + 2 * phi2)) * ((1 - t9043) ** (0.5e1 / 0.2e1))

        if Bindx == 1402:
            t9053 = np.sin(phi)
            t9050 = t9053 ** 2
            t9051 = t9053 * t9050
            t9046 = np.cos(phi)
            t9047 = t9046 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-1*1j) * (7 * phi1 + phi2)) * np.sqrt(0.1326e4) * t9051 ** 2 * (-21 * t9046 + 3 + (133 * t9046 - 81 + 190 * t9047) * t9047)

        if Bindx == 1403:
            t9054 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (19 * t9054 ** 2 - 3) * t9054 * ((1 + t9054) ** (0.7e1 / 0.2e1)) * np.sqrt(0.36465e5) * np.exp((-7*1j) * phi1) * ((1 - t9054) ** (0.7e1 / 0.2e1))

        if Bindx == 1404:
            t9062 = np.sin(phi)
            t9059 = t9062 ** 2
            t9060 = t9062 * t9059
            t9055 = np.cos(phi)
            t9056 = t9055 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-1*1j) * (7 * phi1 - phi2)) * np.sqrt(0.1326e4) * t9060 ** 2 * (21 * t9055 + 3 + (-133 * t9055 - 81 + 190 * t9056) * t9056)

        if Bindx == 1405:
            t9063 = np.cos(phi)
            t9064 = t9063 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * (171 * t9064 - 7 + (285 * t9064 - 9) * t9063) * ((1 + t9063) ** (0.5e1 / 0.2e1)) * np.sqrt(0.442e3) * np.exp((-1*1j) * (7 * phi1 - 2 * phi2)) * ((1 - t9063) ** (0.9e1 / 0.2e1))

        if Bindx == 1406:
            t9074 = np.sin(phi)
            t9072 = t9074 ** 2
            t9066 = np.cos(phi)
            t9067 = t9066 ** 2
            t9069 = t9067 ** 2
            t9068 = t9066 * t9067
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-1*1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.17e2) * t9072 ** 2 * (-264 * t9067 + 243 * t9069 + 11 + (742 + 570 * t9068) * t9068 + (-1197 * t9069 - 105) * t9066)

        if Bindx == 1407:
            t9075 = np.cos(phi)
            t9076 = t9075 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (342 * t9076 + 2 + (285 * t9076 + 99) * t9075) * ((1 + t9075) ** (0.3e1 / 0.2e1)) * np.sqrt(0.34e2) * np.exp((-1*1j) * (7 * phi1 - 4 * phi2)) * ((1 - t9075) ** (0.11e2 / 0.2e1))

        if Bindx == 1408:
            t9079 = np.cos(phi)
            t9080 = t9079 ** 2
            t9081 = t9079 * t9080
            t9084 = t9081 ** 2
            t9082 = t9080 ** 2
            t9078 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((-1*1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.85e2) * t9078 ** 2 * (119 * t9080 + 91 * t9081 + 357 * t9084 - 7 + (-455 + 114 * t9082) * t9082 + (217 * t9082 - 399 * t9084 - 37) * t9079)

        if Bindx == 1409:
            t9087 = np.cos(phi)
            t9088 = t9087 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * (513 * t9088 + 43 + (285 * t9088 + 279) * t9087) * np.sqrt((1 + t9087)) * np.sqrt(0.17e2) * np.exp((-1*1j) * (7 * phi1 - 6 * phi2)) * ((1 - t9087) ** (0.13e2 / 0.2e1))

        if Bindx == 1410:
            t9090 = np.cos(phi)
            t9091 = t9090 ** 2
            t9093 = t9091 ** 2
            t9097 = t9093 ** 2
            t9092 = t9090 * t9091
            t9095 = t9092 ** 2
            t9094 = t9090 * t9093
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-7*1j) * (phi1 - phi2)) * (966 * t9091 - 3188 * t9092 + 938 * t9093 - 6440 * t9095 + 4383 * t9097 - 161 + (5586 + 570 * t9094) * t9094 + (-196 * t9095 - 2793 * t9097 + 335) * t9090)

        if Bindx == 1411:
            t9100 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * (44 + (133 + 95 * t9100) * t9100) * np.sqrt((1 + t9100)) * np.sqrt(0.6e1) * np.exp((-1*1j) * (7 * phi1 - 8 * phi2)) * ((1 - t9100) ** (0.15e2 / 0.2e1))

        if Bindx == 1412:
            t9101 = np.cos(phi)
            t9105 = -1 + t9101
            t9102 = t9105 ** 2
            t9103 = t9102 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-1*1j) * (7 * phi1 - 9 * phi2)) * np.sqrt(0.57e2) * (1 + t9101) * t9103 ** 2 * (7 + 10 * t9101)

        if Bindx == 1413:
            t9106 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (7 * phi1 - 10 * phi2)) * np.sqrt(0.285e3) * ((1 - t9106) ** (0.17e2 / 0.2e1)) * ((1 + t9106) ** (0.3e1 / 0.2e1))

        if Bindx == 1414:
            t9108 = np.cos(phi)
            t9112 = 1 + t9108
            t9109 = t9112 ** 2
            t9110 = t9109 ** 2
            t9107 = -1 + t9108
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.4845e4) * t9107 ** 2 * t9110 ** 2

        if Bindx == 1415:
            t9113 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((-3*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.969e3) * ((1 - t9113) ** (0.3e1 / 0.2e1)) * ((1 + t9113) ** (0.15e2 / 0.2e1)) * (-3 + 5 * t9113)

        if Bindx == 1416:
            t9115 = np.cos(phi)
            t9116 = t9115 ** 2
            t9117 = t9115 * t9116
            t9120 = t9117 ** 2
            t9118 = t9116 ** 2
            t9114 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.102e3) * t9114 ** 2 * (-124 * t9116 - 520 * t9117 + 772 * t9120 + 31 + (-390 + 95 * t9118) * t9118 + (376 * t9118 + 456 * t9120 + 72) * t9115)

        if Bindx == 1417:
            t9123 = np.cos(phi)
            t9124 = t9123 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.17e2) * np.sqrt((1 - t9123)) * ((1 + t9123) ** (0.13e2 / 0.2e1)) * (-513 * t9124 - 43 + (285 * t9124 + 279) * t9123)

        if Bindx == 1418:
            t9126 = np.cos(phi)
            t9127 = t9126 ** 2
            t9129 = t9127 ** 2
            t9133 = t9129 ** 2
            t9128 = t9126 * t9127
            t9131 = t9128 ** 2
            t9130 = t9126 * t9129
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-6*1j) * (phi1 + phi2)) * (-4503 * t9127 + 6168 * t9128 + 22442 * t9129 - 34902 * t9131 + 12393 * t9133 + 237 + (1932 + 4845 * t9130) * t9130 + (-23528 * t9131 + 17442 * t9133 - 1502) * t9126)

        if Bindx == 1419:
            t9136 = np.cos(phi)
            t9137 = t9136 ** 2
            t9139 = t9137 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.5e1) * ((1 + t9136) ** (0.11e2 / 0.2e1)) * (-1462 * t9137 - 2907 * t9139 + 1 + (3162 * t9137 + 969 * t9139 + 237) * t9136) * ((1 - t9136) ** (-0.1e1 / 0.2e1))

        if Bindx == 1420:
            t9142 = np.cos(phi)
            t9143 = t9142 ** 2
            t9144 = t9142 * t9143
            t9147 = t9144 ** 2
            t9145 = t9143 ** 2
            t9141 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.2e1) * t9141 ** 2 * (2324 * t9143 + 4564 * t9144 + 1428 * t9147 - 83 + (-6594 + 4845 * t9145) * t9145 + (-13804 * t9145 + 11628 * t9147 - 468) * t9142)

        if Bindx == 1421:
            t9150 = np.cos(phi)
            t9151 = t9150 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (374 * t9150 - 69 + (-5814 * t9150 + 1224 + 4845 * t9151) * t9151) * ((1 + t9150) ** (0.9e1 / 0.2e1)) * np.exp((-3*1j) * (2 * phi1 + phi2)) * ((1 - t9150) ** (0.3e1 / 0.2e1))

        if Bindx == 1422:
            t9162 = np.sin(phi)
            t9160 = t9162 ** 2
            t9154 = np.cos(phi)
            t9155 = t9154 ** 2
            t9157 = t9155 ** 2
            t9156 = t9154 * t9155
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.26e2) * t9160 ** 2 * (627 * t9155 - 3213 * t9157 - 19 + (-4012 + 4845 * t9156) * t9156 + (5814 * t9157 + 438) * t9154)

        if Bindx == 1423:
            t9163 = np.cos(phi)
            t9164 = t9163 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * (102 * t9163 + 9 + (-646 * t9163 - 408 + 1615 * t9164) * t9164) * ((1 + t9163) ** (0.7e1 / 0.2e1)) * np.sqrt(0.78e2) * np.exp((-1*1j) * (6 * phi1 + phi2)) * ((1 - t9163) ** (0.5e1 / 0.2e1))

        if Bindx == 1424:
            t9173 = np.sin(phi)
            t9170 = t9173 ** 2
            t9171 = t9173 * t9170
            t9167 = np.cos(phi)
            t9168 = t9167 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-6*1j) * phi1) * np.sqrt(0.2145e4) * t9171 ** 2 * (3 + (-102 + 323 * t9168) * t9168)

        if Bindx == 1425:
            t9174 = np.cos(phi)
            t9175 = t9174 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * (-102 * t9174 + 9 + (646 * t9174 - 408 + 1615 * t9175) * t9175) * ((1 + t9174) ** (0.5e1 / 0.2e1)) * np.sqrt(0.78e2) * np.exp((-1*1j) * (6 * phi1 - phi2)) * ((1 - t9174) ** (0.7e1 / 0.2e1))

        if Bindx == 1426:
            t9186 = np.sin(phi)
            t9184 = t9186 ** 2
            t9178 = np.cos(phi)
            t9179 = t9178 ** 2
            t9181 = t9179 ** 2
            t9180 = t9178 * t9179
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.26e2) * t9184 ** 2 * (627 * t9179 - 3213 * t9181 - 19 + (4012 + 4845 * t9180) * t9180 + (-5814 * t9181 - 438) * t9178)

        if Bindx == 1427:
            t9187 = np.cos(phi)
            t9188 = t9187 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * (-374 * t9187 - 69 + (5814 * t9187 + 1224 + 4845 * t9188) * t9188) * ((1 + t9187) ** (0.3e1 / 0.2e1)) * np.exp((-3*1j) * (2 * phi1 - phi2)) * ((1 - t9187) ** (0.9e1 / 0.2e1))

        if Bindx == 1428:
            t9192 = np.cos(phi)
            t9193 = t9192 ** 2
            t9194 = t9192 * t9193
            t9197 = t9194 ** 2
            t9195 = t9193 ** 2
            t9191 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.2e1) * t9191 ** 2 * (2324 * t9193 - 4564 * t9194 + 1428 * t9197 - 83 + (-6594 + 4845 * t9195) * t9195 + (13804 * t9195 - 11628 * t9197 + 468) * t9192)

        if Bindx == 1429:
            t9200 = np.cos(phi)
            t9201 = t9200 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (238 * t9200 - 1 + (1938 * t9200 + 1224 + 969 * t9201) * t9201) * np.sqrt((1 + t9200)) * np.sqrt(0.5e1) * np.exp((-1*1j) * (6 * phi1 - 5 * phi2)) * ((1 - t9200) ** (0.11e2 / 0.2e1))

        if Bindx == 1430:
            t9204 = np.cos(phi)
            t9205 = t9204 ** 2
            t9207 = t9205 ** 2
            t9211 = t9207 ** 2
            t9206 = t9204 * t9205
            t9209 = t9206 ** 2
            t9208 = t9204 * t9207
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-6*1j) * (phi1 - phi2)) * (-4503 * t9205 - 6168 * t9206 + 22442 * t9207 - 34902 * t9209 + 12393 * t9211 + 237 + (-1932 + 4845 * t9208) * t9208 + (23528 * t9209 - 17442 * t9211 + 1502) * t9204)

        if Bindx == 1431:
            t9214 = np.cos(phi)
            t9215 = t9214 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * (513 * t9215 + 43 + (285 * t9215 + 279) * t9214) * np.sqrt((1 + t9214)) * np.sqrt(0.17e2) * np.exp((-1*1j) * (6 * phi1 - 7 * phi2)) * ((1 - t9214) ** (0.13e2 / 0.2e1))

        if Bindx == 1432:
            t9218 = np.cos(phi)
            t9219 = t9218 ** 2
            t9220 = t9218 * t9219
            t9223 = t9220 ** 2
            t9221 = t9219 ** 2
            t9217 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.102e3) * t9217 ** 2 * (-124 * t9219 + 520 * t9220 + 772 * t9223 + 31 + (-390 + 95 * t9221) * t9221 + (-376 * t9221 - 456 * t9223 - 72) * t9218)

        if Bindx == 1433:
            t9226 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * (3 + 5 * t9226) * ((1 + t9226) ** (0.3e1 / 0.2e1)) * np.sqrt(0.969e3) * np.exp((-3*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t9226) ** (0.15e2 / 0.2e1))

        if Bindx == 1434:
            t9228 = np.cos(phi)
            t9232 = -1 + t9228
            t9229 = t9232 ** 2
            t9230 = t9229 ** 2
            t9227 = 1 + t9228
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.4845e4) * t9230 ** 2 * t9227 ** 2

        if Bindx == 1435:
            t9233 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((-5*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.969e3) * ((1 - t9233) ** (0.5e1 / 0.2e1)) * ((1 + t9233) ** (0.15e2 / 0.2e1))

        if Bindx == 1436:
            t9235 = np.cos(phi)
            t9240 = 1 + t9235
            t9236 = t9240 ** 2
            t9237 = t9240 * t9236
            t9234 = -1 + t9235
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-1*1j) * (5 * phi1 + 9 * phi2)) * np.sqrt(0.4845e4) * t9234 ** 2 * t9240 * t9237 ** 2 * (2 * t9235 - 1)

        if Bindx == 1437:
            t9241 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (5 * phi1 + 8 * phi2)) * np.sqrt(0.510e3) * ((1 - t9241) ** (0.3e1 / 0.2e1)) * ((1 + t9241) ** (0.13e2 / 0.2e1)) * (4 + (-19 + 19 * t9241) * t9241)

        if Bindx == 1438:
            t9243 = np.cos(phi)
            t9244 = t9243 ** 2
            t9245 = t9243 * t9244
            t9248 = t9245 ** 2
            t9246 = t9244 ** 2
            t9242 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((-1*1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.85e2) * t9242 ** 2 * (119 * t9244 - 91 * t9245 + 357 * t9248 - 7 + (-455 + 114 * t9246) * t9246 + (-217 * t9246 + 399 * t9248 + 37) * t9243)

        if Bindx == 1439:
            t9251 = np.cos(phi)
            t9252 = t9251 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.5e1) * np.sqrt((1 - t9251)) * ((1 + t9251) ** (0.11e2 / 0.2e1)) * (-238 * t9251 - 1 + (-1938 * t9251 + 1224 + 969 * t9252) * t9252)

        if Bindx == 1440:
            t9255 = np.cos(phi)
            t9256 = t9255 ** 2
            t9258 = t9256 ** 2
            t9262 = t9258 ** 2
            t9257 = t9255 * t9256
            t9260 = t9257 ** 2
            t9259 = t9255 * t9258
            tfunc[..., c] = (0.21e2 / 0.128e3) * np.exp((-5*1j) * (phi1 + phi2)) * (-930 * t9256 - 1660 * t9257 + 3710 * t9258 - 3920 * t9260 - 765 * t9262 + 31 + (6594 + 1938 * t9259) * t9259 + (-9860 * t9260 + 4845 * t9262 + 145) * t9255)

        if Bindx == 1441:
            t9265 = np.cos(phi)
            t9266 = t9265 ** 2
            t9268 = t9266 ** 2
            t9267 = t9265 * t9266
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * np.exp((-1*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.10e2) * ((1 + t9265) ** (0.9e1 / 0.2e1)) * (-15 * t9266 + 3060 * t9268 - 10 + (-1190 + 969 * t9267) * t9267 + (-2907 * t9268 + 93) * t9265) * ((1 - t9265) ** (-0.1e1 / 0.2e1))

        if Bindx == 1442:
            t9272 = np.cos(phi)
            t9273 = t9272 ** 2
            t9274 = t9272 * t9273
            t9277 = t9274 ** 2
            t9275 = t9273 ** 2
            t9271 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.5e1) * t9271 ** 2 * (-37 * t9273 + 1525 * t9274 - 2091 * t9277 + 1 + (525 + 1938 * t9275) * t9275 + (-3961 * t9275 + 2907 * t9277 - 135) * t9272)

        if Bindx == 1443:
            t9280 = np.cos(phi)
            t9281 = t9280 ** 2
            t9283 = t9281 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (238 * t9281 - 969 * t9283 - 5 + (-102 * t9281 + 969 * t9283 - 19) * t9280) * ((1 + t9280) ** (0.7e1 / 0.2e1)) * np.sqrt(0.130e3) * np.exp((-1*1j) * (5 * phi1 + 2 * phi2)) * ((1 - t9280) ** (0.3e1 / 0.2e1))

        if Bindx == 1444:
            t9293 = np.sin(phi)
            t9291 = t9293 ** 2
            t9285 = np.cos(phi)
            t9286 = t9285 ** 2
            t9288 = t9286 ** 2
            t9287 = t9285 * t9286
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-1*1j) * (5 * phi1 + phi2)) * np.sqrt(0.390e3) * t9291 ** 2 * (120 * t9286 - 595 * t9288 - 3 + (-170 + 646 * t9287) * t9287 + (323 * t9288 + 15) * t9285)

        if Bindx == 1445:
            t9294 = np.cos(phi)
            t9295 = t9294 ** 2
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * (15 + (-170 + 323 * t9295) * t9295) * t9294 * ((1 + t9294) ** (0.5e1 / 0.2e1)) * np.sqrt(0.429e3) * np.exp((-5*1j) * phi1) * ((1 - t9294) ** (0.5e1 / 0.2e1))

        if Bindx == 1446:
            t9305 = np.sin(phi)
            t9303 = t9305 ** 2
            t9297 = np.cos(phi)
            t9298 = t9297 ** 2
            t9300 = t9298 ** 2
            t9299 = t9297 * t9298
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-1*1j) * (5 * phi1 - phi2)) * np.sqrt(0.390e3) * t9303 ** 2 * (120 * t9298 - 595 * t9300 - 3 + (170 + 646 * t9299) * t9299 + (-323 * t9300 - 15) * t9297)

        if Bindx == 1447:
            t9306 = np.cos(phi)
            t9307 = t9306 ** 2
            t9311 = 969 * t9307 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (-238 * t9307 + t9311 + 5 + (-102 * t9307 + t9311 - 19) * t9306) * ((1 + t9306) ** (0.3e1 / 0.2e1)) * np.sqrt(0.130e3) * np.exp((-1*1j) * (5 * phi1 - 2 * phi2)) * ((1 - t9306) ** (0.7e1 / 0.2e1))

        if Bindx == 1448:
            t9313 = np.cos(phi)
            t9314 = t9313 ** 2
            t9315 = t9313 * t9314
            t9318 = t9315 ** 2
            t9316 = t9314 ** 2
            t9312 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.5e1) * t9312 ** 2 * (-37 * t9314 - 1525 * t9315 - 2091 * t9318 + 1 + (525 + 1938 * t9316) * t9316 + (3961 * t9316 - 2907 * t9318 + 135) * t9313)

        if Bindx == 1449:
            t9321 = np.cos(phi)
            t9322 = t9321 ** 2
            t9324 = t9322 ** 2
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * (68 * t9322 + 1938 * t9324 - 10 + (1122 * t9322 + 969 * t9324 - 83) * t9321) * np.sqrt((1 + t9321)) * np.sqrt(0.10e2) * np.exp((-1*1j) * (5 * phi1 - 4 * phi2)) * ((1 - t9321) ** (0.9e1 / 0.2e1))

        if Bindx == 1450:
            t9326 = np.cos(phi)
            t9327 = t9326 ** 2
            t9329 = t9327 ** 2
            t9333 = t9329 ** 2
            t9328 = t9326 * t9327
            t9331 = t9328 ** 2
            t9330 = t9326 * t9329
            tfunc[..., c] = (0.21e2 / 0.128e3) * np.exp((-5*1j) * (phi1 - phi2)) * (-930 * t9327 + 1660 * t9328 + 3710 * t9329 - 3920 * t9331 - 765 * t9333 + 31 + (-6594 + 1938 * t9330) * t9330 + (9860 * t9331 - 4845 * t9333 - 145) * t9326)

        if Bindx == 1451:
            t9336 = np.cos(phi)
            t9337 = t9336 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (238 * t9336 - 1 + (1938 * t9336 + 1224 + 969 * t9337) * t9337) * np.sqrt((1 + t9336)) * np.sqrt(0.5e1) * np.exp((-1*1j) * (5 * phi1 - 6 * phi2)) * ((1 - t9336) ** (0.11e2 / 0.2e1))

        if Bindx == 1452:
            t9341 = np.cos(phi)
            t9342 = t9341 ** 2
            t9343 = t9341 * t9342
            t9346 = t9343 ** 2
            t9344 = t9342 ** 2
            t9340 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((-1*1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.85e2) * t9340 ** 2 * (119 * t9342 + 91 * t9343 + 357 * t9346 - 7 + (-455 + 114 * t9344) * t9344 + (217 * t9344 - 399 * t9346 - 37) * t9341)

        if Bindx == 1453:
            t9349 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * (4 + (19 + 19 * t9349) * t9349) * ((1 + t9349) ** (0.3e1 / 0.2e1)) * np.sqrt(0.510e3) * np.exp((-1*1j) * (5 * phi1 - 8 * phi2)) * ((1 - t9349) ** (0.13e2 / 0.2e1))

        if Bindx == 1454:
            t9358 = np.sin(phi)
            t9356 = t9358 ** 2
            t9350 = np.cos(phi)
            t9351 = t9350 ** 2
            t9353 = t9351 ** 2
            t9352 = t9350 * t9351
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-1*1j) * (5 * phi1 - 9 * phi2)) * np.sqrt(0.4845e4) * t9356 ** 2 * (15 * t9353 - 1 + (-10 + 2 * t9352) * t9352 + (-9 * t9353 + 3) * t9350)

        if Bindx == 1455:
            t9359 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((-5*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.969e3) * ((1 - t9359) ** (0.15e2 / 0.2e1)) * ((1 + t9359) ** (0.5e1 / 0.2e1))

        if Bindx == 1456:
            t9360 = np.cos(phi)
            t9368 = -1 + t9360
            t9367 = 1 + t9360
            t9363 = t9367 ** 2
            t9364 = t9367 * t9363
            t9361 = t9368 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-2*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.9690e4) * t9368 * t9361 * t9367 * t9364 ** 2

        if Bindx == 1457:
            t9369 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (4 * phi1 + 9 * phi2)) * np.sqrt(0.1938e4) * ((1 - t9369) ** (0.5e1 / 0.2e1)) * ((1 + t9369) ** (0.13e2 / 0.2e1)) * (-2 + 5 * t9369)

        if Bindx == 1458:
            t9378 = np.sin(phi)
            t9376 = t9378 ** 2
            t9370 = np.cos(phi)
            t9371 = t9370 ** 2
            t9373 = t9371 ** 2
            t9372 = t9370 * t9371
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-4*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.51e2) * t9376 ** 2 * (-143 * t9371 + 277 * t9373 + 11 + (-32 + 95 * t9372) * t9372 + (304 * t9373 - 32) * t9370)

        if Bindx == 1459:
            t9379 = np.cos(phi)
            t9380 = t9379 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (4 * phi1 + 7 * phi2)) * np.sqrt(0.34e2) * ((1 - t9379) ** (0.3e1 / 0.2e1)) * ((1 + t9379) ** (0.11e2 / 0.2e1)) * (-342 * t9380 - 2 + (285 * t9380 + 99) * t9379)

        if Bindx == 1460:
            t9383 = np.cos(phi)
            t9384 = t9383 ** 2
            t9385 = t9383 * t9384
            t9388 = t9385 ** 2
            t9386 = t9384 ** 2
            t9382 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * t9382 ** 2 * (2324 * t9384 + 4564 * t9385 + 1428 * t9388 - 83 + (-6594 + 4845 * t9386) * t9386 + (-13804 * t9386 + 11628 * t9388 - 468) * t9383)

        if Bindx == 1461:
            t9391 = np.cos(phi)
            t9392 = t9391 ** 2
            t9394 = t9392 ** 2
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * np.exp((-1*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t9391)) * ((1 + t9391) ** (0.9e1 / 0.2e1)) * (-68 * t9392 - 1938 * t9394 + 10 + (1122 * t9392 + 969 * t9394 - 83) * t9391)

        if Bindx == 1462:
            t9396 = np.cos(phi)
            t9397 = t9396 ** 2
            t9399 = t9397 ** 2
            t9403 = t9399 ** 2
            t9398 = t9396 * t9397
            t9401 = t9398 ** 2
            t9400 = t9396 * t9399
            tfunc[..., c] = (0.21e2 / 0.128e3) * np.exp((-4*1j) * (phi1 + phi2)) * (-39 * t9397 - 3856 * t9398 - 574 * t9399 + 4858 * t9401 - 9027 * t9403 + 1 + (13272 + 4845 * t9400) * t9400 + (-17408 * t9401 + 7752 * t9403 + 304) * t9396)

        if Bindx == 1463:
            t9406 = np.cos(phi)
            t9407 = t9406 ** 2
            t9408 = t9406 * t9407
            t9411 = t9408 ** 2
            t9409 = t9407 ** 2
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * np.exp((-1*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * ((1 + t9406) ** (0.7e1 / 0.2e1)) * (1050 * t9407 - 2905 * t9408 - 1190 * t9409 - 13566 * t9411 - 22 + (11781 * t9409 + 4845 * t9411 + 7) * t9406) * ((1 - t9406) ** (-0.1e1 / 0.2e1))

        if Bindx == 1464:
            t9414 = np.cos(phi)
            t9415 = t9414 ** 2
            t9416 = t9414 * t9415
            t9419 = t9416 ** 2
            t9417 = t9415 ** 2
            t9413 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((-2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.13e2) * t9413 ** 2 * (-572 * t9415 + 1660 * t9416 - 7548 * t9419 + 13 + (3710 + 4845 * t9417) * t9417 + (-4964 * t9417 + 3876 * t9419 - 124) * t9414)

        if Bindx == 1465:
            t9422 = np.cos(phi)
            t9423 = t9422 ** 2
            t9425 = t9423 ** 2
            t9424 = t9422 * t9423
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * (135 * t9423 - 1020 * t9425 - 2 + (510 + 1615 * t9424) * t9424 + (-969 * t9425 - 45) * t9422) * ((1 + t9422) ** (0.5e1 / 0.2e1)) * np.sqrt(0.39e2) * np.exp((-1*1j) * (4 * phi1 + phi2)) * ((1 - t9422) ** (0.3e1 / 0.2e1))

        if Bindx == 1466:
            t9434 = np.sin(phi)
            t9432 = t9434 ** 2
            t9428 = np.cos(phi)
            t9429 = t9428 ** 2
            t9430 = t9429 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-4*1j) * phi1) * np.sqrt(0.4290e4) * t9432 ** 2 * (-255 * t9430 - 1 + (323 * t9430 + 45) * t9429)

        if Bindx == 1467:
            t9435 = np.cos(phi)
            t9436 = t9435 ** 2
            t9438 = t9436 ** 2
            t9437 = t9435 * t9436
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * (135 * t9436 - 1020 * t9438 - 2 + (-510 + 1615 * t9437) * t9437 + (969 * t9438 + 45) * t9435) * ((1 + t9435) ** (0.3e1 / 0.2e1)) * np.sqrt(0.39e2) * np.exp((-1*1j) * (4 * phi1 - phi2)) * ((1 - t9435) ** (0.5e1 / 0.2e1))

        if Bindx == 1468:
            t9442 = np.cos(phi)
            t9443 = t9442 ** 2
            t9444 = t9442 * t9443
            t9447 = t9444 ** 2
            t9445 = t9443 ** 2
            t9441 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((-2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.13e2) * t9441 ** 2 * (-572 * t9443 - 1660 * t9444 - 7548 * t9447 + 13 + (3710 + 4845 * t9445) * t9445 + (4964 * t9445 - 3876 * t9447 + 124) * t9442)

        if Bindx == 1469:
            t9450 = np.cos(phi)
            t9451 = t9450 ** 2
            t9453 = t9451 ** 2
            t9452 = t9450 * t9451
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * (-1035 * t9451 + 3060 * t9453 + 22 + (-1870 + 4845 * t9452) * t9452 + (8721 * t9453 - 15) * t9450) * np.sqrt((1 + t9450)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (4 * phi1 - 3 * phi2)) * ((1 - t9450) ** (0.7e1 / 0.2e1))

        if Bindx == 1470:
            t9456 = np.cos(phi)
            t9457 = t9456 ** 2
            t9459 = t9457 ** 2
            t9463 = t9459 ** 2
            t9458 = t9456 * t9457
            t9461 = t9458 ** 2
            t9460 = t9456 * t9459
            tfunc[..., c] = (0.21e2 / 0.128e3) * np.exp((-4*1j) * (phi1 - phi2)) * (-39 * t9457 + 3856 * t9458 - 574 * t9459 + 4858 * t9461 - 9027 * t9463 + 1 + (-13272 + 4845 * t9460) * t9460 + (17408 * t9461 - 7752 * t9463 - 304) * t9456)

        if Bindx == 1471:
            t9466 = np.cos(phi)
            t9467 = t9466 ** 2
            t9469 = t9467 ** 2
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * (68 * t9467 + 1938 * t9469 - 10 + (1122 * t9467 + 969 * t9469 - 83) * t9466) * np.sqrt((1 + t9466)) * np.sqrt(0.10e2) * np.exp((-1*1j) * (4 * phi1 - 5 * phi2)) * ((1 - t9466) ** (0.9e1 / 0.2e1))

        if Bindx == 1472:
            t9472 = np.cos(phi)
            t9473 = t9472 ** 2
            t9474 = t9472 * t9473
            t9477 = t9474 ** 2
            t9475 = t9473 ** 2
            t9471 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.2e1) * t9471 ** 2 * (2324 * t9473 - 4564 * t9474 + 1428 * t9477 - 83 + (-6594 + 4845 * t9475) * t9475 + (13804 * t9475 - 11628 * t9477 + 468) * t9472)

        if Bindx == 1473:
            t9480 = np.cos(phi)
            t9481 = t9480 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (342 * t9481 + 2 + (285 * t9481 + 99) * t9480) * ((1 + t9480) ** (0.3e1 / 0.2e1)) * np.sqrt(0.34e2) * np.exp((-1*1j) * (4 * phi1 - 7 * phi2)) * ((1 - t9480) ** (0.11e2 / 0.2e1))

        if Bindx == 1474:
            t9491 = np.sin(phi)
            t9489 = t9491 ** 2
            t9483 = np.cos(phi)
            t9484 = t9483 ** 2
            t9486 = t9484 ** 2
            t9485 = t9483 * t9484
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-4*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.51e2) * t9489 ** 2 * (-143 * t9484 + 277 * t9486 + 11 + (32 + 95 * t9485) * t9485 + (-304 * t9486 + 32) * t9483)

        if Bindx == 1475:
            t9492 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * (2 + 5 * t9492) * ((1 + t9492) ** (0.5e1 / 0.2e1)) * np.sqrt(0.1938e4) * np.exp((-1*1j) * (4 * phi1 - 9 * phi2)) * ((1 - t9492) ** (0.13e2 / 0.2e1))

        if Bindx == 1476:
            t9493 = np.cos(phi)
            t9501 = -1 + t9493
            t9500 = 1 + t9493
            t9498 = t9500 ** 2
            t9494 = t9501 ** 2
            t9495 = t9501 * t9494
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-2*1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.9690e4) * t9501 * t9495 ** 2 * t9500 * t9498

        if Bindx == 1477:
            t9502 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (3 * phi1 + 10 * phi2)) * np.sqrt(0.4845e4) * ((1 - t9502) ** (0.7e1 / 0.2e1)) * ((1 + t9502) ** (0.13e2 / 0.2e1))

        if Bindx == 1478:
            t9503 = np.cos(phi)
            t9510 = -1 + t9503
            t9509 = 1 + t9503
            t9506 = t9509 ** 2
            t9507 = t9509 * t9506
            t9504 = t9510 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-3*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.969e3) * t9510 * t9504 * t9507 ** 2 * (-3 + 10 * t9503)

        if Bindx == 1479:
            t9511 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (3 * phi1 + 8 * phi2)) * np.sqrt(0.102e3) * ((1 - t9511) ** (0.5e1 / 0.2e1)) * ((1 + t9511) ** (0.11e2 / 0.2e1)) * (4 + (-57 + 95 * t9511) * t9511)

        if Bindx == 1480:
            t9520 = np.sin(phi)
            t9518 = t9520 ** 2
            t9512 = np.cos(phi)
            t9513 = t9512 ** 2
            t9515 = t9513 ** 2
            t9514 = t9512 * t9513
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-1*1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.17e2) * t9518 ** 2 * (-264 * t9513 + 243 * t9515 + 11 + (-742 + 570 * t9514) * t9514 + (1197 * t9515 + 105) * t9512)

        if Bindx == 1481:
            t9521 = np.cos(phi)
            t9522 = t9521 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((-3*1j) * (phi1 + 2 * phi2)) * ((1 - t9521) ** (0.3e1 / 0.2e1)) * ((1 + t9521) ** (0.9e1 / 0.2e1)) * (374 * t9521 - 69 + (-5814 * t9521 + 1224 + 4845 * t9522) * t9522)

        if Bindx == 1482:
            t9526 = np.cos(phi)
            t9527 = t9526 ** 2
            t9528 = t9526 * t9527
            t9531 = t9528 ** 2
            t9529 = t9527 ** 2
            t9525 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.5e1) * t9525 ** 2 * (-37 * t9527 + 1525 * t9528 - 2091 * t9531 + 1 + (525 + 1938 * t9529) * t9529 + (-3961 * t9529 + 2907 * t9531 - 135) * t9526)

        if Bindx == 1483:
            t9534 = np.cos(phi)
            t9535 = t9534 ** 2
            t9537 = t9535 ** 2
            t9536 = t9534 * t9535
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * np.exp((-1*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t9534)) * ((1 + t9534) ** (0.7e1 / 0.2e1)) * (-1035 * t9535 + 3060 * t9537 + 22 + (1870 + 4845 * t9536) * t9536 + (-8721 * t9537 + 15) * t9534)

        if Bindx == 1484:
            t9540 = np.cos(phi)
            t9541 = t9540 ** 2
            t9543 = t9541 ** 2
            t9547 = t9543 ** 2
            t9542 = t9540 * t9541
            t9545 = t9542 ** 2
            t9544 = t9540 * t9543
            tfunc[..., c] = (0.21e2 / 0.128e3) * np.exp((-3*1j) * (phi1 + phi2)) * (966 * t9541 - 3612 * t9542 - 7322 * t9543 + 20160 * t9545 - 23409 * t9547 - 21 + (13818 + 9690 * t9544) * t9544 + (-19108 * t9545 + 8721 * t9547 + 245) * t9540)

        if Bindx == 1485:
            t9550 = np.cos(phi)
            t9551 = t9550 ** 2
            t9552 = t9550 * t9551
            t9555 = t9552 ** 2
            t9553 = t9551 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.26e2) * ((1 + t9550) ** (0.5e1 / 0.2e1)) * (616 * t9551 + 140 * t9552 + 5712 * t9555 - 7 + (-4830 + 4845 * t9553) * t9553 + (5236 * t9553 - 11628 * t9555 - 84) * t9550) * ((1 - t9550) ** (-0.1e1 / 0.2e1))

        if Bindx == 1486:
            t9559 = np.cos(phi)
            t9560 = t9559 ** 2
            t9561 = t9559 * t9560
            t9564 = t9561 ** 2
            t9562 = t9560 ** 2
            t9558 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.78e2) * t9558 ** 2 * (-343 * t9560 + 315 * t9561 - 5117 * t9564 + 7 + (2415 + 3230 * t9562) * t9562 + (-1071 * t9562 + 969 * t9564 - 21) * t9559)

        if Bindx == 1487:
            t9567 = np.cos(phi)
            t9568 = t9567 ** 2
            t9569 = t9568 ** 2
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * (-357 * t9569 - 7 + (323 * t9569 + 105) * t9568) * t9567 * ((1 + t9567) ** (0.3e1 / 0.2e1)) * np.sqrt(0.2145e4) * np.exp((-3*1j) * phi1) * ((1 - t9567) ** (0.3e1 / 0.2e1))

        if Bindx == 1488:
            t9572 = np.cos(phi)
            t9573 = t9572 ** 2
            t9574 = t9572 * t9573
            t9577 = t9574 ** 2
            t9575 = t9573 ** 2
            t9571 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.78e2) * t9571 ** 2 * (-343 * t9573 - 315 * t9574 - 5117 * t9577 + 7 + (2415 + 3230 * t9575) * t9575 + (1071 * t9575 - 969 * t9577 + 21) * t9572)

        if Bindx == 1489:
            t9580 = np.cos(phi)
            t9581 = t9580 ** 2
            t9582 = t9580 * t9581
            t9585 = t9582 ** 2
            t9583 = t9581 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * (525 * t9581 - 665 * t9582 - 4165 * t9583 + 6783 * t9585 - 7 + (-1071 * t9583 + 4845 * t9585 + 91) * t9580) * np.sqrt((1 + t9580)) * np.sqrt(0.26e2) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t9580) ** (0.5e1 / 0.2e1))

        if Bindx == 1490:
            t9587 = np.cos(phi)
            t9588 = t9587 ** 2
            t9590 = t9588 ** 2
            t9594 = t9590 ** 2
            t9589 = t9587 * t9588
            t9592 = t9589 ** 2
            t9591 = t9587 * t9590
            tfunc[..., c] = (0.21e2 / 0.128e3) * np.exp((-3*1j) * (phi1 - phi2)) * (966 * t9588 + 3612 * t9589 - 7322 * t9590 + 20160 * t9592 - 23409 * t9594 - 21 + (-13818 + 9690 * t9591) * t9591 + (19108 * t9592 - 8721 * t9594 - 245) * t9587)

        if Bindx == 1491:
            t9597 = np.cos(phi)
            t9598 = t9597 ** 2
            t9600 = t9598 ** 2
            t9599 = t9597 * t9598
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * (-1035 * t9598 + 3060 * t9600 + 22 + (-1870 + 4845 * t9599) * t9599 + (8721 * t9600 - 15) * t9597) * np.sqrt((1 + t9597)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (3 * phi1 - 4 * phi2)) * ((1 - t9597) ** (0.7e1 / 0.2e1))

        if Bindx == 1492:
            t9604 = np.cos(phi)
            t9605 = t9604 ** 2
            t9606 = t9604 * t9605
            t9609 = t9606 ** 2
            t9607 = t9605 ** 2
            t9603 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.5e1) * t9603 ** 2 * (-37 * t9605 - 1525 * t9606 - 2091 * t9609 + 1 + (525 + 1938 * t9607) * t9607 + (3961 * t9607 - 2907 * t9609 + 135) * t9604)

        if Bindx == 1493:
            t9612 = np.cos(phi)
            t9613 = t9612 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * (-374 * t9612 - 69 + (5814 * t9612 + 1224 + 4845 * t9613) * t9613) * ((1 + t9612) ** (0.3e1 / 0.2e1)) * np.exp((-3*1j) * (phi1 - 2 * phi2)) * ((1 - t9612) ** (0.9e1 / 0.2e1))

        if Bindx == 1494:
            t9624 = np.sin(phi)
            t9622 = t9624 ** 2
            t9616 = np.cos(phi)
            t9617 = t9616 ** 2
            t9619 = t9617 ** 2
            t9618 = t9616 * t9617
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-1*1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.17e2) * t9622 ** 2 * (-264 * t9617 + 243 * t9619 + 11 + (742 + 570 * t9618) * t9618 + (-1197 * t9619 - 105) * t9616)

        if Bindx == 1495:
            t9625 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (4 + (57 + 95 * t9625) * t9625) * ((1 + t9625) ** (0.5e1 / 0.2e1)) * np.sqrt(0.102e3) * np.exp((-1*1j) * (3 * phi1 - 8 * phi2)) * ((1 - t9625) ** (0.11e2 / 0.2e1))

        if Bindx == 1496:
            t9633 = np.sin(phi)
            t9630 = t9633 ** 2
            t9631 = t9633 * t9630
            t9626 = np.cos(phi)
            t9627 = t9626 ** 2
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((-3*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.969e3) * t9631 ** 2 * (-t9626 - 3 + (-27 * t9626 + 21 + 10 * t9627) * t9627)

        if Bindx == 1497:
            t9634 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (3 * phi1 - 10 * phi2)) * np.sqrt(0.4845e4) * ((1 - t9634) ** (0.13e2 / 0.2e1)) * ((1 + t9634) ** (0.7e1 / 0.2e1))

        if Bindx == 1498:
            t9635 = np.cos(phi)
            t9642 = -1 + t9635
            t9641 = 1 + t9635
            t9638 = t9641 ** 2
            t9639 = t9641 * t9638
            t9636 = t9642 ** 2
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.125970e6) * t9636 ** 2 * t9639 ** 2

        if Bindx == 1499:
            t9643 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (2 * phi1 + 9 * phi2)) * np.sqrt(0.25194e5) * ((1 - t9643) ** (0.7e1 / 0.2e1)) * ((1 + t9643) ** (0.11e2 / 0.2e1)) * (-1 + 5 * t9643)

        if Bindx == 1500:
            t9651 = np.sin(phi)
            t9648 = t9651 ** 2
            t9649 = t9651 * t9648
            t9644 = np.cos(phi)
            t9645 = t9644 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-2*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.663e3) * t9649 ** 2 * (-40 * t9644 - 1 + (152 * t9644 + 18 + 95 * t9645) * t9645)

        if Bindx == 1501:
            t9652 = np.cos(phi)
            t9653 = t9652 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (2 * phi1 + 7 * phi2)) * np.sqrt(0.442e3) * ((1 - t9652) ** (0.5e1 / 0.2e1)) * ((1 + t9652) ** (0.9e1 / 0.2e1)) * (-171 * t9653 + 7 + (285 * t9653 - 9) * t9652)

        if Bindx == 1502:
            t9663 = np.sin(phi)
            t9661 = t9663 ** 2
            t9655 = np.cos(phi)
            t9656 = t9655 ** 2
            t9658 = t9656 ** 2
            t9657 = t9655 * t9656
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.26e2) * t9661 ** 2 * (627 * t9656 - 3213 * t9658 - 19 + (-4012 + 4845 * t9657) * t9657 + (5814 * t9658 + 438) * t9655)

        if Bindx == 1503:
            t9664 = np.cos(phi)
            t9665 = t9664 ** 2
            t9667 = t9665 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.130e3) * ((1 - t9664) ** (0.3e1 / 0.2e1)) * ((1 + t9664) ** (0.7e1 / 0.2e1)) * (238 * t9665 - 969 * t9667 - 5 + (-102 * t9665 + 969 * t9667 - 19) * t9664)

        if Bindx == 1504:
            t9670 = np.cos(phi)
            t9671 = t9670 ** 2
            t9672 = t9670 * t9671
            t9675 = t9672 ** 2
            t9673 = t9671 ** 2
            t9669 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((-2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.13e2) * t9669 ** 2 * (-572 * t9671 + 1660 * t9672 - 7548 * t9675 + 13 + (3710 + 4845 * t9673) * t9673 + (-4964 * t9673 + 3876 * t9675 - 124) * t9670)

        if Bindx == 1505:
            t9678 = np.cos(phi)
            t9679 = t9678 ** 2
            t9680 = t9678 * t9679
            t9683 = t9680 ** 2
            t9681 = t9679 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.26e2) * np.sqrt((1 - t9678)) * ((1 + t9678) ** (0.5e1 / 0.2e1)) * (-525 * t9679 - 665 * t9680 + 4165 * t9681 - 6783 * t9683 + 7 + (-1071 * t9681 + 4845 * t9683 + 91) * t9678)

        if Bindx == 1506:
            t9685 = np.cos(phi)
            t9686 = t9685 ** 2
            t9688 = t9686 ** 2
            t9692 = t9688 ** 2
            t9687 = t9685 * t9686
            t9690 = t9687 ** 2
            t9689 = t9685 * t9688
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-2*1j) * (phi1 + phi2)) * (6069 * t9686 - 8008 * t9687 - 48958 * t9688 + 137410 * t9690 - 157131 * t9692 - 119 + (33852 + 62985 * t9689) * t9689 + (-51272 * t9690 + 25194 * t9692 + 490) * t9685)

        if Bindx == 1507:
            t9695 = np.cos(phi)
            t9696 = t9695 ** 2
            t9698 = t9696 ** 2
            t9702 = t9698 ** 2
            t9697 = t9695 * t9696
            t9700 = t9697 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.3e1) * ((1 + t9695) ** (0.3e1 / 0.2e1)) * (1092 * t9696 + 4732 * t9697 - 13650 * t9698 + 43316 * t9700 - 37791 * t9702 - 7 + (-10374 * t9698 - 7956 * t9700 + 20995 * t9702 - 357) * t9695) * ((1 - t9695) ** (-0.1e1 / 0.2e1))

        if Bindx == 1508:
            t9705 = np.cos(phi)
            t9706 = t9705 ** 2
            t9707 = t9706 ** 2
            t9704 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-2*1j) * phi1) * np.sqrt(0.330e3) * t9704 ** 2 * (-364 * t9706 + 7 + (-6188 * t9706 + 2730 + 4199 * t9707) * t9707)

        if Bindx == 1509:
            t9710 = np.cos(phi)
            t9711 = t9710 ** 2
            t9712 = t9710 * t9711
            t9715 = t9712 ** 2
            t9713 = t9711 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (-728 * t9711 + 5460 * t9712 - 24752 * t9715 + 7 + (8190 + 20995 * t9713) * t9713 + (-18564 * t9713 + 16796 * t9715 - 364) * t9710) * np.sqrt((1 + t9710)) * np.sqrt(0.3e1) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t9710) ** (0.3e1 / 0.2e1))

        if Bindx == 1510:
            t9718 = np.cos(phi)
            t9719 = t9718 ** 2
            t9721 = t9719 ** 2
            t9725 = t9721 ** 2
            t9720 = t9718 * t9719
            t9723 = t9720 ** 2
            t9722 = t9718 * t9721
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-2*1j) * (phi1 - phi2)) * (6069 * t9719 + 8008 * t9720 - 48958 * t9721 + 137410 * t9723 - 157131 * t9725 - 119 + (-33852 + 62985 * t9722) * t9722 + (51272 * t9723 - 25194 * t9725 - 490) * t9718)

        if Bindx == 1511:
            t9728 = np.cos(phi)
            t9729 = t9728 ** 2
            t9730 = t9728 * t9729
            t9733 = t9730 ** 2
            t9731 = t9729 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * (525 * t9729 - 665 * t9730 - 4165 * t9731 + 6783 * t9733 - 7 + (-1071 * t9731 + 4845 * t9733 + 91) * t9728) * np.sqrt((1 + t9728)) * np.sqrt(0.26e2) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t9728) ** (0.5e1 / 0.2e1))

        if Bindx == 1512:
            t9736 = np.cos(phi)
            t9737 = t9736 ** 2
            t9738 = t9736 * t9737
            t9741 = t9738 ** 2
            t9739 = t9737 ** 2
            t9735 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((-2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.13e2) * t9735 ** 2 * (-572 * t9737 - 1660 * t9738 - 7548 * t9741 + 13 + (3710 + 4845 * t9739) * t9739 + (4964 * t9739 - 3876 * t9741 + 124) * t9736)

        if Bindx == 1513:
            t9744 = np.cos(phi)
            t9745 = t9744 ** 2
            t9749 = 969 * t9745 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (-238 * t9745 + t9749 + 5 + (-102 * t9745 + t9749 - 19) * t9744) * ((1 + t9744) ** (0.3e1 / 0.2e1)) * np.sqrt(0.130e3) * np.exp((-1*1j) * (2 * phi1 - 5 * phi2)) * ((1 - t9744) ** (0.7e1 / 0.2e1))

        if Bindx == 1514:
            t9758 = np.sin(phi)
            t9756 = t9758 ** 2
            t9750 = np.cos(phi)
            t9751 = t9750 ** 2
            t9753 = t9751 ** 2
            t9752 = t9750 * t9751
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.26e2) * t9756 ** 2 * (627 * t9751 - 3213 * t9753 - 19 + (4012 + 4845 * t9752) * t9752 + (-5814 * t9753 - 438) * t9750)

        if Bindx == 1515:
            t9759 = np.cos(phi)
            t9760 = t9759 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * (171 * t9760 - 7 + (285 * t9760 - 9) * t9759) * ((1 + t9759) ** (0.5e1 / 0.2e1)) * np.sqrt(0.442e3) * np.exp((-1*1j) * (2 * phi1 - 7 * phi2)) * ((1 - t9759) ** (0.9e1 / 0.2e1))

        if Bindx == 1516:
            t9769 = np.sin(phi)
            t9766 = t9769 ** 2
            t9767 = t9769 * t9766
            t9762 = np.cos(phi)
            t9763 = t9762 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-2*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.663e3) * t9767 ** 2 * (40 * t9762 - 1 + (-152 * t9762 + 18 + 95 * t9763) * t9763)

        if Bindx == 1517:
            t9770 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * (1 + 5 * t9770) * ((1 + t9770) ** (0.7e1 / 0.2e1)) * np.sqrt(0.25194e5) * np.exp((-1*1j) * (2 * phi1 - 9 * phi2)) * ((1 - t9770) ** (0.11e2 / 0.2e1))

        if Bindx == 1518:
            t9771 = np.cos(phi)
            t9778 = -1 + t9771
            t9777 = 1 + t9771
            t9775 = t9777 ** 2
            t9772 = t9778 ** 2
            t9773 = t9778 * t9772
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.125970e6) * t9773 ** 2 * t9775 ** 2

        if Bindx == 1519:
            t9779 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (phi1 + 10 * phi2)) * np.sqrt(0.41990e5) * ((1 - t9779) ** (0.9e1 / 0.2e1)) * ((1 + t9779) ** (0.11e2 / 0.2e1))

        if Bindx == 1520:
            t9784 = np.sin(phi)
            t9781 = t9784 ** 2
            t9782 = t9781 ** 2
            t9780 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-1*1j) * (phi1 + 9 * phi2)) * np.sqrt(0.8398e4) * t9782 ** 2 * (-1 + (9 + 10 * t9780) * t9780)

        if Bindx == 1521:
            t9785 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (phi1 + 8 * phi2)) * np.sqrt(0.221e3) * ((1 - t9785) ** (0.7e1 / 0.2e1)) * ((1 + t9785) ** (0.9e1 / 0.2e1)) * (-4 + (-19 + 95 * t9785) * t9785)

        if Bindx == 1522:
            t9793 = np.sin(phi)
            t9790 = t9793 ** 2
            t9791 = t9793 * t9790
            t9786 = np.cos(phi)
            t9787 = t9786 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-1*1j) * (phi1 + 7 * phi2)) * np.sqrt(0.1326e4) * t9791 ** 2 * (-21 * t9786 + 3 + (133 * t9786 - 81 + 190 * t9787) * t9787)

        if Bindx == 1523:
            t9794 = np.cos(phi)
            t9795 = t9794 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (phi1 + 6 * phi2)) * np.sqrt(0.78e2) * ((1 - t9794) ** (0.5e1 / 0.2e1)) * ((1 + t9794) ** (0.7e1 / 0.2e1)) * (102 * t9794 + 9 + (-646 * t9794 - 408 + 1615 * t9795) * t9795)

        if Bindx == 1524:
            t9806 = np.sin(phi)
            t9804 = t9806 ** 2
            t9798 = np.cos(phi)
            t9799 = t9798 ** 2
            t9801 = t9799 ** 2
            t9800 = t9798 * t9799
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-1*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.390e3) * t9804 ** 2 * (120 * t9799 - 595 * t9801 - 3 + (-170 + 646 * t9800) * t9800 + (323 * t9801 + 15) * t9798)

        if Bindx == 1525:
            t9807 = np.cos(phi)
            t9808 = t9807 ** 2
            t9810 = t9808 ** 2
            t9809 = t9807 * t9808
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * np.exp((-1*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.39e2) * ((1 - t9807) ** (0.3e1 / 0.2e1)) * ((1 + t9807) ** (0.5e1 / 0.2e1)) * (135 * t9808 - 1020 * t9810 - 2 + (510 + 1615 * t9809) * t9809 + (-969 * t9810 - 45) * t9807)

        if Bindx == 1526:
            t9814 = np.cos(phi)
            t9815 = t9814 ** 2
            t9816 = t9814 * t9815
            t9819 = t9816 ** 2
            t9817 = t9815 ** 2
            t9813 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.78e2) * t9813 ** 2 * (-343 * t9815 + 315 * t9816 - 5117 * t9819 + 7 + (2415 + 3230 * t9817) * t9817 + (-1071 * t9817 + 969 * t9819 - 21) * t9814)

        if Bindx == 1527:
            t9822 = np.cos(phi)
            t9823 = t9822 ** 2
            t9824 = t9822 * t9823
            t9827 = t9824 ** 2
            t9825 = t9823 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.3e1) * np.sqrt((1 - t9822)) * ((1 + t9822) ** (0.3e1 / 0.2e1)) * (-728 * t9823 - 5460 * t9824 - 24752 * t9827 + 7 + (8190 + 20995 * t9825) * t9825 + (18564 * t9825 - 16796 * t9827 + 364) * t9822)

        if Bindx == 1528:
            t9830 = np.cos(phi)
            t9831 = t9830 ** 2
            t9833 = t9831 ** 2
            t9837 = t9833 ** 2
            t9832 = t9830 * t9831
            t9835 = t9832 ** 2
            t9834 = t9830 * t9833
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-1*1j) * (phi1 + phi2)) * (3402 * t9831 - 1092 * t9832 - 28938 * t9833 + 85176 * t9835 - 101439 * t9837 - 63 + (4914 + 41990 * t9834) * t9834 + (-7956 * t9835 + 4199 * t9837 + 63) * t9830)

        if Bindx == 1529:
            t9840 = np.cos(phi)
            t9841 = t9840 ** 2
            t9842 = t9840 * t9841
            t9843 = t9841 ** 2
            t9849 = -7956 * t9842 ** 2 + 63 + (4914 + 4199 * t9843) * t9843
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.110e3) * t9840 * np.sqrt((1 + t9840)) * (t9849 * t9840 + 1092 * t9841 - 1092 * t9842 - t9849) * ((1 - t9840) ** (-0.1e1 / 0.2e1))

        if Bindx == 1530:
            t9850 = np.cos(phi)
            t9851 = t9850 ** 2
            t9853 = t9851 ** 2
            t9857 = t9853 ** 2
            t9852 = t9850 * t9851
            t9855 = t9852 ** 2
            t9854 = t9850 * t9853
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-1*1j) * (phi1 - phi2)) * (3402 * t9851 + 1092 * t9852 - 28938 * t9853 + 85176 * t9855 - 101439 * t9857 - 63 + (-4914 + 41990 * t9854) * t9854 + (7956 * t9855 - 4199 * t9857 - 63) * t9850)

        if Bindx == 1531:
            t9860 = np.cos(phi)
            t9861 = t9860 ** 2
            t9862 = t9860 * t9861
            t9865 = t9862 ** 2
            t9863 = t9861 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (-728 * t9861 + 5460 * t9862 - 24752 * t9865 + 7 + (8190 + 20995 * t9863) * t9863 + (-18564 * t9863 + 16796 * t9865 - 364) * t9860) * np.sqrt((1 + t9860)) * np.sqrt(0.3e1) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t9860) ** (0.3e1 / 0.2e1))

        if Bindx == 1532:
            t9869 = np.cos(phi)
            t9870 = t9869 ** 2
            t9871 = t9869 * t9870
            t9874 = t9871 ** 2
            t9872 = t9870 ** 2
            t9868 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.78e2) * t9868 ** 2 * (-343 * t9870 - 315 * t9871 - 5117 * t9874 + 7 + (2415 + 3230 * t9872) * t9872 + (1071 * t9872 - 969 * t9874 + 21) * t9869)

        if Bindx == 1533:
            t9877 = np.cos(phi)
            t9878 = t9877 ** 2
            t9880 = t9878 ** 2
            t9879 = t9877 * t9878
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * (135 * t9878 - 1020 * t9880 - 2 + (-510 + 1615 * t9879) * t9879 + (969 * t9880 + 45) * t9877) * ((1 + t9877) ** (0.3e1 / 0.2e1)) * np.sqrt(0.39e2) * np.exp((-1*1j) * (phi1 - 4 * phi2)) * ((1 - t9877) ** (0.5e1 / 0.2e1))

        if Bindx == 1534:
            t9891 = np.sin(phi)
            t9889 = t9891 ** 2
            t9883 = np.cos(phi)
            t9884 = t9883 ** 2
            t9886 = t9884 ** 2
            t9885 = t9883 * t9884
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-1*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.390e3) * t9889 ** 2 * (120 * t9884 - 595 * t9886 - 3 + (170 + 646 * t9885) * t9885 + (-323 * t9886 - 15) * t9883)

        if Bindx == 1535:
            t9892 = np.cos(phi)
            t9893 = t9892 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * (-102 * t9892 + 9 + (646 * t9892 - 408 + 1615 * t9893) * t9893) * ((1 + t9892) ** (0.5e1 / 0.2e1)) * np.sqrt(0.78e2) * np.exp((-1*1j) * (phi1 - 6 * phi2)) * ((1 - t9892) ** (0.7e1 / 0.2e1))

        if Bindx == 1536:
            t9903 = np.sin(phi)
            t9900 = t9903 ** 2
            t9901 = t9903 * t9900
            t9896 = np.cos(phi)
            t9897 = t9896 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-1*1j) * (phi1 - 7 * phi2)) * np.sqrt(0.1326e4) * t9901 ** 2 * (21 * t9896 + 3 + (-133 * t9896 - 81 + 190 * t9897) * t9897)

        if Bindx == 1537:
            t9904 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * (-4 + (19 + 95 * t9904) * t9904) * ((1 + t9904) ** (0.7e1 / 0.2e1)) * np.sqrt(0.221e3) * np.exp((-1*1j) * (phi1 - 8 * phi2)) * ((1 - t9904) ** (0.9e1 / 0.2e1))

        if Bindx == 1538:
            t9909 = np.sin(phi)
            t9906 = t9909 ** 2
            t9907 = t9906 ** 2
            t9905 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-1*1j) * (phi1 - 9 * phi2)) * np.sqrt(0.8398e4) * t9907 ** 2 * (-1 + (-9 + 10 * t9905) * t9905)

        if Bindx == 1539:
            t9910 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((-1*1j) * (phi1 - 10 * phi2)) * np.sqrt(0.41990e5) * ((1 - t9910) ** (0.11e2 / 0.2e1)) * ((1 + t9910) ** (0.9e1 / 0.2e1))

        if Bindx == 1540:
            t9915 = np.sin(phi)
            t9911 = t9915 ** 2
            t9913 = t9915 * t9911 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-10*1j) * phi2) * np.sqrt(0.46189e5) * t9913 ** 2

        if Bindx == 1541:
            t9916 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((-9*1j) * phi2) * np.sqrt(0.230945e6) * ((1 - t9916) ** (0.9e1 / 0.2e1)) * ((1 + t9916) ** (0.9e1 / 0.2e1)) * t9916

        if Bindx == 1542:
            t9921 = np.sin(phi)
            t9918 = t9921 ** 2
            t9919 = t9918 ** 2
            t9917 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-8*1j) * phi2) * np.sqrt(0.24310e5) * t9919 ** 2 * (19 * t9917 ** 2 - 1)

        if Bindx == 1543:
            t9922 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((-7*1j) * phi2) * np.sqrt(0.36465e5) * ((1 - t9922) ** (0.7e1 / 0.2e1)) * ((1 + t9922) ** (0.7e1 / 0.2e1)) * t9922 * (19 * t9922 ** 2 - 3)

        if Bindx == 1544:
            t9929 = np.sin(phi)
            t9926 = t9929 ** 2
            t9927 = t9929 * t9926
            t9923 = np.cos(phi)
            t9924 = t9923 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-6*1j) * phi2) * np.sqrt(0.2145e4) * t9927 ** 2 * (3 + (-102 + 323 * t9924) * t9924)

        if Bindx == 1545:
            t9930 = np.cos(phi)
            t9931 = t9930 ** 2
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * np.exp((-5*1j) * phi2) * np.sqrt(0.429e3) * ((1 - t9930) ** (0.5e1 / 0.2e1)) * ((1 + t9930) ** (0.5e1 / 0.2e1)) * t9930 * (15 + (-170 + 323 * t9931) * t9931)

        if Bindx == 1546:
            t9939 = np.sin(phi)
            t9937 = t9939 ** 2
            t9933 = np.cos(phi)
            t9934 = t9933 ** 2
            t9935 = t9934 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-4*1j) * phi2) * np.sqrt(0.4290e4) * t9937 ** 2 * (-255 * t9935 - 1 + (323 * t9935 + 45) * t9934)

        if Bindx == 1547:
            t9940 = np.cos(phi)
            t9941 = t9940 ** 2
            t9942 = t9941 ** 2
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.2145e4) * ((1 - t9940) ** (0.3e1 / 0.2e1)) * ((1 + t9940) ** (0.3e1 / 0.2e1)) * t9940 * (-357 * t9942 - 7 + (323 * t9942 + 105) * t9941)

        if Bindx == 1548:
            t9945 = np.cos(phi)
            t9946 = t9945 ** 2
            t9947 = t9946 ** 2
            t9944 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-2*1j) * phi2) * np.sqrt(0.330e3) * t9944 ** 2 * (-364 * t9946 + 7 + (-6188 * t9946 + 2730 + 4199 * t9947) * t9947)

        if Bindx == 1549:
            t9950 = np.cos(phi)
            t9951 = t9950 ** 2
            t9952 = t9951 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.110e3) * np.sqrt((1 - t9950)) * np.sqrt((1 + t9950)) * t9950 * (-1092 * t9951 + 63 + (-7956 * t9951 + 4914 + 4199 * t9952) * t9952)

        if Bindx == 1550:
            t9955 = np.cos(phi)
            t9956 = t9955 ** 2
            t9957 = t9956 ** 2
            t9959 = t9957 ** 2
            tfunc[..., c] = -0.2297295e7 / 0.256e3 * t9959 - 0.315315e6 / 0.128e3 * t9957 - 0.1323e4 / 0.256e3 + (0.969969e6 / 0.256e3 * t9959 + 0.945945e6 / 0.128e3 * t9957 + 0.72765e5 / 0.256e3) * t9956

        if Bindx == 1551:
            t9961 = np.cos(phi)
            t9962 = t9961 ** 2
            t9963 = t9961 * t9962
            t9964 = t9962 ** 2
            t9970 = -7956 * t9963 ** 2 + 63 + (4914 + 4199 * t9964) * t9964
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * phi2) * np.sqrt(0.110e3) * t9961 * np.sqrt((1 + t9961)) * (t9970 * t9961 + 1092 * t9962 - 1092 * t9963 - t9970) * ((1 - t9961) ** (-0.1e1 / 0.2e1))

        if Bindx == 1552:
            t9972 = np.cos(phi)
            t9973 = t9972 ** 2
            t9974 = t9973 ** 2
            t9971 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((2*1j) * phi2) * np.sqrt(0.330e3) * t9971 ** 2 * (-364 * t9973 + 7 + (-6188 * t9973 + 2730 + 4199 * t9974) * t9974)

        if Bindx == 1553:
            t9977 = np.cos(phi)
            t9978 = t9977 ** 2
            t9979 = t9978 ** 2
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * (-357 * t9979 - 7 + (323 * t9979 + 105) * t9978) * t9977 * ((1 + t9977) ** (0.3e1 / 0.2e1)) * np.sqrt(0.2145e4) * np.exp((3*1j) * phi2) * ((1 - t9977) ** (0.3e1 / 0.2e1))

        if Bindx == 1554:
            t9987 = np.sin(phi)
            t9985 = t9987 ** 2
            t9981 = np.cos(phi)
            t9982 = t9981 ** 2
            t9983 = t9982 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((4*1j) * phi2) * np.sqrt(0.4290e4) * t9985 ** 2 * (-255 * t9983 - 1 + (323 * t9983 + 45) * t9982)

        if Bindx == 1555:
            t9988 = np.cos(phi)
            t9989 = t9988 ** 2
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * (15 + (-170 + 323 * t9989) * t9989) * t9988 * ((1 + t9988) ** (0.5e1 / 0.2e1)) * np.sqrt(0.429e3) * np.exp((5*1j) * phi2) * ((1 - t9988) ** (0.5e1 / 0.2e1))

        if Bindx == 1556:
            t9997 = np.sin(phi)
            t9994 = t9997 ** 2
            t9995 = t9997 * t9994
            t9991 = np.cos(phi)
            t9992 = t9991 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((6*1j) * phi2) * np.sqrt(0.2145e4) * t9995 ** 2 * (3 + (-102 + 323 * t9992) * t9992)

        if Bindx == 1557:
            t9998 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (19 * t9998 ** 2 - 3) * t9998 * ((1 + t9998) ** (0.7e1 / 0.2e1)) * np.sqrt(0.36465e5) * np.exp((7*1j) * phi2) * ((1 - t9998) ** (0.7e1 / 0.2e1))

        if Bindx == 1558:
            t10003 = np.sin(phi)
            t10000 = t10003 ** 2
            t10001 = t10000 ** 2
            t9999 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((8*1j) * phi2) * np.sqrt(0.24310e5) * t10001 ** 2 * (19 * t9999 ** 2 - 1)

        if Bindx == 1559:
            t10004 = np.cos(phi)
            t10005 = t10004 ** 2
            t10007 = t10005 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * t10004 * ((1 + t10004) ** (0.9e1 / 0.2e1)) * (-10 * t10005 - 5 * t10007 - 1 + (10 * t10005 + t10007 + 5) * t10004) * np.sqrt(0.230945e6) * np.exp((9*1j) * phi2) * ((1 - t10004) ** (-0.1e1 / 0.2e1))

        if Bindx == 1560:
            t10013 = np.sin(phi)
            t10009 = t10013 ** 2
            t10011 = t10013 * t10009 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((10*1j) * phi2) * np.sqrt(0.46189e5) * t10011 ** 2

        if Bindx == 1561:
            t10014 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (phi1 - 10 * phi2)) * np.sqrt(0.41990e5) * ((1 - t10014) ** (0.11e2 / 0.2e1)) * ((1 + t10014) ** (0.9e1 / 0.2e1))

        if Bindx == 1562:
            t10019 = np.sin(phi)
            t10016 = t10019 ** 2
            t10017 = t10016 ** 2
            t10015 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((1j) * (phi1 - 9 * phi2)) * np.sqrt(0.8398e4) * t10017 ** 2 * (-1 + (-9 + 10 * t10015) * t10015)

        if Bindx == 1563:
            t10020 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * (phi1 - 8 * phi2)) * np.sqrt(0.221e3) * ((1 - t10020) ** (0.9e1 / 0.2e1)) * ((1 + t10020) ** (0.7e1 / 0.2e1)) * (-4 + (19 + 95 * t10020) * t10020)

        if Bindx == 1564:
            t10028 = np.sin(phi)
            t10025 = t10028 ** 2
            t10026 = t10028 * t10025
            t10021 = np.cos(phi)
            t10022 = t10021 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((1j) * (phi1 - 7 * phi2)) * np.sqrt(0.1326e4) * t10026 ** 2 * (21 * t10021 + 3 + (-133 * t10021 - 81 + 190 * t10022) * t10022)

        if Bindx == 1565:
            t10029 = np.cos(phi)
            t10030 = t10029 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (phi1 - 6 * phi2)) * np.sqrt(0.78e2) * ((1 - t10029) ** (0.7e1 / 0.2e1)) * ((1 + t10029) ** (0.5e1 / 0.2e1)) * (-102 * t10029 + 9 + (646 * t10029 - 408 + 1615 * t10030) * t10030)

        if Bindx == 1566:
            t10041 = np.sin(phi)
            t10039 = t10041 ** 2
            t10033 = np.cos(phi)
            t10034 = t10033 ** 2
            t10036 = t10034 ** 2
            t10035 = t10033 * t10034
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((1j) * (phi1 - 5 * phi2)) * np.sqrt(0.390e3) * t10039 ** 2 * (120 * t10034 - 595 * t10036 - 3 + (170 + 646 * t10035) * t10035 + (-323 * t10036 - 15) * t10033)

        if Bindx == 1567:
            t10042 = np.cos(phi)
            t10043 = t10042 ** 2
            t10045 = t10043 ** 2
            t10044 = t10042 * t10043
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * np.exp((1j) * (phi1 - 4 * phi2)) * np.sqrt(0.39e2) * ((1 - t10042) ** (0.5e1 / 0.2e1)) * ((1 + t10042) ** (0.3e1 / 0.2e1)) * (135 * t10043 - 1020 * t10045 - 2 + (-510 + 1615 * t10044) * t10044 + (969 * t10045 + 45) * t10042)

        if Bindx == 1568:
            t10049 = np.cos(phi)
            t10050 = t10049 ** 2
            t10051 = t10049 * t10050
            t10054 = t10051 ** 2
            t10052 = t10050 ** 2
            t10048 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.78e2) * t10048 ** 2 * (-343 * t10050 - 315 * t10051 - 5117 * t10054 + 7 + (2415 + 3230 * t10052) * t10052 + (1071 * t10052 - 969 * t10054 + 21) * t10049)

        if Bindx == 1569:
            t10057 = np.cos(phi)
            t10058 = t10057 ** 2
            t10059 = t10057 * t10058
            t10062 = t10059 ** 2
            t10060 = t10058 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.3e1) * ((1 - t10057) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t10057)) * (-728 * t10058 + 5460 * t10059 - 24752 * t10062 + 7 + (8190 + 20995 * t10060) * t10060 + (-18564 * t10060 + 16796 * t10062 - 364) * t10057)

        if Bindx == 1570:
            t10065 = np.cos(phi)
            t10066 = t10065 ** 2
            t10068 = t10066 ** 2
            t10072 = t10068 ** 2
            t10067 = t10065 * t10066
            t10070 = t10067 ** 2
            t10069 = t10065 * t10068
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((1j) * (phi1 - phi2)) * (3402 * t10066 + 1092 * t10067 - 28938 * t10068 + 85176 * t10070 - 101439 * t10072 - 63 + (-4914 + 41990 * t10069) * t10069 + (7956 * t10070 - 4199 * t10072 - 63) * t10065)

        if Bindx == 1571:
            t10075 = np.cos(phi)
            t10076 = t10075 ** 2
            t10077 = t10076 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * phi1) * np.sqrt(0.110e3) * np.sqrt((1 - t10075)) * np.sqrt((1 + t10075)) * t10075 * (-1092 * t10076 + 63 + (-7956 * t10076 + 4914 + 4199 * t10077) * t10077)

        if Bindx == 1572:
            t10080 = np.cos(phi)
            t10081 = t10080 ** 2
            t10083 = t10081 ** 2
            t10087 = t10083 ** 2
            t10082 = t10080 * t10081
            t10085 = t10082 ** 2
            t10084 = t10080 * t10083
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((1j) * (phi1 + phi2)) * (3402 * t10081 - 1092 * t10082 - 28938 * t10083 + 85176 * t10085 - 101439 * t10087 - 63 + (4914 + 41990 * t10084) * t10084 + (-7956 * t10085 + 4199 * t10087 + 63) * t10080)

        if Bindx == 1573:
            t10090 = np.cos(phi)
            t10091 = t10090 ** 2
            t10093 = t10091 ** 2
            t10097 = t10093 ** 2
            t10092 = t10090 * t10091
            t10095 = t10092 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.3e1) * ((1 + t10090) ** (0.3e1 / 0.2e1)) * (1092 * t10091 + 4732 * t10092 - 13650 * t10093 + 43316 * t10095 - 37791 * t10097 - 7 + (-10374 * t10093 - 7956 * t10095 + 20995 * t10097 - 357) * t10090) * ((1 - t10090) ** (-0.1e1 / 0.2e1))

        if Bindx == 1574:
            t10100 = np.cos(phi)
            t10101 = t10100 ** 2
            t10102 = t10100 * t10101
            t10105 = t10102 ** 2
            t10103 = t10101 ** 2
            t10099 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.78e2) * t10099 ** 2 * (-343 * t10101 + 315 * t10102 - 5117 * t10105 + 7 + (2415 + 3230 * t10103) * t10103 + (-1071 * t10103 + 969 * t10105 - 21) * t10100)

        if Bindx == 1575:
            t10108 = np.cos(phi)
            t10109 = t10108 ** 2
            t10111 = t10109 ** 2
            t10110 = t10108 * t10109
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * (135 * t10109 - 1020 * t10111 - 2 + (510 + 1615 * t10110) * t10110 + (-969 * t10111 - 45) * t10108) * ((1 + t10108) ** (0.5e1 / 0.2e1)) * np.sqrt(0.39e2) * np.exp((1j) * (phi1 + 4 * phi2)) * ((1 - t10108) ** (0.3e1 / 0.2e1))

        if Bindx == 1576:
            t10122 = np.sin(phi)
            t10120 = t10122 ** 2
            t10114 = np.cos(phi)
            t10115 = t10114 ** 2
            t10117 = t10115 ** 2
            t10116 = t10114 * t10115
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((1j) * (phi1 + 5 * phi2)) * np.sqrt(0.390e3) * t10120 ** 2 * (120 * t10115 - 595 * t10117 - 3 + (-170 + 646 * t10116) * t10116 + (323 * t10117 + 15) * t10114)

        if Bindx == 1577:
            t10123 = np.cos(phi)
            t10124 = t10123 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * (102 * t10123 + 9 + (-646 * t10123 - 408 + 1615 * t10124) * t10124) * ((1 + t10123) ** (0.7e1 / 0.2e1)) * np.sqrt(0.78e2) * np.exp((1j) * (phi1 + 6 * phi2)) * ((1 - t10123) ** (0.5e1 / 0.2e1))

        if Bindx == 1578:
            t10134 = np.sin(phi)
            t10131 = t10134 ** 2
            t10132 = t10134 * t10131
            t10127 = np.cos(phi)
            t10128 = t10127 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((1j) * (phi1 + 7 * phi2)) * np.sqrt(0.1326e4) * t10132 ** 2 * (-21 * t10127 + 3 + (133 * t10127 - 81 + 190 * t10128) * t10128)

        if Bindx == 1579:
            t10135 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (-4 + (-19 + 95 * t10135) * t10135) * ((1 + t10135) ** (0.9e1 / 0.2e1)) * np.sqrt(0.221e3) * np.exp((1j) * (phi1 + 8 * phi2)) * ((1 - t10135) ** (0.7e1 / 0.2e1))

        if Bindx == 1580:
            t10140 = np.sin(phi)
            t10137 = t10140 ** 2
            t10138 = t10137 ** 2
            t10136 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((1j) * (phi1 + 9 * phi2)) * np.sqrt(0.8398e4) * t10138 ** 2 * (-1 + (9 + 10 * t10136) * t10136)

        if Bindx == 1581:
            t10141 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (phi1 + 10 * phi2)) * np.sqrt(0.41990e5) * ((1 - t10141) ** (0.9e1 / 0.2e1)) * ((1 + t10141) ** (0.11e2 / 0.2e1))

        if Bindx == 1582:
            t10142 = np.cos(phi)
            t10149 = -1 + t10142
            t10148 = 1 + t10142
            t10146 = t10148 ** 2
            t10143 = t10149 ** 2
            t10144 = t10149 * t10143
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.125970e6) * t10144 ** 2 * t10146 ** 2

        if Bindx == 1583:
            t10150 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (2 * phi1 - 9 * phi2)) * np.sqrt(0.25194e5) * ((1 - t10150) ** (0.11e2 / 0.2e1)) * ((1 + t10150) ** (0.7e1 / 0.2e1)) * (1 + 5 * t10150)

        if Bindx == 1584:
            t10158 = np.sin(phi)
            t10155 = t10158 ** 2
            t10156 = t10158 * t10155
            t10151 = np.cos(phi)
            t10152 = t10151 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((2*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.663e3) * t10156 ** 2 * (40 * t10151 - 1 + (-152 * t10151 + 18 + 95 * t10152) * t10152)

        if Bindx == 1585:
            t10159 = np.cos(phi)
            t10160 = t10159 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (2 * phi1 - 7 * phi2)) * np.sqrt(0.442e3) * ((1 - t10159) ** (0.9e1 / 0.2e1)) * ((1 + t10159) ** (0.5e1 / 0.2e1)) * (171 * t10160 - 7 + (285 * t10160 - 9) * t10159)

        if Bindx == 1586:
            t10170 = np.sin(phi)
            t10168 = t10170 ** 2
            t10162 = np.cos(phi)
            t10163 = t10162 ** 2
            t10165 = t10163 ** 2
            t10164 = t10162 * t10163
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.26e2) * t10168 ** 2 * (627 * t10163 - 3213 * t10165 - 19 + (4012 + 4845 * t10164) * t10164 + (-5814 * t10165 - 438) * t10162)

        if Bindx == 1587:
            t10171 = np.cos(phi)
            t10172 = t10171 ** 2
            t10176 = 969 * t10172 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.130e3) * ((1 - t10171) ** (0.7e1 / 0.2e1)) * ((1 + t10171) ** (0.3e1 / 0.2e1)) * (-238 * t10172 + t10176 + 5 + (-102 * t10172 + t10176 - 19) * t10171)

        if Bindx == 1588:
            t10178 = np.cos(phi)
            t10179 = t10178 ** 2
            t10180 = t10178 * t10179
            t10183 = t10180 ** 2
            t10181 = t10179 ** 2
            t10177 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.13e2) * t10177 ** 2 * (-572 * t10179 - 1660 * t10180 - 7548 * t10183 + 13 + (3710 + 4845 * t10181) * t10181 + (4964 * t10181 - 3876 * t10183 + 124) * t10178)

        if Bindx == 1589:
            t10186 = np.cos(phi)
            t10187 = t10186 ** 2
            t10188 = t10186 * t10187
            t10191 = t10188 ** 2
            t10189 = t10187 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.26e2) * ((1 - t10186) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t10186)) * (525 * t10187 - 665 * t10188 - 4165 * t10189 + 6783 * t10191 - 7 + (-1071 * t10189 + 4845 * t10191 + 91) * t10186)

        if Bindx == 1590:
            t10193 = np.cos(phi)
            t10194 = t10193 ** 2
            t10196 = t10194 ** 2
            t10200 = t10196 ** 2
            t10195 = t10193 * t10194
            t10198 = t10195 ** 2
            t10197 = t10193 * t10196
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((2*1j) * (phi1 - phi2)) * (6069 * t10194 + 8008 * t10195 - 48958 * t10196 + 137410 * t10198 - 157131 * t10200 - 119 + (-33852 + 62985 * t10197) * t10197 + (51272 * t10198 - 25194 * t10200 - 490) * t10193)

        if Bindx == 1591:
            t10203 = np.cos(phi)
            t10204 = t10203 ** 2
            t10205 = t10203 * t10204
            t10208 = t10205 ** 2
            t10206 = t10204 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.3e1) * ((1 - t10203) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t10203)) * (-728 * t10204 + 5460 * t10205 - 24752 * t10208 + 7 + (8190 + 20995 * t10206) * t10206 + (-18564 * t10206 + 16796 * t10208 - 364) * t10203)

        if Bindx == 1592:
            t10212 = np.cos(phi)
            t10213 = t10212 ** 2
            t10214 = t10213 ** 2
            t10211 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((2*1j) * phi1) * np.sqrt(0.330e3) * t10211 ** 2 * (-364 * t10213 + 7 + (-6188 * t10213 + 2730 + 4199 * t10214) * t10214)

        if Bindx == 1593:
            t10217 = np.cos(phi)
            t10218 = t10217 ** 2
            t10219 = t10217 * t10218
            t10222 = t10219 ** 2
            t10220 = t10218 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.3e1) * np.sqrt((1 - t10217)) * ((1 + t10217) ** (0.3e1 / 0.2e1)) * (-728 * t10218 - 5460 * t10219 - 24752 * t10222 + 7 + (8190 + 20995 * t10220) * t10220 + (18564 * t10220 - 16796 * t10222 + 364) * t10217)

        if Bindx == 1594:
            t10225 = np.cos(phi)
            t10226 = t10225 ** 2
            t10228 = t10226 ** 2
            t10232 = t10228 ** 2
            t10227 = t10225 * t10226
            t10230 = t10227 ** 2
            t10229 = t10225 * t10228
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((2*1j) * (phi1 + phi2)) * (6069 * t10226 - 8008 * t10227 - 48958 * t10228 + 137410 * t10230 - 157131 * t10232 - 119 + (33852 + 62985 * t10229) * t10229 + (-51272 * t10230 + 25194 * t10232 + 490) * t10225)

        if Bindx == 1595:
            t10235 = np.cos(phi)
            t10236 = t10235 ** 2
            t10237 = t10235 * t10236
            t10240 = t10237 ** 2
            t10238 = t10236 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.26e2) * ((1 + t10235) ** (0.5e1 / 0.2e1)) * (616 * t10236 + 140 * t10237 + 5712 * t10240 - 7 + (-4830 + 4845 * t10238) * t10238 + (5236 * t10238 - 11628 * t10240 - 84) * t10235) * ((1 - t10235) ** (-0.1e1 / 0.2e1))

        if Bindx == 1596:
            t10244 = np.cos(phi)
            t10245 = t10244 ** 2
            t10246 = t10244 * t10245
            t10249 = t10246 ** 2
            t10247 = t10245 ** 2
            t10243 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.13e2) * t10243 ** 2 * (-572 * t10245 + 1660 * t10246 - 7548 * t10249 + 13 + (3710 + 4845 * t10247) * t10247 + (-4964 * t10247 + 3876 * t10249 - 124) * t10244)

        if Bindx == 1597:
            t10252 = np.cos(phi)
            t10253 = t10252 ** 2
            t10255 = t10253 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (238 * t10253 - 969 * t10255 - 5 + (-102 * t10253 + 969 * t10255 - 19) * t10252) * ((1 + t10252) ** (0.7e1 / 0.2e1)) * np.sqrt(0.130e3) * np.exp((1j) * (2 * phi1 + 5 * phi2)) * ((1 - t10252) ** (0.3e1 / 0.2e1))

        if Bindx == 1598:
            t10265 = np.sin(phi)
            t10263 = t10265 ** 2
            t10257 = np.cos(phi)
            t10258 = t10257 ** 2
            t10260 = t10258 ** 2
            t10259 = t10257 * t10258
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.26e2) * t10263 ** 2 * (627 * t10258 - 3213 * t10260 - 19 + (-4012 + 4845 * t10259) * t10259 + (5814 * t10260 + 438) * t10257)

        if Bindx == 1599:
            t10266 = np.cos(phi)
            t10267 = t10266 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * (-171 * t10267 + 7 + (285 * t10267 - 9) * t10266) * ((1 + t10266) ** (0.9e1 / 0.2e1)) * np.sqrt(0.442e3) * np.exp((1j) * (2 * phi1 + 7 * phi2)) * ((1 - t10266) ** (0.5e1 / 0.2e1))

        if Bindx == 1600:
            t10276 = np.sin(phi)
            t10273 = t10276 ** 2
            t10274 = t10276 * t10273
            t10269 = np.cos(phi)
            t10270 = t10269 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((2*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.663e3) * t10274 ** 2 * (-40 * t10269 - 1 + (152 * t10269 + 18 + 95 * t10270) * t10270)

        if Bindx == 1601:
            t10277 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * (-1 + 5 * t10277) * ((1 + t10277) ** (0.11e2 / 0.2e1)) * np.sqrt(0.25194e5) * np.exp((1j) * (2 * phi1 + 9 * phi2)) * ((1 - t10277) ** (0.7e1 / 0.2e1))

        if Bindx == 1602:
            t10278 = np.cos(phi)
            t10285 = -1 + t10278
            t10284 = 1 + t10278
            t10281 = t10284 ** 2
            t10282 = t10284 * t10281
            t10279 = t10285 ** 2
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.125970e6) * t10279 ** 2 * t10282 ** 2

        if Bindx == 1603:
            t10286 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * (3 * phi1 - 10 * phi2)) * np.sqrt(0.4845e4) * ((1 - t10286) ** (0.13e2 / 0.2e1)) * ((1 + t10286) ** (0.7e1 / 0.2e1))

        if Bindx == 1604:
            t10287 = np.cos(phi)
            t10294 = -1 + t10287
            t10293 = 1 + t10287
            t10291 = t10293 ** 2
            t10288 = t10294 ** 2
            t10289 = t10294 * t10288
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((3*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.969e3) * t10289 ** 2 * t10293 * t10291 * (3 + 10 * t10287)

        if Bindx == 1605:
            t10295 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (3 * phi1 - 8 * phi2)) * np.sqrt(0.102e3) * ((1 - t10295) ** (0.11e2 / 0.2e1)) * ((1 + t10295) ** (0.5e1 / 0.2e1)) * (4 + (57 + 95 * t10295) * t10295)

        if Bindx == 1606:
            t10304 = np.sin(phi)
            t10302 = t10304 ** 2
            t10296 = np.cos(phi)
            t10297 = t10296 ** 2
            t10299 = t10297 ** 2
            t10298 = t10296 * t10297
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.17e2) * t10302 ** 2 * (-264 * t10297 + 243 * t10299 + 11 + (742 + 570 * t10298) * t10298 + (-1197 * t10299 - 105) * t10296)

        if Bindx == 1607:
            t10305 = np.cos(phi)
            t10306 = t10305 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((3*1j) * (phi1 - 2 * phi2)) * ((1 - t10305) ** (0.9e1 / 0.2e1)) * ((1 + t10305) ** (0.3e1 / 0.2e1)) * (-374 * t10305 - 69 + (5814 * t10305 + 1224 + 4845 * t10306) * t10306)

        if Bindx == 1608:
            t10310 = np.cos(phi)
            t10311 = t10310 ** 2
            t10312 = t10310 * t10311
            t10315 = t10312 ** 2
            t10313 = t10311 ** 2
            t10309 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.128e3) * np.exp((1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.5e1) * t10309 ** 2 * (-37 * t10311 - 1525 * t10312 - 2091 * t10315 + 1 + (525 + 1938 * t10313) * t10313 + (3961 * t10313 - 2907 * t10315 + 135) * t10310)

        if Bindx == 1609:
            t10318 = np.cos(phi)
            t10319 = t10318 ** 2
            t10321 = t10319 ** 2
            t10320 = t10318 * t10319
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * np.exp((1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.2e1) * ((1 - t10318) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t10318)) * (-1035 * t10319 + 3060 * t10321 + 22 + (-1870 + 4845 * t10320) * t10320 + (8721 * t10321 - 15) * t10318)

        if Bindx == 1610:
            t10324 = np.cos(phi)
            t10325 = t10324 ** 2
            t10327 = t10325 ** 2
            t10331 = t10327 ** 2
            t10326 = t10324 * t10325
            t10329 = t10326 ** 2
            t10328 = t10324 * t10327
            tfunc[..., c] = (0.21e2 / 0.128e3) * np.exp((3*1j) * (phi1 - phi2)) * (966 * t10325 + 3612 * t10326 - 7322 * t10327 + 20160 * t10329 - 23409 * t10331 - 21 + (-13818 + 9690 * t10328) * t10328 + (19108 * t10329 - 8721 * t10331 - 245) * t10324)

        if Bindx == 1611:
            t10334 = np.cos(phi)
            t10335 = t10334 ** 2
            t10336 = t10334 * t10335
            t10339 = t10336 ** 2
            t10337 = t10335 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.26e2) * ((1 - t10334) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t10334)) * (525 * t10335 - 665 * t10336 - 4165 * t10337 + 6783 * t10339 - 7 + (-1071 * t10337 + 4845 * t10339 + 91) * t10334)

        if Bindx == 1612:
            t10342 = np.cos(phi)
            t10343 = t10342 ** 2
            t10344 = t10342 * t10343
            t10347 = t10344 ** 2
            t10345 = t10343 ** 2
            t10341 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.78e2) * t10341 ** 2 * (-343 * t10343 - 315 * t10344 - 5117 * t10347 + 7 + (2415 + 3230 * t10345) * t10345 + (1071 * t10345 - 969 * t10347 + 21) * t10342)

        if Bindx == 1613:
            t10350 = np.cos(phi)
            t10351 = t10350 ** 2
            t10352 = t10351 ** 2
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.2145e4) * ((1 - t10350) ** (0.3e1 / 0.2e1)) * ((1 + t10350) ** (0.3e1 / 0.2e1)) * t10350 * (-357 * t10352 - 7 + (323 * t10352 + 105) * t10351)

        if Bindx == 1614:
            t10355 = np.cos(phi)
            t10356 = t10355 ** 2
            t10357 = t10355 * t10356
            t10360 = t10357 ** 2
            t10358 = t10356 ** 2
            t10354 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.78e2) * t10354 ** 2 * (-343 * t10356 + 315 * t10357 - 5117 * t10360 + 7 + (2415 + 3230 * t10358) * t10358 + (-1071 * t10358 + 969 * t10360 - 21) * t10355)

        if Bindx == 1615:
            t10363 = np.cos(phi)
            t10364 = t10363 ** 2
            t10365 = t10363 * t10364
            t10368 = t10365 ** 2
            t10366 = t10364 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.26e2) * np.sqrt((1 - t10363)) * ((1 + t10363) ** (0.5e1 / 0.2e1)) * (-525 * t10364 - 665 * t10365 + 4165 * t10366 - 6783 * t10368 + 7 + (-1071 * t10366 + 4845 * t10368 + 91) * t10363)

        if Bindx == 1616:
            t10370 = np.cos(phi)
            t10371 = t10370 ** 2
            t10373 = t10371 ** 2
            t10377 = t10373 ** 2
            t10372 = t10370 * t10371
            t10375 = t10372 ** 2
            t10374 = t10370 * t10373
            tfunc[..., c] = (0.21e2 / 0.128e3) * np.exp((3*1j) * (phi1 + phi2)) * (966 * t10371 - 3612 * t10372 - 7322 * t10373 + 20160 * t10375 - 23409 * t10377 - 21 + (13818 + 9690 * t10374) * t10374 + (-19108 * t10375 + 8721 * t10377 + 245) * t10370)

        if Bindx == 1617:
            t10380 = np.cos(phi)
            t10381 = t10380 ** 2
            t10382 = t10380 * t10381
            t10385 = t10382 ** 2
            t10383 = t10381 ** 2
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * np.exp((1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.2e1) * ((1 + t10380) ** (0.7e1 / 0.2e1)) * (1050 * t10381 - 2905 * t10382 - 1190 * t10383 - 13566 * t10385 - 22 + (11781 * t10383 + 4845 * t10385 + 7) * t10380) * ((1 - t10380) ** (-0.1e1 / 0.2e1))

        if Bindx == 1618:
            t10388 = np.cos(phi)
            t10389 = t10388 ** 2
            t10390 = t10388 * t10389
            t10393 = t10390 ** 2
            t10391 = t10389 ** 2
            t10387 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.128e3) * np.exp((1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.5e1) * t10387 ** 2 * (-37 * t10389 + 1525 * t10390 - 2091 * t10393 + 1 + (525 + 1938 * t10391) * t10391 + (-3961 * t10391 + 2907 * t10393 - 135) * t10388)

        if Bindx == 1619:
            t10396 = np.cos(phi)
            t10397 = t10396 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (374 * t10396 - 69 + (-5814 * t10396 + 1224 + 4845 * t10397) * t10397) * ((1 + t10396) ** (0.9e1 / 0.2e1)) * np.exp((3*1j) * (phi1 + 2 * phi2)) * ((1 - t10396) ** (0.3e1 / 0.2e1))

        if Bindx == 1620:
            t10408 = np.sin(phi)
            t10406 = t10408 ** 2
            t10400 = np.cos(phi)
            t10401 = t10400 ** 2
            t10403 = t10401 ** 2
            t10402 = t10400 * t10401
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.17e2) * t10406 ** 2 * (-264 * t10401 + 243 * t10403 + 11 + (-742 + 570 * t10402) * t10402 + (1197 * t10403 + 105) * t10400)

        if Bindx == 1621:
            t10409 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * (4 + (-57 + 95 * t10409) * t10409) * ((1 + t10409) ** (0.11e2 / 0.2e1)) * np.sqrt(0.102e3) * np.exp((1j) * (3 * phi1 + 8 * phi2)) * ((1 - t10409) ** (0.5e1 / 0.2e1))

        if Bindx == 1622:
            t10417 = np.sin(phi)
            t10414 = t10417 ** 2
            t10415 = t10417 * t10414
            t10410 = np.cos(phi)
            t10411 = t10410 ** 2
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((3*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.969e3) * t10415 ** 2 * (t10410 - 3 + (27 * t10410 + 21 + 10 * t10411) * t10411)

        if Bindx == 1623:
            t10418 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (3 * phi1 + 10 * phi2)) * np.sqrt(0.4845e4) * ((1 - t10418) ** (0.7e1 / 0.2e1)) * ((1 + t10418) ** (0.13e2 / 0.2e1))

        if Bindx == 1624:
            t10419 = np.cos(phi)
            t10427 = -1 + t10419
            t10426 = 1 + t10419
            t10424 = t10426 ** 2
            t10420 = t10427 ** 2
            t10421 = t10427 * t10420
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((2*1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.9690e4) * t10427 * t10421 ** 2 * t10426 * t10424

        if Bindx == 1625:
            t10428 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * (4 * phi1 - 9 * phi2)) * np.sqrt(0.1938e4) * ((1 - t10428) ** (0.13e2 / 0.2e1)) * ((1 + t10428) ** (0.5e1 / 0.2e1)) * (2 + 5 * t10428)

        if Bindx == 1626:
            t10437 = np.sin(phi)
            t10435 = t10437 ** 2
            t10429 = np.cos(phi)
            t10430 = t10429 ** 2
            t10432 = t10430 ** 2
            t10431 = t10429 * t10430
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((4*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.51e2) * t10435 ** 2 * (-143 * t10430 + 277 * t10432 + 11 + (32 + 95 * t10431) * t10431 + (-304 * t10432 + 32) * t10429)

        if Bindx == 1627:
            t10438 = np.cos(phi)
            t10439 = t10438 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (4 * phi1 - 7 * phi2)) * np.sqrt(0.34e2) * ((1 - t10438) ** (0.11e2 / 0.2e1)) * ((1 + t10438) ** (0.3e1 / 0.2e1)) * (342 * t10439 + 2 + (285 * t10439 + 99) * t10438)

        if Bindx == 1628:
            t10442 = np.cos(phi)
            t10443 = t10442 ** 2
            t10444 = t10442 * t10443
            t10447 = t10444 ** 2
            t10445 = t10443 ** 2
            t10441 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.2e1) * t10441 ** 2 * (2324 * t10443 - 4564 * t10444 + 1428 * t10447 - 83 + (-6594 + 4845 * t10445) * t10445 + (13804 * t10445 - 11628 * t10447 + 468) * t10442)

        if Bindx == 1629:
            t10450 = np.cos(phi)
            t10451 = t10450 ** 2
            t10453 = t10451 ** 2
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * np.exp((1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.10e2) * ((1 - t10450) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t10450)) * (68 * t10451 + 1938 * t10453 - 10 + (1122 * t10451 + 969 * t10453 - 83) * t10450)

        if Bindx == 1630:
            t10455 = np.cos(phi)
            t10456 = t10455 ** 2
            t10458 = t10456 ** 2
            t10462 = t10458 ** 2
            t10457 = t10455 * t10456
            t10460 = t10457 ** 2
            t10459 = t10455 * t10458
            tfunc[..., c] = (0.21e2 / 0.128e3) * np.exp((4*1j) * (phi1 - phi2)) * (-39 * t10456 + 3856 * t10457 - 574 * t10458 + 4858 * t10460 - 9027 * t10462 + 1 + (-13272 + 4845 * t10459) * t10459 + (17408 * t10460 - 7752 * t10462 - 304) * t10455)

        if Bindx == 1631:
            t10465 = np.cos(phi)
            t10466 = t10465 ** 2
            t10468 = t10466 ** 2
            t10467 = t10465 * t10466
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * np.exp((1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.2e1) * ((1 - t10465) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t10465)) * (-1035 * t10466 + 3060 * t10468 + 22 + (-1870 + 4845 * t10467) * t10467 + (8721 * t10468 - 15) * t10465)

        if Bindx == 1632:
            t10472 = np.cos(phi)
            t10473 = t10472 ** 2
            t10474 = t10472 * t10473
            t10477 = t10474 ** 2
            t10475 = t10473 ** 2
            t10471 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.13e2) * t10471 ** 2 * (-572 * t10473 - 1660 * t10474 - 7548 * t10477 + 13 + (3710 + 4845 * t10475) * t10475 + (4964 * t10475 - 3876 * t10477 + 124) * t10472)

        if Bindx == 1633:
            t10480 = np.cos(phi)
            t10481 = t10480 ** 2
            t10483 = t10481 ** 2
            t10482 = t10480 * t10481
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * np.exp((1j) * (4 * phi1 - phi2)) * np.sqrt(0.39e2) * ((1 - t10480) ** (0.5e1 / 0.2e1)) * ((1 + t10480) ** (0.3e1 / 0.2e1)) * (135 * t10481 - 1020 * t10483 - 2 + (-510 + 1615 * t10482) * t10482 + (969 * t10483 + 45) * t10480)

        if Bindx == 1634:
            t10492 = np.sin(phi)
            t10490 = t10492 ** 2
            t10486 = np.cos(phi)
            t10487 = t10486 ** 2
            t10488 = t10487 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((4*1j) * phi1) * np.sqrt(0.4290e4) * t10490 ** 2 * (-255 * t10488 - 1 + (323 * t10488 + 45) * t10487)

        if Bindx == 1635:
            t10493 = np.cos(phi)
            t10494 = t10493 ** 2
            t10496 = t10494 ** 2
            t10495 = t10493 * t10494
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * np.exp((1j) * (4 * phi1 + phi2)) * np.sqrt(0.39e2) * ((1 - t10493) ** (0.3e1 / 0.2e1)) * ((1 + t10493) ** (0.5e1 / 0.2e1)) * (135 * t10494 - 1020 * t10496 - 2 + (510 + 1615 * t10495) * t10495 + (-969 * t10496 - 45) * t10493)

        if Bindx == 1636:
            t10500 = np.cos(phi)
            t10501 = t10500 ** 2
            t10502 = t10500 * t10501
            t10505 = t10502 ** 2
            t10503 = t10501 ** 2
            t10499 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.13e2) * t10499 ** 2 * (-572 * t10501 + 1660 * t10502 - 7548 * t10505 + 13 + (3710 + 4845 * t10503) * t10503 + (-4964 * t10503 + 3876 * t10505 - 124) * t10500)

        if Bindx == 1637:
            t10508 = np.cos(phi)
            t10509 = t10508 ** 2
            t10511 = t10509 ** 2
            t10510 = t10508 * t10509
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * np.exp((1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t10508)) * ((1 + t10508) ** (0.7e1 / 0.2e1)) * (-1035 * t10509 + 3060 * t10511 + 22 + (1870 + 4845 * t10510) * t10510 + (-8721 * t10511 + 15) * t10508)

        if Bindx == 1638:
            t10514 = np.cos(phi)
            t10515 = t10514 ** 2
            t10517 = t10515 ** 2
            t10521 = t10517 ** 2
            t10516 = t10514 * t10515
            t10519 = t10516 ** 2
            t10518 = t10514 * t10517
            tfunc[..., c] = (0.21e2 / 0.128e3) * np.exp((4*1j) * (phi1 + phi2)) * (-39 * t10515 - 3856 * t10516 - 574 * t10517 + 4858 * t10519 - 9027 * t10521 + 1 + (13272 + 4845 * t10518) * t10518 + (-17408 * t10519 + 7752 * t10521 + 304) * t10514)

        if Bindx == 1639:
            t10524 = np.cos(phi)
            t10525 = t10524 ** 2
            t10527 = t10525 ** 2
            t10526 = t10524 * t10525
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * np.exp((1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.10e2) * ((1 + t10524) ** (0.9e1 / 0.2e1)) * (-15 * t10525 + 3060 * t10527 - 10 + (-1190 + 969 * t10526) * t10526 + (-2907 * t10527 + 93) * t10524) * ((1 - t10524) ** (-0.1e1 / 0.2e1))

        if Bindx == 1640:
            t10531 = np.cos(phi)
            t10532 = t10531 ** 2
            t10533 = t10531 * t10532
            t10536 = t10533 ** 2
            t10534 = t10532 ** 2
            t10530 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * t10530 ** 2 * (2324 * t10532 + 4564 * t10533 + 1428 * t10536 - 83 + (-6594 + 4845 * t10534) * t10534 + (-13804 * t10534 + 11628 * t10536 - 468) * t10531)

        if Bindx == 1641:
            t10539 = np.cos(phi)
            t10540 = t10539 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (-342 * t10540 - 2 + (285 * t10540 + 99) * t10539) * ((1 + t10539) ** (0.11e2 / 0.2e1)) * np.sqrt(0.34e2) * np.exp((1j) * (4 * phi1 + 7 * phi2)) * ((1 - t10539) ** (0.3e1 / 0.2e1))

        if Bindx == 1642:
            t10550 = np.sin(phi)
            t10548 = t10550 ** 2
            t10542 = np.cos(phi)
            t10543 = t10542 ** 2
            t10545 = t10543 ** 2
            t10544 = t10542 * t10543
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((4*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.51e2) * t10548 ** 2 * (-143 * t10543 + 277 * t10545 + 11 + (-32 + 95 * t10544) * t10544 + (304 * t10545 - 32) * t10542)

        if Bindx == 1643:
            t10551 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * (-2 + 5 * t10551) * ((1 + t10551) ** (0.13e2 / 0.2e1)) * np.sqrt(0.1938e4) * np.exp((1j) * (4 * phi1 + 9 * phi2)) * ((1 - t10551) ** (0.5e1 / 0.2e1))

        if Bindx == 1644:
            t10552 = np.cos(phi)
            t10560 = -1 + t10552
            t10559 = 1 + t10552
            t10555 = t10559 ** 2
            t10556 = t10559 * t10555
            t10553 = t10560 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((2*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.9690e4) * t10560 * t10553 * t10559 * t10556 ** 2

        if Bindx == 1645:
            t10561 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((5*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.969e3) * ((1 - t10561) ** (0.15e2 / 0.2e1)) * ((1 + t10561) ** (0.5e1 / 0.2e1))

        if Bindx == 1646:
            t10563 = np.cos(phi)
            t10568 = -1 + t10563
            t10564 = t10568 ** 2
            t10565 = t10568 * t10564
            t10562 = 1 + t10563
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((1j) * (5 * phi1 - 9 * phi2)) * np.sqrt(0.4845e4) * t10568 * t10565 ** 2 * t10562 ** 2 * (1 + 2 * t10563)

        if Bindx == 1647:
            t10569 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * (5 * phi1 - 8 * phi2)) * np.sqrt(0.510e3) * ((1 - t10569) ** (0.13e2 / 0.2e1)) * ((1 + t10569) ** (0.3e1 / 0.2e1)) * (4 + (19 + 19 * t10569) * t10569)

        if Bindx == 1648:
            t10571 = np.cos(phi)
            t10572 = t10571 ** 2
            t10573 = t10571 * t10572
            t10576 = t10573 ** 2
            t10574 = t10572 ** 2
            t10570 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.85e2) * t10570 ** 2 * (119 * t10572 + 91 * t10573 + 357 * t10576 - 7 + (-455 + 114 * t10574) * t10574 + (217 * t10574 - 399 * t10576 - 37) * t10571)

        if Bindx == 1649:
            t10579 = np.cos(phi)
            t10580 = t10579 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (5 * phi1 - 6 * phi2)) * np.sqrt(0.5e1) * ((1 - t10579) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t10579)) * (238 * t10579 - 1 + (1938 * t10579 + 1224 + 969 * t10580) * t10580)

        if Bindx == 1650:
            t10583 = np.cos(phi)
            t10584 = t10583 ** 2
            t10586 = t10584 ** 2
            t10590 = t10586 ** 2
            t10585 = t10583 * t10584
            t10588 = t10585 ** 2
            t10587 = t10583 * t10586
            tfunc[..., c] = (0.21e2 / 0.128e3) * np.exp((5*1j) * (phi1 - phi2)) * (-930 * t10584 + 1660 * t10585 + 3710 * t10586 - 3920 * t10588 - 765 * t10590 + 31 + (-6594 + 1938 * t10587) * t10587 + (9860 * t10588 - 4845 * t10590 - 145) * t10583)

        if Bindx == 1651:
            t10593 = np.cos(phi)
            t10594 = t10593 ** 2
            t10596 = t10594 ** 2
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.10e2) * ((1 - t10593) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t10593)) * (68 * t10594 + 1938 * t10596 - 10 + (1122 * t10594 + 969 * t10596 - 83) * t10593)

        if Bindx == 1652:
            t10599 = np.cos(phi)
            t10600 = t10599 ** 2
            t10601 = t10599 * t10600
            t10604 = t10601 ** 2
            t10602 = t10600 ** 2
            t10598 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.128e3) * np.exp((1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.5e1) * t10598 ** 2 * (-37 * t10600 - 1525 * t10601 - 2091 * t10604 + 1 + (525 + 1938 * t10602) * t10602 + (3961 * t10602 - 2907 * t10604 + 135) * t10599)

        if Bindx == 1653:
            t10607 = np.cos(phi)
            t10608 = t10607 ** 2
            t10612 = 969 * t10608 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.130e3) * ((1 - t10607) ** (0.7e1 / 0.2e1)) * ((1 + t10607) ** (0.3e1 / 0.2e1)) * (-238 * t10608 + t10612 + 5 + (-102 * t10608 + t10612 - 19) * t10607)

        if Bindx == 1654:
            t10621 = np.sin(phi)
            t10619 = t10621 ** 2
            t10613 = np.cos(phi)
            t10614 = t10613 ** 2
            t10616 = t10614 ** 2
            t10615 = t10613 * t10614
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((1j) * (5 * phi1 - phi2)) * np.sqrt(0.390e3) * t10619 ** 2 * (120 * t10614 - 595 * t10616 - 3 + (170 + 646 * t10615) * t10615 + (-323 * t10616 - 15) * t10613)

        if Bindx == 1655:
            t10622 = np.cos(phi)
            t10623 = t10622 ** 2
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.429e3) * ((1 - t10622) ** (0.5e1 / 0.2e1)) * ((1 + t10622) ** (0.5e1 / 0.2e1)) * t10622 * (15 + (-170 + 323 * t10623) * t10623)

        if Bindx == 1656:
            t10633 = np.sin(phi)
            t10631 = t10633 ** 2
            t10625 = np.cos(phi)
            t10626 = t10625 ** 2
            t10628 = t10626 ** 2
            t10627 = t10625 * t10626
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((1j) * (5 * phi1 + phi2)) * np.sqrt(0.390e3) * t10631 ** 2 * (120 * t10626 - 595 * t10628 - 3 + (-170 + 646 * t10627) * t10627 + (323 * t10628 + 15) * t10625)

        if Bindx == 1657:
            t10634 = np.cos(phi)
            t10635 = t10634 ** 2
            t10637 = t10635 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.130e3) * ((1 - t10634) ** (0.3e1 / 0.2e1)) * ((1 + t10634) ** (0.7e1 / 0.2e1)) * (238 * t10635 - 969 * t10637 - 5 + (-102 * t10635 + 969 * t10637 - 19) * t10634)

        if Bindx == 1658:
            t10640 = np.cos(phi)
            t10641 = t10640 ** 2
            t10642 = t10640 * t10641
            t10645 = t10642 ** 2
            t10643 = t10641 ** 2
            t10639 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.128e3) * np.exp((1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.5e1) * t10639 ** 2 * (-37 * t10641 + 1525 * t10642 - 2091 * t10645 + 1 + (525 + 1938 * t10643) * t10643 + (-3961 * t10643 + 2907 * t10645 - 135) * t10640)

        if Bindx == 1659:
            t10648 = np.cos(phi)
            t10649 = t10648 ** 2
            t10651 = t10649 ** 2
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t10648)) * ((1 + t10648) ** (0.9e1 / 0.2e1)) * (-68 * t10649 - 1938 * t10651 + 10 + (1122 * t10649 + 969 * t10651 - 83) * t10648)

        if Bindx == 1660:
            t10653 = np.cos(phi)
            t10654 = t10653 ** 2
            t10656 = t10654 ** 2
            t10660 = t10656 ** 2
            t10655 = t10653 * t10654
            t10658 = t10655 ** 2
            t10657 = t10653 * t10656
            tfunc[..., c] = (0.21e2 / 0.128e3) * np.exp((5*1j) * (phi1 + phi2)) * (-930 * t10654 - 1660 * t10655 + 3710 * t10656 - 3920 * t10658 - 765 * t10660 + 31 + (6594 + 1938 * t10657) * t10657 + (-9860 * t10658 + 4845 * t10660 + 145) * t10653)

        if Bindx == 1661:
            t10663 = np.cos(phi)
            t10664 = t10663 ** 2
            t10666 = t10664 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.5e1) * ((1 + t10663) ** (0.11e2 / 0.2e1)) * (-1462 * t10664 - 2907 * t10666 + 1 + (3162 * t10664 + 969 * t10666 + 237) * t10663) * ((1 - t10663) ** (-0.1e1 / 0.2e1))

        if Bindx == 1662:
            t10669 = np.cos(phi)
            t10670 = t10669 ** 2
            t10671 = t10669 * t10670
            t10674 = t10671 ** 2
            t10672 = t10670 ** 2
            t10668 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.85e2) * t10668 ** 2 * (119 * t10670 - 91 * t10671 + 357 * t10674 - 7 + (-455 + 114 * t10672) * t10672 + (-217 * t10672 + 399 * t10674 + 37) * t10669)

        if Bindx == 1663:
            t10677 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (4 + (-19 + 19 * t10677) * t10677) * ((1 + t10677) ** (0.13e2 / 0.2e1)) * np.sqrt(0.510e3) * np.exp((1j) * (5 * phi1 + 8 * phi2)) * ((1 - t10677) ** (0.3e1 / 0.2e1))

        if Bindx == 1664:
            t10686 = np.sin(phi)
            t10684 = t10686 ** 2
            t10678 = np.cos(phi)
            t10679 = t10678 ** 2
            t10681 = t10679 ** 2
            t10680 = t10678 * t10679
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((1j) * (5 * phi1 + 9 * phi2)) * np.sqrt(0.4845e4) * t10684 ** 2 * (15 * t10681 - 1 + (10 + 2 * t10680) * t10680 + (9 * t10681 - 3) * t10678)

        if Bindx == 1665:
            t10687 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((5*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.969e3) * ((1 - t10687) ** (0.5e1 / 0.2e1)) * ((1 + t10687) ** (0.15e2 / 0.2e1))

        if Bindx == 1666:
            t10689 = np.cos(phi)
            t10693 = -1 + t10689
            t10690 = t10693 ** 2
            t10691 = t10690 ** 2
            t10688 = 1 + t10689
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.4845e4) * t10691 ** 2 * t10688 ** 2

        if Bindx == 1667:
            t10694 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((3*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.969e3) * ((1 - t10694) ** (0.15e2 / 0.2e1)) * ((1 + t10694) ** (0.3e1 / 0.2e1)) * (3 + 5 * t10694)

        if Bindx == 1668:
            t10696 = np.cos(phi)
            t10697 = t10696 ** 2
            t10698 = t10696 * t10697
            t10701 = t10698 ** 2
            t10699 = t10697 ** 2
            t10695 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.102e3) * t10695 ** 2 * (-124 * t10697 + 520 * t10698 + 772 * t10701 + 31 + (-390 + 95 * t10699) * t10699 + (-376 * t10699 - 456 * t10701 - 72) * t10696)

        if Bindx == 1669:
            t10704 = np.cos(phi)
            t10705 = t10704 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (6 * phi1 - 7 * phi2)) * np.sqrt(0.17e2) * ((1 - t10704) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t10704)) * (513 * t10705 + 43 + (285 * t10705 + 279) * t10704)

        if Bindx == 1670:
            t10707 = np.cos(phi)
            t10708 = t10707 ** 2
            t10710 = t10708 ** 2
            t10714 = t10710 ** 2
            t10709 = t10707 * t10708
            t10712 = t10709 ** 2
            t10711 = t10707 * t10710
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((6*1j) * (phi1 - phi2)) * (-4503 * t10708 - 6168 * t10709 + 22442 * t10710 - 34902 * t10712 + 12393 * t10714 + 237 + (-1932 + 4845 * t10711) * t10711 + (23528 * t10712 - 17442 * t10714 + 1502) * t10707)

        if Bindx == 1671:
            t10717 = np.cos(phi)
            t10718 = t10717 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (6 * phi1 - 5 * phi2)) * np.sqrt(0.5e1) * ((1 - t10717) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t10717)) * (238 * t10717 - 1 + (1938 * t10717 + 1224 + 969 * t10718) * t10718)

        if Bindx == 1672:
            t10722 = np.cos(phi)
            t10723 = t10722 ** 2
            t10724 = t10722 * t10723
            t10727 = t10724 ** 2
            t10725 = t10723 ** 2
            t10721 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.2e1) * t10721 ** 2 * (2324 * t10723 - 4564 * t10724 + 1428 * t10727 - 83 + (-6594 + 4845 * t10725) * t10725 + (13804 * t10725 - 11628 * t10727 + 468) * t10722)

        if Bindx == 1673:
            t10730 = np.cos(phi)
            t10731 = t10730 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((3*1j) * (2 * phi1 - phi2)) * ((1 - t10730) ** (0.9e1 / 0.2e1)) * ((1 + t10730) ** (0.3e1 / 0.2e1)) * (-374 * t10730 - 69 + (5814 * t10730 + 1224 + 4845 * t10731) * t10731)

        if Bindx == 1674:
            t10742 = np.sin(phi)
            t10740 = t10742 ** 2
            t10734 = np.cos(phi)
            t10735 = t10734 ** 2
            t10737 = t10735 ** 2
            t10736 = t10734 * t10735
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.26e2) * t10740 ** 2 * (627 * t10735 - 3213 * t10737 - 19 + (4012 + 4845 * t10736) * t10736 + (-5814 * t10737 - 438) * t10734)

        if Bindx == 1675:
            t10743 = np.cos(phi)
            t10744 = t10743 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (6 * phi1 - phi2)) * np.sqrt(0.78e2) * ((1 - t10743) ** (0.7e1 / 0.2e1)) * ((1 + t10743) ** (0.5e1 / 0.2e1)) * (-102 * t10743 + 9 + (646 * t10743 - 408 + 1615 * t10744) * t10744)

        if Bindx == 1676:
            t10753 = np.sin(phi)
            t10750 = t10753 ** 2
            t10751 = t10753 * t10750
            t10747 = np.cos(phi)
            t10748 = t10747 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((6*1j) * phi1) * np.sqrt(0.2145e4) * t10751 ** 2 * (3 + (-102 + 323 * t10748) * t10748)

        if Bindx == 1677:
            t10754 = np.cos(phi)
            t10755 = t10754 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (6 * phi1 + phi2)) * np.sqrt(0.78e2) * ((1 - t10754) ** (0.5e1 / 0.2e1)) * ((1 + t10754) ** (0.7e1 / 0.2e1)) * (102 * t10754 + 9 + (-646 * t10754 - 408 + 1615 * t10755) * t10755)

        if Bindx == 1678:
            t10766 = np.sin(phi)
            t10764 = t10766 ** 2
            t10758 = np.cos(phi)
            t10759 = t10758 ** 2
            t10761 = t10759 ** 2
            t10760 = t10758 * t10759
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.26e2) * t10764 ** 2 * (627 * t10759 - 3213 * t10761 - 19 + (-4012 + 4845 * t10760) * t10760 + (5814 * t10761 + 438) * t10758)

        if Bindx == 1679:
            t10767 = np.cos(phi)
            t10768 = t10767 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((3*1j) * (2 * phi1 + phi2)) * ((1 - t10767) ** (0.3e1 / 0.2e1)) * ((1 + t10767) ** (0.9e1 / 0.2e1)) * (374 * t10767 - 69 + (-5814 * t10767 + 1224 + 4845 * t10768) * t10768)

        if Bindx == 1680:
            t10772 = np.cos(phi)
            t10773 = t10772 ** 2
            t10774 = t10772 * t10773
            t10777 = t10774 ** 2
            t10775 = t10773 ** 2
            t10771 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.2e1) * t10771 ** 2 * (2324 * t10773 + 4564 * t10774 + 1428 * t10777 - 83 + (-6594 + 4845 * t10775) * t10775 + (-13804 * t10775 + 11628 * t10777 - 468) * t10772)

        if Bindx == 1681:
            t10780 = np.cos(phi)
            t10781 = t10780 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.5e1) * np.sqrt((1 - t10780)) * ((1 + t10780) ** (0.11e2 / 0.2e1)) * (-238 * t10780 - 1 + (-1938 * t10780 + 1224 + 969 * t10781) * t10781)

        if Bindx == 1682:
            t10784 = np.cos(phi)
            t10785 = t10784 ** 2
            t10787 = t10785 ** 2
            t10791 = t10787 ** 2
            t10786 = t10784 * t10785
            t10789 = t10786 ** 2
            t10788 = t10784 * t10787
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((6*1j) * (phi1 + phi2)) * (-4503 * t10785 + 6168 * t10786 + 22442 * t10787 - 34902 * t10789 + 12393 * t10791 + 237 + (1932 + 4845 * t10788) * t10788 + (-23528 * t10789 + 17442 * t10791 - 1502) * t10784)

        if Bindx == 1683:
            t10794 = np.cos(phi)
            t10795 = t10794 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.17e2) * ((1 + t10794) ** (0.13e2 / 0.2e1)) * (-322 * t10794 + 43 + (-798 * t10794 + 792 + 285 * t10795) * t10795) * ((1 - t10794) ** (-0.1e1 / 0.2e1))

        if Bindx == 1684:
            t10799 = np.cos(phi)
            t10800 = t10799 ** 2
            t10801 = t10799 * t10800
            t10804 = t10801 ** 2
            t10802 = t10800 ** 2
            t10798 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.102e3) * t10798 ** 2 * (-124 * t10800 - 520 * t10801 + 772 * t10804 + 31 + (-390 + 95 * t10802) * t10802 + (376 * t10802 + 456 * t10804 + 72) * t10799)

        if Bindx == 1685:
            t10807 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * (-3 + 5 * t10807) * ((1 + t10807) ** (0.15e2 / 0.2e1)) * np.sqrt(0.969e3) * np.exp((3*1j) * (2 * phi1 + 3 * phi2)) * ((1 - t10807) ** (0.3e1 / 0.2e1))

        if Bindx == 1686:
            t10809 = np.cos(phi)
            t10813 = 1 + t10809
            t10810 = t10813 ** 2
            t10811 = t10810 ** 2
            t10808 = -1 + t10809
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.4845e4) * t10808 ** 2 * t10811 ** 2

        if Bindx == 1687:
            t10814 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (7 * phi1 - 10 * phi2)) * np.sqrt(0.285e3) * ((1 - t10814) ** (0.17e2 / 0.2e1)) * ((1 + t10814) ** (0.3e1 / 0.2e1))

        if Bindx == 1688:
            t10815 = np.cos(phi)
            t10819 = -1 + t10815
            t10816 = t10819 ** 2
            t10817 = t10816 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((1j) * (7 * phi1 - 9 * phi2)) * np.sqrt(0.57e2) * t10817 ** 2 * (1 + t10815) * (7 + 10 * t10815)

        if Bindx == 1689:
            t10820 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (7 * phi1 - 8 * phi2)) * np.sqrt(0.6e1) * ((1 - t10820) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t10820)) * (44 + (133 + 95 * t10820) * t10820)

        if Bindx == 1690:
            t10821 = np.cos(phi)
            t10822 = t10821 ** 2
            t10824 = t10822 ** 2
            t10828 = t10824 ** 2
            t10823 = t10821 * t10822
            t10826 = t10823 ** 2
            t10825 = t10821 * t10824
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((7*1j) * (phi1 - phi2)) * (966 * t10822 - 3188 * t10823 + 938 * t10824 - 6440 * t10826 + 4383 * t10828 - 161 + (5586 + 570 * t10825) * t10825 + (-196 * t10826 - 2793 * t10828 + 335) * t10821)

        if Bindx == 1691:
            t10831 = np.cos(phi)
            t10832 = t10831 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (7 * phi1 - 6 * phi2)) * np.sqrt(0.17e2) * ((1 - t10831) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t10831)) * (513 * t10832 + 43 + (285 * t10832 + 279) * t10831)

        if Bindx == 1692:
            t10835 = np.cos(phi)
            t10836 = t10835 ** 2
            t10837 = t10835 * t10836
            t10840 = t10837 ** 2
            t10838 = t10836 ** 2
            t10834 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.85e2) * t10834 ** 2 * (119 * t10836 + 91 * t10837 + 357 * t10840 - 7 + (-455 + 114 * t10838) * t10838 + (217 * t10838 - 399 * t10840 - 37) * t10835)

        if Bindx == 1693:
            t10843 = np.cos(phi)
            t10844 = t10843 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (7 * phi1 - 4 * phi2)) * np.sqrt(0.34e2) * ((1 - t10843) ** (0.11e2 / 0.2e1)) * ((1 + t10843) ** (0.3e1 / 0.2e1)) * (342 * t10844 + 2 + (285 * t10844 + 99) * t10843)

        if Bindx == 1694:
            t10854 = np.sin(phi)
            t10852 = t10854 ** 2
            t10846 = np.cos(phi)
            t10847 = t10846 ** 2
            t10849 = t10847 ** 2
            t10848 = t10846 * t10847
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.17e2) * t10852 ** 2 * (-264 * t10847 + 243 * t10849 + 11 + (742 + 570 * t10848) * t10848 + (-1197 * t10849 - 105) * t10846)

        if Bindx == 1695:
            t10855 = np.cos(phi)
            t10856 = t10855 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (7 * phi1 - 2 * phi2)) * np.sqrt(0.442e3) * ((1 - t10855) ** (0.9e1 / 0.2e1)) * ((1 + t10855) ** (0.5e1 / 0.2e1)) * (171 * t10856 - 7 + (285 * t10856 - 9) * t10855)

        if Bindx == 1696:
            t10865 = np.sin(phi)
            t10862 = t10865 ** 2
            t10863 = t10865 * t10862
            t10858 = np.cos(phi)
            t10859 = t10858 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((1j) * (7 * phi1 - phi2)) * np.sqrt(0.1326e4) * t10863 ** 2 * (21 * t10858 + 3 + (-133 * t10858 - 81 + 190 * t10859) * t10859)

        if Bindx == 1697:
            t10866 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.36465e5) * ((1 - t10866) ** (0.7e1 / 0.2e1)) * ((1 + t10866) ** (0.7e1 / 0.2e1)) * t10866 * (19 * t10866 ** 2 - 3)

        if Bindx == 1698:
            t10874 = np.sin(phi)
            t10871 = t10874 ** 2
            t10872 = t10874 * t10871
            t10867 = np.cos(phi)
            t10868 = t10867 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((1j) * (7 * phi1 + phi2)) * np.sqrt(0.1326e4) * t10872 ** 2 * (-21 * t10867 + 3 + (133 * t10867 - 81 + 190 * t10868) * t10868)

        if Bindx == 1699:
            t10875 = np.cos(phi)
            t10876 = t10875 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (7 * phi1 + 2 * phi2)) * np.sqrt(0.442e3) * ((1 - t10875) ** (0.5e1 / 0.2e1)) * ((1 + t10875) ** (0.9e1 / 0.2e1)) * (-171 * t10876 + 7 + (285 * t10876 - 9) * t10875)

        if Bindx == 1700:
            t10886 = np.sin(phi)
            t10884 = t10886 ** 2
            t10878 = np.cos(phi)
            t10879 = t10878 ** 2
            t10881 = t10879 ** 2
            t10880 = t10878 * t10879
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.17e2) * t10884 ** 2 * (-264 * t10879 + 243 * t10881 + 11 + (-742 + 570 * t10880) * t10880 + (1197 * t10881 + 105) * t10878)

        if Bindx == 1701:
            t10887 = np.cos(phi)
            t10888 = t10887 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (7 * phi1 + 4 * phi2)) * np.sqrt(0.34e2) * ((1 - t10887) ** (0.3e1 / 0.2e1)) * ((1 + t10887) ** (0.11e2 / 0.2e1)) * (-342 * t10888 - 2 + (285 * t10888 + 99) * t10887)

        if Bindx == 1702:
            t10891 = np.cos(phi)
            t10892 = t10891 ** 2
            t10893 = t10891 * t10892
            t10896 = t10893 ** 2
            t10894 = t10892 ** 2
            t10890 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.85e2) * t10890 ** 2 * (119 * t10892 - 91 * t10893 + 357 * t10896 - 7 + (-455 + 114 * t10894) * t10894 + (-217 * t10894 + 399 * t10896 + 37) * t10891)

        if Bindx == 1703:
            t10899 = np.cos(phi)
            t10900 = t10899 ** 2
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.17e2) * np.sqrt((1 - t10899)) * ((1 + t10899) ** (0.13e2 / 0.2e1)) * (-513 * t10900 - 43 + (285 * t10900 + 279) * t10899)

        if Bindx == 1704:
            t10902 = np.cos(phi)
            t10903 = t10902 ** 2
            t10905 = t10903 ** 2
            t10909 = t10905 ** 2
            t10904 = t10902 * t10903
            t10907 = t10904 ** 2
            t10906 = t10902 * t10905
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((7*1j) * (phi1 + phi2)) * (966 * t10903 + 3188 * t10904 + 938 * t10905 - 6440 * t10907 + 4383 * t10909 - 161 + (-5586 + 570 * t10906) * t10906 + (196 * t10907 + 2793 * t10909 - 335) * t10902)

        if Bindx == 1705:
            t10912 = np.cos(phi)
            t10913 = t10912 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (7 * phi1 + 8 * phi2)) * np.sqrt(0.6e1) * ((1 + t10912) ** (0.15e2 / 0.2e1)) * (-228 * t10913 - 44 + (95 * t10913 + 177) * t10912) * ((1 - t10912) ** (-0.1e1 / 0.2e1))

        if Bindx == 1706:
            t10915 = np.cos(phi)
            t10919 = 1 + t10915
            t10916 = t10919 ** 2
            t10917 = t10916 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((1j) * (7 * phi1 + 9 * phi2)) * np.sqrt(0.57e2) * (-1 + t10915) * t10917 ** 2 * (-7 + 10 * t10915)

        if Bindx == 1707:
            t10920 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (7 * phi1 + 10 * phi2)) * np.sqrt(0.285e3) * ((1 - t10920) ** (0.3e1 / 0.2e1)) * ((1 + t10920) ** (0.17e2 / 0.2e1))

        if Bindx == 1708:
            t10921 = np.cos(phi)
            t10926 = -1 + t10921
            t10922 = t10926 ** 2
            t10923 = t10922 ** 2
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.190e3) * t10926 * t10923 ** 2 * (1 + t10921)

        if Bindx == 1709:
            t10927 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (8 * phi1 - 9 * phi2)) * np.sqrt(0.38e2) * ((1 - t10927) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t10927)) * (4 + 5 * t10927)

        if Bindx == 1710:
            t10928 = np.cos(phi)
            t10929 = t10928 ** 2
            t10931 = t10929 ** 2
            t10935 = t10931 ** 2
            t10930 = t10928 * t10929
            t10933 = t10930 ** 2
            t10932 = t10928 * t10931
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((8*1j) * (phi1 - phi2)) * (531 * t10929 + 192 * t10930 - 1722 * t10931 - 210 * t10933 + 1503 * t10935 + 59 + (2016 + 95 * t10932) * t10932 + (-1536 * t10933 - 608 * t10935 - 320) * t10928)

        if Bindx == 1711:
            t10938 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (8 * phi1 - 7 * phi2)) * np.sqrt(0.6e1) * ((1 - t10938) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t10938)) * (44 + (133 + 95 * t10938) * t10938)

        if Bindx == 1712:
            t10940 = np.cos(phi)
            t10941 = t10940 ** 2
            t10942 = t10940 * t10941
            t10945 = t10942 ** 2
            t10943 = t10941 ** 2
            t10939 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.1024e4) * np.exp((2*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.102e3) * t10939 ** 2 * (-124 * t10941 + 520 * t10942 + 772 * t10945 + 31 + (-390 + 95 * t10943) * t10943 + (-376 * t10943 - 456 * t10945 - 72) * t10940)

        if Bindx == 1713:
            t10948 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * (8 * phi1 - 5 * phi2)) * np.sqrt(0.510e3) * ((1 - t10948) ** (0.13e2 / 0.2e1)) * ((1 + t10948) ** (0.3e1 / 0.2e1)) * (4 + (19 + 19 * t10948) * t10948)

        if Bindx == 1714:
            t10957 = np.sin(phi)
            t10955 = t10957 ** 2
            t10949 = np.cos(phi)
            t10950 = t10949 ** 2
            t10952 = t10950 ** 2
            t10951 = t10949 * t10950
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((4*1j) * (2 * phi1 - phi2)) * np.sqrt(0.51e2) * t10955 ** 2 * (-143 * t10950 + 277 * t10952 + 11 + (32 + 95 * t10951) * t10951 + (-304 * t10952 + 32) * t10949)

        if Bindx == 1715:
            t10958 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (8 * phi1 - 3 * phi2)) * np.sqrt(0.102e3) * ((1 - t10958) ** (0.11e2 / 0.2e1)) * ((1 + t10958) ** (0.5e1 / 0.2e1)) * (4 + (57 + 95 * t10958) * t10958)

        if Bindx == 1716:
            t10966 = np.sin(phi)
            t10963 = t10966 ** 2
            t10964 = t10966 * t10963
            t10959 = np.cos(phi)
            t10960 = t10959 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((2*1j) * (4 * phi1 - phi2)) * np.sqrt(0.663e3) * t10964 ** 2 * (40 * t10959 - 1 + (-152 * t10959 + 18 + 95 * t10960) * t10960)

        if Bindx == 1717:
            t10967 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * (8 * phi1 - phi2)) * np.sqrt(0.221e3) * ((1 - t10967) ** (0.9e1 / 0.2e1)) * ((1 + t10967) ** (0.7e1 / 0.2e1)) * (-4 + (19 + 95 * t10967) * t10967)

        if Bindx == 1718:
            t10972 = np.sin(phi)
            t10969 = t10972 ** 2
            t10970 = t10969 ** 2
            t10968 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((8*1j) * phi1) * np.sqrt(0.24310e5) * t10970 ** 2 * (19 * t10968 ** 2 - 1)

        if Bindx == 1719:
            t10973 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (8 * phi1 + phi2)) * np.sqrt(0.221e3) * ((1 - t10973) ** (0.7e1 / 0.2e1)) * ((1 + t10973) ** (0.9e1 / 0.2e1)) * (-4 + (-19 + 95 * t10973) * t10973)

        if Bindx == 1720:
            t10981 = np.sin(phi)
            t10978 = t10981 ** 2
            t10979 = t10981 * t10978
            t10974 = np.cos(phi)
            t10975 = t10974 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((2*1j) * (4 * phi1 + phi2)) * np.sqrt(0.663e3) * t10979 ** 2 * (-40 * t10974 - 1 + (152 * t10974 + 18 + 95 * t10975) * t10975)

        if Bindx == 1721:
            t10982 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * (8 * phi1 + 3 * phi2)) * np.sqrt(0.102e3) * ((1 - t10982) ** (0.5e1 / 0.2e1)) * ((1 + t10982) ** (0.11e2 / 0.2e1)) * (4 + (-57 + 95 * t10982) * t10982)

        if Bindx == 1722:
            t10991 = np.sin(phi)
            t10989 = t10991 ** 2
            t10983 = np.cos(phi)
            t10984 = t10983 ** 2
            t10986 = t10984 ** 2
            t10985 = t10983 * t10984
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((4*1j) * (2 * phi1 + phi2)) * np.sqrt(0.51e2) * t10989 ** 2 * (-143 * t10984 + 277 * t10986 + 11 + (-32 + 95 * t10985) * t10985 + (304 * t10986 - 32) * t10983)

        if Bindx == 1723:
            t10992 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (8 * phi1 + 5 * phi2)) * np.sqrt(0.510e3) * ((1 - t10992) ** (0.3e1 / 0.2e1)) * ((1 + t10992) ** (0.13e2 / 0.2e1)) * (4 + (-19 + 19 * t10992) * t10992)

        if Bindx == 1724:
            t10994 = np.cos(phi)
            t10995 = t10994 ** 2
            t10996 = t10994 * t10995
            t10999 = t10996 ** 2
            t10997 = t10995 ** 2
            t10993 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.1024e4) * np.exp((2*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.102e3) * t10993 ** 2 * (-124 * t10995 - 520 * t10996 + 772 * t10999 + 31 + (-390 + 95 * t10997) * t10997 + (376 * t10997 + 456 * t10999 + 72) * t10994)

        if Bindx == 1725:
            t11002 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (8 * phi1 + 7 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t11002)) * ((1 + t11002) ** (0.15e2 / 0.2e1)) * (44 + (-133 + 95 * t11002) * t11002)

        if Bindx == 1726:
            t11003 = np.cos(phi)
            t11004 = t11003 ** 2
            t11006 = t11004 ** 2
            t11010 = t11006 ** 2
            t11005 = t11003 * t11004
            t11008 = t11005 ** 2
            t11007 = t11003 * t11006
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((8*1j) * (phi1 + phi2)) * (531 * t11004 - 192 * t11005 - 1722 * t11006 - 210 * t11008 + 1503 * t11010 + 59 + (-2016 + 95 * t11007) * t11007 + (1536 * t11008 + 608 * t11010 + 320) * t11003)

        if Bindx == 1727:
            t11013 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (8 * phi1 + 9 * phi2)) * np.sqrt(0.38e2) * ((1 + t11013) ** (0.17e2 / 0.2e1)) * (4 + (-9 + 5 * t11013) * t11013) * ((1 - t11013) ** (-0.1e1 / 0.2e1))

        if Bindx == 1728:
            t11014 = np.cos(phi)
            t11019 = 1 + t11014
            t11015 = t11019 ** 2
            t11016 = t11015 ** 2
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.190e3) * (-1 + t11014) * t11019 * t11016 ** 2

        if Bindx == 1729:
            t11020 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (9 * phi1 - 10 * phi2)) * np.sqrt(0.5e1) * ((1 - t11020) ** (0.19e2 / 0.2e1)) * np.sqrt((1 + t11020))

        if Bindx == 1730:
            t11021 = np.cos(phi)
            t11022 = t11021 ** 2
            t11024 = t11022 ** 2
            t11028 = t11024 ** 2
            t11023 = t11021 * t11022
            t11026 = t11023 ** 2
            t11025 = t11021 * t11024
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((9*1j) * (phi1 - phi2)) * (-234 * t11022 + 396 * t11023 - 294 * t11024 + 504 * t11026 + 279 * t11028 - 9 + (-126 + 10 * t11025) * t11025 + (-516 * t11026 - 81 * t11028 + 71) * t11021)

        if Bindx == 1731:
            t11031 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (9 * phi1 - 8 * phi2)) * np.sqrt(0.38e2) * ((1 - t11031) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t11031)) * (4 + 5 * t11031)

        if Bindx == 1732:
            t11032 = np.cos(phi)
            t11036 = -1 + t11032
            t11033 = t11036 ** 2
            t11034 = t11033 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3) * (7 + 10 * t11032) * (1 + t11032) * t11034 ** 2 * np.sqrt(0.57e2) * np.exp((1j) * (9 * phi1 - 7 * phi2))

        if Bindx == 1733:
            t11037 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((3*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.969e3) * ((1 - t11037) ** (0.15e2 / 0.2e1)) * ((1 + t11037) ** (0.3e1 / 0.2e1)) * (3 + 5 * t11037)

        if Bindx == 1734:
            t11046 = np.sin(phi)
            t11044 = t11046 ** 2
            t11038 = np.cos(phi)
            t11039 = t11038 ** 2
            t11041 = t11039 ** 2
            t11040 = t11038 * t11039
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((1j) * (9 * phi1 - 5 * phi2)) * np.sqrt(0.4845e4) * t11044 ** 2 * (15 * t11041 - 1 + (-10 + 2 * t11040) * t11040 + (-9 * t11041 + 3) * t11038)

        if Bindx == 1735:
            t11047 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * (9 * phi1 - 4 * phi2)) * np.sqrt(0.1938e4) * ((1 - t11047) ** (0.13e2 / 0.2e1)) * ((1 + t11047) ** (0.5e1 / 0.2e1)) * (2 + 5 * t11047)

        if Bindx == 1736:
            t11055 = np.sin(phi)
            t11052 = t11055 ** 2
            t11053 = t11055 * t11052
            t11048 = np.cos(phi)
            t11049 = t11048 ** 2
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((3*1j) * (3 * phi1 - phi2)) * np.sqrt(0.969e3) * t11053 ** 2 * (-t11048 - 3 + (-27 * t11048 + 21 + 10 * t11049) * t11049)

        if Bindx == 1737:
            t11056 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (9 * phi1 - 2 * phi2)) * np.sqrt(0.25194e5) * ((1 - t11056) ** (0.11e2 / 0.2e1)) * ((1 + t11056) ** (0.7e1 / 0.2e1)) * (1 + 5 * t11056)

        if Bindx == 1738:
            t11061 = np.sin(phi)
            t11058 = t11061 ** 2
            t11059 = t11058 ** 2
            t11057 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((1j) * (9 * phi1 - phi2)) * np.sqrt(0.8398e4) * t11059 ** 2 * (-1 + (-9 + 10 * t11057) * t11057)

        if Bindx == 1739:
            t11062 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((9*1j) * phi1) * np.sqrt(0.230945e6) * ((1 - t11062) ** (0.9e1 / 0.2e1)) * ((1 + t11062) ** (0.9e1 / 0.2e1)) * t11062

        if Bindx == 1740:
            t11067 = np.sin(phi)
            t11064 = t11067 ** 2
            t11065 = t11064 ** 2
            t11063 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((1j) * (9 * phi1 + phi2)) * np.sqrt(0.8398e4) * t11065 ** 2 * (-1 + (9 + 10 * t11063) * t11063)

        if Bindx == 1741:
            t11068 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (9 * phi1 + 2 * phi2)) * np.sqrt(0.25194e5) * ((1 - t11068) ** (0.7e1 / 0.2e1)) * ((1 + t11068) ** (0.11e2 / 0.2e1)) * (-1 + 5 * t11068)

        if Bindx == 1742:
            t11076 = np.sin(phi)
            t11073 = t11076 ** 2
            t11074 = t11076 * t11073
            t11069 = np.cos(phi)
            t11070 = t11069 ** 2
            tfunc[..., c] = -(0.21e2 / 0.256e3) * np.exp((3*1j) * (3 * phi1 + phi2)) * np.sqrt(0.969e3) * t11074 ** 2 * (t11069 - 3 + (27 * t11069 + 21 + 10 * t11070) * t11070)

        if Bindx == 1743:
            t11077 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * (9 * phi1 + 4 * phi2)) * np.sqrt(0.1938e4) * ((1 - t11077) ** (0.5e1 / 0.2e1)) * ((1 + t11077) ** (0.13e2 / 0.2e1)) * (-2 + 5 * t11077)

        if Bindx == 1744:
            t11086 = np.sin(phi)
            t11084 = t11086 ** 2
            t11078 = np.cos(phi)
            t11079 = t11078 ** 2
            t11081 = t11079 ** 2
            t11080 = t11078 * t11079
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((1j) * (9 * phi1 + 5 * phi2)) * np.sqrt(0.4845e4) * t11084 ** 2 * (15 * t11081 - 1 + (10 + 2 * t11080) * t11080 + (9 * t11081 - 3) * t11078)

        if Bindx == 1745:
            t11087 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((3*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.969e3) * ((1 - t11087) ** (0.3e1 / 0.2e1)) * ((1 + t11087) ** (0.15e2 / 0.2e1)) * (-3 + 5 * t11087)

        if Bindx == 1746:
            t11088 = np.cos(phi)
            t11092 = 1 + t11088
            t11089 = t11092 ** 2
            t11090 = t11089 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((1j) * (9 * phi1 + 7 * phi2)) * np.sqrt(0.57e2) * (-1 + t11088) * t11090 ** 2 * (-7 + 10 * t11088)

        if Bindx == 1747:
            t11093 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (9 * phi1 + 8 * phi2)) * np.sqrt(0.38e2) * np.sqrt((1 - t11093)) * ((1 + t11093) ** (0.17e2 / 0.2e1)) * (-4 + 5 * t11093)

        if Bindx == 1748:
            t11094 = np.cos(phi)
            t11095 = t11094 ** 2
            t11097 = t11095 ** 2
            t11101 = t11097 ** 2
            t11096 = t11094 * t11095
            t11099 = t11096 ** 2
            t11098 = t11094 * t11097
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((9*1j) * (phi1 + phi2)) * (-234 * t11095 - 396 * t11096 - 294 * t11097 + 504 * t11099 + 279 * t11101 - 9 + (126 + 10 * t11098) * t11098 + (516 * t11099 + 81 * t11101 - 71) * t11094)

        if Bindx == 1749:
            t11104 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (9 * phi1 + 10 * phi2)) * np.sqrt(0.5e1) * np.sqrt((1 - t11104)) * ((1 + t11104) ** (0.19e2 / 0.2e1))

        if Bindx == 1750:
            t11105 = np.cos(phi)
            t11115 = -10 * t11105
            t11106 = t11105 ** 2
            t11108 = t11106 ** 2
            t11109 = t11105 * t11108
            t11107 = t11105 * t11106
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((10*1j) * (phi1 - phi2)) * (45 * t11106 + t11115 + 1 + (-252 + t11109) * t11109 + (210 + (t11115 + 45) * t11108) * t11108 + (-120 + (-120 * t11105 + 210) * t11107) * t11107)

        if Bindx == 1751:
            t11116 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (10 * phi1 - 9 * phi2)) * np.sqrt(0.5e1) * ((1 - t11116) ** (0.19e2 / 0.2e1)) * np.sqrt((1 + t11116))

        if Bindx == 1752:
            t11117 = np.cos(phi)
            t11122 = -1 + t11117
            t11118 = t11122 ** 2
            t11119 = t11118 ** 2
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.190e3) * t11122 * t11119 ** 2 * (1 + t11117)

        if Bindx == 1753:
            t11123 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (10 * phi1 - 7 * phi2)) * np.sqrt(0.285e3) * ((1 - t11123) ** (0.17e2 / 0.2e1)) * ((1 + t11123) ** (0.3e1 / 0.2e1))

        if Bindx == 1754:
            t11125 = np.cos(phi)
            t11129 = -1 + t11125
            t11126 = t11129 ** 2
            t11127 = t11126 ** 2
            t11124 = 1 + t11125
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.4845e4) * t11127 ** 2 * t11124 ** 2

        if Bindx == 1755:
            t11130 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((5*1j) * (2 * phi1 - phi2)) * np.sqrt(0.969e3) * ((1 - t11130) ** (0.15e2 / 0.2e1)) * ((1 + t11130) ** (0.5e1 / 0.2e1))

        if Bindx == 1756:
            t11131 = np.cos(phi)
            t11139 = -1 + t11131
            t11138 = 1 + t11131
            t11136 = t11138 ** 2
            t11132 = t11139 ** 2
            t11133 = t11139 * t11132
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((2*1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.9690e4) * t11139 * t11133 ** 2 * t11138 * t11136

        if Bindx == 1757:
            t11140 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * (10 * phi1 - 3 * phi2)) * np.sqrt(0.4845e4) * ((1 - t11140) ** (0.13e2 / 0.2e1)) * ((1 + t11140) ** (0.7e1 / 0.2e1))

        if Bindx == 1758:
            t11141 = np.cos(phi)
            t11148 = -1 + t11141
            t11147 = 1 + t11141
            t11145 = t11147 ** 2
            t11142 = t11148 ** 2
            t11143 = t11148 * t11142
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 - phi2)) * np.sqrt(0.125970e6) * t11143 ** 2 * t11145 ** 2

        if Bindx == 1759:
            t11149 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (10 * phi1 - phi2)) * np.sqrt(0.41990e5) * ((1 - t11149) ** (0.11e2 / 0.2e1)) * ((1 + t11149) ** (0.9e1 / 0.2e1))

        if Bindx == 1760:
            t11154 = np.sin(phi)
            t11150 = t11154 ** 2
            t11152 = t11154 * t11150 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((10*1j) * phi1) * np.sqrt(0.46189e5) * t11152 ** 2

        if Bindx == 1761:
            t11155 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (10 * phi1 + phi2)) * np.sqrt(0.41990e5) * ((1 - t11155) ** (0.9e1 / 0.2e1)) * ((1 + t11155) ** (0.11e2 / 0.2e1))

        if Bindx == 1762:
            t11156 = np.cos(phi)
            t11163 = -1 + t11156
            t11162 = 1 + t11156
            t11159 = t11162 ** 2
            t11160 = t11162 * t11159
            t11157 = t11163 ** 2
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 + phi2)) * np.sqrt(0.125970e6) * t11157 ** 2 * t11160 ** 2

        if Bindx == 1763:
            t11164 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((1j) * (10 * phi1 + 3 * phi2)) * np.sqrt(0.4845e4) * ((1 - t11164) ** (0.7e1 / 0.2e1)) * ((1 + t11164) ** (0.13e2 / 0.2e1))

        if Bindx == 1764:
            t11165 = np.cos(phi)
            t11173 = -1 + t11165
            t11172 = 1 + t11165
            t11168 = t11172 ** 2
            t11169 = t11172 * t11168
            t11166 = t11173 ** 2
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((2*1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.9690e4) * t11173 * t11166 * t11172 * t11169 ** 2

        if Bindx == 1765:
            t11174 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((5*1j) * (2 * phi1 + phi2)) * np.sqrt(0.969e3) * ((1 - t11174) ** (0.5e1 / 0.2e1)) * ((1 + t11174) ** (0.15e2 / 0.2e1))

        if Bindx == 1766:
            t11176 = np.cos(phi)
            t11180 = 1 + t11176
            t11177 = t11180 ** 2
            t11178 = t11177 ** 2
            t11175 = -1 + t11176
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.4845e4) * t11175 ** 2 * t11178 ** 2

        if Bindx == 1767:
            t11181 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.exp((1j) * (10 * phi1 + 7 * phi2)) * np.sqrt(0.285e3) * ((1 - t11181) ** (0.3e1 / 0.2e1)) * ((1 + t11181) ** (0.17e2 / 0.2e1))

        if Bindx == 1768:
            t11182 = np.cos(phi)
            t11187 = 1 + t11182
            t11183 = t11187 ** 2
            t11184 = t11183 ** 2
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.190e3) * (-1 + t11182) * t11187 * t11184 ** 2

        if Bindx == 1769:
            t11188 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.512e3*1j) * np.exp((1j) * (10 * phi1 + 9 * phi2)) * np.sqrt(0.5e1) * np.sqrt((1 - t11188)) * ((1 + t11188) ** (0.19e2 / 0.2e1))

        if Bindx == 1770:
            t11189 = np.cos(phi)
            t11199 = 10 * t11189
            t11190 = t11189 ** 2
            t11192 = t11190 ** 2
            t11193 = t11189 * t11192
            t11191 = t11189 * t11190
            tfunc[..., c] = (0.21e2 / 0.1024e4) * np.exp((10*1j) * (phi1 + phi2)) * (45 * t11190 + t11199 + 1 + (252 + t11193) * t11193 + (210 + (t11199 + 45) * t11192) * t11192 + (120 + (120 * t11189 + 210) * t11191) * t11191)

        if Bindx == 1771:
            t11200 = np.cos(phi)
            t11201 = t11200 ** 2
            t11203 = t11201 ** 2
            t11204 = t11200 * t11203
            t11209 = t11204 ** 2
            t11207 = t11203 ** 2
            t11202 = t11200 * t11201
            t11205 = t11202 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-11*1j) * (phi1 + phi2)) * (55 * t11201 + 165 * t11202 + 330 * t11203 + 462 * t11204 + 462 * t11205 + 165 * t11207 + 11 * t11209 + 1 + (330 * t11205 + 55 * t11207 + t11209 + 11) * t11200)

        if Bindx == 1772:
            t11211 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((-1*1j) * (11 * phi1 + 10 * phi2)) * np.sqrt(0.22e2) * ((1 + t11211) ** (0.21e2 / 0.2e1)) * np.sqrt((1 - t11211))

        if Bindx == 1773:
            t11212 = np.cos(phi)
            t11217 = 1 + t11212
            t11213 = t11217 ** 2
            t11215 = t11217 * t11213 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 + 9 * phi2)) * np.sqrt(0.231e3) * (-1 + t11212) * t11215 ** 2

        if Bindx == 1774:
            t11218 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (11 * phi1 + 8 * phi2)) * np.sqrt(0.385e3) * ((1 - t11218) ** (0.3e1 / 0.2e1)) * ((1 + t11218) ** (0.19e2 / 0.2e1))

        if Bindx == 1775:
            t11220 = np.cos(phi)
            t11225 = 1 + t11220
            t11221 = t11225 ** 2
            t11222 = t11221 ** 2
            t11219 = -1 + t11220
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 + 7 * phi2)) * np.sqrt(0.7315e4) * t11219 ** 2 * t11225 * t11222 ** 2

        if Bindx == 1776:
            t11226 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.exp((-1*1j) * (11 * phi1 + 6 * phi2)) * np.sqrt(0.2926e4) * ((1 - t11226) ** (0.5e1 / 0.2e1)) * ((1 + t11226) ** (0.17e2 / 0.2e1))

        if Bindx == 1777:
            t11227 = np.cos(phi)
            t11234 = -1 + t11227
            t11233 = 1 + t11227
            t11230 = t11233 ** 2
            t11231 = t11230 ** 2
            t11228 = t11234 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 + 5 * phi2)) * np.sqrt(0.74613e5) * t11234 * t11228 * t11231 ** 2

        if Bindx == 1778:
            t11235 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((-1*1j) * (11 * phi1 + 4 * phi2)) * np.sqrt(0.10659e5) * ((1 - t11235) ** (0.7e1 / 0.2e1)) * ((1 + t11235) ** (0.15e2 / 0.2e1))

        if Bindx == 1779:
            t11236 = np.cos(phi)
            t11244 = -1 + t11236
            t11243 = 1 + t11236
            t11239 = t11243 ** 2
            t11240 = t11243 * t11239
            t11237 = t11244 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 + 3 * phi2)) * np.sqrt(0.35530e5) * t11237 ** 2 * t11243 * t11240 ** 2

        if Bindx == 1780:
            t11245 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (11 * phi1 + 2 * phi2)) * np.sqrt(0.124355e6) * ((1 - t11245) ** (0.9e1 / 0.2e1)) * ((1 + t11245) ** (0.13e2 / 0.2e1))

        if Bindx == 1781:
            t11250 = np.sin(phi)
            t11246 = t11250 ** 2
            t11248 = t11250 * t11246 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 + phi2)) * np.sqrt(0.646646e6) * t11248 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 1782:
            t11251 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((-11*1j) * phi1) * np.sqrt(0.176358e6) * ((1 - t11251) ** (0.11e2 / 0.2e1)) * ((1 + t11251) ** (0.11e2 / 0.2e1))

        if Bindx == 1783:
            t11256 = np.sin(phi)
            t11252 = t11256 ** 2
            t11254 = t11256 * t11252 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 - phi2)) * np.sqrt(0.646646e6) * t11254 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 1784:
            t11257 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (11 * phi1 - 2 * phi2)) * np.sqrt(0.124355e6) * ((1 - t11257) ** (0.13e2 / 0.2e1)) * ((1 + t11257) ** (0.9e1 / 0.2e1))

        if Bindx == 1785:
            t11258 = np.cos(phi)
            t11266 = -1 + t11258
            t11265 = 1 + t11258
            t11263 = t11265 ** 2
            t11259 = t11266 ** 2
            t11260 = t11266 * t11259
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 - 3 * phi2)) * np.sqrt(0.35530e5) * t11266 * t11260 ** 2 * t11263 ** 2

        if Bindx == 1786:
            t11267 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((-1*1j) * (11 * phi1 - 4 * phi2)) * np.sqrt(0.10659e5) * ((1 - t11267) ** (0.15e2 / 0.2e1)) * ((1 + t11267) ** (0.7e1 / 0.2e1))

        if Bindx == 1787:
            t11268 = np.cos(phi)
            t11275 = -1 + t11268
            t11274 = 1 + t11268
            t11272 = t11274 ** 2
            t11269 = t11275 ** 2
            t11270 = t11269 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 - 5 * phi2)) * np.sqrt(0.74613e5) * t11270 ** 2 * t11274 * t11272

        if Bindx == 1788:
            t11276 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.exp((-1*1j) * (11 * phi1 - 6 * phi2)) * np.sqrt(0.2926e4) * ((1 - t11276) ** (0.17e2 / 0.2e1)) * ((1 + t11276) ** (0.5e1 / 0.2e1))

        if Bindx == 1789:
            t11278 = np.cos(phi)
            t11283 = -1 + t11278
            t11279 = t11283 ** 2
            t11280 = t11279 ** 2
            t11277 = 1 + t11278
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 - 7 * phi2)) * np.sqrt(0.7315e4) * t11283 * t11280 ** 2 * t11277 ** 2

        if Bindx == 1790:
            t11284 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (11 * phi1 - 8 * phi2)) * np.sqrt(0.385e3) * ((1 - t11284) ** (0.19e2 / 0.2e1)) * ((1 + t11284) ** (0.3e1 / 0.2e1))

        if Bindx == 1791:
            t11285 = np.cos(phi)
            t11290 = -1 + t11285
            t11286 = t11290 ** 2
            t11288 = t11290 * t11286 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 - 9 * phi2)) * np.sqrt(0.231e3) * t11288 ** 2 * (1 + t11285)

        if Bindx == 1792:
            t11291 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((-1*1j) * (11 * phi1 - 10 * phi2)) * np.sqrt(0.22e2) * ((1 - t11291) ** (0.21e2 / 0.2e1)) * np.sqrt((1 + t11291))

        if Bindx == 1793:
            t11292 = np.cos(phi)
            t11293 = t11292 ** 2
            t11295 = t11293 ** 2
            t11296 = t11292 * t11295
            t11301 = t11296 ** 2
            t11299 = t11295 ** 2
            t11294 = t11292 * t11293
            t11297 = t11294 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-11*1j) * (phi1 - phi2)) * (-55 * t11293 + 165 * t11294 - 330 * t11295 + 462 * t11296 - 462 * t11297 - 165 * t11299 - 11 * t11301 - 1 + (330 * t11297 + 55 * t11299 + t11301 + 11) * t11292)

        if Bindx == 1794:
            t11303 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((-1*1j) * (10 * phi1 + 11 * phi2)) * np.sqrt(0.22e2) * np.sqrt((1 - t11303)) * ((1 + t11303) ** (0.21e2 / 0.2e1))

        if Bindx == 1795:
            t11304 = np.cos(phi)
            t11305 = t11304 ** 2
            t11307 = t11305 ** 2
            t11308 = t11304 * t11307
            t11313 = t11308 ** 2
            t11311 = t11307 ** 2
            t11306 = t11304 * t11305
            t11309 = t11306 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((-10*1j) * (phi1 + phi2)) * (-340 * t11305 - 705 * t11306 - 780 * t11307 - 210 * t11308 + 672 * t11309 + 870 * t11311 + 100 * t11313 - 10 + (1110 * t11309 + 395 * t11311 + 11 * t11313 - 89) * t11304)

        if Bindx == 1796:
            t11315 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((-1*1j) * (10 * phi1 + 9 * phi2)) * np.sqrt(0.42e2) * ((1 + t11315) ** (0.19e2 / 0.2e1)) * (9 + (-20 + 11 * t11315) * t11315) * ((1 - t11315) ** (-0.1e1 / 0.2e1))

        if Bindx == 1797:
            t11316 = np.cos(phi)
            t11321 = 1 + t11316
            t11317 = t11321 ** 2
            t11318 = t11317 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * (-8 + 11 * t11316) * (-1 + t11316) * t11321 * t11318 ** 2 * np.sqrt(0.70e2) * np.exp((-2*1j) * (5 * phi1 + 4 * phi2))

        if Bindx == 1798:
            t11322 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * (-7 + 11 * t11322) * ((1 + t11322) ** (0.17e2 / 0.2e1)) * np.sqrt(0.1330e4) * np.exp((-1*1j) * (10 * phi1 + 7 * phi2)) * ((1 - t11322) ** (0.3e1 / 0.2e1))

        if Bindx == 1799:
            t11324 = np.cos(phi)
            t11328 = 1 + t11324
            t11325 = t11328 ** 2
            t11326 = t11325 ** 2
            t11323 = -1 + t11324
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.133e3) * t11326 ** 2 * t11323 ** 2 * (-6 + 11 * t11324)

        if Bindx == 1800:
            t11329 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * (-5 + 11 * t11329) * ((1 + t11329) ** (0.15e2 / 0.2e1)) * np.sqrt(0.13566e5) * np.exp((-5*1j) * (2 * phi1 + phi2)) * ((1 - t11329) ** (0.5e1 / 0.2e1))

        if Bindx == 1801:
            t11338 = np.sin(phi)
            t11335 = t11338 ** 2
            t11336 = t11338 * t11335
            t11330 = np.cos(phi)
            t11331 = t11330 ** 2
            t11333 = t11331 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-2*1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.1938e4) * t11336 ** 2 * (20 * t11331 + 40 * t11333 - 4 + (50 * t11331 + 11 * t11333 - 5) * t11330)

        if Bindx == 1802:
            t11339 = np.cos(phi)
            tfunc[..., c] = (0.69e2 / 0.1024e4*1j) * (-3 + 11 * t11339) * ((1 + t11339) ** (0.13e2 / 0.2e1)) * np.sqrt(0.1615e4) * np.exp((-1*1j) * (10 * phi1 + 3 * phi2)) * ((1 - t11339) ** (0.7e1 / 0.2e1))

        if Bindx == 1803:
            t11346 = np.sin(phi)
            t11343 = t11346 ** 2
            t11344 = t11343 ** 2
            t11340 = np.cos(phi)
            t11341 = t11340 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 + phi2)) * np.sqrt(0.22610e5) * t11344 ** 2 * (20 * t11341 - 2 + (11 * t11341 + 7) * t11340)

        if Bindx == 1804:
            t11347 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (-1 + 11 * t11347) * ((1 + t11347) ** (0.11e2 / 0.2e1)) * np.sqrt(0.29393e5) * np.exp((-1*1j) * (10 * phi1 + phi2)) * ((1 - t11347) ** (0.9e1 / 0.2e1))

        if Bindx == 1805:
            t11352 = np.sin(phi)
            t11348 = t11352 ** 2
            t11350 = t11352 * t11348 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-10*1j) * phi1) * np.sqrt(0.969969e6) * t11350 ** 2 * np.cos(phi)

        if Bindx == 1806:
            t11353 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (1 + 11 * t11353) * ((1 + t11353) ** (0.9e1 / 0.2e1)) * np.sqrt(0.29393e5) * np.exp((-1*1j) * (10 * phi1 - phi2)) * ((1 - t11353) ** (0.11e2 / 0.2e1))

        if Bindx == 1807:
            t11360 = np.sin(phi)
            t11357 = t11360 ** 2
            t11358 = t11357 ** 2
            t11354 = np.cos(phi)
            t11355 = t11354 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 - phi2)) * np.sqrt(0.22610e5) * t11358 ** 2 * (-20 * t11355 + 2 + (11 * t11355 + 7) * t11354)

        if Bindx == 1808:
            t11361 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * (3 + 11 * t11361) * ((1 + t11361) ** (0.7e1 / 0.2e1)) * np.sqrt(0.1615e4) * np.exp((-1*1j) * (10 * phi1 - 3 * phi2)) * ((1 - t11361) ** (0.13e2 / 0.2e1))

        if Bindx == 1809:
            t11370 = np.sin(phi)
            t11367 = t11370 ** 2
            t11368 = t11370 * t11367
            t11362 = np.cos(phi)
            t11363 = t11362 ** 2
            t11365 = t11363 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-2*1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.1938e4) * t11368 ** 2 * (-20 * t11363 - 40 * t11365 + 4 + (50 * t11363 + 11 * t11365 - 5) * t11362)

        if Bindx == 1810:
            t11371 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * (5 + 11 * t11371) * ((1 + t11371) ** (0.5e1 / 0.2e1)) * np.sqrt(0.13566e5) * np.exp((-5*1j) * (2 * phi1 - phi2)) * ((1 - t11371) ** (0.15e2 / 0.2e1))

        if Bindx == 1811:
            t11373 = np.cos(phi)
            t11377 = -1 + t11373
            t11374 = t11377 ** 2
            t11375 = t11374 ** 2
            t11372 = 1 + t11373
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.133e3) * t11372 ** 2 * t11375 ** 2 * (6 + 11 * t11373)

        if Bindx == 1812:
            t11378 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * (7 + 11 * t11378) * ((1 + t11378) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1330e4) * np.exp((-1*1j) * (10 * phi1 - 7 * phi2)) * ((1 - t11378) ** (0.17e2 / 0.2e1))

        if Bindx == 1813:
            t11379 = np.cos(phi)
            t11384 = -1 + t11379
            t11380 = t11384 ** 2
            t11381 = t11380 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.70e2) * (1 + t11379) * t11384 * t11381 ** 2 * (8 + 11 * t11379)

        if Bindx == 1814:
            t11385 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * (9 + 11 * t11385) * np.sqrt((1 + t11385)) * np.sqrt(0.42e2) * np.exp((-1*1j) * (10 * phi1 - 9 * phi2)) * ((1 - t11385) ** (0.19e2 / 0.2e1))

        if Bindx == 1815:
            t11386 = np.cos(phi)
            t11387 = t11386 ** 2
            t11389 = t11387 ** 2
            t11390 = t11386 * t11389
            t11395 = t11390 ** 2
            t11393 = t11389 ** 2
            t11388 = t11386 * t11387
            t11391 = t11388 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((-10*1j) * (phi1 - phi2)) * (340 * t11387 - 705 * t11388 + 780 * t11389 - 210 * t11390 - 672 * t11391 - 870 * t11393 - 100 * t11395 + 10 + (1110 * t11391 + 395 * t11393 + 11 * t11395 - 89) * t11386)

        if Bindx == 1816:
            t11397 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((-1*1j) * (10 * phi1 - 11 * phi2)) * np.sqrt(0.22e2) * ((1 - t11397) ** (0.21e2 / 0.2e1)) * np.sqrt((1 + t11397))

        if Bindx == 1817:
            t11398 = np.cos(phi)
            t11403 = 1 + t11398
            t11399 = t11403 ** 2
            t11401 = t11403 * t11399 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 + 11 * phi2)) * np.sqrt(0.231e3) * (-1 + t11398) * t11401 ** 2

        if Bindx == 1818:
            t11404 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((-1*1j) * (9 * phi1 + 10 * phi2)) * np.sqrt(0.42e2) * np.sqrt((1 - t11404)) * ((1 + t11404) ** (0.19e2 / 0.2e1)) * (-9 + 11 * t11404)

        if Bindx == 1819:
            t11405 = np.cos(phi)
            t11406 = t11405 ** 2
            t11408 = t11406 ** 2
            t11409 = t11405 * t11408
            t11414 = t11409 ** 2
            t11412 = t11408 ** 2
            t11407 = t11405 * t11406
            t11410 = t11407 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-9*1j) * (phi1 + phi2)) * (2265 * t11406 + 1155 * t11407 - 4410 * t11408 - 9198 * t11409 - 5838 * t11410 + 7155 * t11412 + 1701 * t11414 + 151 + (2790 * t11410 + 5065 * t11412 + 231 * t11414 + 981) * t11405)

        if Bindx == 1820:
            t11416 = np.cos(phi)
            t11417 = t11416 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (9 * phi1 + 8 * phi2)) * np.sqrt(0.15e2) * ((1 + t11416) ** (0.17e2 / 0.2e1)) * (-189 * t11417 - 39 + (77 * t11417 + 151) * t11416) * ((1 - t11416) ** (-0.1e1 / 0.2e1))

        if Bindx == 1821:
            t11420 = np.cos(phi)
            t11421 = t11420 ** 2
            t11423 = t11421 ** 2
            t11427 = t11423 ** 2
            t11422 = t11420 * t11421
            t11425 = t11422 ** 2
            t11419 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 + 7 * phi2)) * np.sqrt(0.285e3) * t11419 ** 2 * (-504 * t11422 - 798 * t11423 + 840 * t11425 + 441 * t11427 + 29 + (-126 * t11423 + 960 * t11425 + 77 * t11427 + 105) * t11420)

        if Bindx == 1822:
            t11429 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * (61 + (-252 + 231 * t11429) * t11429) * ((1 + t11429) ** (0.15e2 / 0.2e1)) * np.sqrt(0.114e3) * np.exp((-3*1j) * (3 * phi1 + 2 * phi2)) * ((1 - t11429) ** (0.3e1 / 0.2e1))

        if Bindx == 1823:
            t11439 = np.sin(phi)
            t11437 = t11439 ** 2
            t11430 = np.cos(phi)
            t11431 = t11430 ** 2
            t11432 = t11430 * t11431
            t11435 = t11432 ** 2
            t11433 = t11431 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 + 5 * phi2)) * np.sqrt(0.323e3) * t11437 ** 2 * (-143 * t11431 - 185 * t11432 + 135 * t11433 + 315 * t11435 + 13 + (433 * t11433 + 77 * t11435 - 5) * t11430)

        if Bindx == 1824:
            t11440 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.512e3*1j) * (1 + (-8 + 11 * t11440) * t11440) * ((1 + t11440) ** (0.13e2 / 0.2e1)) * np.sqrt(0.2261e4) * np.exp((-1*1j) * (9 * phi1 + 4 * phi2)) * ((1 - t11440) ** (0.5e1 / 0.2e1))

        if Bindx == 1825:
            t11449 = np.sin(phi)
            t11446 = t11449 ** 2
            t11447 = t11449 * t11446
            t11441 = np.cos(phi)
            t11442 = t11441 ** 2
            t11444 = t11442 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-3*1j) * (3 * phi1 + phi2)) * np.sqrt(0.67830e5) * t11447 ** 2 * (-18 * t11442 + 81 * t11444 + 1 + (46 * t11442 + 33 * t11444 - 15) * t11441)

        if Bindx == 1826:
            t11450 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (-1 + (-28 + 77 * t11450) * t11450) * ((1 + t11450) ** (0.11e2 / 0.2e1)) * np.sqrt(0.4845e4) * np.exp((-1*1j) * (9 * phi1 + 2 * phi2)) * ((1 - t11450) ** (0.7e1 / 0.2e1))

        if Bindx == 1827:
            t11457 = np.sin(phi)
            t11454 = t11457 ** 2
            t11455 = t11454 ** 2
            t11451 = np.cos(phi)
            t11452 = t11451 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 + phi2)) * np.sqrt(0.25194e5) * t11455 ** 2 * (63 * t11452 - 3 + (77 * t11452 - 17) * t11451)

        if Bindx == 1828:
            t11458 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (21 * t11458 ** 2 - 1) * ((1 + t11458) ** (0.9e1 / 0.2e1)) * np.sqrt(0.92378e5) * np.exp((-9*1j) * phi1) * ((1 - t11458) ** (0.9e1 / 0.2e1))

        if Bindx == 1829:
            t11465 = np.sin(phi)
            t11462 = t11465 ** 2
            t11463 = t11462 ** 2
            t11459 = np.cos(phi)
            t11460 = t11459 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 - phi2)) * np.sqrt(0.25194e5) * t11463 ** 2 * (-63 * t11460 + 3 + (77 * t11460 - 17) * t11459)

        if Bindx == 1830:
            t11466 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (-1 + (28 + 77 * t11466) * t11466) * ((1 + t11466) ** (0.7e1 / 0.2e1)) * np.sqrt(0.4845e4) * np.exp((-1*1j) * (9 * phi1 - 2 * phi2)) * ((1 - t11466) ** (0.11e2 / 0.2e1))

        if Bindx == 1831:
            t11475 = np.sin(phi)
            t11472 = t11475 ** 2
            t11473 = t11475 * t11472
            t11467 = np.cos(phi)
            t11468 = t11467 ** 2
            t11470 = t11468 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-3*1j) * (3 * phi1 - phi2)) * np.sqrt(0.67830e5) * t11473 ** 2 * (18 * t11468 - 81 * t11470 - 1 + (46 * t11468 + 33 * t11470 - 15) * t11467)

        if Bindx == 1832:
            t11476 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.512e3*1j) * (1 + (8 + 11 * t11476) * t11476) * ((1 + t11476) ** (0.5e1 / 0.2e1)) * np.sqrt(0.2261e4) * np.exp((-1*1j) * (9 * phi1 - 4 * phi2)) * ((1 - t11476) ** (0.13e2 / 0.2e1))

        if Bindx == 1833:
            t11486 = np.sin(phi)
            t11484 = t11486 ** 2
            t11477 = np.cos(phi)
            t11478 = t11477 ** 2
            t11479 = t11477 * t11478
            t11482 = t11479 ** 2
            t11480 = t11478 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 - 5 * phi2)) * np.sqrt(0.323e3) * t11484 ** 2 * (143 * t11478 - 185 * t11479 - 135 * t11480 - 315 * t11482 - 13 + (433 * t11480 + 77 * t11482 - 5) * t11477)

        if Bindx == 1834:
            t11487 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * (61 + (252 + 231 * t11487) * t11487) * ((1 + t11487) ** (0.3e1 / 0.2e1)) * np.sqrt(0.114e3) * np.exp((-3*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t11487) ** (0.15e2 / 0.2e1))

        if Bindx == 1835:
            t11489 = np.cos(phi)
            t11490 = t11489 ** 2
            t11492 = t11490 ** 2
            t11496 = t11492 ** 2
            t11491 = t11489 * t11490
            t11494 = t11491 ** 2
            t11488 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 - 7 * phi2)) * np.sqrt(0.285e3) * t11488 ** 2 * (-504 * t11491 + 798 * t11492 - 840 * t11494 - 441 * t11496 - 29 + (-126 * t11492 + 960 * t11494 + 77 * t11496 + 105) * t11489)

        if Bindx == 1836:
            t11498 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (39 + (112 + 77 * t11498) * t11498) * np.sqrt((1 + t11498)) * np.sqrt(0.15e2) * np.exp((-1*1j) * (9 * phi1 - 8 * phi2)) * ((1 - t11498) ** (0.17e2 / 0.2e1))

        if Bindx == 1837:
            t11499 = np.cos(phi)
            t11500 = t11499 ** 2
            t11502 = t11500 ** 2
            t11503 = t11499 * t11502
            t11508 = t11503 ** 2
            t11506 = t11502 ** 2
            t11501 = t11499 * t11500
            t11504 = t11501 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-9*1j) * (phi1 - phi2)) * (-2265 * t11500 + 1155 * t11501 + 4410 * t11502 - 9198 * t11503 + 5838 * t11504 - 7155 * t11506 - 1701 * t11508 - 151 + (2790 * t11504 + 5065 * t11506 + 231 * t11508 + 981) * t11499)

        if Bindx == 1838:
            t11510 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * (9 + 11 * t11510) * np.sqrt((1 + t11510)) * np.sqrt(0.42e2) * np.exp((-1*1j) * (9 * phi1 - 10 * phi2)) * ((1 - t11510) ** (0.19e2 / 0.2e1))

        if Bindx == 1839:
            t11511 = np.cos(phi)
            t11516 = -1 + t11511
            t11512 = t11516 ** 2
            t11514 = t11516 * t11512 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 - 11 * phi2)) * np.sqrt(0.231e3) * t11514 ** 2 * (1 + t11511)

        if Bindx == 1840:
            t11517 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (8 * phi1 + 11 * phi2)) * np.sqrt(0.385e3) * ((1 - t11517) ** (0.3e1 / 0.2e1)) * ((1 + t11517) ** (0.19e2 / 0.2e1))

        if Bindx == 1841:
            t11518 = np.cos(phi)
            t11523 = 1 + t11518
            t11519 = t11523 ** 2
            t11520 = t11519 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((-2*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.70e2) * (-1 + t11518) * t11523 * t11520 ** 2 * (-8 + 11 * t11518)

        if Bindx == 1842:
            t11524 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (8 * phi1 + 9 * phi2)) * np.sqrt(0.15e2) * np.sqrt((1 - t11524)) * ((1 + t11524) ** (0.17e2 / 0.2e1)) * (39 + (-112 + 77 * t11524) * t11524)

        if Bindx == 1843:
            t11525 = np.cos(phi)
            t11526 = t11525 ** 2
            t11528 = t11526 ** 2
            t11529 = t11525 * t11528
            t11534 = t11529 ** 2
            t11532 = t11528 ** 2
            t11527 = t11525 * t11526
            t11530 = t11527 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3) * np.exp((-8*1j) * (phi1 + phi2)) * (256 * t11526 + 2877 * t11527 + 3360 * t11528 - 2478 * t11529 - 8064 * t11530 + 2592 * t11532 + 2240 * t11534 - 128 + (-4734 * t11530 + 4645 * t11532 + 385 * t11534 - 439) * t11525)

        if Bindx == 1844:
            t11536 = np.cos(phi)
            t11537 = t11536 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (8 * phi1 + 7 * phi2)) * np.sqrt(0.19e2) * ((1 + t11536) ** (0.15e2 / 0.2e1)) * (-512 * t11536 + 77 + (-1120 * t11536 + 1170 + 385 * t11537) * t11537) * ((1 - t11536) ** (-0.1e1 / 0.2e1))

        if Bindx == 1845:
            t11541 = np.cos(phi)
            t11542 = t11541 ** 2
            t11544 = t11542 ** 2
            t11548 = t11544 ** 2
            t11543 = t11541 * t11542
            t11546 = t11543 ** 2
            t11540 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((-2*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.190e3) * t11540 ** 2 * (120 * t11542 + 76 * t11543 - 328 * t11544 + 8 * t11546 + 336 * t11548 - 8 + (-498 * t11544 + 460 * t11546 + 77 * t11548 + 13) * t11541)

        if Bindx == 1846:
            t11550 = np.cos(phi)
            t11551 = t11550 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (-105 * t11551 - 3 + (77 * t11551 + 39) * t11550) * ((1 + t11550) ** (0.13e2 / 0.2e1)) * np.sqrt(0.4845e4) * np.exp((-1*1j) * (8 * phi1 + 5 * phi2)) * ((1 - t11550) ** (0.3e1 / 0.2e1))

        if Bindx == 1847:
            t11561 = np.sin(phi)
            t11559 = t11561 ** 2
            t11553 = np.cos(phi)
            t11554 = t11553 ** 2
            t11555 = t11553 * t11554
            tfunc[..., c] = (0.23e2 / 0.256e3) * np.exp((-4*1j) * (2 * phi1 + phi2)) * np.sqrt(0.33915e5) * t11559 ** 2 * t11553 * (3 + (-16 + 11 * t11555) * t11555 + (-19 + (32 * t11553 + 21) * t11554) * t11554)

        if Bindx == 1848:
            t11562 = np.cos(phi)
            t11563 = t11562 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * (-45 * t11563 + 1 + (55 * t11563 + 5) * t11562) * ((1 + t11562) ** (0.11e2 / 0.2e1)) * np.sqrt(0.4522e4) * np.exp((-1*1j) * (8 * phi1 + 3 * phi2)) * ((1 - t11562) ** (0.5e1 / 0.2e1))

        if Bindx == 1849:
            t11573 = np.sin(phi)
            t11570 = t11573 ** 2
            t11571 = t11573 * t11570
            t11565 = np.cos(phi)
            t11566 = t11565 ** 2
            t11568 = t11566 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-2*1j) * (4 * phi1 + phi2)) * np.sqrt(0.323e3) * t11571 ** 2 * (-232 * t11566 + 560 * t11568 + 8 + (-50 * t11566 + 385 * t11568 + 1) * t11565)

        if Bindx == 1850:
            t11574 = np.cos(phi)
            t11575 = t11574 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (-21 * t11575 + 1 + (77 * t11575 - 9) * t11574) * ((1 + t11574) ** (0.9e1 / 0.2e1)) * np.sqrt(0.41990e5) * np.exp((-1*1j) * (8 * phi1 + phi2)) * ((1 - t11574) ** (0.7e1 / 0.2e1))

        if Bindx == 1851:
            t11581 = np.sin(phi)
            t11578 = t11581 ** 2
            t11579 = t11578 ** 2
            t11577 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.512e3) * np.exp((-8*1j) * phi1) * np.sqrt(0.1385670e7) * t11579 ** 2 * t11577 * (7 * t11577 ** 2 - 1)

        if Bindx == 1852:
            t11582 = np.cos(phi)
            t11583 = t11582 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (21 * t11583 - 1 + (77 * t11583 - 9) * t11582) * ((1 + t11582) ** (0.7e1 / 0.2e1)) * np.sqrt(0.41990e5) * np.exp((-1*1j) * (8 * phi1 - phi2)) * ((1 - t11582) ** (0.9e1 / 0.2e1))

        if Bindx == 1853:
            t11593 = np.sin(phi)
            t11590 = t11593 ** 2
            t11591 = t11593 * t11590
            t11585 = np.cos(phi)
            t11586 = t11585 ** 2
            t11588 = t11586 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-2*1j) * (4 * phi1 - phi2)) * np.sqrt(0.323e3) * t11591 ** 2 * (232 * t11586 - 560 * t11588 - 8 + (-50 * t11586 + 385 * t11588 + 1) * t11585)

        if Bindx == 1854:
            t11594 = np.cos(phi)
            t11595 = t11594 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4*1j) * (45 * t11595 - 1 + (55 * t11595 + 5) * t11594) * ((1 + t11594) ** (0.5e1 / 0.2e1)) * np.sqrt(0.4522e4) * np.exp((-1*1j) * (8 * phi1 - 3 * phi2)) * ((1 - t11594) ** (0.11e2 / 0.2e1))

        if Bindx == 1855:
            t11605 = np.sin(phi)
            t11603 = t11605 ** 2
            t11597 = np.cos(phi)
            t11598 = t11597 ** 2
            t11599 = t11597 * t11598
            tfunc[..., c] = (0.23e2 / 0.256e3) * np.exp((-4*1j) * (2 * phi1 - phi2)) * np.sqrt(0.33915e5) * t11603 ** 2 * t11597 * (3 + (16 + 11 * t11599) * t11599 + (-19 + (-32 * t11597 + 21) * t11598) * t11598)

        if Bindx == 1856:
            t11606 = np.cos(phi)
            t11607 = t11606 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (105 * t11607 + 3 + (77 * t11607 + 39) * t11606) * ((1 + t11606) ** (0.3e1 / 0.2e1)) * np.sqrt(0.4845e4) * np.exp((-1*1j) * (8 * phi1 - 5 * phi2)) * ((1 - t11606) ** (0.13e2 / 0.2e1))

        if Bindx == 1857:
            t11610 = np.cos(phi)
            t11611 = t11610 ** 2
            t11613 = t11611 ** 2
            t11617 = t11613 ** 2
            t11612 = t11610 * t11611
            t11615 = t11612 ** 2
            t11609 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((-2*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.190e3) * t11609 ** 2 * (-120 * t11611 + 76 * t11612 + 328 * t11613 - 8 * t11615 - 336 * t11617 + 8 + (-498 * t11613 + 460 * t11615 + 77 * t11617 + 13) * t11610)

        if Bindx == 1858:
            t11619 = np.cos(phi)
            t11620 = t11619 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (735 * t11620 + 77 + (385 * t11620 + 435) * t11619) * np.sqrt((1 + t11619)) * np.sqrt(0.19e2) * np.exp((-1*1j) * (8 * phi1 - 7 * phi2)) * ((1 - t11619) ** (0.15e2 / 0.2e1))

        if Bindx == 1859:
            t11622 = np.cos(phi)
            t11623 = t11622 ** 2
            t11625 = t11623 ** 2
            t11626 = t11622 * t11625
            t11631 = t11626 ** 2
            t11629 = t11625 ** 2
            t11624 = t11622 * t11623
            t11627 = t11624 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3) * np.exp((-8*1j) * (phi1 - phi2)) * (-256 * t11623 + 2877 * t11624 - 3360 * t11625 - 2478 * t11626 + 8064 * t11627 - 2592 * t11629 - 2240 * t11631 + 128 + (-4734 * t11627 + 4645 * t11629 + 385 * t11631 - 439) * t11622)

        if Bindx == 1860:
            t11633 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (39 + (112 + 77 * t11633) * t11633) * np.sqrt((1 + t11633)) * np.sqrt(0.15e2) * np.exp((-1*1j) * (8 * phi1 - 9 * phi2)) * ((1 - t11633) ** (0.17e2 / 0.2e1))

        if Bindx == 1861:
            t11634 = np.cos(phi)
            t11639 = -1 + t11634
            t11635 = t11639 ** 2
            t11636 = t11635 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((-2*1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.70e2) * t11639 * t11636 ** 2 * (1 + t11634) * (8 + 11 * t11634)

        if Bindx == 1862:
            t11640 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (8 * phi1 - 11 * phi2)) * np.sqrt(0.385e3) * ((1 - t11640) ** (0.19e2 / 0.2e1)) * ((1 + t11640) ** (0.3e1 / 0.2e1))

        if Bindx == 1863:
            t11642 = np.cos(phi)
            t11647 = 1 + t11642
            t11643 = t11647 ** 2
            t11644 = t11643 ** 2
            t11641 = -1 + t11642
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 + 11 * phi2)) * np.sqrt(0.7315e4) * t11641 ** 2 * t11647 * t11644 ** 2

        if Bindx == 1864:
            t11648 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((-1*1j) * (7 * phi1 + 10 * phi2)) * np.sqrt(0.1330e4) * ((1 - t11648) ** (0.3e1 / 0.2e1)) * ((1 + t11648) ** (0.17e2 / 0.2e1)) * (-7 + 11 * t11648)

        if Bindx == 1865:
            t11650 = np.cos(phi)
            t11651 = t11650 ** 2
            t11653 = t11651 ** 2
            t11657 = t11653 ** 2
            t11652 = t11650 * t11651
            t11655 = t11652 ** 2
            t11649 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 + 9 * phi2)) * np.sqrt(0.285e3) * t11649 ** 2 * (-504 * t11652 - 798 * t11653 + 840 * t11655 + 441 * t11657 + 29 + (-126 * t11653 + 960 * t11655 + 77 * t11657 + 105) * t11650)

        if Bindx == 1866:
            t11659 = np.cos(phi)
            t11660 = t11659 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (7 * phi1 + 8 * phi2)) * np.sqrt(0.19e2) * np.sqrt((1 - t11659)) * ((1 + t11659) ** (0.15e2 / 0.2e1)) * (-735 * t11660 - 77 + (385 * t11660 + 435) * t11659)

        if Bindx == 1867:
            t11662 = np.cos(phi)
            t11663 = t11662 ** 2
            t11665 = t11663 ** 2
            t11666 = t11662 * t11665
            t11671 = t11666 ** 2
            t11669 = t11665 ** 2
            t11664 = t11662 * t11663
            t11667 = t11664 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-7*1j) * (phi1 + phi2)) * (-10931 * t11663 - 3297 * t11664 + 41790 * t11665 + 47418 * t11666 - 37926 * t11667 - 25137 * t11669 + 32585 * t11671 + 643 + (-88866 * t11667 + 39805 * t11669 + 7315 * t11671 - 1351) * t11662)

        if Bindx == 1868:
            t11673 = np.cos(phi)
            t11674 = t11673 ** 2
            t11676 = t11674 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4*1j) * np.exp((-1*1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.10e2) * ((1 + t11673) ** (0.13e2 / 0.2e1)) * (-2926 * t11674 - 4655 * t11676 - 35 + (5510 * t11674 + 1463 * t11676 + 643) * t11673) * ((1 - t11673) ** (-0.1e1 / 0.2e1))

        if Bindx == 1869:
            t11679 = np.cos(phi)
            t11680 = t11679 ** 2
            t11682 = t11680 ** 2
            t11686 = t11682 ** 2
            t11681 = t11679 * t11680
            t11684 = t11681 ** 2
            t11678 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.255e3) * t11678 ** 2 * (252 * t11680 + 2380 * t11681 + 658 * t11682 - 4788 * t11684 + 4655 * t11686 - 9 + (-5614 * t11682 + 2812 * t11684 + 1463 * t11686 - 273) * t11679)

        if Bindx == 1870:
            t11688 = np.cos(phi)
            t11689 = t11688 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * (-3 + (-304 * t11688 + 114 + 209 * t11689) * t11689) * ((1 + t11688) ** (0.11e2 / 0.2e1)) * np.sqrt(0.1785e4) * np.exp((-1*1j) * (7 * phi1 + 4 * phi2)) * ((1 - t11688) ** (0.3e1 / 0.2e1))

        if Bindx == 1871:
            t11701 = np.sin(phi)
            t11699 = t11701 ** 2
            t11692 = np.cos(phi)
            t11693 = t11692 ** 2
            t11694 = t11692 * t11693
            t11697 = t11694 ** 2
            t11695 = t11693 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.238e3) * t11699 ** 2 * (385 * t11693 - 353 * t11694 - 1729 * t11695 + 1995 * t11697 - 11 + (-95 * t11695 + 1045 * t11697 + 43) * t11692)

        if Bindx == 1872:
            t11702 = np.cos(phi)
            t11703 = t11702 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (608 * t11702 - 17 + (-5320 * t11702 - 570 + 7315 * t11703) * t11703) * ((1 + t11702) ** (0.9e1 / 0.2e1)) * np.sqrt(0.17e2) * np.exp((-1*1j) * (7 * phi1 + 2 * phi2)) * ((1 - t11702) ** (0.5e1 / 0.2e1))

        if Bindx == 1873:
            t11714 = np.sin(phi)
            t11711 = t11714 ** 2
            t11712 = t11714 * t11711
            t11706 = np.cos(phi)
            t11707 = t11706 ** 2
            t11709 = t11707 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 + phi2)) * np.sqrt(0.2210e4) * t11712 ** 2 * (-266 * t11707 + 931 * t11709 + 7 + (-874 * t11707 + 1463 * t11709 + 83) * t11706)

        if Bindx == 1874:
            t11715 = np.cos(phi)
            t11716 = t11715 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (1 + (-38 + 133 * t11716) * t11716) * ((1 + t11715) ** (0.7e1 / 0.2e1)) * np.sqrt(0.72930e5) * np.exp((-7*1j) * phi1) * ((1 - t11715) ** (0.7e1 / 0.2e1))

        if Bindx == 1875:
            t11726 = np.sin(phi)
            t11723 = t11726 ** 2
            t11724 = t11726 * t11723
            t11718 = np.cos(phi)
            t11719 = t11718 ** 2
            t11721 = t11719 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 - phi2)) * np.sqrt(0.2210e4) * t11724 ** 2 * (266 * t11719 - 931 * t11721 - 7 + (-874 * t11719 + 1463 * t11721 + 83) * t11718)

        if Bindx == 1876:
            t11727 = np.cos(phi)
            t11728 = t11727 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (-608 * t11727 - 17 + (5320 * t11727 - 570 + 7315 * t11728) * t11728) * ((1 + t11727) ** (0.5e1 / 0.2e1)) * np.sqrt(0.17e2) * np.exp((-1*1j) * (7 * phi1 - 2 * phi2)) * ((1 - t11727) ** (0.9e1 / 0.2e1))

        if Bindx == 1877:
            t11740 = np.sin(phi)
            t11738 = t11740 ** 2
            t11731 = np.cos(phi)
            t11732 = t11731 ** 2
            t11733 = t11731 * t11732
            t11736 = t11733 ** 2
            t11734 = t11732 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.238e3) * t11738 ** 2 * (-385 * t11732 - 353 * t11733 + 1729 * t11734 - 1995 * t11736 + 11 + (-95 * t11734 + 1045 * t11736 + 43) * t11731)

        if Bindx == 1878:
            t11741 = np.cos(phi)
            t11742 = t11741 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * (-3 + (304 * t11741 + 114 + 209 * t11742) * t11742) * ((1 + t11741) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1785e4) * np.exp((-1*1j) * (7 * phi1 - 4 * phi2)) * ((1 - t11741) ** (0.11e2 / 0.2e1))

        if Bindx == 1879:
            t11746 = np.cos(phi)
            t11747 = t11746 ** 2
            t11749 = t11747 ** 2
            t11753 = t11749 ** 2
            t11748 = t11746 * t11747
            t11751 = t11748 ** 2
            t11745 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.255e3) * t11745 ** 2 * (-252 * t11747 + 2380 * t11748 - 658 * t11749 + 4788 * t11751 - 4655 * t11753 + 9 + (-5614 * t11749 + 2812 * t11751 + 1463 * t11753 - 273) * t11746)

        if Bindx == 1880:
            t11755 = np.cos(phi)
            t11756 = t11755 ** 2
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * (608 * t11755 + 35 + (3192 * t11755 + 2318 + 1463 * t11756) * t11756) * np.sqrt((1 + t11755)) * np.sqrt(0.10e2) * np.exp((-1*1j) * (7 * phi1 - 6 * phi2)) * ((1 - t11755) ** (0.13e2 / 0.2e1))

        if Bindx == 1881:
            t11759 = np.cos(phi)
            t11760 = t11759 ** 2
            t11762 = t11760 ** 2
            t11763 = t11759 * t11762
            t11768 = t11763 ** 2
            t11766 = t11762 ** 2
            t11761 = t11759 * t11760
            t11764 = t11761 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-7*1j) * (phi1 - phi2)) * (10931 * t11760 - 3297 * t11761 - 41790 * t11762 + 47418 * t11763 + 37926 * t11764 + 25137 * t11766 - 32585 * t11768 - 643 + (-88866 * t11764 + 39805 * t11766 + 7315 * t11768 - 1351) * t11759)

        if Bindx == 1882:
            t11770 = np.cos(phi)
            t11771 = t11770 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (735 * t11771 + 77 + (385 * t11771 + 435) * t11770) * np.sqrt((1 + t11770)) * np.sqrt(0.19e2) * np.exp((-1*1j) * (7 * phi1 - 8 * phi2)) * ((1 - t11770) ** (0.15e2 / 0.2e1))

        if Bindx == 1883:
            t11774 = np.cos(phi)
            t11775 = t11774 ** 2
            t11777 = t11775 ** 2
            t11781 = t11777 ** 2
            t11776 = t11774 * t11775
            t11779 = t11776 ** 2
            t11773 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 - 9 * phi2)) * np.sqrt(0.285e3) * t11773 ** 2 * (-504 * t11776 + 798 * t11777 - 840 * t11779 - 441 * t11781 - 29 + (-126 * t11777 + 960 * t11779 + 77 * t11781 + 105) * t11774)

        if Bindx == 1884:
            t11783 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * (7 + 11 * t11783) * ((1 + t11783) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1330e4) * np.exp((-1*1j) * (7 * phi1 - 10 * phi2)) * ((1 - t11783) ** (0.17e2 / 0.2e1))

        if Bindx == 1885:
            t11785 = np.cos(phi)
            t11790 = -1 + t11785
            t11786 = t11790 ** 2
            t11787 = t11786 ** 2
            t11784 = 1 + t11785
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 - 11 * phi2)) * np.sqrt(0.7315e4) * t11790 * t11787 ** 2 * t11784 ** 2

        if Bindx == 1886:
            t11791 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.exp((-1*1j) * (6 * phi1 + 11 * phi2)) * np.sqrt(0.2926e4) * ((1 - t11791) ** (0.5e1 / 0.2e1)) * ((1 + t11791) ** (0.17e2 / 0.2e1))

        if Bindx == 1887:
            t11793 = np.cos(phi)
            t11797 = 1 + t11793
            t11794 = t11797 ** 2
            t11795 = t11794 ** 2
            t11792 = -1 + t11793
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.133e3) * t11792 ** 2 * t11795 ** 2 * (-6 + 11 * t11793)

        if Bindx == 1888:
            t11798 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((-3*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.114e3) * ((1 - t11798) ** (0.3e1 / 0.2e1)) * ((1 + t11798) ** (0.15e2 / 0.2e1)) * (61 + (-252 + 231 * t11798) * t11798)

        if Bindx == 1889:
            t11800 = np.cos(phi)
            t11801 = t11800 ** 2
            t11803 = t11801 ** 2
            t11807 = t11803 ** 2
            t11802 = t11800 * t11801
            t11805 = t11802 ** 2
            t11799 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.190e3) * t11799 ** 2 * (120 * t11801 + 76 * t11802 - 328 * t11803 + 8 * t11805 + 336 * t11807 - 8 + (-498 * t11803 + 460 * t11805 + 77 * t11807 + 13) * t11800)

        if Bindx == 1890:
            t11809 = np.cos(phi)
            t11810 = t11809 ** 2
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.exp((-1*1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t11809)) * ((1 + t11809) ** (0.13e2 / 0.2e1)) * (-608 * t11809 + 35 + (-3192 * t11809 + 2318 + 1463 * t11810) * t11810)

        if Bindx == 1891:
            t11813 = np.cos(phi)
            t11814 = t11813 ** 2
            t11816 = t11814 ** 2
            t11817 = t11813 * t11816
            t11822 = t11817 ** 2
            t11820 = t11816 ** 2
            t11815 = t11813 * t11814
            t11818 = t11815 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((-6*1j) * (phi1 + phi2)) * (-2820 * t11814 - 21805 * t11815 + 420 * t11816 + 69846 * t11817 + 40096 * t11818 - 80370 * t11820 + 43092 * t11822 + 94 + (-79650 * t11818 + 16815 * t11820 + 13167 * t11822 + 2139) * t11813)

        if Bindx == 1892:
            t11824 = np.cos(phi)
            t11825 = t11824 ** 2
            t11827 = t11825 ** 2
            t11826 = t11824 * t11825
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((-1*1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.102e3) * ((1 + t11824) ** (0.11e2 / 0.2e1)) * (1575 * t11825 + 17385 * t11827 - 53 + (-9120 + 4389 * t11826) * t11826 + (-14364 * t11827 + 188) * t11824) * ((1 - t11824) ** (-0.1e1 / 0.2e1))

        if Bindx == 1893:
            t11831 = np.cos(phi)
            t11832 = t11831 ** 2
            t11834 = t11832 ** 2
            t11838 = t11834 ** 2
            t11833 = t11831 * t11832
            t11836 = t11833 ** 2
            t11830 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.714e3) * t11830 ** 2 * (-156 * t11832 + 316 * t11833 + 964 * t11834 - 2052 * t11836 + 1368 * t11838 + 4 + (-558 * t11834 - 228 * t11836 + 627 * t11838 - 29) * t11831)

        if Bindx == 1894:
            t11840 = np.cos(phi)
            t11841 = t11840 ** 2
            t11843 = t11841 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (342 * t11841 - 2565 * t11843 - 1 + (570 * t11841 + 1881 * t11843 - 99) * t11840) * ((1 + t11840) ** (0.9e1 / 0.2e1)) * np.sqrt(0.595e3) * np.exp((-3*1j) * (2 * phi1 + phi2)) * ((1 - t11840) ** (0.3e1 / 0.2e1))

        if Bindx == 1895:
            t11854 = np.sin(phi)
            t11852 = t11854 ** 2
            t11845 = np.cos(phi)
            t11846 = t11845 ** 2
            t11847 = t11845 * t11846
            t11850 = t11847 ** 2
            t11848 = t11846 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.170e3) * t11852 ** 2 * (264 * t11846 + 401 * t11847 - 1406 * t11848 + 1596 * t11850 - 6 + (-1387 * t11848 + 1463 * t11850 - 29) * t11845)

        if Bindx == 1896:
            t11855 = np.cos(phi)
            t11856 = t11855 ** 2
            t11858 = t11856 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * (190 * t11856 - 665 * t11858 - 5 + (-570 * t11856 + 1463 * t11858 + 35) * t11855) * ((1 + t11855) ** (0.7e1 / 0.2e1)) * np.sqrt(0.221e3) * np.exp((-1*1j) * (6 * phi1 + phi2)) * ((1 - t11855) ** (0.5e1 / 0.2e1))

        if Bindx == 1897:
            t11866 = np.sin(phi)
            t11863 = t11866 ** 2
            t11864 = t11866 * t11863
            t11860 = np.cos(phi)
            t11861 = t11860 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-6*1j) * phi1) * np.sqrt(0.7293e4) * t11864 ** 2 * t11860 * (15 + (-190 + 399 * t11861) * t11861)

        if Bindx == 1898:
            t11867 = np.cos(phi)
            t11868 = t11867 ** 2
            t11870 = t11868 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4*1j) * (-190 * t11868 + 665 * t11870 + 5 + (-570 * t11868 + 1463 * t11870 + 35) * t11867) * ((1 + t11867) ** (0.5e1 / 0.2e1)) * np.sqrt(0.221e3) * np.exp((-1*1j) * (6 * phi1 - phi2)) * ((1 - t11867) ** (0.7e1 / 0.2e1))

        if Bindx == 1899:
            t11881 = np.sin(phi)
            t11879 = t11881 ** 2
            t11872 = np.cos(phi)
            t11873 = t11872 ** 2
            t11874 = t11872 * t11873
            t11877 = t11874 ** 2
            t11875 = t11873 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.170e3) * t11879 ** 2 * (-264 * t11873 + 401 * t11874 + 1406 * t11875 - 1596 * t11877 + 6 + (-1387 * t11875 + 1463 * t11877 - 29) * t11872)

        if Bindx == 1900:
            t11882 = np.cos(phi)
            t11883 = t11882 ** 2
            t11885 = t11883 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (-342 * t11883 + 2565 * t11885 + 1 + (570 * t11883 + 1881 * t11885 - 99) * t11882) * ((1 + t11882) ** (0.3e1 / 0.2e1)) * np.sqrt(0.595e3) * np.exp((-3*1j) * (2 * phi1 - phi2)) * ((1 - t11882) ** (0.9e1 / 0.2e1))

        if Bindx == 1901:
            t11888 = np.cos(phi)
            t11889 = t11888 ** 2
            t11891 = t11889 ** 2
            t11895 = t11891 ** 2
            t11890 = t11888 * t11889
            t11893 = t11890 ** 2
            t11887 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.714e3) * t11887 ** 2 * (156 * t11889 + 316 * t11890 - 964 * t11891 + 2052 * t11893 - 1368 * t11895 - 4 + (-558 * t11891 - 228 * t11893 + 627 * t11895 - 29) * t11888)

        if Bindx == 1902:
            t11897 = np.cos(phi)
            t11898 = t11897 ** 2
            t11900 = t11898 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * (1710 * t11898 + 9975 * t11900 - 53 + (7410 * t11898 + 4389 * t11900 - 135) * t11897) * np.sqrt((1 + t11897)) * np.sqrt(0.102e3) * np.exp((-1*1j) * (6 * phi1 - 5 * phi2)) * ((1 - t11897) ** (0.11e2 / 0.2e1))

        if Bindx == 1903:
            t11902 = np.cos(phi)
            t11903 = t11902 ** 2
            t11905 = t11903 ** 2
            t11906 = t11902 * t11905
            t11911 = t11906 ** 2
            t11909 = t11905 ** 2
            t11904 = t11902 * t11903
            t11907 = t11904 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((-6*1j) * (phi1 - phi2)) * (2820 * t11903 - 21805 * t11904 - 420 * t11905 + 69846 * t11906 - 40096 * t11907 + 80370 * t11909 - 43092 * t11911 - 94 + (-79650 * t11907 + 16815 * t11909 + 13167 * t11911 + 2139) * t11902)

        if Bindx == 1904:
            t11913 = np.cos(phi)
            t11914 = t11913 ** 2
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * (608 * t11913 + 35 + (3192 * t11913 + 2318 + 1463 * t11914) * t11914) * np.sqrt((1 + t11913)) * np.sqrt(0.10e2) * np.exp((-1*1j) * (6 * phi1 - 7 * phi2)) * ((1 - t11913) ** (0.13e2 / 0.2e1))

        if Bindx == 1905:
            t11918 = np.cos(phi)
            t11919 = t11918 ** 2
            t11921 = t11919 ** 2
            t11925 = t11921 ** 2
            t11920 = t11918 * t11919
            t11923 = t11920 ** 2
            t11917 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.190e3) * t11917 ** 2 * (-120 * t11919 + 76 * t11920 + 328 * t11921 - 8 * t11923 - 336 * t11925 + 8 + (-498 * t11921 + 460 * t11923 + 77 * t11925 + 13) * t11918)

        if Bindx == 1906:
            t11927 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * (61 + (252 + 231 * t11927) * t11927) * ((1 + t11927) ** (0.3e1 / 0.2e1)) * np.sqrt(0.114e3) * np.exp((-3*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t11927) ** (0.15e2 / 0.2e1))

        if Bindx == 1907:
            t11929 = np.cos(phi)
            t11933 = -1 + t11929
            t11930 = t11933 ** 2
            t11931 = t11930 ** 2
            t11928 = 1 + t11929
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.133e3) * t11931 ** 2 * t11928 ** 2 * (6 + 11 * t11929)

        if Bindx == 1908:
            t11934 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.exp((-1*1j) * (6 * phi1 - 11 * phi2)) * np.sqrt(0.2926e4) * ((1 - t11934) ** (0.17e2 / 0.2e1)) * ((1 + t11934) ** (0.5e1 / 0.2e1))

        if Bindx == 1909:
            t11935 = np.cos(phi)
            t11942 = -1 + t11935
            t11941 = 1 + t11935
            t11938 = t11941 ** 2
            t11939 = t11938 ** 2
            t11936 = t11942 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 + 11 * phi2)) * np.sqrt(0.74613e5) * t11942 * t11936 * t11939 ** 2

        if Bindx == 1910:
            t11943 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((-5*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.13566e5) * ((1 - t11943) ** (0.5e1 / 0.2e1)) * ((1 + t11943) ** (0.15e2 / 0.2e1)) * (-5 + 11 * t11943)

        if Bindx == 1911:
            t11953 = np.sin(phi)
            t11951 = t11953 ** 2
            t11944 = np.cos(phi)
            t11945 = t11944 ** 2
            t11946 = t11944 * t11945
            t11949 = t11946 ** 2
            t11947 = t11945 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 + 9 * phi2)) * np.sqrt(0.323e3) * t11951 ** 2 * (-143 * t11945 - 185 * t11946 + 135 * t11947 + 315 * t11949 + 13 + (433 * t11947 + 77 * t11949 - 5) * t11944)

        if Bindx == 1912:
            t11954 = np.cos(phi)
            t11955 = t11954 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (5 * phi1 + 8 * phi2)) * np.sqrt(0.4845e4) * ((1 - t11954) ** (0.3e1 / 0.2e1)) * ((1 + t11954) ** (0.13e2 / 0.2e1)) * (-105 * t11955 - 3 + (77 * t11955 + 39) * t11954)

        if Bindx == 1913:
            t11958 = np.cos(phi)
            t11959 = t11958 ** 2
            t11961 = t11959 ** 2
            t11965 = t11961 ** 2
            t11960 = t11958 * t11959
            t11963 = t11960 ** 2
            t11957 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.255e3) * t11957 ** 2 * (252 * t11959 + 2380 * t11960 + 658 * t11961 - 4788 * t11963 + 4655 * t11965 - 9 + (-5614 * t11961 + 2812 * t11963 + 1463 * t11965 - 273) * t11958)

        if Bindx == 1914:
            t11967 = np.cos(phi)
            t11968 = t11967 ** 2
            t11970 = t11968 ** 2
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((-1*1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.102e3) * np.sqrt((1 - t11967)) * ((1 + t11967) ** (0.11e2 / 0.2e1)) * (-1710 * t11968 - 9975 * t11970 + 53 + (7410 * t11968 + 4389 * t11970 - 135) * t11967)

        if Bindx == 1915:
            t11972 = np.cos(phi)
            t11973 = t11972 ** 2
            t11975 = t11973 ** 2
            t11976 = t11972 * t11975
            t11981 = t11976 ** 2
            t11979 = t11975 ** 2
            t11974 = t11972 * t11973
            t11977 = t11974 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-5*1j) * (phi1 + phi2)) * (16195 * t11973 - 42455 * t11974 - 118510 * t11975 + 117670 * t11976 + 336294 * t11977 - 402135 * t11979 + 169575 * t11981 - 395 + (-69870 * t11977 - 82365 * t11979 + 74613 * t11981 + 3431) * t11972)

        if Bindx == 1916:
            t11983 = np.cos(phi)
            t11984 = t11983 ** 2
            t11985 = t11983 * t11984
            t11988 = t11985 ** 2
            t11986 = t11984 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((-1*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.7e1) * ((1 + t11983) ** (0.9e1 / 0.2e1)) * (2703 * t11984 - 2295 * t11985 - 14535 * t11986 - 33915 * t11988 - 13 + (37791 * t11986 + 10659 * t11988 - 395) * t11983) * ((1 - t11983) ** (-0.1e1 / 0.2e1))

        if Bindx == 1917:
            t11991 = np.cos(phi)
            t11992 = t11991 ** 2
            t11994 = t11992 ** 2
            t11998 = t11994 ** 2
            t11993 = t11991 * t11992
            t11996 = t11993 ** 2
            t11990 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.210e3) * t11990 ** 2 * (-1680 * t11992 - 1240 * t11993 + 11390 * t11994 - 23256 * t11996 + 14535 * t11998 + 35 + (7038 * t11994 - 15504 * t11996 + 10659 * t11998 + 71) * t11991)

        if Bindx == 1918:
            t12000 = np.cos(phi)
            t12001 = t12000 ** 2
            t12003 = t12001 ** 2
            t12002 = t12000 * t12001
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (-867 * t12001 - 4845 * t12003 + 41 + (10336 + 24871 * t12002) * t12002 + (-27132 * t12003 - 612) * t12000) * ((1 + t12000) ** (0.7e1 / 0.2e1)) * np.sqrt(0.15e2) * np.exp((-1*1j) * (5 * phi1 + 2 * phi2)) * ((1 - t12000) ** (0.3e1 / 0.2e1))

        if Bindx == 1919:
            t12015 = np.sin(phi)
            t12013 = t12015 ** 2
            t12006 = np.cos(phi)
            t12007 = t12006 ** 2
            t12008 = t12006 * t12007
            t12011 = t12008 ** 2
            t12009 = t12007 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 + phi2)) * np.sqrt(0.78e2) * t12013 ** 2 * (1275 * t12007 + 8245 * t12008 - 8075 * t12009 + 11305 * t12011 - 25 + (-28101 * t12009 + 24871 * t12011 - 535) * t12006)

        if Bindx == 1920:
            t12016 = np.cos(phi)
            t12017 = t12016 ** 2
            t12018 = t12017 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * (-1615 * t12018 - 5 + (2261 * t12018 + 255) * t12017) * ((1 + t12016) ** (0.5e1 / 0.2e1)) * np.sqrt(0.286e3) * np.exp((-5*1j) * phi1) * ((1 - t12016) ** (0.5e1 / 0.2e1))

        if Bindx == 1921:
            t12029 = np.sin(phi)
            t12027 = t12029 ** 2
            t12020 = np.cos(phi)
            t12021 = t12020 ** 2
            t12022 = t12020 * t12021
            t12025 = t12022 ** 2
            t12023 = t12021 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 - phi2)) * np.sqrt(0.78e2) * t12027 ** 2 * (-1275 * t12021 + 8245 * t12022 + 8075 * t12023 - 11305 * t12025 + 25 + (-28101 * t12023 + 24871 * t12025 - 535) * t12020)

        if Bindx == 1922:
            t12030 = np.cos(phi)
            t12031 = t12030 ** 2
            t12033 = t12031 ** 2
            t12032 = t12030 * t12031
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (-867 * t12031 - 4845 * t12033 + 41 + (-10336 + 24871 * t12032) * t12032 + (27132 * t12033 + 612) * t12030) * ((1 + t12030) ** (0.3e1 / 0.2e1)) * np.sqrt(0.15e2) * np.exp((-1*1j) * (5 * phi1 - 2 * phi2)) * ((1 - t12030) ** (0.7e1 / 0.2e1))

        if Bindx == 1923:
            t12037 = np.cos(phi)
            t12038 = t12037 ** 2
            t12040 = t12038 ** 2
            t12044 = t12040 ** 2
            t12039 = t12037 * t12038
            t12042 = t12039 ** 2
            t12036 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.210e3) * t12036 ** 2 * (1680 * t12038 - 1240 * t12039 - 11390 * t12040 + 23256 * t12042 - 14535 * t12044 - 35 + (7038 * t12040 - 15504 * t12042 + 10659 * t12044 + 71) * t12037)

        if Bindx == 1924:
            t12046 = np.cos(phi)
            t12047 = t12046 ** 2
            t12048 = t12047 ** 2
            t12049 = t12046 * t12048
            tfunc[..., c] = (-0.23e2 / 0.512e3*1j) * (-2295 * t12047 + 14535 * t12048 + 23256 * t12049 + 13 + (10659 * t12049 - 408) * t12046) * np.sqrt((1 + t12046)) * np.sqrt(0.7e1) * np.exp((-1*1j) * (5 * phi1 - 4 * phi2)) * ((1 - t12046) ** (0.9e1 / 0.2e1))

        if Bindx == 1925:
            t12051 = np.cos(phi)
            t12052 = t12051 ** 2
            t12054 = t12052 ** 2
            t12055 = t12051 * t12054
            t12060 = t12055 ** 2
            t12058 = t12054 ** 2
            t12053 = t12051 * t12052
            t12056 = t12053 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-5*1j) * (phi1 - phi2)) * (-16195 * t12052 - 42455 * t12053 + 118510 * t12054 + 117670 * t12055 - 336294 * t12056 + 402135 * t12058 - 169575 * t12060 + 395 + (-69870 * t12056 - 82365 * t12058 + 74613 * t12060 + 3431) * t12051)

        if Bindx == 1926:
            t12062 = np.cos(phi)
            t12063 = t12062 ** 2
            t12065 = t12063 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * (1710 * t12063 + 9975 * t12065 - 53 + (7410 * t12063 + 4389 * t12065 - 135) * t12062) * np.sqrt((1 + t12062)) * np.sqrt(0.102e3) * np.exp((-1*1j) * (5 * phi1 - 6 * phi2)) * ((1 - t12062) ** (0.11e2 / 0.2e1))

        if Bindx == 1927:
            t12068 = np.cos(phi)
            t12069 = t12068 ** 2
            t12071 = t12069 ** 2
            t12075 = t12071 ** 2
            t12070 = t12068 * t12069
            t12073 = t12070 ** 2
            t12067 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.255e3) * t12067 ** 2 * (-252 * t12069 + 2380 * t12070 - 658 * t12071 + 4788 * t12073 - 4655 * t12075 + 9 + (-5614 * t12071 + 2812 * t12073 + 1463 * t12075 - 273) * t12068)

        if Bindx == 1928:
            t12077 = np.cos(phi)
            t12078 = t12077 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (105 * t12078 + 3 + (77 * t12078 + 39) * t12077) * ((1 + t12077) ** (0.3e1 / 0.2e1)) * np.sqrt(0.4845e4) * np.exp((-1*1j) * (5 * phi1 - 8 * phi2)) * ((1 - t12077) ** (0.13e2 / 0.2e1))

        if Bindx == 1929:
            t12089 = np.sin(phi)
            t12087 = t12089 ** 2
            t12080 = np.cos(phi)
            t12081 = t12080 ** 2
            t12082 = t12080 * t12081
            t12085 = t12082 ** 2
            t12083 = t12081 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 - 9 * phi2)) * np.sqrt(0.323e3) * t12087 ** 2 * (143 * t12081 - 185 * t12082 - 135 * t12083 - 315 * t12085 - 13 + (433 * t12083 + 77 * t12085 - 5) * t12080)

        if Bindx == 1930:
            t12090 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * (5 + 11 * t12090) * ((1 + t12090) ** (0.5e1 / 0.2e1)) * np.sqrt(0.13566e5) * np.exp((-5*1j) * (phi1 - 2 * phi2)) * ((1 - t12090) ** (0.15e2 / 0.2e1))

        if Bindx == 1931:
            t12091 = np.cos(phi)
            t12098 = -1 + t12091
            t12097 = 1 + t12091
            t12095 = t12097 ** 2
            t12092 = t12098 ** 2
            t12093 = t12092 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 - 11 * phi2)) * np.sqrt(0.74613e5) * t12093 ** 2 * t12097 * t12095

        if Bindx == 1932:
            t12099 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((-1*1j) * (4 * phi1 + 11 * phi2)) * np.sqrt(0.10659e5) * ((1 - t12099) ** (0.7e1 / 0.2e1)) * ((1 + t12099) ** (0.15e2 / 0.2e1))

        if Bindx == 1933:
            t12100 = np.cos(phi)
            t12108 = -1 + t12100
            t12107 = 1 + t12100
            t12103 = t12107 ** 2
            t12104 = t12107 * t12103
            t12101 = t12108 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3) * np.exp((-2*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.1938e4) * t12108 * t12101 * t12107 * t12104 ** 2 * (-4 + 11 * t12100)

        if Bindx == 1934:
            t12109 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.512e3*1j) * np.exp((-1*1j) * (4 * phi1 + 9 * phi2)) * np.sqrt(0.2261e4) * ((1 - t12109) ** (0.5e1 / 0.2e1)) * ((1 + t12109) ** (0.13e2 / 0.2e1)) * (1 + (-8 + 11 * t12109) * t12109)

        if Bindx == 1935:
            t12118 = np.sin(phi)
            t12116 = t12118 ** 2
            t12110 = np.cos(phi)
            t12111 = t12110 ** 2
            t12112 = t12110 * t12111
            tfunc[..., c] = (0.23e2 / 0.256e3) * np.exp((-4*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.33915e5) * t12116 ** 2 * t12110 * (3 + (-16 + 11 * t12112) * t12112 + (-19 + (32 * t12110 + 21) * t12111) * t12111)

        if Bindx == 1936:
            t12119 = np.cos(phi)
            t12120 = t12119 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((-1*1j) * (4 * phi1 + 7 * phi2)) * np.sqrt(0.1785e4) * ((1 - t12119) ** (0.3e1 / 0.2e1)) * ((1 + t12119) ** (0.11e2 / 0.2e1)) * (-3 + (-304 * t12119 + 114 + 209 * t12120) * t12120)

        if Bindx == 1937:
            t12124 = np.cos(phi)
            t12125 = t12124 ** 2
            t12127 = t12125 ** 2
            t12131 = t12127 ** 2
            t12126 = t12124 * t12125
            t12129 = t12126 ** 2
            t12123 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.714e3) * t12123 ** 2 * (-156 * t12125 + 316 * t12126 + 964 * t12127 - 2052 * t12129 + 1368 * t12131 + 4 + (-558 * t12127 - 228 * t12129 + 627 * t12131 - 29) * t12124)

        if Bindx == 1938:
            t12133 = np.cos(phi)
            t12134 = t12133 ** 2
            t12135 = t12134 ** 2
            t12136 = t12133 * t12135
            tfunc[..., c] = (-0.23e2 / 0.512e3*1j) * np.exp((-1*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.7e1) * np.sqrt((1 - t12133)) * ((1 + t12133) ** (0.9e1 / 0.2e1)) * (-2295 * t12134 + 14535 * t12135 - 23256 * t12136 + 13 + (10659 * t12136 + 408) * t12133)

        if Bindx == 1939:
            t12138 = np.cos(phi)
            t12139 = t12138 ** 2
            t12141 = t12139 ** 2
            t12142 = t12138 * t12141
            t12147 = t12142 ** 2
            t12145 = t12141 ** 2
            t12140 = t12138 * t12139
            t12143 = t12140 ** 2
            tfunc[..., c] = (0.23e2 / 0.128e3) * np.exp((-4*1j) * (phi1 + phi2)) * (1600 * t12139 + 775 * t12140 - 12520 * t12141 - 5978 * t12142 + 34272 * t12143 - 38760 * t12145 + 15504 * t12147 - 32 + (18870 * t12143 - 24225 * t12145 + 10659 * t12147 - 37) * t12138)

        if Bindx == 1940:
            t12149 = np.cos(phi)
            t12150 = t12149 ** 2
            t12151 = t12149 * t12150
            t12153 = t12151 ** 2
            t12152 = t12150 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((-1*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.30e2) * ((1 + t12149) ** (0.7e1 / 0.2e1)) * (364 * t12150 + 3808 * t12151 + 27132 * t12153 + 11 + (-10710 + 10659 * t12152) * t12152 + (-31008 * t12153 - 256) * t12149) * ((1 - t12149) ** (-0.1e1 / 0.2e1))

        if Bindx == 1941:
            t12157 = np.cos(phi)
            t12158 = t12157 ** 2
            t12160 = t12158 ** 2
            t12164 = t12160 ** 2
            t12159 = t12157 * t12158
            t12162 = t12159 ** 2
            t12156 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.256e3) * np.exp((-2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.105e3) * t12156 ** 2 * (-220 * t12158 - 860 * t12159 + 1700 * t12160 - 3876 * t12162 + 2584 * t12164 + 4 + (3910 * t12160 - 6460 * t12162 + 3553 * t12164 + 49) * t12157)

        if Bindx == 1942:
            t12166 = np.cos(phi)
            t12167 = t12166 ** 2
            t12168 = t12166 * t12167
            t12171 = t12168 ** 2
            t12169 = t12167 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * (-255 * t12167 + 595 * t12168 + 1615 * t12169 - 2261 * t12171 + 5 + (-2907 * t12169 + 3553 * t12171 - 25) * t12166) * ((1 + t12166) ** (0.5e1 / 0.2e1)) * np.sqrt(0.546e3) * np.exp((-1*1j) * (4 * phi1 + phi2)) * ((1 - t12166) ** (0.3e1 / 0.2e1))

        if Bindx == 1943:
            t12179 = np.sin(phi)
            t12177 = t12179 ** 2
            t12173 = np.cos(phi)
            t12174 = t12173 ** 2
            t12175 = t12174 ** 2
            tfunc[..., c] = (0.69e2 / 0.256e3) * np.exp((-4*1j) * phi1) * np.sqrt(0.2002e4) * t12177 ** 2 * t12173 * (-323 * t12175 - 5 + (323 * t12175 + 85) * t12174)

        if Bindx == 1944:
            t12180 = np.cos(phi)
            t12181 = t12180 ** 2
            t12182 = t12180 * t12181
            t12185 = t12182 ** 2
            t12183 = t12181 ** 2
            tfunc[..., c] = (-0.23e2 / 0.512e3*1j) * (255 * t12181 + 595 * t12182 - 1615 * t12183 + 2261 * t12185 - 5 + (-2907 * t12183 + 3553 * t12185 - 25) * t12180) * ((1 + t12180) ** (0.3e1 / 0.2e1)) * np.sqrt(0.546e3) * np.exp((-1*1j) * (4 * phi1 - phi2)) * ((1 - t12180) ** (0.5e1 / 0.2e1))

        if Bindx == 1945:
            t12188 = np.cos(phi)
            t12189 = t12188 ** 2
            t12191 = t12189 ** 2
            t12195 = t12191 ** 2
            t12190 = t12188 * t12189
            t12193 = t12190 ** 2
            t12187 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.256e3) * np.exp((-2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.105e3) * t12187 ** 2 * (220 * t12189 - 860 * t12190 - 1700 * t12191 + 3876 * t12193 - 2584 * t12195 - 4 + (3910 * t12191 - 6460 * t12193 + 3553 * t12195 + 49) * t12188)

        if Bindx == 1946:
            t12197 = np.cos(phi)
            t12198 = t12197 ** 2
            t12199 = t12197 * t12198
            t12202 = t12199 ** 2
            t12200 = t12198 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * (119 * t12198 - 3927 * t12199 - 6783 * t12200 + 20349 * t12202 + 11 + (6783 * t12200 + 10659 * t12202 + 245) * t12197) * np.sqrt((1 + t12197)) * np.sqrt(0.30e2) * np.exp((-1*1j) * (4 * phi1 - 3 * phi2)) * ((1 - t12197) ** (0.7e1 / 0.2e1))

        if Bindx == 1947:
            t12204 = np.cos(phi)
            t12205 = t12204 ** 2
            t12207 = t12205 ** 2
            t12208 = t12204 * t12207
            t12213 = t12208 ** 2
            t12211 = t12207 ** 2
            t12206 = t12204 * t12205
            t12209 = t12206 ** 2
            tfunc[..., c] = (0.23e2 / 0.128e3) * np.exp((-4*1j) * (phi1 - phi2)) * (-1600 * t12205 + 775 * t12206 + 12520 * t12207 - 5978 * t12208 - 34272 * t12209 + 38760 * t12211 - 15504 * t12213 + 32 + (18870 * t12209 - 24225 * t12211 + 10659 * t12213 - 37) * t12204)

        if Bindx == 1948:
            t12215 = np.cos(phi)
            t12216 = t12215 ** 2
            t12217 = t12216 ** 2
            t12218 = t12215 * t12217
            tfunc[..., c] = (-0.23e2 / 0.512e3*1j) * (-2295 * t12216 + 14535 * t12217 + 23256 * t12218 + 13 + (10659 * t12218 - 408) * t12215) * np.sqrt((1 + t12215)) * np.sqrt(0.7e1) * np.exp((-1*1j) * (4 * phi1 - 5 * phi2)) * ((1 - t12215) ** (0.9e1 / 0.2e1))

        if Bindx == 1949:
            t12221 = np.cos(phi)
            t12222 = t12221 ** 2
            t12224 = t12222 ** 2
            t12228 = t12224 ** 2
            t12223 = t12221 * t12222
            t12226 = t12223 ** 2
            t12220 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.714e3) * t12220 ** 2 * (156 * t12222 + 316 * t12223 - 964 * t12224 + 2052 * t12226 - 1368 * t12228 - 4 + (-558 * t12224 - 228 * t12226 + 627 * t12228 - 29) * t12221)

        if Bindx == 1950:
            t12230 = np.cos(phi)
            t12231 = t12230 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * (-3 + (304 * t12230 + 114 + 209 * t12231) * t12231) * ((1 + t12230) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1785e4) * np.exp((-1*1j) * (4 * phi1 - 7 * phi2)) * ((1 - t12230) ** (0.11e2 / 0.2e1))

        if Bindx == 1951:
            t12242 = np.sin(phi)
            t12240 = t12242 ** 2
            t12234 = np.cos(phi)
            t12235 = t12234 ** 2
            t12236 = t12234 * t12235
            tfunc[..., c] = (0.23e2 / 0.256e3) * np.exp((-4*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.33915e5) * t12240 ** 2 * t12234 * (3 + (16 + 11 * t12236) * t12236 + (-19 + (-32 * t12234 + 21) * t12235) * t12235)

        if Bindx == 1952:
            t12243 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.512e3*1j) * (1 + (8 + 11 * t12243) * t12243) * ((1 + t12243) ** (0.5e1 / 0.2e1)) * np.sqrt(0.2261e4) * np.exp((-1*1j) * (4 * phi1 - 9 * phi2)) * ((1 - t12243) ** (0.13e2 / 0.2e1))

        if Bindx == 1953:
            t12252 = np.sin(phi)
            t12249 = t12252 ** 2
            t12250 = t12252 * t12249
            t12244 = np.cos(phi)
            t12245 = t12244 ** 2
            t12247 = t12245 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-2*1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.1938e4) * t12250 ** 2 * (-20 * t12245 - 40 * t12247 + 4 + (50 * t12245 + 11 * t12247 - 5) * t12244)

        if Bindx == 1954:
            t12253 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((-1*1j) * (4 * phi1 - 11 * phi2)) * np.sqrt(0.10659e5) * ((1 - t12253) ** (0.15e2 / 0.2e1)) * ((1 + t12253) ** (0.7e1 / 0.2e1))

        if Bindx == 1955:
            t12254 = np.cos(phi)
            t12262 = -1 + t12254
            t12261 = 1 + t12254
            t12257 = t12261 ** 2
            t12258 = t12261 * t12257
            t12255 = t12262 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((-1*1j) * (3 * phi1 + 11 * phi2)) * np.sqrt(0.35530e5) * t12255 ** 2 * t12261 * t12258 ** 2

        if Bindx == 1956:
            t12263 = np.cos(phi)
            tfunc[..., c] = (0.69e2 / 0.1024e4*1j) * np.exp((-1*1j) * (3 * phi1 + 10 * phi2)) * np.sqrt(0.1615e4) * ((1 - t12263) ** (0.7e1 / 0.2e1)) * ((1 + t12263) ** (0.13e2 / 0.2e1)) * (-3 + 11 * t12263)

        if Bindx == 1957:
            t12272 = np.sin(phi)
            t12269 = t12272 ** 2
            t12270 = t12272 * t12269
            t12264 = np.cos(phi)
            t12265 = t12264 ** 2
            t12267 = t12265 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-3*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.67830e5) * t12270 ** 2 * (-18 * t12265 + 81 * t12267 + 1 + (46 * t12265 + 33 * t12267 - 15) * t12264)

        if Bindx == 1958:
            t12273 = np.cos(phi)
            t12274 = t12273 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * np.exp((-1*1j) * (3 * phi1 + 8 * phi2)) * np.sqrt(0.4522e4) * ((1 - t12273) ** (0.5e1 / 0.2e1)) * ((1 + t12273) ** (0.11e2 / 0.2e1)) * (-45 * t12274 + 1 + (55 * t12274 + 5) * t12273)

        if Bindx == 1959:
            t12285 = np.sin(phi)
            t12283 = t12285 ** 2
            t12276 = np.cos(phi)
            t12277 = t12276 ** 2
            t12278 = t12276 * t12277
            t12281 = t12278 ** 2
            t12279 = t12277 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((-1*1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.238e3) * t12283 ** 2 * (385 * t12277 - 353 * t12278 - 1729 * t12279 + 1995 * t12281 - 11 + (-95 * t12279 + 1045 * t12281 + 43) * t12276)

        if Bindx == 1960:
            t12286 = np.cos(phi)
            t12287 = t12286 ** 2
            t12289 = t12287 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((-3*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.595e3) * ((1 - t12286) ** (0.3e1 / 0.2e1)) * ((1 + t12286) ** (0.9e1 / 0.2e1)) * (342 * t12287 - 2565 * t12289 - 1 + (570 * t12287 + 1881 * t12289 - 99) * t12286)

        if Bindx == 1961:
            t12292 = np.cos(phi)
            t12293 = t12292 ** 2
            t12295 = t12293 ** 2
            t12299 = t12295 ** 2
            t12294 = t12292 * t12293
            t12297 = t12294 ** 2
            t12291 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.210e3) * t12291 ** 2 * (-1680 * t12293 - 1240 * t12294 + 11390 * t12295 - 23256 * t12297 + 14535 * t12299 + 35 + (7038 * t12295 - 15504 * t12297 + 10659 * t12299 + 71) * t12292)

        if Bindx == 1962:
            t12301 = np.cos(phi)
            t12302 = t12301 ** 2
            t12308 = 6783 * t12302 ** 2
            t12303 = t12301 * t12302
            t12306 = t12303 ** 2
            tfunc[..., c] = (-0.23e2 / 0.512e3*1j) * np.exp((-1*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.30e2) * np.sqrt((1 - t12301)) * ((1 + t12301) ** (0.7e1 / 0.2e1)) * (-119 * t12302 - 3927 * t12303 - 20349 * t12306 + t12308 - 11 + (10659 * t12306 + t12308 + 245) * t12301)

        if Bindx == 1963:
            t12309 = np.cos(phi)
            t12310 = t12309 ** 2
            t12312 = t12310 ** 2
            t12313 = t12309 * t12312
            t12318 = t12313 ** 2
            t12316 = t12312 ** 2
            t12311 = t12309 * t12310
            t12314 = t12311 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((-3*1j) * (phi1 + phi2)) * (10203 * t12310 + 35201 * t12311 - 89310 * t12312 - 190218 * t12313 + 265846 * t12314 - 316863 * t12316 + 130815 * t12318 - 179 + (428706 * t12314 - 431205 * t12316 + 159885 * t12318 - 1857) * t12309)

        if Bindx == 1964:
            t12320 = np.cos(phi)
            t12321 = t12320 ** 2
            t12323 = t12321 ** 2
            t12327 = t12323 ** 2
            t12322 = t12320 * t12321
            t12325 = t12322 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.14e2) * ((1 + t12320) ** (0.5e1 / 0.2e1)) * (-660 * t12321 + 4900 * t12322 - 1190 * t12323 + 27132 * t12325 - 43605 * t12327 + 19 + (-23562 * t12323 + 19380 * t12325 + 17765 * t12327 - 179) * t12320) * ((1 - t12320) ** (-0.1e1 / 0.2e1))

        if Bindx == 1965:
            t12330 = np.cos(phi)
            t12331 = t12330 ** 2
            t12333 = t12331 ** 2
            t12337 = t12333 ** 2
            t12332 = t12330 * t12331
            t12335 = t12332 ** 2
            t12329 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.455e3) * t12329 ** 2 * (-60 * t12331 - 780 * t12332 + 510 * t12333 - 1292 * t12335 + 969 * t12337 + 1 + (3774 * t12333 - 6460 * t12335 + 3553 * t12337 + 41) * t12330)

        if Bindx == 1966:
            t12339 = np.cos(phi)
            t12340 = t12339 ** 2
            t12341 = t12340 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * (-60 * t12340 + 1 + (-1292 * t12340 + 510 + 969 * t12341) * t12341) * ((1 + t12339) ** (0.3e1 / 0.2e1)) * np.sqrt(0.15015e5) * np.exp((-3*1j) * phi1) * ((1 - t12339) ** (0.3e1 / 0.2e1))

        if Bindx == 1967:
            t12345 = np.cos(phi)
            t12346 = t12345 ** 2
            t12348 = t12346 ** 2
            t12352 = t12348 ** 2
            t12347 = t12345 * t12346
            t12350 = t12347 ** 2
            t12344 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.455e3) * t12344 ** 2 * (60 * t12346 - 780 * t12347 - 510 * t12348 + 1292 * t12350 - 969 * t12352 - 1 + (3774 * t12348 - 6460 * t12350 + 3553 * t12352 + 41) * t12345)

        if Bindx == 1968:
            t12354 = np.cos(phi)
            t12355 = t12354 ** 2
            t12356 = t12354 * t12355
            t12359 = t12356 ** 2
            t12357 = t12355 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * (820 * t12355 + 4080 * t12356 - 6460 * t12359 - 19 + (-2890 + 17765 * t12357) * t12357 + (-20672 * t12357 + 25840 * t12359 - 160) * t12354) * np.sqrt((1 + t12354)) * np.sqrt(0.14e2) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t12354) ** (0.5e1 / 0.2e1))

        if Bindx == 1969:
            t12362 = np.cos(phi)
            t12363 = t12362 ** 2
            t12365 = t12363 ** 2
            t12366 = t12362 * t12365
            t12371 = t12366 ** 2
            t12369 = t12365 ** 2
            t12364 = t12362 * t12363
            t12367 = t12364 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((-3*1j) * (phi1 - phi2)) * (-10203 * t12363 + 35201 * t12364 + 89310 * t12365 - 190218 * t12366 - 265846 * t12367 + 316863 * t12369 - 130815 * t12371 + 179 + (428706 * t12367 - 431205 * t12369 + 159885 * t12371 - 1857) * t12362)

        if Bindx == 1970:
            t12373 = np.cos(phi)
            t12374 = t12373 ** 2
            t12375 = t12373 * t12374
            t12378 = t12375 ** 2
            t12376 = t12374 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * (119 * t12374 - 3927 * t12375 - 6783 * t12376 + 20349 * t12378 + 11 + (6783 * t12376 + 10659 * t12378 + 245) * t12373) * np.sqrt((1 + t12373)) * np.sqrt(0.30e2) * np.exp((-1*1j) * (3 * phi1 - 4 * phi2)) * ((1 - t12373) ** (0.7e1 / 0.2e1))

        if Bindx == 1971:
            t12381 = np.cos(phi)
            t12382 = t12381 ** 2
            t12384 = t12382 ** 2
            t12388 = t12384 ** 2
            t12383 = t12381 * t12382
            t12386 = t12383 ** 2
            t12380 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.210e3) * t12380 ** 2 * (1680 * t12382 - 1240 * t12383 - 11390 * t12384 + 23256 * t12386 - 14535 * t12388 - 35 + (7038 * t12384 - 15504 * t12386 + 10659 * t12388 + 71) * t12381)

        if Bindx == 1972:
            t12390 = np.cos(phi)
            t12391 = t12390 ** 2
            t12393 = t12391 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (-342 * t12391 + 2565 * t12393 + 1 + (570 * t12391 + 1881 * t12393 - 99) * t12390) * ((1 + t12390) ** (0.3e1 / 0.2e1)) * np.sqrt(0.595e3) * np.exp((-3*1j) * (phi1 - 2 * phi2)) * ((1 - t12390) ** (0.9e1 / 0.2e1))

        if Bindx == 1973:
            t12404 = np.sin(phi)
            t12402 = t12404 ** 2
            t12395 = np.cos(phi)
            t12396 = t12395 ** 2
            t12397 = t12395 * t12396
            t12400 = t12397 ** 2
            t12398 = t12396 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((-1*1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.238e3) * t12402 ** 2 * (-385 * t12396 - 353 * t12397 + 1729 * t12398 - 1995 * t12400 + 11 + (-95 * t12398 + 1045 * t12400 + 43) * t12395)

        if Bindx == 1974:
            t12405 = np.cos(phi)
            t12406 = t12405 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4*1j) * (45 * t12406 - 1 + (55 * t12406 + 5) * t12405) * ((1 + t12405) ** (0.5e1 / 0.2e1)) * np.sqrt(0.4522e4) * np.exp((-1*1j) * (3 * phi1 - 8 * phi2)) * ((1 - t12405) ** (0.11e2 / 0.2e1))

        if Bindx == 1975:
            t12416 = np.sin(phi)
            t12413 = t12416 ** 2
            t12414 = t12416 * t12413
            t12408 = np.cos(phi)
            t12409 = t12408 ** 2
            t12411 = t12409 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-3*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.67830e5) * t12414 ** 2 * (18 * t12409 - 81 * t12411 - 1 + (46 * t12409 + 33 * t12411 - 15) * t12408)

        if Bindx == 1976:
            t12417 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * (3 + 11 * t12417) * ((1 + t12417) ** (0.7e1 / 0.2e1)) * np.sqrt(0.1615e4) * np.exp((-1*1j) * (3 * phi1 - 10 * phi2)) * ((1 - t12417) ** (0.13e2 / 0.2e1))

        if Bindx == 1977:
            t12418 = np.cos(phi)
            t12426 = -1 + t12418
            t12425 = 1 + t12418
            t12423 = t12425 ** 2
            t12419 = t12426 ** 2
            t12420 = t12426 * t12419
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((-1*1j) * (3 * phi1 - 11 * phi2)) * np.sqrt(0.35530e5) * t12426 * t12420 ** 2 * t12423 ** 2

        if Bindx == 1978:
            t12427 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (2 * phi1 + 11 * phi2)) * np.sqrt(0.124355e6) * ((1 - t12427) ** (0.9e1 / 0.2e1)) * ((1 + t12427) ** (0.13e2 / 0.2e1))

        if Bindx == 1979:
            t12434 = np.sin(phi)
            t12431 = t12434 ** 2
            t12432 = t12431 ** 2
            t12428 = np.cos(phi)
            t12429 = t12428 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.22610e5) * t12432 ** 2 * (20 * t12429 - 2 + (11 * t12429 + 7) * t12428)

        if Bindx == 1980:
            t12435 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (2 * phi1 + 9 * phi2)) * np.sqrt(0.4845e4) * ((1 - t12435) ** (0.7e1 / 0.2e1)) * ((1 + t12435) ** (0.11e2 / 0.2e1)) * (-1 + (-28 + 77 * t12435) * t12435)

        if Bindx == 1981:
            t12444 = np.sin(phi)
            t12441 = t12444 ** 2
            t12442 = t12444 * t12441
            t12436 = np.cos(phi)
            t12437 = t12436 ** 2
            t12439 = t12437 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-2*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.323e3) * t12442 ** 2 * (-232 * t12437 + 560 * t12439 + 8 + (-50 * t12437 + 385 * t12439 + 1) * t12436)

        if Bindx == 1982:
            t12445 = np.cos(phi)
            t12446 = t12445 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (2 * phi1 + 7 * phi2)) * np.sqrt(0.17e2) * ((1 - t12445) ** (0.5e1 / 0.2e1)) * ((1 + t12445) ** (0.9e1 / 0.2e1)) * (608 * t12445 - 17 + (-5320 * t12445 - 570 + 7315 * t12446) * t12446)

        if Bindx == 1983:
            t12458 = np.sin(phi)
            t12456 = t12458 ** 2
            t12449 = np.cos(phi)
            t12450 = t12449 ** 2
            t12451 = t12449 * t12450
            t12454 = t12451 ** 2
            t12452 = t12450 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.170e3) * t12456 ** 2 * (264 * t12450 + 401 * t12451 - 1406 * t12452 + 1596 * t12454 - 6 + (-1387 * t12452 + 1463 * t12454 - 29) * t12449)

        if Bindx == 1984:
            t12459 = np.cos(phi)
            t12460 = t12459 ** 2
            t12462 = t12460 ** 2
            t12461 = t12459 * t12460
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.15e2) * ((1 - t12459) ** (0.3e1 / 0.2e1)) * ((1 + t12459) ** (0.7e1 / 0.2e1)) * (-867 * t12460 - 4845 * t12462 + 41 + (10336 + 24871 * t12461) * t12461 + (-27132 * t12462 - 612) * t12459)

        if Bindx == 1985:
            t12466 = np.cos(phi)
            t12467 = t12466 ** 2
            t12469 = t12467 ** 2
            t12473 = t12469 ** 2
            t12468 = t12466 * t12467
            t12471 = t12468 ** 2
            t12465 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.256e3) * np.exp((-2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.105e3) * t12465 ** 2 * (-220 * t12467 - 860 * t12468 + 1700 * t12469 - 3876 * t12471 + 2584 * t12473 + 4 + (3910 * t12469 - 6460 * t12471 + 3553 * t12473 + 49) * t12466)

        if Bindx == 1986:
            t12475 = np.cos(phi)
            t12476 = t12475 ** 2
            t12477 = t12475 * t12476
            t12480 = t12477 ** 2
            t12478 = t12476 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t12475)) * ((1 + t12475) ** (0.5e1 / 0.2e1)) * (820 * t12476 - 4080 * t12477 - 6460 * t12480 - 19 + (-2890 + 17765 * t12478) * t12478 + (20672 * t12478 - 25840 * t12480 + 160) * t12475)

        if Bindx == 1987:
            t12483 = np.cos(phi)
            t12484 = t12483 ** 2
            t12486 = t12484 ** 2
            t12487 = t12483 * t12486
            t12492 = t12487 ** 2
            t12490 = t12486 ** 2
            t12485 = t12483 * t12484
            t12488 = t12485 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3) * np.exp((-2*1j) * (phi1 + phi2)) * (2604 * t12484 + 26103 * t12485 - 24780 * t12486 - 147714 * t12487 + 79968 * t12488 - 102714 * t12490 + 45220 * t12492 - 42 + (339558 * t12488 - 340765 * t12490 + 124355 * t12492 - 1281) * t12483)

        if Bindx == 1988:
            t12494 = np.cos(phi)
            t12495 = t12494 ** 2
            t12497 = t12495 ** 2
            t12501 = t12497 ** 2
            t12496 = t12494 * t12495
            t12499 = t12496 ** 2
            t12498 = t12494 * t12497
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.130e3) * ((1 + t12494) ** (0.3e1 / 0.2e1)) * (-1197 * t12495 + 3360 * t12496 + 8610 * t12497 - 12138 * t12499 - 14535 * t12501 + 21 + (-25704 + 24871 * t12498) * t12498 + (62016 * t12499 - 45220 * t12501 - 84) * t12494) * ((1 - t12494) ** (-0.1e1 / 0.2e1))

        if Bindx == 1989:
            t12505 = np.cos(phi)
            t12506 = t12505 ** 2
            t12507 = t12506 ** 2
            t12504 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-2*1j) * phi1) * np.sqrt(0.4290e4) * t12504 ** 2 * t12505 * (-420 * t12506 + 21 + (-3876 * t12506 + 2142 + 2261 * t12507) * t12507)

        if Bindx == 1990:
            t12510 = np.cos(phi)
            t12511 = t12510 ** 2
            t12513 = t12511 ** 2
            t12517 = t12513 ** 2
            t12512 = t12510 * t12511
            t12515 = t12512 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (-1260 * t12511 - 2100 * t12512 + 10710 * t12513 - 27132 * t12515 + 20349 * t12517 + 21 + (14994 * t12513 - 34884 * t12515 + 24871 * t12517 + 63) * t12510) * np.sqrt((1 + t12510)) * np.sqrt(0.130e3) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t12510) ** (0.3e1 / 0.2e1))

        if Bindx == 1991:
            t12519 = np.cos(phi)
            t12520 = t12519 ** 2
            t12522 = t12520 ** 2
            t12523 = t12519 * t12522
            t12528 = t12523 ** 2
            t12526 = t12522 ** 2
            t12521 = t12519 * t12520
            t12524 = t12521 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3) * np.exp((-2*1j) * (phi1 - phi2)) * (-2604 * t12520 + 26103 * t12521 + 24780 * t12522 - 147714 * t12523 - 79968 * t12524 + 102714 * t12526 - 45220 * t12528 + 42 + (339558 * t12524 - 340765 * t12526 + 124355 * t12528 - 1281) * t12519)

        if Bindx == 1992:
            t12530 = np.cos(phi)
            t12531 = t12530 ** 2
            t12532 = t12530 * t12531
            t12535 = t12532 ** 2
            t12533 = t12531 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * (820 * t12531 + 4080 * t12532 - 6460 * t12535 - 19 + (-2890 + 17765 * t12533) * t12533 + (-20672 * t12533 + 25840 * t12535 - 160) * t12530) * np.sqrt((1 + t12530)) * np.sqrt(0.14e2) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t12530) ** (0.5e1 / 0.2e1))

        if Bindx == 1993:
            t12539 = np.cos(phi)
            t12540 = t12539 ** 2
            t12542 = t12540 ** 2
            t12546 = t12542 ** 2
            t12541 = t12539 * t12540
            t12544 = t12541 ** 2
            t12538 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.256e3) * np.exp((-2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.105e3) * t12538 ** 2 * (220 * t12540 - 860 * t12541 - 1700 * t12542 + 3876 * t12544 - 2584 * t12546 - 4 + (3910 * t12542 - 6460 * t12544 + 3553 * t12546 + 49) * t12539)

        if Bindx == 1994:
            t12548 = np.cos(phi)
            t12549 = t12548 ** 2
            t12551 = t12549 ** 2
            t12550 = t12548 * t12549
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (-867 * t12549 - 4845 * t12551 + 41 + (-10336 + 24871 * t12550) * t12550 + (27132 * t12551 + 612) * t12548) * ((1 + t12548) ** (0.3e1 / 0.2e1)) * np.sqrt(0.15e2) * np.exp((-1*1j) * (2 * phi1 - 5 * phi2)) * ((1 - t12548) ** (0.7e1 / 0.2e1))

        if Bindx == 1995:
            t12563 = np.sin(phi)
            t12561 = t12563 ** 2
            t12554 = np.cos(phi)
            t12555 = t12554 ** 2
            t12556 = t12554 * t12555
            t12559 = t12556 ** 2
            t12557 = t12555 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.170e3) * t12561 ** 2 * (-264 * t12555 + 401 * t12556 + 1406 * t12557 - 1596 * t12559 + 6 + (-1387 * t12557 + 1463 * t12559 - 29) * t12554)

        if Bindx == 1996:
            t12564 = np.cos(phi)
            t12565 = t12564 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (-608 * t12564 - 17 + (5320 * t12564 - 570 + 7315 * t12565) * t12565) * ((1 + t12564) ** (0.5e1 / 0.2e1)) * np.sqrt(0.17e2) * np.exp((-1*1j) * (2 * phi1 - 7 * phi2)) * ((1 - t12564) ** (0.9e1 / 0.2e1))

        if Bindx == 1997:
            t12576 = np.sin(phi)
            t12573 = t12576 ** 2
            t12574 = t12576 * t12573
            t12568 = np.cos(phi)
            t12569 = t12568 ** 2
            t12571 = t12569 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-2*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.323e3) * t12574 ** 2 * (232 * t12569 - 560 * t12571 - 8 + (-50 * t12569 + 385 * t12571 + 1) * t12568)

        if Bindx == 1998:
            t12577 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (-1 + (28 + 77 * t12577) * t12577) * ((1 + t12577) ** (0.7e1 / 0.2e1)) * np.sqrt(0.4845e4) * np.exp((-1*1j) * (2 * phi1 - 9 * phi2)) * ((1 - t12577) ** (0.11e2 / 0.2e1))

        if Bindx == 1999:
            t12584 = np.sin(phi)
            t12581 = t12584 ** 2
            t12582 = t12581 ** 2
            t12578 = np.cos(phi)
            t12579 = t12578 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.22610e5) * t12582 ** 2 * (-20 * t12579 + 2 + (11 * t12579 + 7) * t12578)

        if Bindx == 2000:
            t12585 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (2 * phi1 - 11 * phi2)) * np.sqrt(0.124355e6) * ((1 - t12585) ** (0.13e2 / 0.2e1)) * ((1 + t12585) ** (0.9e1 / 0.2e1))

        if Bindx == 2001:
            t12590 = np.sin(phi)
            t12586 = t12590 ** 2
            t12588 = t12590 * t12586 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 + 11 * phi2)) * np.sqrt(0.646646e6) * t12588 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 2002:
            t12591 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (phi1 + 10 * phi2)) * np.sqrt(0.29393e5) * ((1 - t12591) ** (0.9e1 / 0.2e1)) * ((1 + t12591) ** (0.11e2 / 0.2e1)) * (-1 + 11 * t12591)

        if Bindx == 2003:
            t12598 = np.sin(phi)
            t12595 = t12598 ** 2
            t12596 = t12595 ** 2
            t12592 = np.cos(phi)
            t12593 = t12592 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 + 9 * phi2)) * np.sqrt(0.25194e5) * t12596 ** 2 * (63 * t12593 - 3 + (77 * t12593 - 17) * t12592)

        if Bindx == 2004:
            t12599 = np.cos(phi)
            t12600 = t12599 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (phi1 + 8 * phi2)) * np.sqrt(0.41990e5) * ((1 - t12599) ** (0.7e1 / 0.2e1)) * ((1 + t12599) ** (0.9e1 / 0.2e1)) * (-21 * t12600 + 1 + (77 * t12600 - 9) * t12599)

        if Bindx == 2005:
            t12610 = np.sin(phi)
            t12607 = t12610 ** 2
            t12608 = t12610 * t12607
            t12602 = np.cos(phi)
            t12603 = t12602 ** 2
            t12605 = t12603 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 + 7 * phi2)) * np.sqrt(0.2210e4) * t12608 ** 2 * (-266 * t12603 + 931 * t12605 + 7 + (-874 * t12603 + 1463 * t12605 + 83) * t12602)

        if Bindx == 2006:
            t12611 = np.cos(phi)
            t12612 = t12611 ** 2
            t12614 = t12612 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * np.exp((-1*1j) * (phi1 + 6 * phi2)) * np.sqrt(0.221e3) * ((1 - t12611) ** (0.5e1 / 0.2e1)) * ((1 + t12611) ** (0.7e1 / 0.2e1)) * (190 * t12612 - 665 * t12614 - 5 + (-570 * t12612 + 1463 * t12614 + 35) * t12611)

        if Bindx == 2007:
            t12625 = np.sin(phi)
            t12623 = t12625 ** 2
            t12616 = np.cos(phi)
            t12617 = t12616 ** 2
            t12618 = t12616 * t12617
            t12621 = t12618 ** 2
            t12619 = t12617 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.78e2) * t12623 ** 2 * (1275 * t12617 + 8245 * t12618 - 8075 * t12619 + 11305 * t12621 - 25 + (-28101 * t12619 + 24871 * t12621 - 535) * t12616)

        if Bindx == 2008:
            t12626 = np.cos(phi)
            t12627 = t12626 ** 2
            t12628 = t12626 * t12627
            t12631 = t12628 ** 2
            t12629 = t12627 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((-1*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.546e3) * ((1 - t12626) ** (0.3e1 / 0.2e1)) * ((1 + t12626) ** (0.5e1 / 0.2e1)) * (-255 * t12627 + 595 * t12628 + 1615 * t12629 - 2261 * t12631 + 5 + (-2907 * t12629 + 3553 * t12631 - 25) * t12626)

        if Bindx == 2009:
            t12634 = np.cos(phi)
            t12635 = t12634 ** 2
            t12637 = t12635 ** 2
            t12641 = t12637 ** 2
            t12636 = t12634 * t12635
            t12639 = t12636 ** 2
            t12633 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.455e3) * t12633 ** 2 * (-60 * t12635 - 780 * t12636 + 510 * t12637 - 1292 * t12639 + 969 * t12641 + 1 + (3774 * t12637 - 6460 * t12639 + 3553 * t12641 + 41) * t12634)

        if Bindx == 2010:
            t12643 = np.cos(phi)
            t12644 = t12643 ** 2
            t12646 = t12644 ** 2
            t12650 = t12646 ** 2
            t12645 = t12643 * t12644
            t12648 = t12645 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.130e3) * np.sqrt((1 - t12643)) * ((1 + t12643) ** (0.3e1 / 0.2e1)) * (1260 * t12644 - 2100 * t12645 - 10710 * t12646 + 27132 * t12648 - 20349 * t12650 - 21 + (14994 * t12646 - 34884 * t12648 + 24871 * t12650 + 63) * t12643)

        if Bindx == 2011:
            t12652 = np.cos(phi)
            t12653 = t12652 ** 2
            t12655 = t12653 ** 2
            t12656 = t12652 * t12655
            t12661 = t12656 ** 2
            t12659 = t12655 ** 2
            t12654 = t12652 * t12653
            t12657 = t12654 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((-1*1j) * (phi1 + phi2)) * (1365 * t12653 + 58695 * t12654 - 13650 * t12655 - 346710 * t12656 + 46410 * t12657 - 62985 * t12659 + 29393 * t12661 - 21 + (828750 * t12657 - 860795 * t12659 + 323323 * t12661 - 2751) * t12652)

        if Bindx == 2012:
            t12663 = np.cos(phi)
            t12664 = t12663 ** 2
            t12665 = t12663 * t12664
            t12666 = t12664 ** 2
            t12667 = t12663 * t12666
            t12674 = 46410 * t12665 ** 2 - 62985 * t12666 ** 2 + 29393 * t12667 ** 2 - 21
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.33e2) * np.sqrt((1 + t12663)) * (t12674 * t12663 - 1365 * t12664 + 1365 * t12665 + 13650 * t12666 - 13650 * t12667 - t12674) * ((1 - t12663) ** (-0.1e1 / 0.2e1))

        if Bindx == 2013:
            t12675 = np.cos(phi)
            t12676 = t12675 ** 2
            t12678 = t12676 ** 2
            t12679 = t12675 * t12678
            t12684 = t12679 ** 2
            t12682 = t12678 ** 2
            t12677 = t12675 * t12676
            t12680 = t12677 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((-1*1j) * (phi1 - phi2)) * (-1365 * t12676 + 58695 * t12677 + 13650 * t12678 - 346710 * t12679 - 46410 * t12680 + 62985 * t12682 - 29393 * t12684 + 21 + (828750 * t12680 - 860795 * t12682 + 323323 * t12684 - 2751) * t12675)

        if Bindx == 2014:
            t12686 = np.cos(phi)
            t12687 = t12686 ** 2
            t12689 = t12687 ** 2
            t12693 = t12689 ** 2
            t12688 = t12686 * t12687
            t12691 = t12688 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (-1260 * t12687 - 2100 * t12688 + 10710 * t12689 - 27132 * t12691 + 20349 * t12693 + 21 + (14994 * t12689 - 34884 * t12691 + 24871 * t12693 + 63) * t12686) * np.sqrt((1 + t12686)) * np.sqrt(0.130e3) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t12686) ** (0.3e1 / 0.2e1))

        if Bindx == 2015:
            t12696 = np.cos(phi)
            t12697 = t12696 ** 2
            t12699 = t12697 ** 2
            t12703 = t12699 ** 2
            t12698 = t12696 * t12697
            t12701 = t12698 ** 2
            t12695 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.455e3) * t12695 ** 2 * (60 * t12697 - 780 * t12698 - 510 * t12699 + 1292 * t12701 - 969 * t12703 - 1 + (3774 * t12699 - 6460 * t12701 + 3553 * t12703 + 41) * t12696)

        if Bindx == 2016:
            t12705 = np.cos(phi)
            t12706 = t12705 ** 2
            t12707 = t12705 * t12706
            t12710 = t12707 ** 2
            t12708 = t12706 ** 2
            tfunc[..., c] = (-0.23e2 / 0.512e3*1j) * (255 * t12706 + 595 * t12707 - 1615 * t12708 + 2261 * t12710 - 5 + (-2907 * t12708 + 3553 * t12710 - 25) * t12705) * ((1 + t12705) ** (0.3e1 / 0.2e1)) * np.sqrt(0.546e3) * np.exp((-1*1j) * (phi1 - 4 * phi2)) * ((1 - t12705) ** (0.5e1 / 0.2e1))

        if Bindx == 2017:
            t12721 = np.sin(phi)
            t12719 = t12721 ** 2
            t12712 = np.cos(phi)
            t12713 = t12712 ** 2
            t12714 = t12712 * t12713
            t12717 = t12714 ** 2
            t12715 = t12713 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.78e2) * t12719 ** 2 * (-1275 * t12713 + 8245 * t12714 + 8075 * t12715 - 11305 * t12717 + 25 + (-28101 * t12715 + 24871 * t12717 - 535) * t12712)

        if Bindx == 2018:
            t12722 = np.cos(phi)
            t12723 = t12722 ** 2
            t12725 = t12723 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4*1j) * (-190 * t12723 + 665 * t12725 + 5 + (-570 * t12723 + 1463 * t12725 + 35) * t12722) * ((1 + t12722) ** (0.5e1 / 0.2e1)) * np.sqrt(0.221e3) * np.exp((-1*1j) * (phi1 - 6 * phi2)) * ((1 - t12722) ** (0.7e1 / 0.2e1))

        if Bindx == 2019:
            t12735 = np.sin(phi)
            t12732 = t12735 ** 2
            t12733 = t12735 * t12732
            t12727 = np.cos(phi)
            t12728 = t12727 ** 2
            t12730 = t12728 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 - 7 * phi2)) * np.sqrt(0.2210e4) * t12733 ** 2 * (266 * t12728 - 931 * t12730 - 7 + (-874 * t12728 + 1463 * t12730 + 83) * t12727)

        if Bindx == 2020:
            t12736 = np.cos(phi)
            t12737 = t12736 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (21 * t12737 - 1 + (77 * t12737 - 9) * t12736) * ((1 + t12736) ** (0.7e1 / 0.2e1)) * np.sqrt(0.41990e5) * np.exp((-1*1j) * (phi1 - 8 * phi2)) * ((1 - t12736) ** (0.9e1 / 0.2e1))

        if Bindx == 2021:
            t12745 = np.sin(phi)
            t12742 = t12745 ** 2
            t12743 = t12742 ** 2
            t12739 = np.cos(phi)
            t12740 = t12739 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 - 9 * phi2)) * np.sqrt(0.25194e5) * t12743 ** 2 * (-63 * t12740 + 3 + (77 * t12740 - 17) * t12739)

        if Bindx == 2022:
            t12746 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (1 + 11 * t12746) * ((1 + t12746) ** (0.9e1 / 0.2e1)) * np.sqrt(0.29393e5) * np.exp((-1*1j) * (phi1 - 10 * phi2)) * ((1 - t12746) ** (0.11e2 / 0.2e1))

        if Bindx == 2023:
            t12751 = np.sin(phi)
            t12747 = t12751 ** 2
            t12749 = t12751 * t12747 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 - 11 * phi2)) * np.sqrt(0.646646e6) * t12749 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 2024:
            t12752 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((-11*1j) * phi2) * np.sqrt(0.176358e6) * ((1 - t12752) ** (0.11e2 / 0.2e1)) * ((1 + t12752) ** (0.11e2 / 0.2e1))

        if Bindx == 2025:
            t12757 = np.sin(phi)
            t12753 = t12757 ** 2
            t12755 = t12757 * t12753 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-10*1j) * phi2) * np.sqrt(0.969969e6) * t12755 ** 2 * np.cos(phi)

        if Bindx == 2026:
            t12758 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((-9*1j) * phi2) * np.sqrt(0.92378e5) * ((1 - t12758) ** (0.9e1 / 0.2e1)) * ((1 + t12758) ** (0.9e1 / 0.2e1)) * (21 * t12758 ** 2 - 1)

        if Bindx == 2027:
            t12763 = np.sin(phi)
            t12760 = t12763 ** 2
            t12761 = t12760 ** 2
            t12759 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.512e3) * np.exp((-8*1j) * phi2) * np.sqrt(0.1385670e7) * t12761 ** 2 * t12759 * (7 * t12759 ** 2 - 1)

        if Bindx == 2028:
            t12764 = np.cos(phi)
            t12765 = t12764 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((-7*1j) * phi2) * np.sqrt(0.72930e5) * ((1 - t12764) ** (0.7e1 / 0.2e1)) * ((1 + t12764) ** (0.7e1 / 0.2e1)) * (1 + (-38 + 133 * t12765) * t12765)

        if Bindx == 2029:
            t12773 = np.sin(phi)
            t12770 = t12773 ** 2
            t12771 = t12773 * t12770
            t12767 = np.cos(phi)
            t12768 = t12767 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-6*1j) * phi2) * np.sqrt(0.7293e4) * t12771 ** 2 * t12767 * (15 + (-190 + 399 * t12768) * t12768)

        if Bindx == 2030:
            t12774 = np.cos(phi)
            t12775 = t12774 ** 2
            t12776 = t12775 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * np.exp((-5*1j) * phi2) * np.sqrt(0.286e3) * ((1 - t12774) ** (0.5e1 / 0.2e1)) * ((1 + t12774) ** (0.5e1 / 0.2e1)) * (-1615 * t12776 - 5 + (2261 * t12776 + 255) * t12775)

        if Bindx == 2031:
            t12784 = np.sin(phi)
            t12782 = t12784 ** 2
            t12778 = np.cos(phi)
            t12779 = t12778 ** 2
            t12780 = t12779 ** 2
            tfunc[..., c] = (0.69e2 / 0.256e3) * np.exp((-4*1j) * phi2) * np.sqrt(0.2002e4) * t12782 ** 2 * t12778 * (-323 * t12780 - 5 + (323 * t12780 + 85) * t12779)

        if Bindx == 2032:
            t12785 = np.cos(phi)
            t12786 = t12785 ** 2
            t12787 = t12786 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.15015e5) * ((1 - t12785) ** (0.3e1 / 0.2e1)) * ((1 + t12785) ** (0.3e1 / 0.2e1)) * (-60 * t12786 + 1 + (-1292 * t12786 + 510 + 969 * t12787) * t12787)

        if Bindx == 2033:
            t12791 = np.cos(phi)
            t12792 = t12791 ** 2
            t12793 = t12792 ** 2
            t12790 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((-2*1j) * phi2) * np.sqrt(0.4290e4) * t12790 ** 2 * t12791 * (-420 * t12792 + 21 + (-3876 * t12792 + 2142 + 2261 * t12793) * t12793)

        if Bindx == 2034:
            t12796 = np.cos(phi)
            t12797 = t12796 ** 2
            t12798 = t12797 ** 2
            t12800 = t12798 ** 2
            tfunc[..., c] = (-0.23e2 / 0.512e3*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.33e2) * np.sqrt((1 - t12796)) * np.sqrt((1 + t12796)) * (-13650 * t12798 - 62985 * t12800 - 21 + (46410 * t12798 + 29393 * t12800 + 1365) * t12797)

        if Bindx == 2035:
            t12802 = np.cos(phi)
            t12803 = t12802 ** 2
            t12804 = t12803 ** 2
            t12806 = t12804 ** 2
            tfunc[..., c] = 0.23e2 / 0.256e3 * t12802 * (-90090 * t12804 - 230945 * t12806 - 693 + (218790 * t12804 + 88179 * t12806 + 15015) * t12803)

        if Bindx == 2036:
            t12808 = np.cos(phi)
            t12809 = t12808 ** 2
            t12810 = t12808 * t12809
            t12811 = t12809 ** 2
            t12812 = t12808 * t12811
            t12819 = 46410 * t12810 ** 2 - 62985 * t12811 ** 2 + 29393 * t12812 ** 2 - 21
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((1j) * phi2) * np.sqrt(0.33e2) * np.sqrt((1 + t12808)) * (t12819 * t12808 - 1365 * t12809 + 1365 * t12810 + 13650 * t12811 - 13650 * t12812 - t12819) * ((1 - t12808) ** (-0.1e1 / 0.2e1))

        if Bindx == 2037:
            t12821 = np.cos(phi)
            t12822 = t12821 ** 2
            t12823 = t12822 ** 2
            t12820 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((2*1j) * phi2) * np.sqrt(0.4290e4) * t12820 ** 2 * t12821 * (-420 * t12822 + 21 + (-3876 * t12822 + 2142 + 2261 * t12823) * t12823)

        if Bindx == 2038:
            t12826 = np.cos(phi)
            t12827 = t12826 ** 2
            t12828 = t12827 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * (-60 * t12827 + 1 + (-1292 * t12827 + 510 + 969 * t12828) * t12828) * ((1 + t12826) ** (0.3e1 / 0.2e1)) * np.sqrt(0.15015e5) * np.exp((3*1j) * phi2) * ((1 - t12826) ** (0.3e1 / 0.2e1))

        if Bindx == 2039:
            t12837 = np.sin(phi)
            t12835 = t12837 ** 2
            t12831 = np.cos(phi)
            t12832 = t12831 ** 2
            t12833 = t12832 ** 2
            tfunc[..., c] = (0.69e2 / 0.256e3) * np.exp((4*1j) * phi2) * np.sqrt(0.2002e4) * t12835 ** 2 * t12831 * (-323 * t12833 - 5 + (323 * t12833 + 85) * t12832)

        if Bindx == 2040:
            t12838 = np.cos(phi)
            t12839 = t12838 ** 2
            t12840 = t12839 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * (-1615 * t12840 - 5 + (2261 * t12840 + 255) * t12839) * ((1 + t12838) ** (0.5e1 / 0.2e1)) * np.sqrt(0.286e3) * np.exp((5*1j) * phi2) * ((1 - t12838) ** (0.5e1 / 0.2e1))

        if Bindx == 2041:
            t12848 = np.sin(phi)
            t12845 = t12848 ** 2
            t12846 = t12848 * t12845
            t12842 = np.cos(phi)
            t12843 = t12842 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((6*1j) * phi2) * np.sqrt(0.7293e4) * t12846 ** 2 * t12842 * (15 + (-190 + 399 * t12843) * t12843)

        if Bindx == 2042:
            t12849 = np.cos(phi)
            t12850 = t12849 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (1 + (-38 + 133 * t12850) * t12850) * ((1 + t12849) ** (0.7e1 / 0.2e1)) * np.sqrt(0.72930e5) * np.exp((7*1j) * phi2) * ((1 - t12849) ** (0.7e1 / 0.2e1))

        if Bindx == 2043:
            t12856 = np.sin(phi)
            t12853 = t12856 ** 2
            t12854 = t12853 ** 2
            t12852 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.512e3) * np.exp((8*1j) * phi2) * np.sqrt(0.1385670e7) * t12854 ** 2 * t12852 * (7 * t12852 ** 2 - 1)

        if Bindx == 2044:
            t12857 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (21 * t12857 ** 2 - 1) * ((1 + t12857) ** (0.9e1 / 0.2e1)) * np.sqrt(0.92378e5) * np.exp((9*1j) * phi2) * ((1 - t12857) ** (0.9e1 / 0.2e1))

        if Bindx == 2045:
            t12862 = np.sin(phi)
            t12858 = t12862 ** 2
            t12860 = t12862 * t12858 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((10*1j) * phi2) * np.sqrt(0.969969e6) * t12860 ** 2 * np.cos(phi)

        if Bindx == 2046:
            t12863 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((11*1j) * phi2) * np.sqrt(0.176358e6) * ((1 - t12863) ** (0.11e2 / 0.2e1)) * ((1 + t12863) ** (0.11e2 / 0.2e1))

        if Bindx == 2047:
            t12868 = np.sin(phi)
            t12864 = t12868 ** 2
            t12866 = t12868 * t12864 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (phi1 - 11 * phi2)) * np.sqrt(0.646646e6) * t12866 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 2048:
            t12869 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (phi1 - 10 * phi2)) * np.sqrt(0.29393e5) * ((1 - t12869) ** (0.11e2 / 0.2e1)) * ((1 + t12869) ** (0.9e1 / 0.2e1)) * (1 + 11 * t12869)

        if Bindx == 2049:
            t12876 = np.sin(phi)
            t12873 = t12876 ** 2
            t12874 = t12873 ** 2
            t12870 = np.cos(phi)
            t12871 = t12870 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (phi1 - 9 * phi2)) * np.sqrt(0.25194e5) * t12874 ** 2 * (-63 * t12871 + 3 + (77 * t12871 - 17) * t12870)

        if Bindx == 2050:
            t12877 = np.cos(phi)
            t12878 = t12877 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (phi1 - 8 * phi2)) * np.sqrt(0.41990e5) * ((1 - t12877) ** (0.9e1 / 0.2e1)) * ((1 + t12877) ** (0.7e1 / 0.2e1)) * (21 * t12878 - 1 + (77 * t12878 - 9) * t12877)

        if Bindx == 2051:
            t12888 = np.sin(phi)
            t12885 = t12888 ** 2
            t12886 = t12888 * t12885
            t12880 = np.cos(phi)
            t12881 = t12880 ** 2
            t12883 = t12881 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (phi1 - 7 * phi2)) * np.sqrt(0.2210e4) * t12886 ** 2 * (266 * t12881 - 931 * t12883 - 7 + (-874 * t12881 + 1463 * t12883 + 83) * t12880)

        if Bindx == 2052:
            t12889 = np.cos(phi)
            t12890 = t12889 ** 2
            t12892 = t12890 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4*1j) * np.exp((1j) * (phi1 - 6 * phi2)) * np.sqrt(0.221e3) * ((1 - t12889) ** (0.7e1 / 0.2e1)) * ((1 + t12889) ** (0.5e1 / 0.2e1)) * (-190 * t12890 + 665 * t12892 + 5 + (-570 * t12890 + 1463 * t12892 + 35) * t12889)

        if Bindx == 2053:
            t12903 = np.sin(phi)
            t12901 = t12903 ** 2
            t12894 = np.cos(phi)
            t12895 = t12894 ** 2
            t12896 = t12894 * t12895
            t12899 = t12896 ** 2
            t12897 = t12895 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (phi1 - 5 * phi2)) * np.sqrt(0.78e2) * t12901 ** 2 * (-1275 * t12895 + 8245 * t12896 + 8075 * t12897 - 11305 * t12899 + 25 + (-28101 * t12897 + 24871 * t12899 - 535) * t12894)

        if Bindx == 2054:
            t12904 = np.cos(phi)
            t12905 = t12904 ** 2
            t12906 = t12904 * t12905
            t12909 = t12906 ** 2
            t12907 = t12905 ** 2
            tfunc[..., c] = (-0.23e2 / 0.512e3*1j) * np.exp((1j) * (phi1 - 4 * phi2)) * np.sqrt(0.546e3) * ((1 - t12904) ** (0.5e1 / 0.2e1)) * ((1 + t12904) ** (0.3e1 / 0.2e1)) * (255 * t12905 + 595 * t12906 - 1615 * t12907 + 2261 * t12909 - 5 + (-2907 * t12907 + 3553 * t12909 - 25) * t12904)

        if Bindx == 2055:
            t12912 = np.cos(phi)
            t12913 = t12912 ** 2
            t12915 = t12913 ** 2
            t12919 = t12915 ** 2
            t12914 = t12912 * t12913
            t12917 = t12914 ** 2
            t12911 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.455e3) * t12911 ** 2 * (60 * t12913 - 780 * t12914 - 510 * t12915 + 1292 * t12917 - 969 * t12919 - 1 + (3774 * t12915 - 6460 * t12917 + 3553 * t12919 + 41) * t12912)

        if Bindx == 2056:
            t12921 = np.cos(phi)
            t12922 = t12921 ** 2
            t12924 = t12922 ** 2
            t12928 = t12924 ** 2
            t12923 = t12921 * t12922
            t12926 = t12923 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.130e3) * ((1 - t12921) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t12921)) * (-1260 * t12922 - 2100 * t12923 + 10710 * t12924 - 27132 * t12926 + 20349 * t12928 + 21 + (14994 * t12924 - 34884 * t12926 + 24871 * t12928 + 63) * t12921)

        if Bindx == 2057:
            t12930 = np.cos(phi)
            t12931 = t12930 ** 2
            t12933 = t12931 ** 2
            t12934 = t12930 * t12933
            t12939 = t12934 ** 2
            t12937 = t12933 ** 2
            t12932 = t12930 * t12931
            t12935 = t12932 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((1j) * (phi1 - phi2)) * (-1365 * t12931 + 58695 * t12932 + 13650 * t12933 - 346710 * t12934 - 46410 * t12935 + 62985 * t12937 - 29393 * t12939 + 21 + (828750 * t12935 - 860795 * t12937 + 323323 * t12939 - 2751) * t12930)

        if Bindx == 2058:
            t12941 = np.cos(phi)
            t12942 = t12941 ** 2
            t12943 = t12942 ** 2
            t12945 = t12943 ** 2
            tfunc[..., c] = (-0.23e2 / 0.512e3*1j) * np.exp((1j) * phi1) * np.sqrt(0.33e2) * np.sqrt((1 - t12941)) * np.sqrt((1 + t12941)) * (-13650 * t12943 - 62985 * t12945 - 21 + (46410 * t12943 + 29393 * t12945 + 1365) * t12942)

        if Bindx == 2059:
            t12947 = np.cos(phi)
            t12948 = t12947 ** 2
            t12950 = t12948 ** 2
            t12951 = t12947 * t12950
            t12956 = t12951 ** 2
            t12954 = t12950 ** 2
            t12949 = t12947 * t12948
            t12952 = t12949 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((1j) * (phi1 + phi2)) * (1365 * t12948 + 58695 * t12949 - 13650 * t12950 - 346710 * t12951 + 46410 * t12952 - 62985 * t12954 + 29393 * t12956 - 21 + (828750 * t12952 - 860795 * t12954 + 323323 * t12956 - 2751) * t12947)

        if Bindx == 2060:
            t12958 = np.cos(phi)
            t12959 = t12958 ** 2
            t12961 = t12959 ** 2
            t12965 = t12961 ** 2
            t12960 = t12958 * t12959
            t12963 = t12960 ** 2
            t12962 = t12958 * t12961
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.130e3) * ((1 + t12958) ** (0.3e1 / 0.2e1)) * (-1197 * t12959 + 3360 * t12960 + 8610 * t12961 - 12138 * t12963 - 14535 * t12965 + 21 + (-25704 + 24871 * t12962) * t12962 + (62016 * t12963 - 45220 * t12965 - 84) * t12958) * ((1 - t12958) ** (-0.1e1 / 0.2e1))

        if Bindx == 2061:
            t12969 = np.cos(phi)
            t12970 = t12969 ** 2
            t12972 = t12970 ** 2
            t12976 = t12972 ** 2
            t12971 = t12969 * t12970
            t12974 = t12971 ** 2
            t12968 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.455e3) * t12968 ** 2 * (-60 * t12970 - 780 * t12971 + 510 * t12972 - 1292 * t12974 + 969 * t12976 + 1 + (3774 * t12972 - 6460 * t12974 + 3553 * t12976 + 41) * t12969)

        if Bindx == 2062:
            t12978 = np.cos(phi)
            t12979 = t12978 ** 2
            t12980 = t12978 * t12979
            t12983 = t12980 ** 2
            t12981 = t12979 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * (-255 * t12979 + 595 * t12980 + 1615 * t12981 - 2261 * t12983 + 5 + (-2907 * t12981 + 3553 * t12983 - 25) * t12978) * ((1 + t12978) ** (0.5e1 / 0.2e1)) * np.sqrt(0.546e3) * np.exp((1j) * (phi1 + 4 * phi2)) * ((1 - t12978) ** (0.3e1 / 0.2e1))

        if Bindx == 2063:
            t12994 = np.sin(phi)
            t12992 = t12994 ** 2
            t12985 = np.cos(phi)
            t12986 = t12985 ** 2
            t12987 = t12985 * t12986
            t12990 = t12987 ** 2
            t12988 = t12986 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (phi1 + 5 * phi2)) * np.sqrt(0.78e2) * t12992 ** 2 * (1275 * t12986 + 8245 * t12987 - 8075 * t12988 + 11305 * t12990 - 25 + (-28101 * t12988 + 24871 * t12990 - 535) * t12985)

        if Bindx == 2064:
            t12995 = np.cos(phi)
            t12996 = t12995 ** 2
            t12998 = t12996 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * (190 * t12996 - 665 * t12998 - 5 + (-570 * t12996 + 1463 * t12998 + 35) * t12995) * ((1 + t12995) ** (0.7e1 / 0.2e1)) * np.sqrt(0.221e3) * np.exp((1j) * (phi1 + 6 * phi2)) * ((1 - t12995) ** (0.5e1 / 0.2e1))

        if Bindx == 2065:
            t13008 = np.sin(phi)
            t13005 = t13008 ** 2
            t13006 = t13008 * t13005
            t13000 = np.cos(phi)
            t13001 = t13000 ** 2
            t13003 = t13001 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (phi1 + 7 * phi2)) * np.sqrt(0.2210e4) * t13006 ** 2 * (-266 * t13001 + 931 * t13003 + 7 + (-874 * t13001 + 1463 * t13003 + 83) * t13000)

        if Bindx == 2066:
            t13009 = np.cos(phi)
            t13010 = t13009 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (-21 * t13010 + 1 + (77 * t13010 - 9) * t13009) * ((1 + t13009) ** (0.9e1 / 0.2e1)) * np.sqrt(0.41990e5) * np.exp((1j) * (phi1 + 8 * phi2)) * ((1 - t13009) ** (0.7e1 / 0.2e1))

        if Bindx == 2067:
            t13018 = np.sin(phi)
            t13015 = t13018 ** 2
            t13016 = t13015 ** 2
            t13012 = np.cos(phi)
            t13013 = t13012 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (phi1 + 9 * phi2)) * np.sqrt(0.25194e5) * t13016 ** 2 * (63 * t13013 - 3 + (77 * t13013 - 17) * t13012)

        if Bindx == 2068:
            t13019 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (-1 + 11 * t13019) * ((1 + t13019) ** (0.11e2 / 0.2e1)) * np.sqrt(0.29393e5) * np.exp((1j) * (phi1 + 10 * phi2)) * ((1 - t13019) ** (0.9e1 / 0.2e1))

        if Bindx == 2069:
            t13024 = np.sin(phi)
            t13020 = t13024 ** 2
            t13022 = t13024 * t13020 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (phi1 + 11 * phi2)) * np.sqrt(0.646646e6) * t13022 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 2070:
            t13025 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 - 11 * phi2)) * np.sqrt(0.124355e6) * ((1 - t13025) ** (0.13e2 / 0.2e1)) * ((1 + t13025) ** (0.9e1 / 0.2e1))

        if Bindx == 2071:
            t13032 = np.sin(phi)
            t13029 = t13032 ** 2
            t13030 = t13029 ** 2
            t13026 = np.cos(phi)
            t13027 = t13026 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((2*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.22610e5) * t13030 ** 2 * (-20 * t13027 + 2 + (11 * t13027 + 7) * t13026)

        if Bindx == 2072:
            t13033 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 - 9 * phi2)) * np.sqrt(0.4845e4) * ((1 - t13033) ** (0.11e2 / 0.2e1)) * ((1 + t13033) ** (0.7e1 / 0.2e1)) * (-1 + (28 + 77 * t13033) * t13033)

        if Bindx == 2073:
            t13042 = np.sin(phi)
            t13039 = t13042 ** 2
            t13040 = t13042 * t13039
            t13034 = np.cos(phi)
            t13035 = t13034 ** 2
            t13037 = t13035 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((2*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.323e3) * t13040 ** 2 * (232 * t13035 - 560 * t13037 - 8 + (-50 * t13035 + 385 * t13037 + 1) * t13034)

        if Bindx == 2074:
            t13043 = np.cos(phi)
            t13044 = t13043 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 - 7 * phi2)) * np.sqrt(0.17e2) * ((1 - t13043) ** (0.9e1 / 0.2e1)) * ((1 + t13043) ** (0.5e1 / 0.2e1)) * (-608 * t13043 - 17 + (5320 * t13043 - 570 + 7315 * t13044) * t13044)

        if Bindx == 2075:
            t13056 = np.sin(phi)
            t13054 = t13056 ** 2
            t13047 = np.cos(phi)
            t13048 = t13047 ** 2
            t13049 = t13047 * t13048
            t13052 = t13049 ** 2
            t13050 = t13048 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.170e3) * t13054 ** 2 * (-264 * t13048 + 401 * t13049 + 1406 * t13050 - 1596 * t13052 + 6 + (-1387 * t13050 + 1463 * t13052 - 29) * t13047)

        if Bindx == 2076:
            t13057 = np.cos(phi)
            t13058 = t13057 ** 2
            t13060 = t13058 ** 2
            t13059 = t13057 * t13058
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.15e2) * ((1 - t13057) ** (0.7e1 / 0.2e1)) * ((1 + t13057) ** (0.3e1 / 0.2e1)) * (-867 * t13058 - 4845 * t13060 + 41 + (-10336 + 24871 * t13059) * t13059 + (27132 * t13060 + 612) * t13057)

        if Bindx == 2077:
            t13064 = np.cos(phi)
            t13065 = t13064 ** 2
            t13067 = t13065 ** 2
            t13071 = t13067 ** 2
            t13066 = t13064 * t13065
            t13069 = t13066 ** 2
            t13063 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.256e3) * np.exp((2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.105e3) * t13063 ** 2 * (220 * t13065 - 860 * t13066 - 1700 * t13067 + 3876 * t13069 - 2584 * t13071 - 4 + (3910 * t13067 - 6460 * t13069 + 3553 * t13071 + 49) * t13064)

        if Bindx == 2078:
            t13073 = np.cos(phi)
            t13074 = t13073 ** 2
            t13075 = t13073 * t13074
            t13078 = t13075 ** 2
            t13076 = t13074 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.14e2) * ((1 - t13073) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t13073)) * (820 * t13074 + 4080 * t13075 - 6460 * t13078 - 19 + (-2890 + 17765 * t13076) * t13076 + (-20672 * t13076 + 25840 * t13078 - 160) * t13073)

        if Bindx == 2079:
            t13081 = np.cos(phi)
            t13082 = t13081 ** 2
            t13084 = t13082 ** 2
            t13085 = t13081 * t13084
            t13090 = t13085 ** 2
            t13088 = t13084 ** 2
            t13083 = t13081 * t13082
            t13086 = t13083 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3) * np.exp((2*1j) * (phi1 - phi2)) * (-2604 * t13082 + 26103 * t13083 + 24780 * t13084 - 147714 * t13085 - 79968 * t13086 + 102714 * t13088 - 45220 * t13090 + 42 + (339558 * t13086 - 340765 * t13088 + 124355 * t13090 - 1281) * t13081)

        if Bindx == 2080:
            t13092 = np.cos(phi)
            t13093 = t13092 ** 2
            t13095 = t13093 ** 2
            t13099 = t13095 ** 2
            t13094 = t13092 * t13093
            t13097 = t13094 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.130e3) * ((1 - t13092) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t13092)) * (-1260 * t13093 - 2100 * t13094 + 10710 * t13095 - 27132 * t13097 + 20349 * t13099 + 21 + (14994 * t13095 - 34884 * t13097 + 24871 * t13099 + 63) * t13092)

        if Bindx == 2081:
            t13102 = np.cos(phi)
            t13103 = t13102 ** 2
            t13104 = t13103 ** 2
            t13101 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((2*1j) * phi1) * np.sqrt(0.4290e4) * t13101 ** 2 * t13102 * (-420 * t13103 + 21 + (-3876 * t13103 + 2142 + 2261 * t13104) * t13104)

        if Bindx == 2082:
            t13107 = np.cos(phi)
            t13108 = t13107 ** 2
            t13110 = t13108 ** 2
            t13114 = t13110 ** 2
            t13109 = t13107 * t13108
            t13112 = t13109 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.130e3) * np.sqrt((1 - t13107)) * ((1 + t13107) ** (0.3e1 / 0.2e1)) * (1260 * t13108 - 2100 * t13109 - 10710 * t13110 + 27132 * t13112 - 20349 * t13114 - 21 + (14994 * t13110 - 34884 * t13112 + 24871 * t13114 + 63) * t13107)

        if Bindx == 2083:
            t13116 = np.cos(phi)
            t13117 = t13116 ** 2
            t13119 = t13117 ** 2
            t13120 = t13116 * t13119
            t13125 = t13120 ** 2
            t13123 = t13119 ** 2
            t13118 = t13116 * t13117
            t13121 = t13118 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3) * np.exp((2*1j) * (phi1 + phi2)) * (2604 * t13117 + 26103 * t13118 - 24780 * t13119 - 147714 * t13120 + 79968 * t13121 - 102714 * t13123 + 45220 * t13125 - 42 + (339558 * t13121 - 340765 * t13123 + 124355 * t13125 - 1281) * t13116)

        if Bindx == 2084:
            t13127 = np.cos(phi)
            t13128 = t13127 ** 2
            t13130 = t13128 ** 2
            t13134 = t13130 ** 2
            t13129 = t13127 * t13128
            t13132 = t13129 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.14e2) * ((1 + t13127) ** (0.5e1 / 0.2e1)) * (-660 * t13128 + 4900 * t13129 - 1190 * t13130 + 27132 * t13132 - 43605 * t13134 + 19 + (-23562 * t13130 + 19380 * t13132 + 17765 * t13134 - 179) * t13127) * ((1 - t13127) ** (-0.1e1 / 0.2e1))

        if Bindx == 2085:
            t13137 = np.cos(phi)
            t13138 = t13137 ** 2
            t13140 = t13138 ** 2
            t13144 = t13140 ** 2
            t13139 = t13137 * t13138
            t13142 = t13139 ** 2
            t13136 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.256e3) * np.exp((2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.105e3) * t13136 ** 2 * (-220 * t13138 - 860 * t13139 + 1700 * t13140 - 3876 * t13142 + 2584 * t13144 + 4 + (3910 * t13140 - 6460 * t13142 + 3553 * t13144 + 49) * t13137)

        if Bindx == 2086:
            t13146 = np.cos(phi)
            t13147 = t13146 ** 2
            t13149 = t13147 ** 2
            t13148 = t13146 * t13147
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (-867 * t13147 - 4845 * t13149 + 41 + (10336 + 24871 * t13148) * t13148 + (-27132 * t13149 - 612) * t13146) * ((1 + t13146) ** (0.7e1 / 0.2e1)) * np.sqrt(0.15e2) * np.exp((1j) * (2 * phi1 + 5 * phi2)) * ((1 - t13146) ** (0.3e1 / 0.2e1))

        if Bindx == 2087:
            t13161 = np.sin(phi)
            t13159 = t13161 ** 2
            t13152 = np.cos(phi)
            t13153 = t13152 ** 2
            t13154 = t13152 * t13153
            t13157 = t13154 ** 2
            t13155 = t13153 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.170e3) * t13159 ** 2 * (264 * t13153 + 401 * t13154 - 1406 * t13155 + 1596 * t13157 - 6 + (-1387 * t13155 + 1463 * t13157 - 29) * t13152)

        if Bindx == 2088:
            t13162 = np.cos(phi)
            t13163 = t13162 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * (608 * t13162 - 17 + (-5320 * t13162 - 570 + 7315 * t13163) * t13163) * ((1 + t13162) ** (0.9e1 / 0.2e1)) * np.sqrt(0.17e2) * np.exp((1j) * (2 * phi1 + 7 * phi2)) * ((1 - t13162) ** (0.5e1 / 0.2e1))

        if Bindx == 2089:
            t13174 = np.sin(phi)
            t13171 = t13174 ** 2
            t13172 = t13174 * t13171
            t13166 = np.cos(phi)
            t13167 = t13166 ** 2
            t13169 = t13167 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((2*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.323e3) * t13172 ** 2 * (-232 * t13167 + 560 * t13169 + 8 + (-50 * t13167 + 385 * t13169 + 1) * t13166)

        if Bindx == 2090:
            t13175 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (-1 + (-28 + 77 * t13175) * t13175) * ((1 + t13175) ** (0.11e2 / 0.2e1)) * np.sqrt(0.4845e4) * np.exp((1j) * (2 * phi1 + 9 * phi2)) * ((1 - t13175) ** (0.7e1 / 0.2e1))

        if Bindx == 2091:
            t13182 = np.sin(phi)
            t13179 = t13182 ** 2
            t13180 = t13179 ** 2
            t13176 = np.cos(phi)
            t13177 = t13176 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((2*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.22610e5) * t13180 ** 2 * (20 * t13177 - 2 + (11 * t13177 + 7) * t13176)

        if Bindx == 2092:
            t13183 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 + 11 * phi2)) * np.sqrt(0.124355e6) * ((1 - t13183) ** (0.9e1 / 0.2e1)) * ((1 + t13183) ** (0.13e2 / 0.2e1))

        if Bindx == 2093:
            t13184 = np.cos(phi)
            t13192 = -1 + t13184
            t13191 = 1 + t13184
            t13189 = t13191 ** 2
            t13185 = t13192 ** 2
            t13186 = t13192 * t13185
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((1j) * (3 * phi1 - 11 * phi2)) * np.sqrt(0.35530e5) * t13192 * t13186 ** 2 * t13189 ** 2

        if Bindx == 2094:
            t13193 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * np.exp((1j) * (3 * phi1 - 10 * phi2)) * np.sqrt(0.1615e4) * ((1 - t13193) ** (0.13e2 / 0.2e1)) * ((1 + t13193) ** (0.7e1 / 0.2e1)) * (3 + 11 * t13193)

        if Bindx == 2095:
            t13202 = np.sin(phi)
            t13199 = t13202 ** 2
            t13200 = t13202 * t13199
            t13194 = np.cos(phi)
            t13195 = t13194 ** 2
            t13197 = t13195 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((3*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.67830e5) * t13200 ** 2 * (18 * t13195 - 81 * t13197 - 1 + (46 * t13195 + 33 * t13197 - 15) * t13194)

        if Bindx == 2096:
            t13203 = np.cos(phi)
            t13204 = t13203 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4*1j) * np.exp((1j) * (3 * phi1 - 8 * phi2)) * np.sqrt(0.4522e4) * ((1 - t13203) ** (0.11e2 / 0.2e1)) * ((1 + t13203) ** (0.5e1 / 0.2e1)) * (45 * t13204 - 1 + (55 * t13204 + 5) * t13203)

        if Bindx == 2097:
            t13215 = np.sin(phi)
            t13213 = t13215 ** 2
            t13206 = np.cos(phi)
            t13207 = t13206 ** 2
            t13208 = t13206 * t13207
            t13211 = t13208 ** 2
            t13209 = t13207 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.238e3) * t13213 ** 2 * (-385 * t13207 - 353 * t13208 + 1729 * t13209 - 1995 * t13211 + 11 + (-95 * t13209 + 1045 * t13211 + 43) * t13206)

        if Bindx == 2098:
            t13216 = np.cos(phi)
            t13217 = t13216 ** 2
            t13219 = t13217 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((3*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.595e3) * ((1 - t13216) ** (0.9e1 / 0.2e1)) * ((1 + t13216) ** (0.3e1 / 0.2e1)) * (-342 * t13217 + 2565 * t13219 + 1 + (570 * t13217 + 1881 * t13219 - 99) * t13216)

        if Bindx == 2099:
            t13222 = np.cos(phi)
            t13223 = t13222 ** 2
            t13225 = t13223 ** 2
            t13229 = t13225 ** 2
            t13224 = t13222 * t13223
            t13227 = t13224 ** 2
            t13221 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.210e3) * t13221 ** 2 * (1680 * t13223 - 1240 * t13224 - 11390 * t13225 + 23256 * t13227 - 14535 * t13229 - 35 + (7038 * t13225 - 15504 * t13227 + 10659 * t13229 + 71) * t13222)

        if Bindx == 2100:
            t13231 = np.cos(phi)
            t13232 = t13231 ** 2
            t13233 = t13231 * t13232
            t13236 = t13233 ** 2
            t13234 = t13232 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.30e2) * ((1 - t13231) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t13231)) * (119 * t13232 - 3927 * t13233 - 6783 * t13234 + 20349 * t13236 + 11 + (6783 * t13234 + 10659 * t13236 + 245) * t13231)

        if Bindx == 2101:
            t13238 = np.cos(phi)
            t13239 = t13238 ** 2
            t13241 = t13239 ** 2
            t13242 = t13238 * t13241
            t13247 = t13242 ** 2
            t13245 = t13241 ** 2
            t13240 = t13238 * t13239
            t13243 = t13240 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((3*1j) * (phi1 - phi2)) * (-10203 * t13239 + 35201 * t13240 + 89310 * t13241 - 190218 * t13242 - 265846 * t13243 + 316863 * t13245 - 130815 * t13247 + 179 + (428706 * t13243 - 431205 * t13245 + 159885 * t13247 - 1857) * t13238)

        if Bindx == 2102:
            t13249 = np.cos(phi)
            t13250 = t13249 ** 2
            t13251 = t13249 * t13250
            t13254 = t13251 ** 2
            t13252 = t13250 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.14e2) * ((1 - t13249) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t13249)) * (820 * t13250 + 4080 * t13251 - 6460 * t13254 - 19 + (-2890 + 17765 * t13252) * t13252 + (-20672 * t13252 + 25840 * t13254 - 160) * t13249)

        if Bindx == 2103:
            t13258 = np.cos(phi)
            t13259 = t13258 ** 2
            t13261 = t13259 ** 2
            t13265 = t13261 ** 2
            t13260 = t13258 * t13259
            t13263 = t13260 ** 2
            t13257 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.455e3) * t13257 ** 2 * (60 * t13259 - 780 * t13260 - 510 * t13261 + 1292 * t13263 - 969 * t13265 - 1 + (3774 * t13261 - 6460 * t13263 + 3553 * t13265 + 41) * t13258)

        if Bindx == 2104:
            t13267 = np.cos(phi)
            t13268 = t13267 ** 2
            t13269 = t13268 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.15015e5) * ((1 - t13267) ** (0.3e1 / 0.2e1)) * ((1 + t13267) ** (0.3e1 / 0.2e1)) * (-60 * t13268 + 1 + (-1292 * t13268 + 510 + 969 * t13269) * t13269)

        if Bindx == 2105:
            t13273 = np.cos(phi)
            t13274 = t13273 ** 2
            t13276 = t13274 ** 2
            t13280 = t13276 ** 2
            t13275 = t13273 * t13274
            t13278 = t13275 ** 2
            t13272 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.455e3) * t13272 ** 2 * (-60 * t13274 - 780 * t13275 + 510 * t13276 - 1292 * t13278 + 969 * t13280 + 1 + (3774 * t13276 - 6460 * t13278 + 3553 * t13280 + 41) * t13273)

        if Bindx == 2106:
            t13282 = np.cos(phi)
            t13283 = t13282 ** 2
            t13284 = t13282 * t13283
            t13287 = t13284 ** 2
            t13285 = t13283 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t13282)) * ((1 + t13282) ** (0.5e1 / 0.2e1)) * (820 * t13283 - 4080 * t13284 - 6460 * t13287 - 19 + (-2890 + 17765 * t13285) * t13285 + (20672 * t13285 - 25840 * t13287 + 160) * t13282)

        if Bindx == 2107:
            t13290 = np.cos(phi)
            t13291 = t13290 ** 2
            t13293 = t13291 ** 2
            t13294 = t13290 * t13293
            t13299 = t13294 ** 2
            t13297 = t13293 ** 2
            t13292 = t13290 * t13291
            t13295 = t13292 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((3*1j) * (phi1 + phi2)) * (10203 * t13291 + 35201 * t13292 - 89310 * t13293 - 190218 * t13294 + 265846 * t13295 - 316863 * t13297 + 130815 * t13299 - 179 + (428706 * t13295 - 431205 * t13297 + 159885 * t13299 - 1857) * t13290)

        if Bindx == 2108:
            t13301 = np.cos(phi)
            t13302 = t13301 ** 2
            t13303 = t13301 * t13302
            t13305 = t13303 ** 2
            t13304 = t13302 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.30e2) * ((1 + t13301) ** (0.7e1 / 0.2e1)) * (364 * t13302 + 3808 * t13303 + 27132 * t13305 + 11 + (-10710 + 10659 * t13304) * t13304 + (-31008 * t13305 - 256) * t13301) * ((1 - t13301) ** (-0.1e1 / 0.2e1))

        if Bindx == 2109:
            t13309 = np.cos(phi)
            t13310 = t13309 ** 2
            t13312 = t13310 ** 2
            t13316 = t13312 ** 2
            t13311 = t13309 * t13310
            t13314 = t13311 ** 2
            t13308 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.210e3) * t13308 ** 2 * (-1680 * t13310 - 1240 * t13311 + 11390 * t13312 - 23256 * t13314 + 14535 * t13316 + 35 + (7038 * t13312 - 15504 * t13314 + 10659 * t13316 + 71) * t13309)

        if Bindx == 2110:
            t13318 = np.cos(phi)
            t13319 = t13318 ** 2
            t13321 = t13319 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (342 * t13319 - 2565 * t13321 - 1 + (570 * t13319 + 1881 * t13321 - 99) * t13318) * ((1 + t13318) ** (0.9e1 / 0.2e1)) * np.sqrt(0.595e3) * np.exp((3*1j) * (phi1 + 2 * phi2)) * ((1 - t13318) ** (0.3e1 / 0.2e1))

        if Bindx == 2111:
            t13332 = np.sin(phi)
            t13330 = t13332 ** 2
            t13323 = np.cos(phi)
            t13324 = t13323 ** 2
            t13325 = t13323 * t13324
            t13328 = t13325 ** 2
            t13326 = t13324 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.238e3) * t13330 ** 2 * (385 * t13324 - 353 * t13325 - 1729 * t13326 + 1995 * t13328 - 11 + (-95 * t13326 + 1045 * t13328 + 43) * t13323)

        if Bindx == 2112:
            t13333 = np.cos(phi)
            t13334 = t13333 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * (-45 * t13334 + 1 + (55 * t13334 + 5) * t13333) * ((1 + t13333) ** (0.11e2 / 0.2e1)) * np.sqrt(0.4522e4) * np.exp((1j) * (3 * phi1 + 8 * phi2)) * ((1 - t13333) ** (0.5e1 / 0.2e1))

        if Bindx == 2113:
            t13344 = np.sin(phi)
            t13341 = t13344 ** 2
            t13342 = t13344 * t13341
            t13336 = np.cos(phi)
            t13337 = t13336 ** 2
            t13339 = t13337 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((3*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.67830e5) * t13342 ** 2 * (-18 * t13337 + 81 * t13339 + 1 + (46 * t13337 + 33 * t13339 - 15) * t13336)

        if Bindx == 2114:
            t13345 = np.cos(phi)
            tfunc[..., c] = (0.69e2 / 0.1024e4*1j) * (-3 + 11 * t13345) * ((1 + t13345) ** (0.13e2 / 0.2e1)) * np.sqrt(0.1615e4) * np.exp((1j) * (3 * phi1 + 10 * phi2)) * ((1 - t13345) ** (0.7e1 / 0.2e1))

        if Bindx == 2115:
            t13346 = np.cos(phi)
            t13354 = -1 + t13346
            t13353 = 1 + t13346
            t13349 = t13353 ** 2
            t13350 = t13353 * t13349
            t13347 = t13354 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((1j) * (3 * phi1 + 11 * phi2)) * np.sqrt(0.35530e5) * t13347 ** 2 * t13353 * t13350 ** 2

        if Bindx == 2116:
            t13355 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((1j) * (4 * phi1 - 11 * phi2)) * np.sqrt(0.10659e5) * ((1 - t13355) ** (0.15e2 / 0.2e1)) * ((1 + t13355) ** (0.7e1 / 0.2e1))

        if Bindx == 2117:
            t13356 = np.cos(phi)
            t13364 = -1 + t13356
            t13363 = 1 + t13356
            t13361 = t13363 ** 2
            t13357 = t13364 ** 2
            t13358 = t13364 * t13357
            tfunc[..., c] = (0.23e2 / 0.512e3) * np.exp((2*1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.1938e4) * t13364 * t13358 ** 2 * t13363 * t13361 * (4 + 11 * t13356)

        if Bindx == 2118:
            t13365 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.512e3*1j) * np.exp((1j) * (4 * phi1 - 9 * phi2)) * np.sqrt(0.2261e4) * ((1 - t13365) ** (0.13e2 / 0.2e1)) * ((1 + t13365) ** (0.5e1 / 0.2e1)) * (1 + (8 + 11 * t13365) * t13365)

        if Bindx == 2119:
            t13374 = np.sin(phi)
            t13372 = t13374 ** 2
            t13366 = np.cos(phi)
            t13367 = t13366 ** 2
            t13368 = t13366 * t13367
            tfunc[..., c] = (0.23e2 / 0.256e3) * np.exp((4*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.33915e5) * t13372 ** 2 * t13366 * (3 + (16 + 11 * t13368) * t13368 + (-19 + (-32 * t13366 + 21) * t13367) * t13367)

        if Bindx == 2120:
            t13375 = np.cos(phi)
            t13376 = t13375 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((1j) * (4 * phi1 - 7 * phi2)) * np.sqrt(0.1785e4) * ((1 - t13375) ** (0.11e2 / 0.2e1)) * ((1 + t13375) ** (0.3e1 / 0.2e1)) * (-3 + (304 * t13375 + 114 + 209 * t13376) * t13376)

        if Bindx == 2121:
            t13380 = np.cos(phi)
            t13381 = t13380 ** 2
            t13383 = t13381 ** 2
            t13387 = t13383 ** 2
            t13382 = t13380 * t13381
            t13385 = t13382 ** 2
            t13379 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.714e3) * t13379 ** 2 * (156 * t13381 + 316 * t13382 - 964 * t13383 + 2052 * t13385 - 1368 * t13387 - 4 + (-558 * t13383 - 228 * t13385 + 627 * t13387 - 29) * t13380)

        if Bindx == 2122:
            t13389 = np.cos(phi)
            t13390 = t13389 ** 2
            t13391 = t13390 ** 2
            t13392 = t13389 * t13391
            tfunc[..., c] = (-0.23e2 / 0.512e3*1j) * np.exp((1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.7e1) * ((1 - t13389) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t13389)) * (-2295 * t13390 + 14535 * t13391 + 23256 * t13392 + 13 + (10659 * t13392 - 408) * t13389)

        if Bindx == 2123:
            t13394 = np.cos(phi)
            t13395 = t13394 ** 2
            t13397 = t13395 ** 2
            t13398 = t13394 * t13397
            t13403 = t13398 ** 2
            t13401 = t13397 ** 2
            t13396 = t13394 * t13395
            t13399 = t13396 ** 2
            tfunc[..., c] = (0.23e2 / 0.128e3) * np.exp((4*1j) * (phi1 - phi2)) * (-1600 * t13395 + 775 * t13396 + 12520 * t13397 - 5978 * t13398 - 34272 * t13399 + 38760 * t13401 - 15504 * t13403 + 32 + (18870 * t13399 - 24225 * t13401 + 10659 * t13403 - 37) * t13394)

        if Bindx == 2124:
            t13405 = np.cos(phi)
            t13406 = t13405 ** 2
            t13407 = t13405 * t13406
            t13410 = t13407 ** 2
            t13408 = t13406 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.30e2) * ((1 - t13405) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t13405)) * (119 * t13406 - 3927 * t13407 - 6783 * t13408 + 20349 * t13410 + 11 + (6783 * t13408 + 10659 * t13410 + 245) * t13405)

        if Bindx == 2125:
            t13413 = np.cos(phi)
            t13414 = t13413 ** 2
            t13416 = t13414 ** 2
            t13420 = t13416 ** 2
            t13415 = t13413 * t13414
            t13418 = t13415 ** 2
            t13412 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.256e3) * np.exp((2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.105e3) * t13412 ** 2 * (220 * t13414 - 860 * t13415 - 1700 * t13416 + 3876 * t13418 - 2584 * t13420 - 4 + (3910 * t13416 - 6460 * t13418 + 3553 * t13420 + 49) * t13413)

        if Bindx == 2126:
            t13422 = np.cos(phi)
            t13423 = t13422 ** 2
            t13424 = t13422 * t13423
            t13427 = t13424 ** 2
            t13425 = t13423 ** 2
            tfunc[..., c] = (-0.23e2 / 0.512e3*1j) * np.exp((1j) * (4 * phi1 - phi2)) * np.sqrt(0.546e3) * ((1 - t13422) ** (0.5e1 / 0.2e1)) * ((1 + t13422) ** (0.3e1 / 0.2e1)) * (255 * t13423 + 595 * t13424 - 1615 * t13425 + 2261 * t13427 - 5 + (-2907 * t13425 + 3553 * t13427 - 25) * t13422)

        if Bindx == 2127:
            t13435 = np.sin(phi)
            t13433 = t13435 ** 2
            t13429 = np.cos(phi)
            t13430 = t13429 ** 2
            t13431 = t13430 ** 2
            tfunc[..., c] = (0.69e2 / 0.256e3) * np.exp((4*1j) * phi1) * np.sqrt(0.2002e4) * t13433 ** 2 * t13429 * (-323 * t13431 - 5 + (323 * t13431 + 85) * t13430)

        if Bindx == 2128:
            t13436 = np.cos(phi)
            t13437 = t13436 ** 2
            t13438 = t13436 * t13437
            t13441 = t13438 ** 2
            t13439 = t13437 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((1j) * (4 * phi1 + phi2)) * np.sqrt(0.546e3) * ((1 - t13436) ** (0.3e1 / 0.2e1)) * ((1 + t13436) ** (0.5e1 / 0.2e1)) * (-255 * t13437 + 595 * t13438 + 1615 * t13439 - 2261 * t13441 + 5 + (-2907 * t13439 + 3553 * t13441 - 25) * t13436)

        if Bindx == 2129:
            t13444 = np.cos(phi)
            t13445 = t13444 ** 2
            t13447 = t13445 ** 2
            t13451 = t13447 ** 2
            t13446 = t13444 * t13445
            t13449 = t13446 ** 2
            t13443 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.256e3) * np.exp((2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.105e3) * t13443 ** 2 * (-220 * t13445 - 860 * t13446 + 1700 * t13447 - 3876 * t13449 + 2584 * t13451 + 4 + (3910 * t13447 - 6460 * t13449 + 3553 * t13451 + 49) * t13444)

        if Bindx == 2130:
            t13453 = np.cos(phi)
            t13454 = t13453 ** 2
            t13460 = 6783 * t13454 ** 2
            t13455 = t13453 * t13454
            t13458 = t13455 ** 2
            tfunc[..., c] = (-0.23e2 / 0.512e3*1j) * np.exp((1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.30e2) * np.sqrt((1 - t13453)) * ((1 + t13453) ** (0.7e1 / 0.2e1)) * (-119 * t13454 - 3927 * t13455 - 20349 * t13458 + t13460 - 11 + (10659 * t13458 + t13460 + 245) * t13453)

        if Bindx == 2131:
            t13461 = np.cos(phi)
            t13462 = t13461 ** 2
            t13464 = t13462 ** 2
            t13465 = t13461 * t13464
            t13470 = t13465 ** 2
            t13468 = t13464 ** 2
            t13463 = t13461 * t13462
            t13466 = t13463 ** 2
            tfunc[..., c] = (0.23e2 / 0.128e3) * np.exp((4*1j) * (phi1 + phi2)) * (1600 * t13462 + 775 * t13463 - 12520 * t13464 - 5978 * t13465 + 34272 * t13466 - 38760 * t13468 + 15504 * t13470 - 32 + (18870 * t13466 - 24225 * t13468 + 10659 * t13470 - 37) * t13461)

        if Bindx == 2132:
            t13472 = np.cos(phi)
            t13473 = t13472 ** 2
            t13474 = t13472 * t13473
            t13477 = t13474 ** 2
            t13475 = t13473 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.7e1) * ((1 + t13472) ** (0.9e1 / 0.2e1)) * (2703 * t13473 - 2295 * t13474 - 14535 * t13475 - 33915 * t13477 - 13 + (37791 * t13475 + 10659 * t13477 - 395) * t13472) * ((1 - t13472) ** (-0.1e1 / 0.2e1))

        if Bindx == 2133:
            t13480 = np.cos(phi)
            t13481 = t13480 ** 2
            t13483 = t13481 ** 2
            t13487 = t13483 ** 2
            t13482 = t13480 * t13481
            t13485 = t13482 ** 2
            t13479 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.714e3) * t13479 ** 2 * (-156 * t13481 + 316 * t13482 + 964 * t13483 - 2052 * t13485 + 1368 * t13487 + 4 + (-558 * t13483 - 228 * t13485 + 627 * t13487 - 29) * t13480)

        if Bindx == 2134:
            t13489 = np.cos(phi)
            t13490 = t13489 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * (-3 + (-304 * t13489 + 114 + 209 * t13490) * t13490) * ((1 + t13489) ** (0.11e2 / 0.2e1)) * np.sqrt(0.1785e4) * np.exp((1j) * (4 * phi1 + 7 * phi2)) * ((1 - t13489) ** (0.3e1 / 0.2e1))

        if Bindx == 2135:
            t13501 = np.sin(phi)
            t13499 = t13501 ** 2
            t13493 = np.cos(phi)
            t13494 = t13493 ** 2
            t13495 = t13493 * t13494
            tfunc[..., c] = (0.23e2 / 0.256e3) * np.exp((4*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.33915e5) * t13499 ** 2 * t13493 * (3 + (-16 + 11 * t13495) * t13495 + (-19 + (32 * t13493 + 21) * t13494) * t13494)

        if Bindx == 2136:
            t13502 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.512e3*1j) * (1 + (-8 + 11 * t13502) * t13502) * ((1 + t13502) ** (0.13e2 / 0.2e1)) * np.sqrt(0.2261e4) * np.exp((1j) * (4 * phi1 + 9 * phi2)) * ((1 - t13502) ** (0.5e1 / 0.2e1))

        if Bindx == 2137:
            t13511 = np.sin(phi)
            t13508 = t13511 ** 2
            t13509 = t13511 * t13508
            t13503 = np.cos(phi)
            t13504 = t13503 ** 2
            t13506 = t13504 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((2*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.1938e4) * t13509 ** 2 * (20 * t13504 + 40 * t13506 - 4 + (50 * t13504 + 11 * t13506 - 5) * t13503)

        if Bindx == 2138:
            t13512 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((1j) * (4 * phi1 + 11 * phi2)) * np.sqrt(0.10659e5) * ((1 - t13512) ** (0.7e1 / 0.2e1)) * ((1 + t13512) ** (0.15e2 / 0.2e1))

        if Bindx == 2139:
            t13513 = np.cos(phi)
            t13520 = -1 + t13513
            t13519 = 1 + t13513
            t13517 = t13519 ** 2
            t13514 = t13520 ** 2
            t13515 = t13514 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 - 11 * phi2)) * np.sqrt(0.74613e5) * t13515 ** 2 * t13519 * t13517

        if Bindx == 2140:
            t13521 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((5*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.13566e5) * ((1 - t13521) ** (0.15e2 / 0.2e1)) * ((1 + t13521) ** (0.5e1 / 0.2e1)) * (5 + 11 * t13521)

        if Bindx == 2141:
            t13531 = np.sin(phi)
            t13529 = t13531 ** 2
            t13522 = np.cos(phi)
            t13523 = t13522 ** 2
            t13524 = t13522 * t13523
            t13527 = t13524 ** 2
            t13525 = t13523 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 - 9 * phi2)) * np.sqrt(0.323e3) * t13529 ** 2 * (143 * t13523 - 185 * t13524 - 135 * t13525 - 315 * t13527 - 13 + (433 * t13525 + 77 * t13527 - 5) * t13522)

        if Bindx == 2142:
            t13532 = np.cos(phi)
            t13533 = t13532 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (5 * phi1 - 8 * phi2)) * np.sqrt(0.4845e4) * ((1 - t13532) ** (0.13e2 / 0.2e1)) * ((1 + t13532) ** (0.3e1 / 0.2e1)) * (105 * t13533 + 3 + (77 * t13533 + 39) * t13532)

        if Bindx == 2143:
            t13536 = np.cos(phi)
            t13537 = t13536 ** 2
            t13539 = t13537 ** 2
            t13543 = t13539 ** 2
            t13538 = t13536 * t13537
            t13541 = t13538 ** 2
            t13535 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.255e3) * t13535 ** 2 * (-252 * t13537 + 2380 * t13538 - 658 * t13539 + 4788 * t13541 - 4655 * t13543 + 9 + (-5614 * t13539 + 2812 * t13541 + 1463 * t13543 - 273) * t13536)

        if Bindx == 2144:
            t13545 = np.cos(phi)
            t13546 = t13545 ** 2
            t13548 = t13546 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((1j) * (5 * phi1 - 6 * phi2)) * np.sqrt(0.102e3) * ((1 - t13545) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t13545)) * (1710 * t13546 + 9975 * t13548 - 53 + (7410 * t13546 + 4389 * t13548 - 135) * t13545)

        if Bindx == 2145:
            t13550 = np.cos(phi)
            t13551 = t13550 ** 2
            t13553 = t13551 ** 2
            t13554 = t13550 * t13553
            t13559 = t13554 ** 2
            t13557 = t13553 ** 2
            t13552 = t13550 * t13551
            t13555 = t13552 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((5*1j) * (phi1 - phi2)) * (-16195 * t13551 - 42455 * t13552 + 118510 * t13553 + 117670 * t13554 - 336294 * t13555 + 402135 * t13557 - 169575 * t13559 + 395 + (-69870 * t13555 - 82365 * t13557 + 74613 * t13559 + 3431) * t13550)

        if Bindx == 2146:
            t13561 = np.cos(phi)
            t13562 = t13561 ** 2
            t13563 = t13562 ** 2
            t13564 = t13561 * t13563
            tfunc[..., c] = (-0.23e2 / 0.512e3*1j) * np.exp((1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.7e1) * ((1 - t13561) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t13561)) * (-2295 * t13562 + 14535 * t13563 + 23256 * t13564 + 13 + (10659 * t13564 - 408) * t13561)

        if Bindx == 2147:
            t13567 = np.cos(phi)
            t13568 = t13567 ** 2
            t13570 = t13568 ** 2
            t13574 = t13570 ** 2
            t13569 = t13567 * t13568
            t13572 = t13569 ** 2
            t13566 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.210e3) * t13566 ** 2 * (1680 * t13568 - 1240 * t13569 - 11390 * t13570 + 23256 * t13572 - 14535 * t13574 - 35 + (7038 * t13570 - 15504 * t13572 + 10659 * t13574 + 71) * t13567)

        if Bindx == 2148:
            t13576 = np.cos(phi)
            t13577 = t13576 ** 2
            t13579 = t13577 ** 2
            t13578 = t13576 * t13577
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.15e2) * ((1 - t13576) ** (0.7e1 / 0.2e1)) * ((1 + t13576) ** (0.3e1 / 0.2e1)) * (-867 * t13577 - 4845 * t13579 + 41 + (-10336 + 24871 * t13578) * t13578 + (27132 * t13579 + 612) * t13576)

        if Bindx == 2149:
            t13591 = np.sin(phi)
            t13589 = t13591 ** 2
            t13582 = np.cos(phi)
            t13583 = t13582 ** 2
            t13584 = t13582 * t13583
            t13587 = t13584 ** 2
            t13585 = t13583 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 - phi2)) * np.sqrt(0.78e2) * t13589 ** 2 * (-1275 * t13583 + 8245 * t13584 + 8075 * t13585 - 11305 * t13587 + 25 + (-28101 * t13585 + 24871 * t13587 - 535) * t13582)

        if Bindx == 2150:
            t13592 = np.cos(phi)
            t13593 = t13592 ** 2
            t13594 = t13593 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.286e3) * ((1 - t13592) ** (0.5e1 / 0.2e1)) * ((1 + t13592) ** (0.5e1 / 0.2e1)) * (-1615 * t13594 - 5 + (2261 * t13594 + 255) * t13593)

        if Bindx == 2151:
            t13605 = np.sin(phi)
            t13603 = t13605 ** 2
            t13596 = np.cos(phi)
            t13597 = t13596 ** 2
            t13598 = t13596 * t13597
            t13601 = t13598 ** 2
            t13599 = t13597 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 + phi2)) * np.sqrt(0.78e2) * t13603 ** 2 * (1275 * t13597 + 8245 * t13598 - 8075 * t13599 + 11305 * t13601 - 25 + (-28101 * t13599 + 24871 * t13601 - 535) * t13596)

        if Bindx == 2152:
            t13606 = np.cos(phi)
            t13607 = t13606 ** 2
            t13609 = t13607 ** 2
            t13608 = t13606 * t13607
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.15e2) * ((1 - t13606) ** (0.3e1 / 0.2e1)) * ((1 + t13606) ** (0.7e1 / 0.2e1)) * (-867 * t13607 - 4845 * t13609 + 41 + (10336 + 24871 * t13608) * t13608 + (-27132 * t13609 - 612) * t13606)

        if Bindx == 2153:
            t13613 = np.cos(phi)
            t13614 = t13613 ** 2
            t13616 = t13614 ** 2
            t13620 = t13616 ** 2
            t13615 = t13613 * t13614
            t13618 = t13615 ** 2
            t13612 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.210e3) * t13612 ** 2 * (-1680 * t13614 - 1240 * t13615 + 11390 * t13616 - 23256 * t13618 + 14535 * t13620 + 35 + (7038 * t13616 - 15504 * t13618 + 10659 * t13620 + 71) * t13613)

        if Bindx == 2154:
            t13622 = np.cos(phi)
            t13623 = t13622 ** 2
            t13624 = t13623 ** 2
            t13625 = t13622 * t13624
            tfunc[..., c] = (-0.23e2 / 0.512e3*1j) * np.exp((1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.7e1) * np.sqrt((1 - t13622)) * ((1 + t13622) ** (0.9e1 / 0.2e1)) * (-2295 * t13623 + 14535 * t13624 - 23256 * t13625 + 13 + (10659 * t13625 + 408) * t13622)

        if Bindx == 2155:
            t13627 = np.cos(phi)
            t13628 = t13627 ** 2
            t13630 = t13628 ** 2
            t13631 = t13627 * t13630
            t13636 = t13631 ** 2
            t13634 = t13630 ** 2
            t13629 = t13627 * t13628
            t13632 = t13629 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((5*1j) * (phi1 + phi2)) * (16195 * t13628 - 42455 * t13629 - 118510 * t13630 + 117670 * t13631 + 336294 * t13632 - 402135 * t13634 + 169575 * t13636 - 395 + (-69870 * t13632 - 82365 * t13634 + 74613 * t13636 + 3431) * t13627)

        if Bindx == 2156:
            t13638 = np.cos(phi)
            t13639 = t13638 ** 2
            t13641 = t13639 ** 2
            t13640 = t13638 * t13639
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.102e3) * ((1 + t13638) ** (0.11e2 / 0.2e1)) * (1575 * t13639 + 17385 * t13641 - 53 + (-9120 + 4389 * t13640) * t13640 + (-14364 * t13641 + 188) * t13638) * ((1 - t13638) ** (-0.1e1 / 0.2e1))

        if Bindx == 2157:
            t13645 = np.cos(phi)
            t13646 = t13645 ** 2
            t13648 = t13646 ** 2
            t13652 = t13648 ** 2
            t13647 = t13645 * t13646
            t13650 = t13647 ** 2
            t13644 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.255e3) * t13644 ** 2 * (252 * t13646 + 2380 * t13647 + 658 * t13648 - 4788 * t13650 + 4655 * t13652 - 9 + (-5614 * t13648 + 2812 * t13650 + 1463 * t13652 - 273) * t13645)

        if Bindx == 2158:
            t13654 = np.cos(phi)
            t13655 = t13654 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * (-105 * t13655 - 3 + (77 * t13655 + 39) * t13654) * ((1 + t13654) ** (0.13e2 / 0.2e1)) * np.sqrt(0.4845e4) * np.exp((1j) * (5 * phi1 + 8 * phi2)) * ((1 - t13654) ** (0.3e1 / 0.2e1))

        if Bindx == 2159:
            t13666 = np.sin(phi)
            t13664 = t13666 ** 2
            t13657 = np.cos(phi)
            t13658 = t13657 ** 2
            t13659 = t13657 * t13658
            t13662 = t13659 ** 2
            t13660 = t13658 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 + 9 * phi2)) * np.sqrt(0.323e3) * t13664 ** 2 * (-143 * t13658 - 185 * t13659 + 135 * t13660 + 315 * t13662 + 13 + (433 * t13660 + 77 * t13662 - 5) * t13657)

        if Bindx == 2160:
            t13667 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * (-5 + 11 * t13667) * ((1 + t13667) ** (0.15e2 / 0.2e1)) * np.sqrt(0.13566e5) * np.exp((5*1j) * (phi1 + 2 * phi2)) * ((1 - t13667) ** (0.5e1 / 0.2e1))

        if Bindx == 2161:
            t13668 = np.cos(phi)
            t13675 = -1 + t13668
            t13674 = 1 + t13668
            t13671 = t13674 ** 2
            t13672 = t13671 ** 2
            t13669 = t13675 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 + 11 * phi2)) * np.sqrt(0.74613e5) * t13675 * t13669 * t13672 ** 2

        if Bindx == 2162:
            t13676 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.exp((1j) * (6 * phi1 - 11 * phi2)) * np.sqrt(0.2926e4) * ((1 - t13676) ** (0.17e2 / 0.2e1)) * ((1 + t13676) ** (0.5e1 / 0.2e1))

        if Bindx == 2163:
            t13678 = np.cos(phi)
            t13682 = -1 + t13678
            t13679 = t13682 ** 2
            t13680 = t13679 ** 2
            t13677 = 1 + t13678
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.133e3) * t13680 ** 2 * t13677 ** 2 * (6 + 11 * t13678)

        if Bindx == 2164:
            t13683 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((3*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.114e3) * ((1 - t13683) ** (0.15e2 / 0.2e1)) * ((1 + t13683) ** (0.3e1 / 0.2e1)) * (61 + (252 + 231 * t13683) * t13683)

        if Bindx == 2165:
            t13685 = np.cos(phi)
            t13686 = t13685 ** 2
            t13688 = t13686 ** 2
            t13692 = t13688 ** 2
            t13687 = t13685 * t13686
            t13690 = t13687 ** 2
            t13684 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.190e3) * t13684 ** 2 * (-120 * t13686 + 76 * t13687 + 328 * t13688 - 8 * t13690 - 336 * t13692 + 8 + (-498 * t13688 + 460 * t13690 + 77 * t13692 + 13) * t13685)

        if Bindx == 2166:
            t13694 = np.cos(phi)
            t13695 = t13694 ** 2
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.exp((1j) * (6 * phi1 - 7 * phi2)) * np.sqrt(0.10e2) * ((1 - t13694) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t13694)) * (608 * t13694 + 35 + (3192 * t13694 + 2318 + 1463 * t13695) * t13695)

        if Bindx == 2167:
            t13698 = np.cos(phi)
            t13699 = t13698 ** 2
            t13701 = t13699 ** 2
            t13702 = t13698 * t13701
            t13707 = t13702 ** 2
            t13705 = t13701 ** 2
            t13700 = t13698 * t13699
            t13703 = t13700 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((6*1j) * (phi1 - phi2)) * (2820 * t13699 - 21805 * t13700 - 420 * t13701 + 69846 * t13702 - 40096 * t13703 + 80370 * t13705 - 43092 * t13707 - 94 + (-79650 * t13703 + 16815 * t13705 + 13167 * t13707 + 2139) * t13698)

        if Bindx == 2168:
            t13709 = np.cos(phi)
            t13710 = t13709 ** 2
            t13712 = t13710 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((1j) * (6 * phi1 - 5 * phi2)) * np.sqrt(0.102e3) * ((1 - t13709) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t13709)) * (1710 * t13710 + 9975 * t13712 - 53 + (7410 * t13710 + 4389 * t13712 - 135) * t13709)

        if Bindx == 2169:
            t13715 = np.cos(phi)
            t13716 = t13715 ** 2
            t13718 = t13716 ** 2
            t13722 = t13718 ** 2
            t13717 = t13715 * t13716
            t13720 = t13717 ** 2
            t13714 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.714e3) * t13714 ** 2 * (156 * t13716 + 316 * t13717 - 964 * t13718 + 2052 * t13720 - 1368 * t13722 - 4 + (-558 * t13718 - 228 * t13720 + 627 * t13722 - 29) * t13715)

        if Bindx == 2170:
            t13724 = np.cos(phi)
            t13725 = t13724 ** 2
            t13727 = t13725 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((3*1j) * (2 * phi1 - phi2)) * np.sqrt(0.595e3) * ((1 - t13724) ** (0.9e1 / 0.2e1)) * ((1 + t13724) ** (0.3e1 / 0.2e1)) * (-342 * t13725 + 2565 * t13727 + 1 + (570 * t13725 + 1881 * t13727 - 99) * t13724)

        if Bindx == 2171:
            t13738 = np.sin(phi)
            t13736 = t13738 ** 2
            t13729 = np.cos(phi)
            t13730 = t13729 ** 2
            t13731 = t13729 * t13730
            t13734 = t13731 ** 2
            t13732 = t13730 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.170e3) * t13736 ** 2 * (-264 * t13730 + 401 * t13731 + 1406 * t13732 - 1596 * t13734 + 6 + (-1387 * t13732 + 1463 * t13734 - 29) * t13729)

        if Bindx == 2172:
            t13739 = np.cos(phi)
            t13740 = t13739 ** 2
            t13742 = t13740 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4*1j) * np.exp((1j) * (6 * phi1 - phi2)) * np.sqrt(0.221e3) * ((1 - t13739) ** (0.7e1 / 0.2e1)) * ((1 + t13739) ** (0.5e1 / 0.2e1)) * (-190 * t13740 + 665 * t13742 + 5 + (-570 * t13740 + 1463 * t13742 + 35) * t13739)

        if Bindx == 2173:
            t13750 = np.sin(phi)
            t13747 = t13750 ** 2
            t13748 = t13750 * t13747
            t13744 = np.cos(phi)
            t13745 = t13744 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((6*1j) * phi1) * np.sqrt(0.7293e4) * t13748 ** 2 * t13744 * (15 + (-190 + 399 * t13745) * t13745)

        if Bindx == 2174:
            t13751 = np.cos(phi)
            t13752 = t13751 ** 2
            t13754 = t13752 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * np.exp((1j) * (6 * phi1 + phi2)) * np.sqrt(0.221e3) * ((1 - t13751) ** (0.5e1 / 0.2e1)) * ((1 + t13751) ** (0.7e1 / 0.2e1)) * (190 * t13752 - 665 * t13754 - 5 + (-570 * t13752 + 1463 * t13754 + 35) * t13751)

        if Bindx == 2175:
            t13765 = np.sin(phi)
            t13763 = t13765 ** 2
            t13756 = np.cos(phi)
            t13757 = t13756 ** 2
            t13758 = t13756 * t13757
            t13761 = t13758 ** 2
            t13759 = t13757 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.170e3) * t13763 ** 2 * (264 * t13757 + 401 * t13758 - 1406 * t13759 + 1596 * t13761 - 6 + (-1387 * t13759 + 1463 * t13761 - 29) * t13756)

        if Bindx == 2176:
            t13766 = np.cos(phi)
            t13767 = t13766 ** 2
            t13769 = t13767 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((3*1j) * (2 * phi1 + phi2)) * np.sqrt(0.595e3) * ((1 - t13766) ** (0.3e1 / 0.2e1)) * ((1 + t13766) ** (0.9e1 / 0.2e1)) * (342 * t13767 - 2565 * t13769 - 1 + (570 * t13767 + 1881 * t13769 - 99) * t13766)

        if Bindx == 2177:
            t13772 = np.cos(phi)
            t13773 = t13772 ** 2
            t13775 = t13773 ** 2
            t13779 = t13775 ** 2
            t13774 = t13772 * t13773
            t13777 = t13774 ** 2
            t13771 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.714e3) * t13771 ** 2 * (-156 * t13773 + 316 * t13774 + 964 * t13775 - 2052 * t13777 + 1368 * t13779 + 4 + (-558 * t13775 - 228 * t13777 + 627 * t13779 - 29) * t13772)

        if Bindx == 2178:
            t13781 = np.cos(phi)
            t13782 = t13781 ** 2
            t13784 = t13782 ** 2
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.102e3) * np.sqrt((1 - t13781)) * ((1 + t13781) ** (0.11e2 / 0.2e1)) * (-1710 * t13782 - 9975 * t13784 + 53 + (7410 * t13782 + 4389 * t13784 - 135) * t13781)

        if Bindx == 2179:
            t13786 = np.cos(phi)
            t13787 = t13786 ** 2
            t13789 = t13787 ** 2
            t13790 = t13786 * t13789
            t13795 = t13790 ** 2
            t13793 = t13789 ** 2
            t13788 = t13786 * t13787
            t13791 = t13788 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((6*1j) * (phi1 + phi2)) * (-2820 * t13787 - 21805 * t13788 + 420 * t13789 + 69846 * t13790 + 40096 * t13791 - 80370 * t13793 + 43092 * t13795 + 94 + (-79650 * t13791 + 16815 * t13793 + 13167 * t13795 + 2139) * t13786)

        if Bindx == 2180:
            t13797 = np.cos(phi)
            t13798 = t13797 ** 2
            t13800 = t13798 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4*1j) * np.exp((1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.10e2) * ((1 + t13797) ** (0.13e2 / 0.2e1)) * (-2926 * t13798 - 4655 * t13800 - 35 + (5510 * t13798 + 1463 * t13800 + 643) * t13797) * ((1 - t13797) ** (-0.1e1 / 0.2e1))

        if Bindx == 2181:
            t13803 = np.cos(phi)
            t13804 = t13803 ** 2
            t13806 = t13804 ** 2
            t13810 = t13806 ** 2
            t13805 = t13803 * t13804
            t13808 = t13805 ** 2
            t13802 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.190e3) * t13802 ** 2 * (120 * t13804 + 76 * t13805 - 328 * t13806 + 8 * t13808 + 336 * t13810 - 8 + (-498 * t13806 + 460 * t13808 + 77 * t13810 + 13) * t13803)

        if Bindx == 2182:
            t13812 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * (61 + (-252 + 231 * t13812) * t13812) * ((1 + t13812) ** (0.15e2 / 0.2e1)) * np.sqrt(0.114e3) * np.exp((3*1j) * (2 * phi1 + 3 * phi2)) * ((1 - t13812) ** (0.3e1 / 0.2e1))

        if Bindx == 2183:
            t13814 = np.cos(phi)
            t13818 = 1 + t13814
            t13815 = t13818 ** 2
            t13816 = t13815 ** 2
            t13813 = -1 + t13814
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.133e3) * t13813 ** 2 * t13816 ** 2 * (-6 + 11 * t13814)

        if Bindx == 2184:
            t13819 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.exp((1j) * (6 * phi1 + 11 * phi2)) * np.sqrt(0.2926e4) * ((1 - t13819) ** (0.5e1 / 0.2e1)) * ((1 + t13819) ** (0.17e2 / 0.2e1))

        if Bindx == 2185:
            t13821 = np.cos(phi)
            t13826 = -1 + t13821
            t13822 = t13826 ** 2
            t13823 = t13822 ** 2
            t13820 = 1 + t13821
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 - 11 * phi2)) * np.sqrt(0.7315e4) * t13826 * t13823 ** 2 * t13820 ** 2

        if Bindx == 2186:
            t13827 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((1j) * (7 * phi1 - 10 * phi2)) * np.sqrt(0.1330e4) * ((1 - t13827) ** (0.17e2 / 0.2e1)) * ((1 + t13827) ** (0.3e1 / 0.2e1)) * (7 + 11 * t13827)

        if Bindx == 2187:
            t13829 = np.cos(phi)
            t13830 = t13829 ** 2
            t13832 = t13830 ** 2
            t13836 = t13832 ** 2
            t13831 = t13829 * t13830
            t13834 = t13831 ** 2
            t13828 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 - 9 * phi2)) * np.sqrt(0.285e3) * t13828 ** 2 * (-504 * t13831 + 798 * t13832 - 840 * t13834 - 441 * t13836 - 29 + (-126 * t13832 + 960 * t13834 + 77 * t13836 + 105) * t13829)

        if Bindx == 2188:
            t13838 = np.cos(phi)
            t13839 = t13838 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (7 * phi1 - 8 * phi2)) * np.sqrt(0.19e2) * ((1 - t13838) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t13838)) * (735 * t13839 + 77 + (385 * t13839 + 435) * t13838)

        if Bindx == 2189:
            t13841 = np.cos(phi)
            t13842 = t13841 ** 2
            t13844 = t13842 ** 2
            t13845 = t13841 * t13844
            t13850 = t13845 ** 2
            t13848 = t13844 ** 2
            t13843 = t13841 * t13842
            t13846 = t13843 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((7*1j) * (phi1 - phi2)) * (10931 * t13842 - 3297 * t13843 - 41790 * t13844 + 47418 * t13845 + 37926 * t13846 + 25137 * t13848 - 32585 * t13850 - 643 + (-88866 * t13846 + 39805 * t13848 + 7315 * t13850 - 1351) * t13841)

        if Bindx == 2190:
            t13852 = np.cos(phi)
            t13853 = t13852 ** 2
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.exp((1j) * (7 * phi1 - 6 * phi2)) * np.sqrt(0.10e2) * ((1 - t13852) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t13852)) * (608 * t13852 + 35 + (3192 * t13852 + 2318 + 1463 * t13853) * t13853)

        if Bindx == 2191:
            t13857 = np.cos(phi)
            t13858 = t13857 ** 2
            t13860 = t13858 ** 2
            t13864 = t13860 ** 2
            t13859 = t13857 * t13858
            t13862 = t13859 ** 2
            t13856 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.255e3) * t13856 ** 2 * (-252 * t13858 + 2380 * t13859 - 658 * t13860 + 4788 * t13862 - 4655 * t13864 + 9 + (-5614 * t13860 + 2812 * t13862 + 1463 * t13864 - 273) * t13857)

        if Bindx == 2192:
            t13866 = np.cos(phi)
            t13867 = t13866 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((1j) * (7 * phi1 - 4 * phi2)) * np.sqrt(0.1785e4) * ((1 - t13866) ** (0.11e2 / 0.2e1)) * ((1 + t13866) ** (0.3e1 / 0.2e1)) * (-3 + (304 * t13866 + 114 + 209 * t13867) * t13867)

        if Bindx == 2193:
            t13879 = np.sin(phi)
            t13877 = t13879 ** 2
            t13870 = np.cos(phi)
            t13871 = t13870 ** 2
            t13872 = t13870 * t13871
            t13875 = t13872 ** 2
            t13873 = t13871 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.238e3) * t13877 ** 2 * (-385 * t13871 - 353 * t13872 + 1729 * t13873 - 1995 * t13875 + 11 + (-95 * t13873 + 1045 * t13875 + 43) * t13870)

        if Bindx == 2194:
            t13880 = np.cos(phi)
            t13881 = t13880 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (7 * phi1 - 2 * phi2)) * np.sqrt(0.17e2) * ((1 - t13880) ** (0.9e1 / 0.2e1)) * ((1 + t13880) ** (0.5e1 / 0.2e1)) * (-608 * t13880 - 17 + (5320 * t13880 - 570 + 7315 * t13881) * t13881)

        if Bindx == 2195:
            t13892 = np.sin(phi)
            t13889 = t13892 ** 2
            t13890 = t13892 * t13889
            t13884 = np.cos(phi)
            t13885 = t13884 ** 2
            t13887 = t13885 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 - phi2)) * np.sqrt(0.2210e4) * t13890 ** 2 * (266 * t13885 - 931 * t13887 - 7 + (-874 * t13885 + 1463 * t13887 + 83) * t13884)

        if Bindx == 2196:
            t13893 = np.cos(phi)
            t13894 = t13893 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.72930e5) * ((1 - t13893) ** (0.7e1 / 0.2e1)) * ((1 + t13893) ** (0.7e1 / 0.2e1)) * (1 + (-38 + 133 * t13894) * t13894)

        if Bindx == 2197:
            t13904 = np.sin(phi)
            t13901 = t13904 ** 2
            t13902 = t13904 * t13901
            t13896 = np.cos(phi)
            t13897 = t13896 ** 2
            t13899 = t13897 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 + phi2)) * np.sqrt(0.2210e4) * t13902 ** 2 * (-266 * t13897 + 931 * t13899 + 7 + (-874 * t13897 + 1463 * t13899 + 83) * t13896)

        if Bindx == 2198:
            t13905 = np.cos(phi)
            t13906 = t13905 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (7 * phi1 + 2 * phi2)) * np.sqrt(0.17e2) * ((1 - t13905) ** (0.5e1 / 0.2e1)) * ((1 + t13905) ** (0.9e1 / 0.2e1)) * (608 * t13905 - 17 + (-5320 * t13905 - 570 + 7315 * t13906) * t13906)

        if Bindx == 2199:
            t13918 = np.sin(phi)
            t13916 = t13918 ** 2
            t13909 = np.cos(phi)
            t13910 = t13909 ** 2
            t13911 = t13909 * t13910
            t13914 = t13911 ** 2
            t13912 = t13910 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.238e3) * t13916 ** 2 * (385 * t13910 - 353 * t13911 - 1729 * t13912 + 1995 * t13914 - 11 + (-95 * t13912 + 1045 * t13914 + 43) * t13909)

        if Bindx == 2200:
            t13919 = np.cos(phi)
            t13920 = t13919 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((1j) * (7 * phi1 + 4 * phi2)) * np.sqrt(0.1785e4) * ((1 - t13919) ** (0.3e1 / 0.2e1)) * ((1 + t13919) ** (0.11e2 / 0.2e1)) * (-3 + (-304 * t13919 + 114 + 209 * t13920) * t13920)

        if Bindx == 2201:
            t13924 = np.cos(phi)
            t13925 = t13924 ** 2
            t13927 = t13925 ** 2
            t13931 = t13927 ** 2
            t13926 = t13924 * t13925
            t13929 = t13926 ** 2
            t13923 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.255e3) * t13923 ** 2 * (252 * t13925 + 2380 * t13926 + 658 * t13927 - 4788 * t13929 + 4655 * t13931 - 9 + (-5614 * t13927 + 2812 * t13929 + 1463 * t13931 - 273) * t13924)

        if Bindx == 2202:
            t13933 = np.cos(phi)
            t13934 = t13933 ** 2
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.exp((1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t13933)) * ((1 + t13933) ** (0.13e2 / 0.2e1)) * (-608 * t13933 + 35 + (-3192 * t13933 + 2318 + 1463 * t13934) * t13934)

        if Bindx == 2203:
            t13937 = np.cos(phi)
            t13938 = t13937 ** 2
            t13940 = t13938 ** 2
            t13941 = t13937 * t13940
            t13946 = t13941 ** 2
            t13944 = t13940 ** 2
            t13939 = t13937 * t13938
            t13942 = t13939 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((7*1j) * (phi1 + phi2)) * (-10931 * t13938 - 3297 * t13939 + 41790 * t13940 + 47418 * t13941 - 37926 * t13942 - 25137 * t13944 + 32585 * t13946 + 643 + (-88866 * t13942 + 39805 * t13944 + 7315 * t13946 - 1351) * t13937)

        if Bindx == 2204:
            t13948 = np.cos(phi)
            t13949 = t13948 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (7 * phi1 + 8 * phi2)) * np.sqrt(0.19e2) * ((1 + t13948) ** (0.15e2 / 0.2e1)) * (-512 * t13948 + 77 + (-1120 * t13948 + 1170 + 385 * t13949) * t13949) * ((1 - t13948) ** (-0.1e1 / 0.2e1))

        if Bindx == 2205:
            t13953 = np.cos(phi)
            t13954 = t13953 ** 2
            t13956 = t13954 ** 2
            t13960 = t13956 ** 2
            t13955 = t13953 * t13954
            t13958 = t13955 ** 2
            t13952 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 + 9 * phi2)) * np.sqrt(0.285e3) * t13952 ** 2 * (-504 * t13955 - 798 * t13956 + 840 * t13958 + 441 * t13960 + 29 + (-126 * t13956 + 960 * t13958 + 77 * t13960 + 105) * t13953)

        if Bindx == 2206:
            t13962 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * (-7 + 11 * t13962) * ((1 + t13962) ** (0.17e2 / 0.2e1)) * np.sqrt(0.1330e4) * np.exp((1j) * (7 * phi1 + 10 * phi2)) * ((1 - t13962) ** (0.3e1 / 0.2e1))

        if Bindx == 2207:
            t13964 = np.cos(phi)
            t13969 = 1 + t13964
            t13965 = t13969 ** 2
            t13966 = t13965 ** 2
            t13963 = -1 + t13964
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 + 11 * phi2)) * np.sqrt(0.7315e4) * t13963 ** 2 * t13969 * t13966 ** 2

        if Bindx == 2208:
            t13970 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 - 11 * phi2)) * np.sqrt(0.385e3) * ((1 - t13970) ** (0.19e2 / 0.2e1)) * ((1 + t13970) ** (0.3e1 / 0.2e1))

        if Bindx == 2209:
            t13971 = np.cos(phi)
            t13976 = -1 + t13971
            t13972 = t13976 ** 2
            t13973 = t13972 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((2*1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.70e2) * t13976 * t13973 ** 2 * (1 + t13971) * (8 + 11 * t13971)

        if Bindx == 2210:
            t13977 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 - 9 * phi2)) * np.sqrt(0.15e2) * ((1 - t13977) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t13977)) * (39 + (112 + 77 * t13977) * t13977)

        if Bindx == 2211:
            t13978 = np.cos(phi)
            t13979 = t13978 ** 2
            t13981 = t13979 ** 2
            t13982 = t13978 * t13981
            t13987 = t13982 ** 2
            t13985 = t13981 ** 2
            t13980 = t13978 * t13979
            t13983 = t13980 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3) * np.exp((8*1j) * (phi1 - phi2)) * (-256 * t13979 + 2877 * t13980 - 3360 * t13981 - 2478 * t13982 + 8064 * t13983 - 2592 * t13985 - 2240 * t13987 + 128 + (-4734 * t13983 + 4645 * t13985 + 385 * t13987 - 439) * t13978)

        if Bindx == 2212:
            t13989 = np.cos(phi)
            t13990 = t13989 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 - 7 * phi2)) * np.sqrt(0.19e2) * ((1 - t13989) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t13989)) * (735 * t13990 + 77 + (385 * t13990 + 435) * t13989)

        if Bindx == 2213:
            t13993 = np.cos(phi)
            t13994 = t13993 ** 2
            t13996 = t13994 ** 2
            t14000 = t13996 ** 2
            t13995 = t13993 * t13994
            t13998 = t13995 ** 2
            t13992 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((2*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.190e3) * t13992 ** 2 * (-120 * t13994 + 76 * t13995 + 328 * t13996 - 8 * t13998 - 336 * t14000 + 8 + (-498 * t13996 + 460 * t13998 + 77 * t14000 + 13) * t13993)

        if Bindx == 2214:
            t14002 = np.cos(phi)
            t14003 = t14002 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 - 5 * phi2)) * np.sqrt(0.4845e4) * ((1 - t14002) ** (0.13e2 / 0.2e1)) * ((1 + t14002) ** (0.3e1 / 0.2e1)) * (105 * t14003 + 3 + (77 * t14003 + 39) * t14002)

        if Bindx == 2215:
            t14013 = np.sin(phi)
            t14011 = t14013 ** 2
            t14005 = np.cos(phi)
            t14006 = t14005 ** 2
            t14007 = t14005 * t14006
            tfunc[..., c] = (0.23e2 / 0.256e3) * np.exp((4*1j) * (2 * phi1 - phi2)) * np.sqrt(0.33915e5) * t14011 ** 2 * t14005 * (3 + (16 + 11 * t14007) * t14007 + (-19 + (-32 * t14005 + 21) * t14006) * t14006)

        if Bindx == 2216:
            t14014 = np.cos(phi)
            t14015 = t14014 ** 2
            tfunc[..., c] = (0.69e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 - 3 * phi2)) * np.sqrt(0.4522e4) * ((1 - t14014) ** (0.11e2 / 0.2e1)) * ((1 + t14014) ** (0.5e1 / 0.2e1)) * (45 * t14015 - 1 + (55 * t14015 + 5) * t14014)

        if Bindx == 2217:
            t14025 = np.sin(phi)
            t14022 = t14025 ** 2
            t14023 = t14025 * t14022
            t14017 = np.cos(phi)
            t14018 = t14017 ** 2
            t14020 = t14018 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((2*1j) * (4 * phi1 - phi2)) * np.sqrt(0.323e3) * t14023 ** 2 * (232 * t14018 - 560 * t14020 - 8 + (-50 * t14018 + 385 * t14020 + 1) * t14017)

        if Bindx == 2218:
            t14026 = np.cos(phi)
            t14027 = t14026 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 - phi2)) * np.sqrt(0.41990e5) * ((1 - t14026) ** (0.9e1 / 0.2e1)) * ((1 + t14026) ** (0.7e1 / 0.2e1)) * (21 * t14027 - 1 + (77 * t14027 - 9) * t14026)

        if Bindx == 2219:
            t14033 = np.sin(phi)
            t14030 = t14033 ** 2
            t14031 = t14030 ** 2
            t14029 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.512e3) * np.exp((8*1j) * phi1) * np.sqrt(0.1385670e7) * t14031 ** 2 * t14029 * (7 * t14029 ** 2 - 1)

        if Bindx == 2220:
            t14034 = np.cos(phi)
            t14035 = t14034 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 + phi2)) * np.sqrt(0.41990e5) * ((1 - t14034) ** (0.7e1 / 0.2e1)) * ((1 + t14034) ** (0.9e1 / 0.2e1)) * (-21 * t14035 + 1 + (77 * t14035 - 9) * t14034)

        if Bindx == 2221:
            t14045 = np.sin(phi)
            t14042 = t14045 ** 2
            t14043 = t14045 * t14042
            t14037 = np.cos(phi)
            t14038 = t14037 ** 2
            t14040 = t14038 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((2*1j) * (4 * phi1 + phi2)) * np.sqrt(0.323e3) * t14043 ** 2 * (-232 * t14038 + 560 * t14040 + 8 + (-50 * t14038 + 385 * t14040 + 1) * t14037)

        if Bindx == 2222:
            t14046 = np.cos(phi)
            t14047 = t14046 ** 2
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 + 3 * phi2)) * np.sqrt(0.4522e4) * ((1 - t14046) ** (0.5e1 / 0.2e1)) * ((1 + t14046) ** (0.11e2 / 0.2e1)) * (-45 * t14047 + 1 + (55 * t14047 + 5) * t14046)

        if Bindx == 2223:
            t14057 = np.sin(phi)
            t14055 = t14057 ** 2
            t14049 = np.cos(phi)
            t14050 = t14049 ** 2
            t14051 = t14049 * t14050
            tfunc[..., c] = (0.23e2 / 0.256e3) * np.exp((4*1j) * (2 * phi1 + phi2)) * np.sqrt(0.33915e5) * t14055 ** 2 * t14049 * (3 + (-16 + 11 * t14051) * t14051 + (-19 + (32 * t14049 + 21) * t14050) * t14050)

        if Bindx == 2224:
            t14058 = np.cos(phi)
            t14059 = t14058 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 + 5 * phi2)) * np.sqrt(0.4845e4) * ((1 - t14058) ** (0.3e1 / 0.2e1)) * ((1 + t14058) ** (0.13e2 / 0.2e1)) * (-105 * t14059 - 3 + (77 * t14059 + 39) * t14058)

        if Bindx == 2225:
            t14062 = np.cos(phi)
            t14063 = t14062 ** 2
            t14065 = t14063 ** 2
            t14069 = t14065 ** 2
            t14064 = t14062 * t14063
            t14067 = t14064 ** 2
            t14061 = np.sin(phi)
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * np.exp((2*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.190e3) * t14061 ** 2 * (120 * t14063 + 76 * t14064 - 328 * t14065 + 8 * t14067 + 336 * t14069 - 8 + (-498 * t14065 + 460 * t14067 + 77 * t14069 + 13) * t14062)

        if Bindx == 2226:
            t14071 = np.cos(phi)
            t14072 = t14071 ** 2
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 + 7 * phi2)) * np.sqrt(0.19e2) * np.sqrt((1 - t14071)) * ((1 + t14071) ** (0.15e2 / 0.2e1)) * (-735 * t14072 - 77 + (385 * t14072 + 435) * t14071)

        if Bindx == 2227:
            t14074 = np.cos(phi)
            t14075 = t14074 ** 2
            t14077 = t14075 ** 2
            t14078 = t14074 * t14077
            t14083 = t14078 ** 2
            t14081 = t14077 ** 2
            t14076 = t14074 * t14075
            t14079 = t14076 ** 2
            tfunc[..., c] = (0.23e2 / 0.512e3) * np.exp((8*1j) * (phi1 + phi2)) * (256 * t14075 + 2877 * t14076 + 3360 * t14077 - 2478 * t14078 - 8064 * t14079 + 2592 * t14081 + 2240 * t14083 - 128 + (-4734 * t14079 + 4645 * t14081 + 385 * t14083 - 439) * t14074)

        if Bindx == 2228:
            t14085 = np.cos(phi)
            t14086 = t14085 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 + 9 * phi2)) * np.sqrt(0.15e2) * ((1 + t14085) ** (0.17e2 / 0.2e1)) * (-189 * t14086 - 39 + (77 * t14086 + 151) * t14085) * ((1 - t14085) ** (-0.1e1 / 0.2e1))

        if Bindx == 2229:
            t14088 = np.cos(phi)
            t14093 = 1 + t14088
            t14089 = t14093 ** 2
            t14090 = t14089 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((2*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.70e2) * (-1 + t14088) * t14093 * t14090 ** 2 * (-8 + 11 * t14088)

        if Bindx == 2230:
            t14094 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 + 11 * phi2)) * np.sqrt(0.385e3) * ((1 - t14094) ** (0.3e1 / 0.2e1)) * ((1 + t14094) ** (0.19e2 / 0.2e1))

        if Bindx == 2231:
            t14095 = np.cos(phi)
            t14100 = -1 + t14095
            t14096 = t14100 ** 2
            t14098 = t14100 * t14096 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 - 11 * phi2)) * np.sqrt(0.231e3) * t14098 ** 2 * (1 + t14095)

        if Bindx == 2232:
            t14101 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((1j) * (9 * phi1 - 10 * phi2)) * np.sqrt(0.42e2) * ((1 - t14101) ** (0.19e2 / 0.2e1)) * np.sqrt((1 + t14101)) * (9 + 11 * t14101)

        if Bindx == 2233:
            t14102 = np.cos(phi)
            t14103 = t14102 ** 2
            t14105 = t14103 ** 2
            t14106 = t14102 * t14105
            t14111 = t14106 ** 2
            t14109 = t14105 ** 2
            t14104 = t14102 * t14103
            t14107 = t14104 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((9*1j) * (phi1 - phi2)) * (-2265 * t14103 + 1155 * t14104 + 4410 * t14105 - 9198 * t14106 + 5838 * t14107 - 7155 * t14109 - 1701 * t14111 - 151 + (2790 * t14107 + 5065 * t14109 + 231 * t14111 + 981) * t14102)

        if Bindx == 2234:
            t14113 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (9 * phi1 - 8 * phi2)) * np.sqrt(0.15e2) * ((1 - t14113) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t14113)) * (39 + (112 + 77 * t14113) * t14113)

        if Bindx == 2235:
            t14115 = np.cos(phi)
            t14116 = t14115 ** 2
            t14118 = t14116 ** 2
            t14122 = t14118 ** 2
            t14117 = t14115 * t14116
            t14120 = t14117 ** 2
            t14114 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 - 7 * phi2)) * np.sqrt(0.285e3) * t14114 ** 2 * (-504 * t14117 + 798 * t14118 - 840 * t14120 - 441 * t14122 - 29 + (-126 * t14118 + 960 * t14120 + 77 * t14122 + 105) * t14115)

        if Bindx == 2236:
            t14124 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((3*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.114e3) * ((1 - t14124) ** (0.15e2 / 0.2e1)) * ((1 + t14124) ** (0.3e1 / 0.2e1)) * (61 + (252 + 231 * t14124) * t14124)

        if Bindx == 2237:
            t14134 = np.sin(phi)
            t14132 = t14134 ** 2
            t14125 = np.cos(phi)
            t14126 = t14125 ** 2
            t14127 = t14125 * t14126
            t14130 = t14127 ** 2
            t14128 = t14126 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 - 5 * phi2)) * np.sqrt(0.323e3) * t14132 ** 2 * (143 * t14126 - 185 * t14127 - 135 * t14128 - 315 * t14130 - 13 + (433 * t14128 + 77 * t14130 - 5) * t14125)

        if Bindx == 2238:
            t14135 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.512e3*1j) * np.exp((1j) * (9 * phi1 - 4 * phi2)) * np.sqrt(0.2261e4) * ((1 - t14135) ** (0.13e2 / 0.2e1)) * ((1 + t14135) ** (0.5e1 / 0.2e1)) * (1 + (8 + 11 * t14135) * t14135)

        if Bindx == 2239:
            t14144 = np.sin(phi)
            t14141 = t14144 ** 2
            t14142 = t14144 * t14141
            t14136 = np.cos(phi)
            t14137 = t14136 ** 2
            t14139 = t14137 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((3*1j) * (3 * phi1 - phi2)) * np.sqrt(0.67830e5) * t14142 ** 2 * (18 * t14137 - 81 * t14139 - 1 + (46 * t14137 + 33 * t14139 - 15) * t14136)

        if Bindx == 2240:
            t14145 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (9 * phi1 - 2 * phi2)) * np.sqrt(0.4845e4) * ((1 - t14145) ** (0.11e2 / 0.2e1)) * ((1 + t14145) ** (0.7e1 / 0.2e1)) * (-1 + (28 + 77 * t14145) * t14145)

        if Bindx == 2241:
            t14152 = np.sin(phi)
            t14149 = t14152 ** 2
            t14150 = t14149 ** 2
            t14146 = np.cos(phi)
            t14147 = t14146 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 - phi2)) * np.sqrt(0.25194e5) * t14150 ** 2 * (-63 * t14147 + 3 + (77 * t14147 - 17) * t14146)

        if Bindx == 2242:
            t14153 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((9*1j) * phi1) * np.sqrt(0.92378e5) * ((1 - t14153) ** (0.9e1 / 0.2e1)) * ((1 + t14153) ** (0.9e1 / 0.2e1)) * (21 * t14153 ** 2 - 1)

        if Bindx == 2243:
            t14160 = np.sin(phi)
            t14157 = t14160 ** 2
            t14158 = t14157 ** 2
            t14154 = np.cos(phi)
            t14155 = t14154 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 + phi2)) * np.sqrt(0.25194e5) * t14158 ** 2 * (63 * t14155 - 3 + (77 * t14155 - 17) * t14154)

        if Bindx == 2244:
            t14161 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (9 * phi1 + 2 * phi2)) * np.sqrt(0.4845e4) * ((1 - t14161) ** (0.7e1 / 0.2e1)) * ((1 + t14161) ** (0.11e2 / 0.2e1)) * (-1 + (-28 + 77 * t14161) * t14161)

        if Bindx == 2245:
            t14170 = np.sin(phi)
            t14167 = t14170 ** 2
            t14168 = t14170 * t14167
            t14162 = np.cos(phi)
            t14163 = t14162 ** 2
            t14165 = t14163 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((3*1j) * (3 * phi1 + phi2)) * np.sqrt(0.67830e5) * t14168 ** 2 * (-18 * t14163 + 81 * t14165 + 1 + (46 * t14163 + 33 * t14165 - 15) * t14162)

        if Bindx == 2246:
            t14171 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.512e3*1j) * np.exp((1j) * (9 * phi1 + 4 * phi2)) * np.sqrt(0.2261e4) * ((1 - t14171) ** (0.5e1 / 0.2e1)) * ((1 + t14171) ** (0.13e2 / 0.2e1)) * (1 + (-8 + 11 * t14171) * t14171)

        if Bindx == 2247:
            t14181 = np.sin(phi)
            t14179 = t14181 ** 2
            t14172 = np.cos(phi)
            t14173 = t14172 ** 2
            t14174 = t14172 * t14173
            t14177 = t14174 ** 2
            t14175 = t14173 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 + 5 * phi2)) * np.sqrt(0.323e3) * t14179 ** 2 * (-143 * t14173 - 185 * t14174 + 135 * t14175 + 315 * t14177 + 13 + (433 * t14175 + 77 * t14177 - 5) * t14172)

        if Bindx == 2248:
            t14182 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((3*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.114e3) * ((1 - t14182) ** (0.3e1 / 0.2e1)) * ((1 + t14182) ** (0.15e2 / 0.2e1)) * (61 + (-252 + 231 * t14182) * t14182)

        if Bindx == 2249:
            t14184 = np.cos(phi)
            t14185 = t14184 ** 2
            t14187 = t14185 ** 2
            t14191 = t14187 ** 2
            t14186 = t14184 * t14185
            t14189 = t14186 ** 2
            t14183 = np.sin(phi)
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 + 7 * phi2)) * np.sqrt(0.285e3) * t14183 ** 2 * (-504 * t14186 - 798 * t14187 + 840 * t14189 + 441 * t14191 + 29 + (-126 * t14187 + 960 * t14189 + 77 * t14191 + 105) * t14184)

        if Bindx == 2250:
            t14193 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (9 * phi1 + 8 * phi2)) * np.sqrt(0.15e2) * np.sqrt((1 - t14193)) * ((1 + t14193) ** (0.17e2 / 0.2e1)) * (39 + (-112 + 77 * t14193) * t14193)

        if Bindx == 2251:
            t14194 = np.cos(phi)
            t14195 = t14194 ** 2
            t14197 = t14195 ** 2
            t14198 = t14194 * t14197
            t14203 = t14198 ** 2
            t14201 = t14197 ** 2
            t14196 = t14194 * t14195
            t14199 = t14196 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((9*1j) * (phi1 + phi2)) * (2265 * t14195 + 1155 * t14196 - 4410 * t14197 - 9198 * t14198 - 5838 * t14199 + 7155 * t14201 + 1701 * t14203 + 151 + (2790 * t14199 + 5065 * t14201 + 231 * t14203 + 981) * t14194)

        if Bindx == 2252:
            t14205 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((1j) * (9 * phi1 + 10 * phi2)) * np.sqrt(0.42e2) * ((1 + t14205) ** (0.19e2 / 0.2e1)) * (9 + (-20 + 11 * t14205) * t14205) * ((1 - t14205) ** (-0.1e1 / 0.2e1))

        if Bindx == 2253:
            t14206 = np.cos(phi)
            t14211 = 1 + t14206
            t14207 = t14211 ** 2
            t14209 = t14211 * t14207 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 + 11 * phi2)) * np.sqrt(0.231e3) * (-1 + t14206) * t14209 ** 2

        if Bindx == 2254:
            t14212 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 - 11 * phi2)) * np.sqrt(0.22e2) * ((1 - t14212) ** (0.21e2 / 0.2e1)) * np.sqrt((1 + t14212))

        if Bindx == 2255:
            t14213 = np.cos(phi)
            t14214 = t14213 ** 2
            t14216 = t14214 ** 2
            t14217 = t14213 * t14216
            t14222 = t14217 ** 2
            t14220 = t14216 ** 2
            t14215 = t14213 * t14214
            t14218 = t14215 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((10*1j) * (phi1 - phi2)) * (340 * t14214 - 705 * t14215 + 780 * t14216 - 210 * t14217 - 672 * t14218 - 870 * t14220 - 100 * t14222 + 10 + (1110 * t14218 + 395 * t14220 + 11 * t14222 - 89) * t14213)

        if Bindx == 2256:
            t14224 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 - 9 * phi2)) * np.sqrt(0.42e2) * ((1 - t14224) ** (0.19e2 / 0.2e1)) * np.sqrt((1 + t14224)) * (9 + 11 * t14224)

        if Bindx == 2257:
            t14225 = np.cos(phi)
            t14230 = -1 + t14225
            t14226 = t14230 ** 2
            t14227 = t14226 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * (8 + 11 * t14225) * (1 + t14225) * t14230 * t14227 ** 2 * np.sqrt(0.70e2) * np.exp((2*1j) * (5 * phi1 - 4 * phi2))

        if Bindx == 2258:
            t14231 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 - 7 * phi2)) * np.sqrt(0.1330e4) * ((1 - t14231) ** (0.17e2 / 0.2e1)) * ((1 + t14231) ** (0.3e1 / 0.2e1)) * (7 + 11 * t14231)

        if Bindx == 2259:
            t14233 = np.cos(phi)
            t14237 = -1 + t14233
            t14234 = t14237 ** 2
            t14235 = t14234 ** 2
            t14232 = 1 + t14233
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.133e3) * t14235 ** 2 * t14232 ** 2 * (6 + 11 * t14233)

        if Bindx == 2260:
            t14238 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((5*1j) * (2 * phi1 - phi2)) * np.sqrt(0.13566e5) * ((1 - t14238) ** (0.15e2 / 0.2e1)) * ((1 + t14238) ** (0.5e1 / 0.2e1)) * (5 + 11 * t14238)

        if Bindx == 2261:
            t14247 = np.sin(phi)
            t14244 = t14247 ** 2
            t14245 = t14247 * t14244
            t14239 = np.cos(phi)
            t14240 = t14239 ** 2
            t14242 = t14240 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((2*1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.1938e4) * t14245 ** 2 * (-20 * t14240 - 40 * t14242 + 4 + (50 * t14240 + 11 * t14242 - 5) * t14239)

        if Bindx == 2262:
            t14248 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.1024e4*1j) * np.exp((1j) * (10 * phi1 - 3 * phi2)) * np.sqrt(0.1615e4) * ((1 - t14248) ** (0.13e2 / 0.2e1)) * ((1 + t14248) ** (0.7e1 / 0.2e1)) * (3 + 11 * t14248)

        if Bindx == 2263:
            t14255 = np.sin(phi)
            t14252 = t14255 ** 2
            t14253 = t14252 ** 2
            t14249 = np.cos(phi)
            t14250 = t14249 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 - phi2)) * np.sqrt(0.22610e5) * t14253 ** 2 * (-20 * t14250 + 2 + (11 * t14250 + 7) * t14249)

        if Bindx == 2264:
            t14256 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (10 * phi1 - phi2)) * np.sqrt(0.29393e5) * ((1 - t14256) ** (0.11e2 / 0.2e1)) * ((1 + t14256) ** (0.9e1 / 0.2e1)) * (1 + 11 * t14256)

        if Bindx == 2265:
            t14261 = np.sin(phi)
            t14257 = t14261 ** 2
            t14259 = t14261 * t14257 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((10*1j) * phi1) * np.sqrt(0.969969e6) * t14259 ** 2 * np.cos(phi)

        if Bindx == 2266:
            t14262 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (10 * phi1 + phi2)) * np.sqrt(0.29393e5) * ((1 - t14262) ** (0.9e1 / 0.2e1)) * ((1 + t14262) ** (0.11e2 / 0.2e1)) * (-1 + 11 * t14262)

        if Bindx == 2267:
            t14269 = np.sin(phi)
            t14266 = t14269 ** 2
            t14267 = t14266 ** 2
            t14263 = np.cos(phi)
            t14264 = t14263 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 + phi2)) * np.sqrt(0.22610e5) * t14267 ** 2 * (20 * t14264 - 2 + (11 * t14264 + 7) * t14263)

        if Bindx == 2268:
            t14270 = np.cos(phi)
            tfunc[..., c] = (0.69e2 / 0.1024e4*1j) * np.exp((1j) * (10 * phi1 + 3 * phi2)) * np.sqrt(0.1615e4) * ((1 - t14270) ** (0.7e1 / 0.2e1)) * ((1 + t14270) ** (0.13e2 / 0.2e1)) * (-3 + 11 * t14270)

        if Bindx == 2269:
            t14279 = np.sin(phi)
            t14276 = t14279 ** 2
            t14277 = t14279 * t14276
            t14271 = np.cos(phi)
            t14272 = t14271 ** 2
            t14274 = t14272 ** 2
            tfunc[..., c] = -(0.23e2 / 0.512e3) * np.exp((2*1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.1938e4) * t14277 ** 2 * (20 * t14272 + 40 * t14274 - 4 + (50 * t14272 + 11 * t14274 - 5) * t14271)

        if Bindx == 2270:
            t14280 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((5*1j) * (2 * phi1 + phi2)) * np.sqrt(0.13566e5) * ((1 - t14280) ** (0.5e1 / 0.2e1)) * ((1 + t14280) ** (0.15e2 / 0.2e1)) * (-5 + 11 * t14280)

        if Bindx == 2271:
            t14282 = np.cos(phi)
            t14286 = 1 + t14282
            t14283 = t14286 ** 2
            t14284 = t14283 ** 2
            t14281 = -1 + t14282
            tfunc[..., c] = (0.69e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.133e3) * t14281 ** 2 * t14284 ** 2 * (-6 + 11 * t14282)

        if Bindx == 2272:
            t14287 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 + 7 * phi2)) * np.sqrt(0.1330e4) * ((1 - t14287) ** (0.3e1 / 0.2e1)) * ((1 + t14287) ** (0.17e2 / 0.2e1)) * (-7 + 11 * t14287)

        if Bindx == 2273:
            t14288 = np.cos(phi)
            t14293 = 1 + t14288
            t14289 = t14293 ** 2
            t14290 = t14289 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.70e2) * (-1 + t14288) * t14293 * t14290 ** 2 * (-8 + 11 * t14288)

        if Bindx == 2274:
            t14294 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 + 9 * phi2)) * np.sqrt(0.42e2) * np.sqrt((1 - t14294)) * ((1 + t14294) ** (0.19e2 / 0.2e1)) * (-9 + 11 * t14294)

        if Bindx == 2275:
            t14295 = np.cos(phi)
            t14296 = t14295 ** 2
            t14298 = t14296 ** 2
            t14299 = t14295 * t14298
            t14304 = t14299 ** 2
            t14302 = t14298 ** 2
            t14297 = t14295 * t14296
            t14300 = t14297 ** 2
            tfunc[..., c] = (0.23e2 / 0.1024e4) * np.exp((10*1j) * (phi1 + phi2)) * (-340 * t14296 - 705 * t14297 - 780 * t14298 - 210 * t14299 + 672 * t14300 + 870 * t14302 + 100 * t14304 - 10 + (1110 * t14300 + 395 * t14302 + 11 * t14304 - 89) * t14295)

        if Bindx == 2276:
            t14306 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 + 11 * phi2)) * np.sqrt(0.22e2) * np.sqrt((1 - t14306)) * ((1 + t14306) ** (0.21e2 / 0.2e1))

        if Bindx == 2277:
            t14307 = np.cos(phi)
            t14308 = t14307 ** 2
            t14310 = t14308 ** 2
            t14311 = t14307 * t14310
            t14316 = t14311 ** 2
            t14314 = t14310 ** 2
            t14309 = t14307 * t14308
            t14312 = t14309 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((11*1j) * (phi1 - phi2)) * (-55 * t14308 + 165 * t14309 - 330 * t14310 + 462 * t14311 - 462 * t14312 - 165 * t14314 - 11 * t14316 - 1 + (330 * t14312 + 55 * t14314 + t14316 + 11) * t14307)

        if Bindx == 2278:
            t14318 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((1j) * (11 * phi1 - 10 * phi2)) * np.sqrt(0.22e2) * ((1 - t14318) ** (0.21e2 / 0.2e1)) * np.sqrt((1 + t14318))

        if Bindx == 2279:
            t14319 = np.cos(phi)
            t14324 = -1 + t14319
            t14320 = t14324 ** 2
            t14322 = t14324 * t14320 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 - 9 * phi2)) * np.sqrt(0.231e3) * t14322 ** 2 * (1 + t14319)

        if Bindx == 2280:
            t14325 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (11 * phi1 - 8 * phi2)) * np.sqrt(0.385e3) * ((1 - t14325) ** (0.19e2 / 0.2e1)) * ((1 + t14325) ** (0.3e1 / 0.2e1))

        if Bindx == 2281:
            t14327 = np.cos(phi)
            t14332 = -1 + t14327
            t14328 = t14332 ** 2
            t14329 = t14328 ** 2
            t14326 = 1 + t14327
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 - 7 * phi2)) * np.sqrt(0.7315e4) * t14332 * t14329 ** 2 * t14326 ** 2

        if Bindx == 2282:
            t14333 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.exp((1j) * (11 * phi1 - 6 * phi2)) * np.sqrt(0.2926e4) * ((1 - t14333) ** (0.17e2 / 0.2e1)) * ((1 + t14333) ** (0.5e1 / 0.2e1))

        if Bindx == 2283:
            t14334 = np.cos(phi)
            t14341 = -1 + t14334
            t14340 = 1 + t14334
            t14338 = t14340 ** 2
            t14335 = t14341 ** 2
            t14336 = t14335 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 - 5 * phi2)) * np.sqrt(0.74613e5) * t14336 ** 2 * t14340 * t14338

        if Bindx == 2284:
            t14342 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((1j) * (11 * phi1 - 4 * phi2)) * np.sqrt(0.10659e5) * ((1 - t14342) ** (0.15e2 / 0.2e1)) * ((1 + t14342) ** (0.7e1 / 0.2e1))

        if Bindx == 2285:
            t14343 = np.cos(phi)
            t14351 = -1 + t14343
            t14350 = 1 + t14343
            t14348 = t14350 ** 2
            t14344 = t14351 ** 2
            t14345 = t14351 * t14344
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 - 3 * phi2)) * np.sqrt(0.35530e5) * t14351 * t14345 ** 2 * t14348 ** 2

        if Bindx == 2286:
            t14352 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (11 * phi1 - 2 * phi2)) * np.sqrt(0.124355e6) * ((1 - t14352) ** (0.13e2 / 0.2e1)) * ((1 + t14352) ** (0.9e1 / 0.2e1))

        if Bindx == 2287:
            t14357 = np.sin(phi)
            t14353 = t14357 ** 2
            t14355 = t14357 * t14353 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 - phi2)) * np.sqrt(0.646646e6) * t14355 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 2288:
            t14358 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((11*1j) * phi1) * np.sqrt(0.176358e6) * ((1 - t14358) ** (0.11e2 / 0.2e1)) * ((1 + t14358) ** (0.11e2 / 0.2e1))

        if Bindx == 2289:
            t14363 = np.sin(phi)
            t14359 = t14363 ** 2
            t14361 = t14363 * t14359 ** 2
            tfunc[..., c] = -(0.23e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 + phi2)) * np.sqrt(0.646646e6) * t14361 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 2290:
            t14364 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.1024e4*1j) * np.exp((1j) * (11 * phi1 + 2 * phi2)) * np.sqrt(0.124355e6) * ((1 - t14364) ** (0.9e1 / 0.2e1)) * ((1 + t14364) ** (0.13e2 / 0.2e1))

        if Bindx == 2291:
            t14365 = np.cos(phi)
            t14373 = -1 + t14365
            t14372 = 1 + t14365
            t14368 = t14372 ** 2
            t14369 = t14372 * t14368
            t14366 = t14373 ** 2
            tfunc[..., c] = (0.69e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 + 3 * phi2)) * np.sqrt(0.35530e5) * t14366 ** 2 * t14372 * t14369 ** 2

        if Bindx == 2292:
            t14374 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.512e3*1j) * np.exp((1j) * (11 * phi1 + 4 * phi2)) * np.sqrt(0.10659e5) * ((1 - t14374) ** (0.7e1 / 0.2e1)) * ((1 + t14374) ** (0.15e2 / 0.2e1))

        if Bindx == 2293:
            t14375 = np.cos(phi)
            t14382 = -1 + t14375
            t14381 = 1 + t14375
            t14378 = t14381 ** 2
            t14379 = t14378 ** 2
            t14376 = t14382 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 + 5 * phi2)) * np.sqrt(0.74613e5) * t14382 * t14376 * t14379 ** 2

        if Bindx == 2294:
            t14383 = np.cos(phi)
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.exp((1j) * (11 * phi1 + 6 * phi2)) * np.sqrt(0.2926e4) * ((1 - t14383) ** (0.5e1 / 0.2e1)) * ((1 + t14383) ** (0.17e2 / 0.2e1))

        if Bindx == 2295:
            t14385 = np.cos(phi)
            t14390 = 1 + t14385
            t14386 = t14390 ** 2
            t14387 = t14386 ** 2
            t14384 = -1 + t14385
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 + 7 * phi2)) * np.sqrt(0.7315e4) * t14384 ** 2 * t14390 * t14387 ** 2

        if Bindx == 2296:
            t14391 = np.cos(phi)
            tfunc[..., c] = (0.23e2 / 0.1024e4*1j) * np.exp((1j) * (11 * phi1 + 8 * phi2)) * np.sqrt(0.385e3) * ((1 - t14391) ** (0.3e1 / 0.2e1)) * ((1 + t14391) ** (0.19e2 / 0.2e1))

        if Bindx == 2297:
            t14392 = np.cos(phi)
            t14397 = 1 + t14392
            t14393 = t14397 ** 2
            t14395 = t14397 * t14393 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 + 9 * phi2)) * np.sqrt(0.231e3) * (-1 + t14392) * t14395 ** 2

        if Bindx == 2298:
            t14398 = np.cos(phi)
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.exp((1j) * (11 * phi1 + 10 * phi2)) * np.sqrt(0.22e2) * np.sqrt((1 - t14398)) * ((1 + t14398) ** (0.21e2 / 0.2e1))

        if Bindx == 2299:
            t14399 = np.cos(phi)
            t14400 = t14399 ** 2
            t14402 = t14400 ** 2
            t14403 = t14399 * t14402
            t14408 = t14403 ** 2
            t14406 = t14402 ** 2
            t14401 = t14399 * t14400
            t14404 = t14401 ** 2
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.exp((11*1j) * (phi1 + phi2)) * (55 * t14400 + 165 * t14401 + 330 * t14402 + 462 * t14403 + 462 * t14404 + 165 * t14406 + 11 * t14408 + 1 + (330 * t14404 + 55 * t14406 + t14408 + 11) * t14399)

        if Bindx == 2300:
            t14410 = np.cos(phi)
            t14422 = 12 * t14410
            t14411 = t14410 ** 2
            t14412 = t14410 * t14411
            t14415 = t14412 ** 2
            t14413 = t14411 ** 2
            t14414 = t14410 * t14413
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((-12*1j) * (phi1 + phi2)) * (66 * t14411 + 220 * t14412 + t14422 + 1 + (792 * t14410 + 924 + t14415) * t14415 + (792 + (t14422 + 66) * t14414) * t14414 + (495 + (220 * t14410 + 495) * t14413) * t14413)

        if Bindx == 2301:
            t14423 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (12 * phi1 + 11 * phi2)) * np.sqrt(0.6e1) * ((1 + t14423) ** (0.23e2 / 0.2e1)) * np.sqrt((1 - t14423))

        if Bindx == 2302:
            t14424 = np.cos(phi)
            t14430 = 1 + t14424
            t14425 = t14430 ** 2
            t14427 = t14430 * t14425 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-2*1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.69e2) * (-1 + t14424) * t14430 * t14427 ** 2

        if Bindx == 2303:
            t14431 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((-3*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.506e3) * ((1 - t14431) ** (0.3e1 / 0.2e1)) * ((1 + t14431) ** (0.21e2 / 0.2e1))

        if Bindx == 2304:
            t14433 = np.cos(phi)
            t14438 = 1 + t14433
            t14434 = t14438 ** 2
            t14436 = t14438 * t14434 ** 2
            t14432 = -1 + t14433
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((-4*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.10626e5) * t14432 ** 2 * t14436 ** 2

        if Bindx == 2305:
            t14439 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (12 * phi1 + 7 * phi2)) * np.sqrt(0.10626e5) * ((1 - t14439) ** (0.5e1 / 0.2e1)) * ((1 + t14439) ** (0.19e2 / 0.2e1))

        if Bindx == 2306:
            t14440 = np.cos(phi)
            t14448 = -1 + t14440
            t14447 = 1 + t14440
            t14443 = t14447 ** 2
            t14444 = t14443 ** 2
            t14441 = t14448 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-6*1j) * (2 * phi1 + phi2)) * np.sqrt(0.33649e5) * t14448 * t14441 * t14447 * t14444 ** 2

        if Bindx == 2307:
            t14449 = np.cos(phi)
            tfunc[..., c] = (0.75e2 / 0.2048e4*1j) * np.exp((-1*1j) * (12 * phi1 + 5 * phi2)) * np.sqrt(0.9614e4) * ((1 - t14449) ** (0.7e1 / 0.2e1)) * ((1 + t14449) ** (0.17e2 / 0.2e1))

        if Bindx == 2308:
            t14450 = np.cos(phi)
            t14457 = -1 + t14450
            t14456 = 1 + t14450
            t14453 = t14456 ** 2
            t14454 = t14453 ** 2
            t14451 = t14457 ** 2
            tfunc[..., c] = (0.75e2 / 0.4096e4) * np.exp((-4*1j) * (3 * phi1 + phi2)) * np.sqrt(0.81719e5) * t14451 ** 2 * t14454 ** 2

        if Bindx == 2309:
            t14458 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((-3*1j) * (4 * phi1 + phi2)) * np.sqrt(0.81719e5) * ((1 - t14458) ** (0.9e1 / 0.2e1)) * ((1 + t14458) ** (0.15e2 / 0.2e1))

        if Bindx == 2310:
            t14459 = np.cos(phi)
            t14468 = -1 + t14459
            t14467 = 1 + t14459
            t14463 = t14467 ** 2
            t14464 = t14467 * t14463
            t14460 = t14468 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-2*1j) * (6 * phi1 + phi2)) * np.sqrt(0.490314e6) * t14468 * t14460 ** 2 * t14467 * t14464 ** 2

        if Bindx == 2311:
            t14469 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (12 * phi1 + phi2)) * np.sqrt(0.156009e6) * ((1 - t14469) ** (0.11e2 / 0.2e1)) * ((1 + t14469) ** (0.13e2 / 0.2e1))

        if Bindx == 2312:
            t14474 = np.sin(phi)
            t14470 = t14474 ** 2
            t14471 = t14474 * t14470
            t14472 = t14471 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-12*1j) * phi1) * np.sqrt(0.676039e6) * t14472 ** 2

        if Bindx == 2313:
            t14475 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (12 * phi1 - phi2)) * np.sqrt(0.156009e6) * ((1 - t14475) ** (0.13e2 / 0.2e1)) * ((1 + t14475) ** (0.11e2 / 0.2e1))

        if Bindx == 2314:
            t14476 = np.cos(phi)
            t14485 = -1 + t14476
            t14484 = 1 + t14476
            t14481 = t14484 ** 2
            t14477 = t14485 ** 2
            t14478 = t14485 * t14477
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-2*1j) * (6 * phi1 - phi2)) * np.sqrt(0.490314e6) * t14485 * t14478 ** 2 * t14484 * t14481 ** 2

        if Bindx == 2315:
            t14486 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-3*1j) * (4 * phi1 - phi2)) * np.sqrt(0.81719e5) * ((1 - t14486) ** (0.15e2 / 0.2e1)) * ((1 + t14486) ** (0.9e1 / 0.2e1))

        if Bindx == 2316:
            t14487 = np.cos(phi)
            t14494 = -1 + t14487
            t14493 = 1 + t14487
            t14491 = t14493 ** 2
            t14488 = t14494 ** 2
            t14489 = t14488 ** 2
            tfunc[..., c] = (0.75e2 / 0.4096e4) * np.exp((-4*1j) * (3 * phi1 - phi2)) * np.sqrt(0.81719e5) * t14489 ** 2 * t14491 ** 2

        if Bindx == 2317:
            t14495 = np.cos(phi)
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * np.exp((-1*1j) * (12 * phi1 - 5 * phi2)) * np.sqrt(0.9614e4) * ((1 - t14495) ** (0.17e2 / 0.2e1)) * ((1 + t14495) ** (0.7e1 / 0.2e1))

        if Bindx == 2318:
            t14496 = np.cos(phi)
            t14504 = -1 + t14496
            t14503 = 1 + t14496
            t14501 = t14503 ** 2
            t14497 = t14504 ** 2
            t14498 = t14497 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-6*1j) * (2 * phi1 - phi2)) * np.sqrt(0.33649e5) * t14504 * t14498 ** 2 * t14503 * t14501

        if Bindx == 2319:
            t14505 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (12 * phi1 - 7 * phi2)) * np.sqrt(0.10626e5) * ((1 - t14505) ** (0.19e2 / 0.2e1)) * ((1 + t14505) ** (0.5e1 / 0.2e1))

        if Bindx == 2320:
            t14507 = np.cos(phi)
            t14512 = -1 + t14507
            t14508 = t14512 ** 2
            t14510 = t14512 * t14508 ** 2
            t14506 = 1 + t14507
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((-4*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.10626e5) * t14510 ** 2 * t14506 ** 2

        if Bindx == 2321:
            t14513 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((-3*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.506e3) * ((1 - t14513) ** (0.21e2 / 0.2e1)) * ((1 + t14513) ** (0.3e1 / 0.2e1))

        if Bindx == 2322:
            t14514 = np.cos(phi)
            t14520 = -1 + t14514
            t14515 = t14520 ** 2
            t14517 = t14520 * t14515 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-2*1j) * (6 * phi1 - 5 * phi2)) * np.sqrt(0.69e2) * t14520 * t14517 ** 2 * (1 + t14514)

        if Bindx == 2323:
            t14521 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (12 * phi1 - 11 * phi2)) * np.sqrt(0.6e1) * ((1 - t14521) ** (0.23e2 / 0.2e1)) * np.sqrt((1 + t14521))

        if Bindx == 2324:
            t14522 = np.cos(phi)
            t14534 = -12 * t14522
            t14523 = t14522 ** 2
            t14524 = t14522 * t14523
            t14527 = t14524 ** 2
            t14525 = t14523 ** 2
            t14526 = t14522 * t14525
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((-12*1j) * (phi1 - phi2)) * (66 * t14523 - 220 * t14524 + t14534 + 1 + (-792 * t14522 + 924 + t14527) * t14527 + (-792 + (t14534 + 66) * t14526) * t14526 + (495 + (-220 * t14522 + 495) * t14525) * t14525)

        if Bindx == 2325:
            t14535 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (11 * phi1 + 12 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t14535)) * ((1 + t14535) ** (0.23e2 / 0.2e1))

        if Bindx == 2326:
            t14536 = np.cos(phi)
            t14537 = t14536 ** 2
            t14539 = t14537 ** 2
            t14540 = t14536 * t14539
            t14545 = t14540 ** 2
            t14543 = t14539 ** 2
            t14538 = t14536 * t14537
            t14541 = t14538 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-11*1j) * (phi1 + phi2)) * (-473 * t14537 - 1155 * t14538 - 1650 * t14539 - 1122 * t14540 + 2145 * t14543 + 539 * t14545 - 11 + (462 + 12 * t14541) * t14541 + (1914 * t14541 + 1375 * t14543 + 121 * t14545 - 109) * t14536)

        if Bindx == 2327:
            t14548 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (11 * phi1 + 10 * phi2)) * np.sqrt(0.46e2) * ((1 + t14548) ** (0.21e2 / 0.2e1)) * (5 + (-11 + 6 * t14548) * t14548) * ((1 - t14548) ** (-0.1e1 / 0.2e1))

        if Bindx == 2328:
            t14549 = np.cos(phi)
            t14554 = 1 + t14549
            t14550 = t14554 ** 2
            t14552 = t14554 * t14550 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * (-3 + 4 * t14549) * (-1 + t14549) * t14552 ** 2 * np.sqrt(0.759e3) * np.exp((-1*1j) * (11 * phi1 + 9 * phi2))

        if Bindx == 2329:
            t14555 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-2 + 3 * t14555) * ((1 + t14555) ** (0.19e2 / 0.2e1)) * np.sqrt(0.1771e4) * np.exp((-1*1j) * (11 * phi1 + 8 * phi2)) * ((1 - t14555) ** (0.3e1 / 0.2e1))

        if Bindx == 2330:
            t14557 = np.cos(phi)
            t14562 = 1 + t14557
            t14558 = t14562 ** 2
            t14559 = t14558 ** 2
            t14556 = -1 + t14557
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 + 7 * phi2)) * np.sqrt(0.1771e4) * t14562 * t14559 ** 2 * t14556 ** 2 * (-7 + 12 * t14557)

        if Bindx == 2331:
            t14563 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * (2 * t14563 - 1) * ((1 + t14563) ** (0.17e2 / 0.2e1)) * np.sqrt(0.201894e6) * np.exp((-1*1j) * (11 * phi1 + 6 * phi2)) * ((1 - t14563) ** (0.5e1 / 0.2e1))

        if Bindx == 2332:
            t14573 = np.sin(phi)
            t14570 = t14573 ** 2
            t14571 = t14573 * t14570
            t14564 = np.cos(phi)
            t14565 = t14564 ** 2
            t14567 = t14565 ** 2
            t14566 = t14564 * t14565
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 + 5 * phi2)) * np.sqrt(0.14421e5) * t14571 ** 2 * (10 * t14565 + 95 * t14567 - 5 + (70 + 12 * t14566) * t14566 + (55 * t14567 - 13) * t14564)

        if Bindx == 2333:
            t14574 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (-1 + 3 * t14574) * ((1 + t14574) ** (0.15e2 / 0.2e1)) * np.sqrt(0.490314e6) * np.exp((-1*1j) * (11 * phi1 + 4 * phi2)) * ((1 - t14574) ** (0.7e1 / 0.2e1))

        if Bindx == 2334:
            t14582 = np.sin(phi)
            t14579 = t14582 ** 2
            t14580 = t14579 ** 2
            t14575 = np.cos(phi)
            t14576 = t14575 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 + 3 * phi2)) * np.sqrt(0.490314e6) * t14580 ** 2 * (t14575 - 1 + (11 * t14575 + 9 + 4 * t14576) * t14576)

        if Bindx == 2335:
            t14583 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (-1 + 6 * t14583) * ((1 + t14583) ** (0.13e2 / 0.2e1)) * np.sqrt(0.81719e5) * np.exp((-1*1j) * (11 * phi1 + 2 * phi2)) * ((1 - t14583) ** (0.9e1 / 0.2e1))

        if Bindx == 2336:
            t14589 = np.sin(phi)
            t14585 = t14589 ** 2
            t14587 = t14589 * t14585 ** 2
            t14584 = np.cos(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 + phi2)) * np.sqrt(0.104006e6) * t14587 ** 2 * (-1 + (11 + 12 * t14584) * t14584)

        if Bindx == 2337:
            t14590 = np.cos(phi)
            t14596 = -6 * t14590
            t14591 = t14590 ** 2
            t14592 = t14590 * t14591
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * t14590 * (t14596 + 1 + (-20 + t14592) * t14592 + (15 + (t14596 + 15) * t14591) * t14591) * ((1 + t14590) ** (0.11e2 / 0.2e1)) * np.sqrt(0.4056234e7) * np.exp((-11*1j) * phi1) * ((1 - t14590) ** (-0.1e1 / 0.2e1))

        if Bindx == 2338:
            t14602 = np.sin(phi)
            t14598 = t14602 ** 2
            t14600 = t14602 * t14598 ** 2
            t14597 = np.cos(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 - phi2)) * np.sqrt(0.104006e6) * t14600 ** 2 * (-1 + (-11 + 12 * t14597) * t14597)

        if Bindx == 2339:
            t14603 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (1 + 6 * t14603) * ((1 + t14603) ** (0.9e1 / 0.2e1)) * np.sqrt(0.81719e5) * np.exp((-1*1j) * (11 * phi1 - 2 * phi2)) * ((1 - t14603) ** (0.13e2 / 0.2e1))

        if Bindx == 2340:
            t14611 = np.sin(phi)
            t14608 = t14611 ** 2
            t14609 = t14608 ** 2
            t14604 = np.cos(phi)
            t14605 = t14604 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 - 3 * phi2)) * np.sqrt(0.490314e6) * t14609 ** 2 * (-t14604 - 1 + (-11 * t14604 + 9 + 4 * t14605) * t14605)

        if Bindx == 2341:
            t14612 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (1 + 3 * t14612) * ((1 + t14612) ** (0.7e1 / 0.2e1)) * np.sqrt(0.490314e6) * np.exp((-1*1j) * (11 * phi1 - 4 * phi2)) * ((1 - t14612) ** (0.15e2 / 0.2e1))

        if Bindx == 2342:
            t14622 = np.sin(phi)
            t14619 = t14622 ** 2
            t14620 = t14622 * t14619
            t14613 = np.cos(phi)
            t14614 = t14613 ** 2
            t14616 = t14614 ** 2
            t14615 = t14613 * t14614
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 - 5 * phi2)) * np.sqrt(0.14421e5) * t14620 ** 2 * (10 * t14614 + 95 * t14616 - 5 + (-70 + 12 * t14615) * t14615 + (-55 * t14616 + 13) * t14613)

        if Bindx == 2343:
            t14623 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * (1 + 2 * t14623) * ((1 + t14623) ** (0.5e1 / 0.2e1)) * np.sqrt(0.201894e6) * np.exp((-1*1j) * (11 * phi1 - 6 * phi2)) * ((1 - t14623) ** (0.17e2 / 0.2e1))

        if Bindx == 2344:
            t14625 = np.cos(phi)
            t14630 = -1 + t14625
            t14626 = t14630 ** 2
            t14627 = t14626 ** 2
            t14624 = 1 + t14625
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 - 7 * phi2)) * np.sqrt(0.1771e4) * t14624 ** 2 * t14630 * t14627 ** 2 * (7 + 12 * t14625)

        if Bindx == 2345:
            t14631 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (2 + 3 * t14631) * ((1 + t14631) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1771e4) * np.exp((-1*1j) * (11 * phi1 - 8 * phi2)) * ((1 - t14631) ** (0.19e2 / 0.2e1))

        if Bindx == 2346:
            t14632 = np.cos(phi)
            t14637 = -1 + t14632
            t14633 = t14637 ** 2
            t14635 = t14637 * t14633 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (11 * phi1 - 9 * phi2)) * np.sqrt(0.759e3) * (1 + t14632) * t14635 ** 2 * (3 + 4 * t14632)

        if Bindx == 2347:
            t14638 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * (5 + 6 * t14638) * np.sqrt((1 + t14638)) * np.sqrt(0.46e2) * np.exp((-1*1j) * (11 * phi1 - 10 * phi2)) * ((1 - t14638) ** (0.21e2 / 0.2e1))

        if Bindx == 2348:
            t14639 = np.cos(phi)
            t14640 = t14639 ** 2
            t14642 = t14640 ** 2
            t14643 = t14639 * t14642
            t14648 = t14643 ** 2
            t14646 = t14642 ** 2
            t14641 = t14639 * t14640
            t14644 = t14641 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-11*1j) * (phi1 - phi2)) * (-473 * t14640 + 1155 * t14641 - 1650 * t14642 + 1122 * t14643 + 2145 * t14646 + 539 * t14648 - 11 + (462 + 12 * t14644) * t14644 + (-1914 * t14644 - 1375 * t14646 - 121 * t14648 + 109) * t14639)

        if Bindx == 2349:
            t14651 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (11 * phi1 - 12 * phi2)) * np.sqrt(0.6e1) * ((1 - t14651) ** (0.23e2 / 0.2e1)) * np.sqrt((1 + t14651))

        if Bindx == 2350:
            t14652 = np.cos(phi)
            t14658 = 1 + t14652
            t14653 = t14658 ** 2
            t14655 = t14658 * t14653 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-2*1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.69e2) * (-1 + t14652) * t14658 * t14655 ** 2

        if Bindx == 2351:
            t14659 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (10 * phi1 + 11 * phi2)) * np.sqrt(0.46e2) * np.sqrt((1 - t14659)) * ((1 + t14659) ** (0.21e2 / 0.2e1)) * (-5 + 6 * t14659)

        if Bindx == 2352:
            t14660 = np.cos(phi)
            t14661 = t14660 ** 2
            t14663 = t14661 ** 2
            t14664 = t14660 * t14663
            t14669 = t14664 ** 2
            t14667 = t14663 ** 2
            t14662 = t14660 * t14661
            t14665 = t14662 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-10*1j) * (phi1 + phi2)) * (1034 * t14661 + 1155 * t14662 - 825 * t14663 - 4026 * t14664 + 2805 * t14667 + 2002 * t14669 + 47 + (-4620 + 69 * t14665) * t14665 + (-1122 * t14665 + 3575 * t14667 + 575 * t14669 + 355) * t14660)

        if Bindx == 2353:
            t14672 = np.cos(phi)
            t14673 = t14672 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (10 * phi1 + 9 * phi2)) * np.sqrt(0.66e2) * ((1 + t14672) ** (0.19e2 / 0.2e1)) * (-115 * t14673 - 25 + (46 * t14673 + 94) * t14672) * ((1 - t14672) ** (-0.1e1 / 0.2e1))

        if Bindx == 2354:
            t14676 = np.cos(phi)
            t14677 = t14676 ** 2
            t14679 = t14677 ** 2
            t14683 = t14679 ** 2
            t14678 = t14676 * t14677
            t14681 = t14678 ** 2
            t14680 = t14676 * t14679
            t14675 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-2*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.154e3) * t14675 ** 2 * (145 * t14677 - 400 * t14678 - 1190 * t14679 + 490 * t14681 + 1225 * t14683 + 29 + (-952 + 69 * t14680) * t14680 + (1520 * t14681 + 460 * t14683 + 140) * t14676)

        if Bindx == 2355:
            t14686 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (43 + (-161 + 138 * t14686) * t14686) * ((1 + t14686) ** (0.17e2 / 0.2e1)) * np.sqrt(0.154e3) * np.exp((-1*1j) * (10 * phi1 + 7 * phi2)) * ((1 - t14686) ** (0.3e1 / 0.2e1))

        if Bindx == 2356:
            t14697 = np.sin(phi)
            t14695 = t14697 ** 2
            t14687 = np.cos(phi)
            t14688 = t14687 ** 2
            t14689 = t14687 * t14688
            t14692 = t14689 ** 2
            t14690 = t14688 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.4389e4) * t14695 ** 2 * (-40 * t14688 - 107 * t14689 + 212 * t14692 + 5 + (-40 + 23 * t14690) * t14690 + (145 * t14690 + 115 * t14692 + 7) * t14687)

        if Bindx == 2357:
            t14698 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * (19 + (-115 + 138 * t14698) * t14698) * ((1 + t14698) ** (0.15e2 / 0.2e1)) * np.sqrt(0.1254e4) * np.exp((-5*1j) * (2 * phi1 + phi2)) * ((1 - t14698) ** (0.5e1 / 0.2e1))

        if Bindx == 2358:
            t14708 = np.sin(phi)
            t14705 = t14708 ** 2
            t14706 = t14708 * t14705
            t14699 = np.cos(phi)
            t14700 = t14699 ** 2
            t14702 = t14700 ** 2
            t14701 = t14699 * t14700
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-2*1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.10659e5) * t14706 ** 2 * (-85 * t14700 + 235 * t14702 + 5 + (20 + 69 * t14701) * t14701 + (230 * t14702 - 26) * t14699)

        if Bindx == 2359:
            t14709 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (1 + (-23 + 46 * t14709) * t14709) * ((1 + t14709) ** (0.13e2 / 0.2e1)) * np.sqrt(0.10659e5) * np.exp((-1*1j) * (10 * phi1 + 3 * phi2)) * ((1 - t14709) ** (0.7e1 / 0.2e1))

        if Bindx == 2360:
            t14717 = np.sin(phi)
            t14714 = t14717 ** 2
            t14715 = t14714 ** 2
            t14710 = np.cos(phi)
            t14711 = t14710 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 + phi2)) * np.sqrt(0.7106e4) * t14715 ** 2 * (-25 * t14710 - 1 + (115 * t14710 + 22 + 69 * t14711) * t14711)

        if Bindx == 2361:
            t14718 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (-5 + (-23 + 138 * t14718) * t14718) * ((1 + t14718) ** (0.11e2 / 0.2e1)) * np.sqrt(0.2261e4) * np.exp((-1*1j) * (10 * phi1 + phi2)) * ((1 - t14718) ** (0.9e1 / 0.2e1))

        if Bindx == 2362:
            t14724 = np.sin(phi)
            t14720 = t14724 ** 2
            t14722 = t14724 * t14720 ** 2
            t14719 = np.cos(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-10*1j) * phi1) * np.sqrt(0.88179e5) * t14722 ** 2 * (23 * t14719 ** 2 - 1)

        if Bindx == 2363:
            t14725 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-5 + (23 + 138 * t14725) * t14725) * ((1 + t14725) ** (0.9e1 / 0.2e1)) * np.sqrt(0.2261e4) * np.exp((-1*1j) * (10 * phi1 - phi2)) * ((1 - t14725) ** (0.11e2 / 0.2e1))

        if Bindx == 2364:
            t14733 = np.sin(phi)
            t14730 = t14733 ** 2
            t14731 = t14730 ** 2
            t14726 = np.cos(phi)
            t14727 = t14726 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 - phi2)) * np.sqrt(0.7106e4) * t14731 ** 2 * (25 * t14726 - 1 + (-115 * t14726 + 22 + 69 * t14727) * t14727)

        if Bindx == 2365:
            t14734 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (1 + (23 + 46 * t14734) * t14734) * ((1 + t14734) ** (0.7e1 / 0.2e1)) * np.sqrt(0.10659e5) * np.exp((-1*1j) * (10 * phi1 - 3 * phi2)) * ((1 - t14734) ** (0.13e2 / 0.2e1))

        if Bindx == 2366:
            t14744 = np.sin(phi)
            t14741 = t14744 ** 2
            t14742 = t14744 * t14741
            t14735 = np.cos(phi)
            t14736 = t14735 ** 2
            t14738 = t14736 ** 2
            t14737 = t14735 * t14736
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-2*1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.10659e5) * t14742 ** 2 * (-85 * t14736 + 235 * t14738 + 5 + (-20 + 69 * t14737) * t14737 + (-230 * t14738 + 26) * t14735)

        if Bindx == 2367:
            t14745 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (19 + (115 + 138 * t14745) * t14745) * ((1 + t14745) ** (0.5e1 / 0.2e1)) * np.sqrt(0.1254e4) * np.exp((-5*1j) * (2 * phi1 - phi2)) * ((1 - t14745) ** (0.15e2 / 0.2e1))

        if Bindx == 2368:
            t14756 = np.sin(phi)
            t14754 = t14756 ** 2
            t14746 = np.cos(phi)
            t14747 = t14746 ** 2
            t14748 = t14746 * t14747
            t14751 = t14748 ** 2
            t14749 = t14747 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.4389e4) * t14754 ** 2 * (-40 * t14747 + 107 * t14748 + 212 * t14751 + 5 + (-40 + 23 * t14749) * t14749 + (-145 * t14749 - 115 * t14751 - 7) * t14746)

        if Bindx == 2369:
            t14757 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * (43 + (161 + 138 * t14757) * t14757) * ((1 + t14757) ** (0.3e1 / 0.2e1)) * np.sqrt(0.154e3) * np.exp((-1*1j) * (10 * phi1 - 7 * phi2)) * ((1 - t14757) ** (0.17e2 / 0.2e1))

        if Bindx == 2370:
            t14758 = np.cos(phi)
            t14763 = -1 + t14758
            t14759 = t14763 ** 2
            t14760 = t14759 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-2*1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.154e3) * (1 + t14758) * t14763 * t14760 ** 2 * (29 + (92 + 69 * t14758) * t14758)

        if Bindx == 2371:
            t14764 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (25 + (69 + 46 * t14764) * t14764) * np.sqrt((1 + t14764)) * np.sqrt(0.66e2) * np.exp((-1*1j) * (10 * phi1 - 9 * phi2)) * ((1 - t14764) ** (0.19e2 / 0.2e1))

        if Bindx == 2372:
            t14765 = np.cos(phi)
            t14766 = t14765 ** 2
            t14768 = t14766 ** 2
            t14769 = t14765 * t14768
            t14774 = t14769 ** 2
            t14772 = t14768 ** 2
            t14767 = t14765 * t14766
            t14770 = t14767 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-10*1j) * (phi1 - phi2)) * (1034 * t14766 - 1155 * t14767 - 825 * t14768 + 4026 * t14769 + 2805 * t14772 + 2002 * t14774 + 47 + (-4620 + 69 * t14770) * t14770 + (1122 * t14770 - 3575 * t14772 - 575 * t14774 - 355) * t14765)

        if Bindx == 2373:
            t14777 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * (5 + 6 * t14777) * np.sqrt((1 + t14777)) * np.sqrt(0.46e2) * np.exp((-1*1j) * (10 * phi1 - 11 * phi2)) * ((1 - t14777) ** (0.21e2 / 0.2e1))

        if Bindx == 2374:
            t14778 = np.cos(phi)
            t14784 = -1 + t14778
            t14779 = t14784 ** 2
            t14781 = t14784 * t14779 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-2*1j) * (5 * phi1 - 6 * phi2)) * np.sqrt(0.69e2) * t14784 * t14781 ** 2 * (1 + t14778)

        if Bindx == 2375:
            t14785 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((-3*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.506e3) * ((1 - t14785) ** (0.3e1 / 0.2e1)) * ((1 + t14785) ** (0.21e2 / 0.2e1))

        if Bindx == 2376:
            t14786 = np.cos(phi)
            t14791 = 1 + t14786
            t14787 = t14791 ** 2
            t14789 = t14791 * t14787 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 + 11 * phi2)) * np.sqrt(0.759e3) * (-1 + t14786) * t14789 ** 2 * (-3 + 4 * t14786)

        if Bindx == 2377:
            t14792 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (9 * phi1 + 10 * phi2)) * np.sqrt(0.66e2) * np.sqrt((1 - t14792)) * ((1 + t14792) ** (0.19e2 / 0.2e1)) * (25 + (-69 + 46 * t14792) * t14792)

        if Bindx == 2378:
            t14793 = np.cos(phi)
            t14794 = t14793 ** 2
            t14796 = t14794 ** 2
            t14797 = t14793 * t14796
            t14802 = t14797 ** 2
            t14800 = t14796 ** 2
            t14795 = t14793 * t14794
            t14798 = t14795 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-9*1j) * (phi1 + phi2)) * (-1143 * t14794 + 7915 * t14795 + 17730 * t14796 + 5058 * t14797 - 7785 * t14800 + 17589 * t14802 - 381 + (-25998 + 1012 * t14798) * t14798 + (-34506 * t14798 + 17505 * t14800 + 6831 * t14802 - 1779) * t14793)

        if Bindx == 2379:
            t14805 = np.cos(phi)
            t14806 = t14805 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (9 * phi1 + 8 * phi2)) * np.sqrt(0.21e2) * ((1 + t14805) ** (0.17e2 / 0.2e1)) * (-381 * t14805 + 62 + (-759 * t14805 + 825 + 253 * t14806) * t14806) * ((1 - t14805) ** (-0.1e1 / 0.2e1))

        if Bindx == 2380:
            t14810 = np.cos(phi)
            t14811 = t14810 ** 2
            t14813 = t14811 ** 2
            t14817 = t14813 ** 2
            t14812 = t14810 * t14811
            t14815 = t14812 ** 2
            t14814 = t14810 * t14813
            t14809 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 + 7 * phi2)) * np.sqrt(0.21e2) * t14809 ** 2 * (1764 * t14811 + 3336 * t14812 - 2142 * t14813 - 7728 * t14815 + 9801 * t14817 - 147 + (-10710 + 1012 * t14814) * t14814 + (4704 * t14815 + 5313 * t14817 - 83) * t14810)

        if Bindx == 2381:
            t14820 = np.cos(phi)
            t14821 = t14820 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (-759 * t14821 - 37 + (506 * t14821 + 330) * t14820) * ((1 + t14820) ** (0.15e2 / 0.2e1)) * np.sqrt(0.266e3) * np.exp((-3*1j) * (3 * phi1 + 2 * phi2)) * ((1 - t14820) ** (0.3e1 / 0.2e1))

        if Bindx == 2382:
            t14833 = np.sin(phi)
            t14831 = t14833 ** 2
            t14823 = np.cos(phi)
            t14824 = t14823 ** 2
            t14825 = t14823 * t14824
            t14828 = t14825 ** 2
            t14826 = t14824 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 + 5 * phi2)) * np.sqrt(0.19e2) * t14831 ** 2 * (575 * t14824 - 1383 * t14825 + 4213 * t14828 - 25 + (-3535 + 1012 * t14826) * t14826 + (-465 * t14826 + 3795 * t14828 + 293) * t14823)

        if Bindx == 2383:
            t14834 = np.cos(phi)
            t14835 = t14834 ** 2
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * (-253 * t14835 + 1 + (253 * t14835 + 55) * t14834) * ((1 + t14834) ** (0.13e2 / 0.2e1)) * np.sqrt(0.646e3) * np.exp((-1*1j) * (9 * phi1 + 4 * phi2)) * ((1 - t14834) ** (0.5e1 / 0.2e1))

        if Bindx == 2384:
            t14846 = np.sin(phi)
            t14843 = t14846 ** 2
            t14844 = t14846 * t14843
            t14837 = np.cos(phi)
            t14838 = t14837 ** 2
            t14840 = t14838 ** 2
            t14839 = t14837 * t14838
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-3*1j) * (3 * phi1 + phi2)) * np.sqrt(0.646e3) * t14844 ** 2 * (-510 * t14838 + 825 * t14840 + 17 + (-1050 + 1012 * t14839) * t14839 + (2277 * t14840 + 117) * t14837)

        if Bindx == 2385:
            t14847 = np.cos(phi)
            t14848 = t14847 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-253 * t14848 + 9 + (506 * t14848 - 22) * t14847) * ((1 + t14847) ** (0.11e2 / 0.2e1)) * np.sqrt(0.969e3) * np.exp((-1*1j) * (9 * phi1 + 2 * phi2)) * ((1 - t14847) ** (0.7e1 / 0.2e1))

        if Bindx == 2386:
            t14857 = np.sin(phi)
            t14854 = t14857 ** 2
            t14855 = t14854 ** 2
            t14850 = np.cos(phi)
            t14851 = t14850 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 + phi2)) * np.sqrt(0.149226e6) * t14855 ** 2 * (-9 * t14850 + 1 + (69 * t14850 - 33 + 92 * t14851) * t14851)

        if Bindx == 2387:
            t14858 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (23 * t14858 ** 2 - 3) * t14858 * ((1 + t14858) ** (0.9e1 / 0.2e1)) * np.sqrt(0.646646e6) * np.exp((-9*1j) * phi1) * ((1 - t14858) ** (0.9e1 / 0.2e1))

        if Bindx == 2388:
            t14866 = np.sin(phi)
            t14863 = t14866 ** 2
            t14864 = t14863 ** 2
            t14859 = np.cos(phi)
            t14860 = t14859 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 - phi2)) * np.sqrt(0.149226e6) * t14864 ** 2 * (9 * t14859 + 1 + (-69 * t14859 - 33 + 92 * t14860) * t14860)

        if Bindx == 2389:
            t14867 = np.cos(phi)
            t14868 = t14867 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (253 * t14868 - 9 + (506 * t14868 - 22) * t14867) * ((1 + t14867) ** (0.7e1 / 0.2e1)) * np.sqrt(0.969e3) * np.exp((-1*1j) * (9 * phi1 - 2 * phi2)) * ((1 - t14867) ** (0.11e2 / 0.2e1))

        if Bindx == 2390:
            t14879 = np.sin(phi)
            t14876 = t14879 ** 2
            t14877 = t14879 * t14876
            t14870 = np.cos(phi)
            t14871 = t14870 ** 2
            t14873 = t14871 ** 2
            t14872 = t14870 * t14871
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-3*1j) * (3 * phi1 - phi2)) * np.sqrt(0.646e3) * t14877 ** 2 * (-510 * t14871 + 825 * t14873 + 17 + (1050 + 1012 * t14872) * t14872 + (-2277 * t14873 - 117) * t14870)

        if Bindx == 2391:
            t14880 = np.cos(phi)
            t14883 = 253 * t14880 ** 2
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * (t14883 - 1 + (t14883 + 55) * t14880) * ((1 + t14880) ** (0.5e1 / 0.2e1)) * np.sqrt(0.646e3) * np.exp((-1*1j) * (9 * phi1 - 4 * phi2)) * ((1 - t14880) ** (0.13e2 / 0.2e1))

        if Bindx == 2392:
            t14894 = np.sin(phi)
            t14892 = t14894 ** 2
            t14884 = np.cos(phi)
            t14885 = t14884 ** 2
            t14886 = t14884 * t14885
            t14889 = t14886 ** 2
            t14887 = t14885 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 - 5 * phi2)) * np.sqrt(0.19e2) * t14892 ** 2 * (575 * t14885 + 1383 * t14886 + 4213 * t14889 - 25 + (-3535 + 1012 * t14887) * t14887 + (465 * t14887 - 3795 * t14889 - 293) * t14884)

        if Bindx == 2393:
            t14895 = np.cos(phi)
            t14896 = t14895 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (759 * t14896 + 37 + (506 * t14896 + 330) * t14895) * ((1 + t14895) ** (0.3e1 / 0.2e1)) * np.sqrt(0.266e3) * np.exp((-3*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t14895) ** (0.15e2 / 0.2e1))

        if Bindx == 2394:
            t14899 = np.cos(phi)
            t14900 = t14899 ** 2
            t14902 = t14900 ** 2
            t14906 = t14902 ** 2
            t14901 = t14899 * t14900
            t14904 = t14901 ** 2
            t14903 = t14899 * t14902
            t14898 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 - 7 * phi2)) * np.sqrt(0.21e2) * t14898 ** 2 * (1764 * t14900 - 3336 * t14901 - 2142 * t14902 - 7728 * t14904 + 9801 * t14906 - 147 + (10710 + 1012 * t14903) * t14903 + (-4704 * t14904 - 5313 * t14906 + 83) * t14899)

        if Bindx == 2395:
            t14909 = np.cos(phi)
            t14910 = t14909 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (506 * t14910 + 62 + (253 * t14910 + 319) * t14909) * np.sqrt((1 + t14909)) * np.sqrt(0.21e2) * np.exp((-1*1j) * (9 * phi1 - 8 * phi2)) * ((1 - t14909) ** (0.17e2 / 0.2e1))

        if Bindx == 2396:
            t14912 = np.cos(phi)
            t14913 = t14912 ** 2
            t14915 = t14913 ** 2
            t14916 = t14912 * t14915
            t14921 = t14916 ** 2
            t14919 = t14915 ** 2
            t14914 = t14912 * t14913
            t14917 = t14914 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-9*1j) * (phi1 - phi2)) * (-1143 * t14913 - 7915 * t14914 + 17730 * t14915 - 5058 * t14916 - 7785 * t14919 + 17589 * t14921 - 381 + (-25998 + 1012 * t14917) * t14917 + (34506 * t14917 - 17505 * t14919 - 6831 * t14921 + 1779) * t14912)

        if Bindx == 2397:
            t14924 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (25 + (69 + 46 * t14924) * t14924) * np.sqrt((1 + t14924)) * np.sqrt(0.66e2) * np.exp((-1*1j) * (9 * phi1 - 10 * phi2)) * ((1 - t14924) ** (0.19e2 / 0.2e1))

        if Bindx == 2398:
            t14925 = np.cos(phi)
            t14930 = -1 + t14925
            t14926 = t14930 ** 2
            t14928 = t14930 * t14926 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (9 * phi1 - 11 * phi2)) * np.sqrt(0.759e3) * (1 + t14925) * t14928 ** 2 * (3 + 4 * t14925)

        if Bindx == 2399:
            t14931 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((-3*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.506e3) * ((1 - t14931) ** (0.21e2 / 0.2e1)) * ((1 + t14931) ** (0.3e1 / 0.2e1))

        if Bindx == 2400:
            t14933 = np.cos(phi)
            t14938 = 1 + t14933
            t14934 = t14938 ** 2
            t14936 = t14938 * t14934 ** 2
            t14932 = -1 + t14933
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((-4*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.10626e5) * t14932 ** 2 * t14936 ** 2

        if Bindx == 2401:
            t14939 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (8 * phi1 + 11 * phi2)) * np.sqrt(0.1771e4) * ((1 - t14939) ** (0.3e1 / 0.2e1)) * ((1 + t14939) ** (0.19e2 / 0.2e1)) * (-2 + 3 * t14939)

        if Bindx == 2402:
            t14940 = np.cos(phi)
            t14945 = 1 + t14940
            t14941 = t14945 ** 2
            t14942 = t14941 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-2*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.154e3) * (-1 + t14940) * t14945 * t14942 ** 2 * (29 + (-92 + 69 * t14940) * t14940)

        if Bindx == 2403:
            t14946 = np.cos(phi)
            t14947 = t14946 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (8 * phi1 + 9 * phi2)) * np.sqrt(0.21e2) * np.sqrt((1 - t14946)) * ((1 + t14946) ** (0.17e2 / 0.2e1)) * (-506 * t14947 - 62 + (253 * t14947 + 319) * t14946)

        if Bindx == 2404:
            t14949 = np.cos(phi)
            t14950 = t14949 ** 2
            t14952 = t14950 ** 2
            t14953 = t14949 * t14952
            t14958 = t14953 ** 2
            t14956 = t14952 ** 2
            t14951 = t14949 * t14950
            t14954 = t14951 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-8*1j) * (phi1 + phi2)) * (-9422 * t14950 - 15120 * t14951 + 22575 * t14952 + 69216 * t14953 - 87345 * t14956 + 48818 * t14958 + 673 + (20412 + 5313 * t14954) * t14954 + (-84384 * t14954 + 2800 * t14956 + 28336 * t14958 + 176) * t14949)

        if Bindx == 2405:
            t14961 = np.cos(phi)
            t14962 = t14961 ** 2
            t14964 = t14962 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (8 * phi1 + 7 * phi2)) * ((1 + t14961) ** (0.15e2 / 0.2e1)) * (-13020 * t14962 - 17710 * t14964 - 278 + (22330 * t14962 + 5313 * t14964 + 3365) * t14961) * ((1 - t14961) ** (-0.1e1 / 0.2e1))

        if Bindx == 2406:
            t14967 = np.cos(phi)
            t14968 = t14967 ** 2
            t14970 = t14968 ** 2
            t14974 = t14970 ** 2
            t14969 = t14967 * t14968
            t14972 = t14969 ** 2
            t14971 = t14967 * t14970
            t14966 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-2*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.114e3) * t14966 ** 2 * (-513 * t14968 + 2928 * t14969 + 5094 * t14970 - 12714 * t14972 + 7623 * t14974 + 19 + (-3960 + 1771 * t14971) * t14971 + (-4368 * t14972 + 7084 * t14974 - 404) * t14967)

        if Bindx == 2407:
            t14977 = np.cos(phi)
            t14978 = t14977 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-75 * t14977 - 6 + (-1265 * t14977 + 627 + 759 * t14978) * t14978) * ((1 + t14977) ** (0.13e2 / 0.2e1)) * np.sqrt(0.399e3) * np.exp((-1*1j) * (8 * phi1 + 5 * phi2)) * ((1 - t14977) ** (0.3e1 / 0.2e1))

        if Bindx == 2408:
            t14991 = np.sin(phi)
            t14989 = t14991 ** 2
            t14981 = np.cos(phi)
            t14982 = t14981 ** 2
            t14983 = t14981 * t14982
            t14986 = t14983 ** 2
            t14984 = t14982 ** 2
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((-4*1j) * (2 * phi1 + phi2)) * np.sqrt(0.13566e5) * t14989 ** 2 * (324 * t14982 + 344 * t14983 + 836 * t14986 - 9 + (-1270 + 759 * t14984) * t14984 + (-1704 * t14984 + 2024 * t14986 - 24) * t14981)

        if Bindx == 2409:
            t14992 = np.cos(phi)
            t14993 = t14992 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (17 * t14992 - 2 + (-253 * t14992 + 33 + 253 * t14993) * t14993) * ((1 + t14992) ** (0.11e2 / 0.2e1)) * np.sqrt(0.13566e5) * np.exp((-1*1j) * (8 * phi1 + 3 * phi2)) * ((1 - t14992) ** (0.5e1 / 0.2e1))

        if Bindx == 2410:
            t15005 = np.sin(phi)
            t15002 = t15005 ** 2
            t15003 = t15005 * t15002
            t14996 = np.cos(phi)
            t14997 = t14996 ** 2
            t14999 = t14997 ** 2
            t14998 = t14996 * t14997
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-2*1j) * (4 * phi1 + phi2)) * np.sqrt(0.2261e4) * t15003 ** 2 * (41 * t14997 - 319 * t14999 - 1 + (-584 + 759 * t14998) * t14998 + (1012 * t14999 + 52) * t14996)

        if Bindx == 2411:
            t15006 = np.cos(phi)
            t15007 = t15006 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (21 * t15006 + 2 + (-161 * t15006 - 105 + 483 * t15007) * t15007) * ((1 + t15006) ** (0.9e1 / 0.2e1)) * np.sqrt(0.7106e4) * np.exp((-1*1j) * (8 * phi1 + phi2)) * ((1 - t15006) ** (0.7e1 / 0.2e1))

        if Bindx == 2412:
            t15016 = np.sin(phi)
            t15013 = t15016 ** 2
            t15014 = t15013 ** 2
            t15010 = np.cos(phi)
            t15011 = t15010 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-8*1j) * phi1) * np.sqrt(0.277134e6) * t15014 ** 2 * (1 + (-42 + 161 * t15011) * t15011)

        if Bindx == 2413:
            t15017 = np.cos(phi)
            t15018 = t15017 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (-21 * t15017 + 2 + (161 * t15017 - 105 + 483 * t15018) * t15018) * ((1 + t15017) ** (0.7e1 / 0.2e1)) * np.sqrt(0.7106e4) * np.exp((-1*1j) * (8 * phi1 - phi2)) * ((1 - t15017) ** (0.9e1 / 0.2e1))

        if Bindx == 2414:
            t15030 = np.sin(phi)
            t15027 = t15030 ** 2
            t15028 = t15030 * t15027
            t15021 = np.cos(phi)
            t15022 = t15021 ** 2
            t15024 = t15022 ** 2
            t15023 = t15021 * t15022
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-2*1j) * (4 * phi1 - phi2)) * np.sqrt(0.2261e4) * t15028 ** 2 * (41 * t15022 - 319 * t15024 - 1 + (584 + 759 * t15023) * t15023 + (-1012 * t15024 - 52) * t15021)

        if Bindx == 2415:
            t15031 = np.cos(phi)
            t15032 = t15031 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-17 * t15031 - 2 + (253 * t15031 + 33 + 253 * t15032) * t15032) * ((1 + t15031) ** (0.5e1 / 0.2e1)) * np.sqrt(0.13566e5) * np.exp((-1*1j) * (8 * phi1 - 3 * phi2)) * ((1 - t15031) ** (0.11e2 / 0.2e1))

        if Bindx == 2416:
            t15045 = np.sin(phi)
            t15043 = t15045 ** 2
            t15035 = np.cos(phi)
            t15036 = t15035 ** 2
            t15037 = t15035 * t15036
            t15040 = t15037 ** 2
            t15038 = t15036 ** 2
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((-4*1j) * (2 * phi1 - phi2)) * np.sqrt(0.13566e5) * t15043 ** 2 * (324 * t15036 - 344 * t15037 + 836 * t15040 - 9 + (-1270 + 759 * t15038) * t15038 + (1704 * t15038 - 2024 * t15040 + 24) * t15035)

        if Bindx == 2417:
            t15046 = np.cos(phi)
            t15047 = t15046 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (75 * t15046 - 6 + (1265 * t15046 + 627 + 759 * t15047) * t15047) * ((1 + t15046) ** (0.3e1 / 0.2e1)) * np.sqrt(0.399e3) * np.exp((-1*1j) * (8 * phi1 - 5 * phi2)) * ((1 - t15046) ** (0.13e2 / 0.2e1))

        if Bindx == 2418:
            t15051 = np.cos(phi)
            t15052 = t15051 ** 2
            t15054 = t15052 ** 2
            t15058 = t15054 ** 2
            t15053 = t15051 * t15052
            t15056 = t15053 ** 2
            t15055 = t15051 * t15054
            t15050 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-2*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.114e3) * t15050 ** 2 * (-513 * t15052 - 2928 * t15053 + 5094 * t15054 - 12714 * t15056 + 7623 * t15058 + 19 + (3960 + 1771 * t15055) * t15055 + (4368 * t15056 - 7084 * t15058 + 404) * t15051)

        if Bindx == 2419:
            t15061 = np.cos(phi)
            t15062 = t15061 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (3087 * t15061 + 278 + (12397 * t15061 + 9933 + 5313 * t15062) * t15062) * np.sqrt((1 + t15061)) * np.exp((-1*1j) * (8 * phi1 - 7 * phi2)) * ((1 - t15061) ** (0.15e2 / 0.2e1))

        if Bindx == 2420:
            t15065 = np.cos(phi)
            t15066 = t15065 ** 2
            t15068 = t15066 ** 2
            t15069 = t15065 * t15068
            t15074 = t15069 ** 2
            t15072 = t15068 ** 2
            t15067 = t15065 * t15066
            t15070 = t15067 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-8*1j) * (phi1 - phi2)) * (-9422 * t15066 + 15120 * t15067 + 22575 * t15068 - 69216 * t15069 - 87345 * t15072 + 48818 * t15074 + 673 + (20412 + 5313 * t15070) * t15070 + (84384 * t15070 - 2800 * t15072 - 28336 * t15074 - 176) * t15065)

        if Bindx == 2421:
            t15077 = np.cos(phi)
            t15078 = t15077 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (506 * t15078 + 62 + (253 * t15078 + 319) * t15077) * np.sqrt((1 + t15077)) * np.sqrt(0.21e2) * np.exp((-1*1j) * (8 * phi1 - 9 * phi2)) * ((1 - t15077) ** (0.17e2 / 0.2e1))

        if Bindx == 2422:
            t15080 = np.cos(phi)
            t15085 = -1 + t15080
            t15081 = t15085 ** 2
            t15082 = t15081 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-2*1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.154e3) * (1 + t15080) * t15085 * t15082 ** 2 * (29 + (92 + 69 * t15080) * t15080)

        if Bindx == 2423:
            t15086 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (2 + 3 * t15086) * ((1 + t15086) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1771e4) * np.exp((-1*1j) * (8 * phi1 - 11 * phi2)) * ((1 - t15086) ** (0.19e2 / 0.2e1))

        if Bindx == 2424:
            t15088 = np.cos(phi)
            t15093 = -1 + t15088
            t15089 = t15093 ** 2
            t15091 = t15093 * t15089 ** 2
            t15087 = 1 + t15088
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((-4*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.10626e5) * t15091 ** 2 * t15087 ** 2

        if Bindx == 2425:
            t15094 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (7 * phi1 + 12 * phi2)) * np.sqrt(0.10626e5) * ((1 - t15094) ** (0.5e1 / 0.2e1)) * ((1 + t15094) ** (0.19e2 / 0.2e1))

        if Bindx == 2426:
            t15096 = np.cos(phi)
            t15101 = 1 + t15096
            t15097 = t15101 ** 2
            t15098 = t15097 ** 2
            t15095 = -1 + t15096
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 + 11 * phi2)) * np.sqrt(0.1771e4) * t15095 ** 2 * t15101 * t15098 ** 2 * (-7 + 12 * t15096)

        if Bindx == 2427:
            t15102 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (7 * phi1 + 10 * phi2)) * np.sqrt(0.154e3) * ((1 - t15102) ** (0.3e1 / 0.2e1)) * ((1 + t15102) ** (0.17e2 / 0.2e1)) * (43 + (-161 + 138 * t15102) * t15102)

        if Bindx == 2428:
            t15104 = np.cos(phi)
            t15105 = t15104 ** 2
            t15107 = t15105 ** 2
            t15111 = t15107 ** 2
            t15106 = t15104 * t15105
            t15109 = t15106 ** 2
            t15108 = t15104 * t15107
            t15103 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 + 9 * phi2)) * np.sqrt(0.21e2) * t15103 ** 2 * (1764 * t15105 + 3336 * t15106 - 2142 * t15107 - 7728 * t15109 + 9801 * t15111 - 147 + (-10710 + 1012 * t15108) * t15108 + (4704 * t15109 + 5313 * t15111 - 83) * t15104)

        if Bindx == 2429:
            t15114 = np.cos(phi)
            t15115 = t15114 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (7 * phi1 + 8 * phi2)) * np.sqrt((1 - t15114)) * ((1 + t15114) ** (0.15e2 / 0.2e1)) * (-3087 * t15114 + 278 + (-12397 * t15114 + 9933 + 5313 * t15115) * t15115)

        if Bindx == 2430:
            t15118 = np.cos(phi)
            t15119 = t15118 ** 2
            t15121 = t15119 ** 2
            t15122 = t15118 * t15121
            t15127 = t15122 ** 2
            t15125 = t15121 ** 2
            t15120 = t15118 * t15119
            t15123 = t15120 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-7*1j) * (phi1 + phi2)) * (4669 * t15119 - 38745 * t15120 - 57750 * t15121 + 88746 * t15122 - 245565 * t15125 + 78617 * t15127 - 161 + (199962 + 21252 * t15123) * t15123 + (-14994 * t15123 - 125195 * t15125 + 86779 * t15127 + 4433) * t15118)

        if Bindx == 2431:
            t15130 = np.cos(phi)
            t15131 = t15130 ** 2
            t15133 = t15131 ** 2
            t15132 = t15130 * t15131
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.114e3) * ((1 + t15130) ** (0.13e2 / 0.2e1)) * (2780 * t15131 + 16555 * t15133 - 29 + (-10290 + 3542 * t15132) * t15132 + (-12397 * t15133 - 161) * t15130) * ((1 - t15130) ** (-0.1e1 / 0.2e1))

        if Bindx == 2432:
            t15137 = np.cos(phi)
            t15138 = t15137 ** 2
            t15140 = t15138 ** 2
            t15144 = t15140 ** 2
            t15139 = t15137 * t15138
            t15142 = t15139 ** 2
            t15141 = t15137 * t15140
            t15136 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.399e3) * t15136 ** 2 * (-1080 * t15138 - 500 * t15139 + 6010 * t15140 - 10140 * t15142 + 2915 * t15144 + 27 + (5138 + 3036 * t15141) * t15141 + (-12740 * t15142 + 8855 * t15144 + 15) * t15137)

        if Bindx == 2433:
            t15147 = np.cos(phi)
            t15148 = t15147 ** 2
            t15150 = t15148 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (30 * t15148 - 1265 * t15150 + 3 + (550 * t15148 + 759 * t15150 - 45) * t15147) * ((1 + t15147) ** (0.11e2 / 0.2e1)) * np.sqrt(0.13566e5) * np.exp((-1*1j) * (7 * phi1 + 4 * phi2)) * ((1 - t15147) ** (0.3e1 / 0.2e1))

        if Bindx == 2434:
            t15162 = np.sin(phi)
            t15160 = t15162 ** 2
            t15152 = np.cos(phi)
            t15153 = t15152 ** 2
            t15154 = t15152 * t15153
            t15157 = t15154 ** 2
            t15155 = t15153 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.13566e5) * t15160 ** 2 * (47 * t15153 + 609 * t15154 - 539 * t15157 - 1 + (-135 + 1012 * t15155) * t15155 + (-1953 * t15155 + 1771 * t15157 - 43) * t15152)

        if Bindx == 2435:
            t15163 = np.cos(phi)
            t15164 = t15163 ** 2
            t15166 = t15164 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (270 * t15164 - 1265 * t15166 - 5 + (-220 * t15164 + 1518 * t15166 - 10) * t15163) * ((1 + t15163) ** (0.9e1 / 0.2e1)) * np.sqrt(0.2261e4) * np.exp((-1*1j) * (7 * phi1 + 2 * phi2)) * ((1 - t15163) ** (0.5e1 / 0.2e1))

        if Bindx == 2436:
            t15177 = np.sin(phi)
            t15174 = t15177 ** 2
            t15175 = t15177 * t15174
            t15168 = np.cos(phi)
            t15169 = t15168 ** 2
            t15171 = t15169 ** 2
            t15170 = t15168 * t15169
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 + phi2)) * np.sqrt(0.7106e4) * t15175 ** 2 * (250 * t15169 - 1505 * t15171 - 5 + (-490 + 1932 * t15170) * t15170 + (1127 * t15171 + 35) * t15168)

        if Bindx == 2437:
            t15178 = np.cos(phi)
            t15179 = t15178 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (5 + (-70 + 161 * t15179) * t15179) * t15178 * ((1 + t15178) ** (0.7e1 / 0.2e1)) * np.sqrt(0.277134e6) * np.exp((-7*1j) * phi1) * ((1 - t15178) ** (0.7e1 / 0.2e1))

        if Bindx == 2438:
            t15190 = np.sin(phi)
            t15187 = t15190 ** 2
            t15188 = t15190 * t15187
            t15181 = np.cos(phi)
            t15182 = t15181 ** 2
            t15184 = t15182 ** 2
            t15183 = t15181 * t15182
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 - phi2)) * np.sqrt(0.7106e4) * t15188 ** 2 * (250 * t15182 - 1505 * t15184 - 5 + (490 + 1932 * t15183) * t15183 + (-1127 * t15184 - 35) * t15181)

        if Bindx == 2439:
            t15191 = np.cos(phi)
            t15192 = t15191 ** 2
            t15194 = t15192 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (-270 * t15192 + 1265 * t15194 + 5 + (-220 * t15192 + 1518 * t15194 - 10) * t15191) * ((1 + t15191) ** (0.5e1 / 0.2e1)) * np.sqrt(0.2261e4) * np.exp((-1*1j) * (7 * phi1 - 2 * phi2)) * ((1 - t15191) ** (0.9e1 / 0.2e1))

        if Bindx == 2440:
            t15206 = np.sin(phi)
            t15204 = t15206 ** 2
            t15196 = np.cos(phi)
            t15197 = t15196 ** 2
            t15198 = t15196 * t15197
            t15201 = t15198 ** 2
            t15199 = t15197 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.13566e5) * t15204 ** 2 * (47 * t15197 - 609 * t15198 - 539 * t15201 - 1 + (-135 + 1012 * t15199) * t15199 + (1953 * t15199 - 1771 * t15201 + 43) * t15196)

        if Bindx == 2441:
            t15207 = np.cos(phi)
            t15208 = t15207 ** 2
            t15210 = t15208 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (-30 * t15208 + 1265 * t15210 - 3 + (550 * t15208 + 759 * t15210 - 45) * t15207) * ((1 + t15207) ** (0.3e1 / 0.2e1)) * np.sqrt(0.13566e5) * np.exp((-1*1j) * (7 * phi1 - 4 * phi2)) * ((1 - t15207) ** (0.11e2 / 0.2e1))

        if Bindx == 2442:
            t15213 = np.cos(phi)
            t15214 = t15213 ** 2
            t15216 = t15214 ** 2
            t15220 = t15216 ** 2
            t15215 = t15213 * t15214
            t15218 = t15215 ** 2
            t15217 = t15213 * t15216
            t15212 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.399e3) * t15212 ** 2 * (-1080 * t15214 + 500 * t15215 + 6010 * t15216 - 10140 * t15218 + 2915 * t15220 + 27 + (-5138 + 3036 * t15217) * t15217 + (12740 * t15218 - 8855 * t15220 - 15) * t15213)

        if Bindx == 2443:
            t15223 = np.cos(phi)
            t15224 = t15223 ** 2
            t15226 = t15224 ** 2
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * (2590 * t15224 + 8855 * t15226 - 29 + (7700 * t15224 + 3542 * t15226 + 190) * t15223) * np.sqrt((1 + t15223)) * np.sqrt(0.114e3) * np.exp((-1*1j) * (7 * phi1 - 6 * phi2)) * ((1 - t15223) ** (0.13e2 / 0.2e1))

        if Bindx == 2444:
            t15228 = np.cos(phi)
            t15229 = t15228 ** 2
            t15231 = t15229 ** 2
            t15232 = t15228 * t15231
            t15237 = t15232 ** 2
            t15235 = t15231 ** 2
            t15230 = t15228 * t15229
            t15233 = t15230 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-7*1j) * (phi1 - phi2)) * (4669 * t15229 + 38745 * t15230 - 57750 * t15231 - 88746 * t15232 - 245565 * t15235 + 78617 * t15237 - 161 + (199962 + 21252 * t15233) * t15233 + (14994 * t15233 + 125195 * t15235 - 86779 * t15237 - 4433) * t15228)

        if Bindx == 2445:
            t15240 = np.cos(phi)
            t15241 = t15240 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (3087 * t15240 + 278 + (12397 * t15240 + 9933 + 5313 * t15241) * t15241) * np.sqrt((1 + t15240)) * np.exp((-1*1j) * (7 * phi1 - 8 * phi2)) * ((1 - t15240) ** (0.15e2 / 0.2e1))

        if Bindx == 2446:
            t15245 = np.cos(phi)
            t15246 = t15245 ** 2
            t15248 = t15246 ** 2
            t15252 = t15248 ** 2
            t15247 = t15245 * t15246
            t15250 = t15247 ** 2
            t15249 = t15245 * t15248
            t15244 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 - 9 * phi2)) * np.sqrt(0.21e2) * t15244 ** 2 * (1764 * t15246 - 3336 * t15247 - 2142 * t15248 - 7728 * t15250 + 9801 * t15252 - 147 + (10710 + 1012 * t15249) * t15249 + (-4704 * t15250 - 5313 * t15252 + 83) * t15245)

        if Bindx == 2447:
            t15255 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * (43 + (161 + 138 * t15255) * t15255) * ((1 + t15255) ** (0.3e1 / 0.2e1)) * np.sqrt(0.154e3) * np.exp((-1*1j) * (7 * phi1 - 10 * phi2)) * ((1 - t15255) ** (0.17e2 / 0.2e1))

        if Bindx == 2448:
            t15257 = np.cos(phi)
            t15262 = -1 + t15257
            t15258 = t15262 ** 2
            t15259 = t15258 ** 2
            t15256 = 1 + t15257
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (7 * phi1 - 11 * phi2)) * np.sqrt(0.1771e4) * t15256 ** 2 * t15262 * t15259 ** 2 * (7 + 12 * t15257)

        if Bindx == 2449:
            t15263 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (7 * phi1 - 12 * phi2)) * np.sqrt(0.10626e5) * ((1 - t15263) ** (0.19e2 / 0.2e1)) * ((1 + t15263) ** (0.5e1 / 0.2e1))

        if Bindx == 2450:
            t15264 = np.cos(phi)
            t15272 = -1 + t15264
            t15271 = 1 + t15264
            t15267 = t15271 ** 2
            t15268 = t15267 ** 2
            t15265 = t15272 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-6*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.33649e5) * t15272 * t15265 * t15271 * t15268 ** 2

        if Bindx == 2451:
            t15273 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (6 * phi1 + 11 * phi2)) * np.sqrt(0.201894e6) * ((1 - t15273) ** (0.5e1 / 0.2e1)) * ((1 + t15273) ** (0.17e2 / 0.2e1)) * (2 * t15273 - 1)

        if Bindx == 2452:
            t15284 = np.sin(phi)
            t15282 = t15284 ** 2
            t15274 = np.cos(phi)
            t15275 = t15274 ** 2
            t15276 = t15274 * t15275
            t15279 = t15276 ** 2
            t15277 = t15275 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.4389e4) * t15282 ** 2 * (-40 * t15275 - 107 * t15276 + 212 * t15279 + 5 + (-40 + 23 * t15277) * t15277 + (145 * t15277 + 115 * t15279 + 7) * t15274)

        if Bindx == 2453:
            t15285 = np.cos(phi)
            t15286 = t15285 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((-3*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.266e3) * ((1 - t15285) ** (0.3e1 / 0.2e1)) * ((1 + t15285) ** (0.15e2 / 0.2e1)) * (-759 * t15286 - 37 + (506 * t15286 + 330) * t15285)

        if Bindx == 2454:
            t15289 = np.cos(phi)
            t15290 = t15289 ** 2
            t15292 = t15290 ** 2
            t15296 = t15292 ** 2
            t15291 = t15289 * t15290
            t15294 = t15291 ** 2
            t15293 = t15289 * t15292
            t15288 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-2*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.114e3) * t15288 ** 2 * (-513 * t15290 + 2928 * t15291 + 5094 * t15292 - 12714 * t15294 + 7623 * t15296 + 19 + (-3960 + 1771 * t15293) * t15293 + (-4368 * t15294 + 7084 * t15296 - 404) * t15289)

        if Bindx == 2455:
            t15299 = np.cos(phi)
            t15300 = t15299 ** 2
            t15302 = t15300 ** 2
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.114e3) * np.sqrt((1 - t15299)) * ((1 + t15299) ** (0.13e2 / 0.2e1)) * (-2590 * t15300 - 8855 * t15302 + 29 + (7700 * t15300 + 3542 * t15302 + 190) * t15299)

        if Bindx == 2456:
            t15304 = np.cos(phi)
            t15305 = t15304 ** 2
            t15307 = t15305 ** 2
            t15308 = t15304 * t15307
            t15313 = t15308 ** 2
            t15311 = t15307 ** 2
            t15306 = t15304 * t15305
            t15309 = t15306 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-6*1j) * (phi1 + phi2)) * (11298 * t15305 + 2695 * t15306 - 75285 * t15307 - 49266 * t15308 - 158175 * t15311 + 8778 * t15313 - 269 + (180516 + 33649 * t15309) * t15309 + (178182 * t15309 - 232085 * t15311 + 100947 * t15313 + 39) * t15304)

        if Bindx == 2457:
            t15316 = np.cos(phi)
            t15317 = t15316 ** 2
            t15318 = t15316 * t15317
            t15321 = t15318 ** 2
            t15319 = t15317 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4*1j) * np.exp((-1*1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.14e2) * ((1 + t15316) ** (0.11e2 / 0.2e1)) * (1653 * t15317 + 3610 * t15318 - 24605 * t15319 - 33649 * t15321 + 25 + (43890 * t15319 + 9614 * t15321 - 538) * t15316) * ((1 - t15316) ** (-0.1e1 / 0.2e1))

        if Bindx == 2458:
            t15324 = np.cos(phi)
            t15325 = t15324 ** 2
            t15327 = t15325 ** 2
            t15331 = t15327 ** 2
            t15326 = t15324 * t15325
            t15329 = t15326 ** 2
            t15328 = t15324 * t15327
            t15323 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((-2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.119e3) * t15323 ** 2 * (-357 * t15325 - 2328 * t15326 + 2078 * t15327 - 1634 * t15329 - 4389 * t15331 + 7 + (10260 + 4807 * t15328) * t15328 + (-17176 * t15329 + 9614 * t15331 + 142) * t15324)

        if Bindx == 2459:
            t15334 = np.cos(phi)
            t15335 = t15334 ** 2
            t15337 = t15335 ** 2
            t15336 = t15334 * t15335
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-1140 * t15335 + 3135 * t15337 + 23 + (3230 + 9614 * t15336) * t15336 + (-14421 * t15337 - 57) * t15334) * ((1 + t15334) ** (0.9e1 / 0.2e1)) * np.sqrt(0.119e3) * np.exp((-3*1j) * (2 * phi1 + phi2)) * ((1 - t15334) ** (0.3e1 / 0.2e1))

        if Bindx == 2460:
            t15350 = np.sin(phi)
            t15348 = t15350 ** 2
            t15340 = np.cos(phi)
            t15341 = t15340 ** 2
            t15342 = t15340 * t15341
            t15345 = t15342 ** 2
            t15343 = t15341 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.714e3) * t15348 ** 2 * (-280 * t15341 + 1425 * t15342 - 5852 * t15345 + 5 + (2280 + 4807 * t15343) * t15343 + (-5187 * t15343 + 4807 * t15345 - 85) * t15340)

        if Bindx == 2461:
            t15351 = np.cos(phi)
            t15352 = t15351 ** 2
            t15354 = t15352 ** 2
            t15353 = t15351 * t15352
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (380 * t15352 - 3325 * t15354 - 5 + (1330 + 6118 * t15353) * t15353 + (-3059 * t15354 - 95) * t15351) * ((1 + t15351) ** (0.7e1 / 0.2e1)) * np.sqrt(0.561e3) * np.exp((-1*1j) * (6 * phi1 + phi2)) * ((1 - t15351) ** (0.5e1 / 0.2e1))

        if Bindx == 2462:
            t15364 = np.sin(phi)
            t15361 = t15364 ** 2
            t15362 = t15364 * t15361
            t15357 = np.cos(phi)
            t15358 = t15357 ** 2
            t15359 = t15358 ** 2
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-6*1j) * phi1) * np.sqrt(0.2431e4) * t15362 ** 2 * (-1995 * t15359 - 5 + (3059 * t15359 + 285) * t15358)

        if Bindx == 2463:
            t15365 = np.cos(phi)
            t15366 = t15365 ** 2
            t15368 = t15366 ** 2
            t15367 = t15365 * t15366
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (380 * t15366 - 3325 * t15368 - 5 + (-1330 + 6118 * t15367) * t15367 + (3059 * t15368 + 95) * t15365) * ((1 + t15365) ** (0.5e1 / 0.2e1)) * np.sqrt(0.561e3) * np.exp((-1*1j) * (6 * phi1 - phi2)) * ((1 - t15365) ** (0.7e1 / 0.2e1))

        if Bindx == 2464:
            t15381 = np.sin(phi)
            t15379 = t15381 ** 2
            t15371 = np.cos(phi)
            t15372 = t15371 ** 2
            t15373 = t15371 * t15372
            t15376 = t15373 ** 2
            t15374 = t15372 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.714e3) * t15379 ** 2 * (-280 * t15372 - 1425 * t15373 - 5852 * t15376 + 5 + (2280 + 4807 * t15374) * t15374 + (5187 * t15374 - 4807 * t15376 + 85) * t15371)

        if Bindx == 2465:
            t15382 = np.cos(phi)
            t15383 = t15382 ** 2
            t15385 = t15383 ** 2
            t15384 = t15382 * t15383
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (-1140 * t15383 + 3135 * t15385 + 23 + (-3230 + 9614 * t15384) * t15384 + (14421 * t15385 + 57) * t15382) * ((1 + t15382) ** (0.3e1 / 0.2e1)) * np.sqrt(0.119e3) * np.exp((-3*1j) * (2 * phi1 - phi2)) * ((1 - t15382) ** (0.9e1 / 0.2e1))

        if Bindx == 2466:
            t15389 = np.cos(phi)
            t15390 = t15389 ** 2
            t15392 = t15390 ** 2
            t15396 = t15392 ** 2
            t15391 = t15389 * t15390
            t15394 = t15391 ** 2
            t15393 = t15389 * t15392
            t15388 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((-2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.119e3) * t15388 ** 2 * (-357 * t15390 + 2328 * t15391 + 2078 * t15392 - 1634 * t15394 - 4389 * t15396 + 7 + (-10260 + 4807 * t15393) * t15393 + (17176 * t15394 - 9614 * t15396 - 142) * t15389)

        if Bindx == 2467:
            t15399 = np.cos(phi)
            t15400 = t15399 ** 2
            t15402 = t15400 ** 2
            t15401 = t15399 * t15400
            tfunc[..., c] = (0.75e2 / 0.2048e4*1j) * (-1140 * t15400 + 19855 * t15402 - 25 + (4750 + 9614 * t15401) * t15401 + (24035 * t15402 - 513) * t15399) * np.sqrt((1 + t15399)) * np.sqrt(0.14e2) * np.exp((-1*1j) * (6 * phi1 - 5 * phi2)) * ((1 - t15399) ** (0.11e2 / 0.2e1))

        if Bindx == 2468:
            t15405 = np.cos(phi)
            t15406 = t15405 ** 2
            t15408 = t15406 ** 2
            t15409 = t15405 * t15408
            t15414 = t15409 ** 2
            t15412 = t15408 ** 2
            t15407 = t15405 * t15406
            t15410 = t15407 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-6*1j) * (phi1 - phi2)) * (11298 * t15406 - 2695 * t15407 - 75285 * t15408 + 49266 * t15409 - 158175 * t15412 + 8778 * t15414 - 269 + (180516 + 33649 * t15410) * t15410 + (-178182 * t15410 + 232085 * t15412 - 100947 * t15414 - 39) * t15405)

        if Bindx == 2469:
            t15417 = np.cos(phi)
            t15418 = t15417 ** 2
            t15420 = t15418 ** 2
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * (2590 * t15418 + 8855 * t15420 - 29 + (7700 * t15418 + 3542 * t15420 + 190) * t15417) * np.sqrt((1 + t15417)) * np.sqrt(0.114e3) * np.exp((-1*1j) * (6 * phi1 - 7 * phi2)) * ((1 - t15417) ** (0.13e2 / 0.2e1))

        if Bindx == 2470:
            t15423 = np.cos(phi)
            t15424 = t15423 ** 2
            t15426 = t15424 ** 2
            t15430 = t15426 ** 2
            t15425 = t15423 * t15424
            t15428 = t15425 ** 2
            t15427 = t15423 * t15426
            t15422 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-2*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.114e3) * t15422 ** 2 * (-513 * t15424 - 2928 * t15425 + 5094 * t15426 - 12714 * t15428 + 7623 * t15430 + 19 + (3960 + 1771 * t15427) * t15427 + (4368 * t15428 - 7084 * t15430 + 404) * t15423)

        if Bindx == 2471:
            t15433 = np.cos(phi)
            t15434 = t15433 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (759 * t15434 + 37 + (506 * t15434 + 330) * t15433) * ((1 + t15433) ** (0.3e1 / 0.2e1)) * np.sqrt(0.266e3) * np.exp((-3*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t15433) ** (0.15e2 / 0.2e1))

        if Bindx == 2472:
            t15446 = np.sin(phi)
            t15444 = t15446 ** 2
            t15436 = np.cos(phi)
            t15437 = t15436 ** 2
            t15438 = t15436 * t15437
            t15441 = t15438 ** 2
            t15439 = t15437 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.4389e4) * t15444 ** 2 * (-40 * t15437 + 107 * t15438 + 212 * t15441 + 5 + (-40 + 23 * t15439) * t15439 + (-145 * t15439 - 115 * t15441 - 7) * t15436)

        if Bindx == 2473:
            t15447 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * (1 + 2 * t15447) * ((1 + t15447) ** (0.5e1 / 0.2e1)) * np.sqrt(0.201894e6) * np.exp((-1*1j) * (6 * phi1 - 11 * phi2)) * ((1 - t15447) ** (0.17e2 / 0.2e1))

        if Bindx == 2474:
            t15448 = np.cos(phi)
            t15456 = -1 + t15448
            t15455 = 1 + t15448
            t15453 = t15455 ** 2
            t15449 = t15456 ** 2
            t15450 = t15449 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-6*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.33649e5) * t15456 * t15450 ** 2 * t15455 * t15453

        if Bindx == 2475:
            t15457 = np.cos(phi)
            tfunc[..., c] = (0.75e2 / 0.2048e4*1j) * np.exp((-1*1j) * (5 * phi1 + 12 * phi2)) * np.sqrt(0.9614e4) * ((1 - t15457) ** (0.7e1 / 0.2e1)) * ((1 + t15457) ** (0.17e2 / 0.2e1))

        if Bindx == 2476:
            t15458 = np.cos(phi)
            t15465 = -1 + t15458
            t15464 = 1 + t15458
            t15461 = t15464 ** 2
            t15462 = t15461 ** 2
            t15459 = t15465 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 + 11 * phi2)) * np.sqrt(0.14421e5) * t15465 * t15459 * t15462 ** 2 * (-5 + 12 * t15458)

        if Bindx == 2477:
            t15466 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((-5*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.1254e4) * ((1 - t15466) ** (0.5e1 / 0.2e1)) * ((1 + t15466) ** (0.15e2 / 0.2e1)) * (19 + (-115 + 138 * t15466) * t15466)

        if Bindx == 2478:
            t15477 = np.sin(phi)
            t15475 = t15477 ** 2
            t15467 = np.cos(phi)
            t15468 = t15467 ** 2
            t15469 = t15467 * t15468
            t15472 = t15469 ** 2
            t15470 = t15468 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 + 9 * phi2)) * np.sqrt(0.19e2) * t15475 ** 2 * (575 * t15468 - 1383 * t15469 + 4213 * t15472 - 25 + (-3535 + 1012 * t15470) * t15470 + (-465 * t15470 + 3795 * t15472 + 293) * t15467)

        if Bindx == 2479:
            t15478 = np.cos(phi)
            t15479 = t15478 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (5 * phi1 + 8 * phi2)) * np.sqrt(0.399e3) * ((1 - t15478) ** (0.3e1 / 0.2e1)) * ((1 + t15478) ** (0.13e2 / 0.2e1)) * (-75 * t15478 - 6 + (-1265 * t15478 + 627 + 759 * t15479) * t15479)

        if Bindx == 2480:
            t15483 = np.cos(phi)
            t15484 = t15483 ** 2
            t15486 = t15484 ** 2
            t15490 = t15486 ** 2
            t15485 = t15483 * t15484
            t15488 = t15485 ** 2
            t15487 = t15483 * t15486
            t15482 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.399e3) * t15482 ** 2 * (-1080 * t15484 - 500 * t15485 + 6010 * t15486 - 10140 * t15488 + 2915 * t15490 + 27 + (5138 + 3036 * t15487) * t15487 + (-12740 * t15488 + 8855 * t15490 + 15) * t15483)

        if Bindx == 2481:
            t15493 = np.cos(phi)
            t15494 = t15493 ** 2
            t15496 = t15494 ** 2
            t15495 = t15493 * t15494
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * np.exp((-1*1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t15493)) * ((1 + t15493) ** (0.11e2 / 0.2e1)) * (-1140 * t15494 + 19855 * t15496 - 25 + (-4750 + 9614 * t15495) * t15495 + (-24035 * t15496 + 513) * t15493)

        if Bindx == 2482:
            t15499 = np.cos(phi)
            t15500 = t15499 ** 2
            t15502 = t15500 ** 2
            t15503 = t15499 * t15502
            t15508 = t15503 ** 2
            t15506 = t15502 ** 2
            t15501 = t15499 * t15500
            t15504 = t15501 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-5*1j) * (phi1 + phi2)) * (13939 * t15500 + 79585 * t15501 - 98650 * t15502 - 419402 * t15503 + 25365 * t15506 - 292809 * t15508 - 263 + (180390 + 173052 * t15504) * t15504 + (949506 * t15504 - 964725 * t15506 + 360525 * t15508 - 4465) * t15499)

        if Bindx == 2483:
            t15511 = np.cos(phi)
            t15512 = t15511 ** 2
            t15513 = t15511 * t15512
            t15516 = t15513 ** 2
            t15514 = t15512 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.34e2) * ((1 + t15511) ** (0.9e1 / 0.2e1)) * (-3150 * t15512 + 21546 * t15513 + 166782 * t15516 + 85 + (-23940 + 43263 * t15514) * t15514 + (-59850 * t15514 - 144210 * t15516 - 526) * t15511) * ((1 - t15511) ** (-0.1e1 / 0.2e1))

        if Bindx == 2484:
            t15520 = np.cos(phi)
            t15521 = t15520 ** 2
            t15523 = t15521 ** 2
            t15527 = t15523 ** 2
            t15522 = t15520 * t15521
            t15525 = t15522 ** 2
            t15524 = t15520 * t15523
            t15519 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.34e2) * t15519 ** 2 * (540 * t15521 - 5560 * t15522 - 5530 * t15523 + 21280 * t15525 - 34485 * t15527 - 9 + (26334 + 19228 * t15524) * t15524 + (-44080 * t15525 + 24035 * t15527 + 295) * t15520)

        if Bindx == 2485:
            t15530 = np.cos(phi)
            t15531 = t15530 ** 2
            t15532 = t15530 * t15531
            t15535 = t15532 ** 2
            t15533 = t15531 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-1995 * t15531 - 1330 * t15532 + 17955 * t15533 - 33649 * t15535 + 25 + (-8778 * t15533 + 28842 * t15535 + 210) * t15530) * ((1 + t15530) ** (0.7e1 / 0.2e1)) * np.sqrt(0.51e2) * np.exp((-1*1j) * (5 * phi1 + 2 * phi2)) * ((1 - t15530) ** (0.3e1 / 0.2e1))

        if Bindx == 2486:
            t15547 = np.sin(phi)
            t15545 = t15547 ** 2
            t15537 = np.cos(phi)
            t15538 = t15537 ** 2
            t15539 = t15537 * t15538
            t15542 = t15539 ** 2
            t15540 = t15538 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 + phi2)) * np.sqrt(0.7854e4) * t15545 ** 2 * (-315 * t15538 + 475 * t15539 - 7049 * t15542 + 5 + (2755 + 5244 * t15540) * t15540 + (-1995 * t15540 + 2185 * t15542 - 25) * t15537)

        if Bindx == 2487:
            t15548 = np.cos(phi)
            t15549 = t15548 ** 2
            t15550 = t15549 ** 2
            tfunc[..., c] = (-0.75e2 / 0.1024e4*1j) * (-399 * t15550 - 5 + (437 * t15550 + 95) * t15549) * t15548 * ((1 + t15548) ** (0.5e1 / 0.2e1)) * np.sqrt(0.34034e5) * np.exp((-5*1j) * phi1) * ((1 - t15548) ** (0.5e1 / 0.2e1))

        if Bindx == 2488:
            t15562 = np.sin(phi)
            t15560 = t15562 ** 2
            t15552 = np.cos(phi)
            t15553 = t15552 ** 2
            t15554 = t15552 * t15553
            t15557 = t15554 ** 2
            t15555 = t15553 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 - phi2)) * np.sqrt(0.7854e4) * t15560 ** 2 * (-315 * t15553 - 475 * t15554 - 7049 * t15557 + 5 + (2755 + 5244 * t15555) * t15555 + (1995 * t15555 - 2185 * t15557 + 25) * t15552)

        if Bindx == 2489:
            t15563 = np.cos(phi)
            t15564 = t15563 ** 2
            t15565 = t15563 * t15564
            t15568 = t15565 ** 2
            t15566 = t15564 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (1995 * t15564 - 1330 * t15565 - 17955 * t15566 + 33649 * t15568 - 25 + (-8778 * t15566 + 28842 * t15568 + 210) * t15563) * ((1 + t15563) ** (0.3e1 / 0.2e1)) * np.sqrt(0.51e2) * np.exp((-1*1j) * (5 * phi1 - 2 * phi2)) * ((1 - t15563) ** (0.7e1 / 0.2e1))

        if Bindx == 2490:
            t15571 = np.cos(phi)
            t15572 = t15571 ** 2
            t15574 = t15572 ** 2
            t15578 = t15574 ** 2
            t15573 = t15571 * t15572
            t15576 = t15573 ** 2
            t15575 = t15571 * t15574
            t15570 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.34e2) * t15570 ** 2 * (540 * t15572 + 5560 * t15573 - 5530 * t15574 + 21280 * t15576 - 34485 * t15578 - 9 + (-26334 + 19228 * t15575) * t15575 + (44080 * t15576 - 24035 * t15578 - 295) * t15571)

        if Bindx == 2491:
            t15581 = np.cos(phi)
            t15582 = t15581 ** 2
            t15583 = t15581 * t15582
            t15586 = t15583 ** 2
            t15584 = t15582 ** 2
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * (-3591 * t15582 - 17955 * t15583 - 5985 * t15584 + 100947 * t15586 + 85 + (65835 * t15584 + 43263 * t15586 + 441) * t15581) * np.sqrt((1 + t15581)) * np.sqrt(0.34e2) * np.exp((-1*1j) * (5 * phi1 - 4 * phi2)) * ((1 - t15581) ** (0.9e1 / 0.2e1))

        if Bindx == 2492:
            t15588 = np.cos(phi)
            t15589 = t15588 ** 2
            t15591 = t15589 ** 2
            t15592 = t15588 * t15591
            t15597 = t15592 ** 2
            t15595 = t15591 ** 2
            t15590 = t15588 * t15589
            t15593 = t15590 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-5*1j) * (phi1 - phi2)) * (13939 * t15589 - 79585 * t15590 - 98650 * t15591 + 419402 * t15592 + 25365 * t15595 - 292809 * t15597 - 263 + (180390 + 173052 * t15593) * t15593 + (-949506 * t15593 + 964725 * t15595 - 360525 * t15597 + 4465) * t15588)

        if Bindx == 2493:
            t15600 = np.cos(phi)
            t15601 = t15600 ** 2
            t15603 = t15601 ** 2
            t15602 = t15600 * t15601
            tfunc[..., c] = (0.75e2 / 0.2048e4*1j) * (-1140 * t15601 + 19855 * t15603 - 25 + (4750 + 9614 * t15602) * t15602 + (24035 * t15603 - 513) * t15600) * np.sqrt((1 + t15600)) * np.sqrt(0.14e2) * np.exp((-1*1j) * (5 * phi1 - 6 * phi2)) * ((1 - t15600) ** (0.11e2 / 0.2e1))

        if Bindx == 2494:
            t15607 = np.cos(phi)
            t15608 = t15607 ** 2
            t15610 = t15608 ** 2
            t15614 = t15610 ** 2
            t15609 = t15607 * t15608
            t15612 = t15609 ** 2
            t15611 = t15607 * t15610
            t15606 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.399e3) * t15606 ** 2 * (-1080 * t15608 + 500 * t15609 + 6010 * t15610 - 10140 * t15612 + 2915 * t15614 + 27 + (-5138 + 3036 * t15611) * t15611 + (12740 * t15612 - 8855 * t15614 - 15) * t15607)

        if Bindx == 2495:
            t15617 = np.cos(phi)
            t15618 = t15617 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (75 * t15617 - 6 + (1265 * t15617 + 627 + 759 * t15618) * t15618) * ((1 + t15617) ** (0.3e1 / 0.2e1)) * np.sqrt(0.399e3) * np.exp((-1*1j) * (5 * phi1 - 8 * phi2)) * ((1 - t15617) ** (0.13e2 / 0.2e1))

        if Bindx == 2496:
            t15631 = np.sin(phi)
            t15629 = t15631 ** 2
            t15621 = np.cos(phi)
            t15622 = t15621 ** 2
            t15623 = t15621 * t15622
            t15626 = t15623 ** 2
            t15624 = t15622 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 - 9 * phi2)) * np.sqrt(0.19e2) * t15629 ** 2 * (575 * t15622 + 1383 * t15623 + 4213 * t15626 - 25 + (-3535 + 1012 * t15624) * t15624 + (465 * t15624 - 3795 * t15626 - 293) * t15621)

        if Bindx == 2497:
            t15632 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (19 + (115 + 138 * t15632) * t15632) * ((1 + t15632) ** (0.5e1 / 0.2e1)) * np.sqrt(0.1254e4) * np.exp((-5*1j) * (phi1 - 2 * phi2)) * ((1 - t15632) ** (0.15e2 / 0.2e1))

        if Bindx == 2498:
            t15642 = np.sin(phi)
            t15639 = t15642 ** 2
            t15640 = t15642 * t15639
            t15633 = np.cos(phi)
            t15634 = t15633 ** 2
            t15636 = t15634 ** 2
            t15635 = t15633 * t15634
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (5 * phi1 - 11 * phi2)) * np.sqrt(0.14421e5) * t15640 ** 2 * (10 * t15634 + 95 * t15636 - 5 + (-70 + 12 * t15635) * t15635 + (-55 * t15636 + 13) * t15633)

        if Bindx == 2499:
            t15643 = np.cos(phi)
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * np.exp((-1*1j) * (5 * phi1 - 12 * phi2)) * np.sqrt(0.9614e4) * ((1 - t15643) ** (0.17e2 / 0.2e1)) * ((1 + t15643) ** (0.7e1 / 0.2e1))

        if Bindx == 2500:
            t15644 = np.cos(phi)
            t15651 = -1 + t15644
            t15650 = 1 + t15644
            t15647 = t15650 ** 2
            t15648 = t15647 ** 2
            t15645 = t15651 ** 2
            tfunc[..., c] = (0.75e2 / 0.4096e4) * np.exp((-4*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.81719e5) * t15645 ** 2 * t15648 ** 2

        if Bindx == 2501:
            t15652 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (4 * phi1 + 11 * phi2)) * np.sqrt(0.490314e6) * ((1 - t15652) ** (0.7e1 / 0.2e1)) * ((1 + t15652) ** (0.15e2 / 0.2e1)) * (-1 + 3 * t15652)

        if Bindx == 2502:
            t15662 = np.sin(phi)
            t15659 = t15662 ** 2
            t15660 = t15662 * t15659
            t15653 = np.cos(phi)
            t15654 = t15653 ** 2
            t15656 = t15654 ** 2
            t15655 = t15653 * t15654
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-2*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.10659e5) * t15660 ** 2 * (-85 * t15654 + 235 * t15656 + 5 + (20 + 69 * t15655) * t15655 + (230 * t15656 - 26) * t15653)

        if Bindx == 2503:
            t15663 = np.cos(phi)
            t15664 = t15663 ** 2
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * np.exp((-1*1j) * (4 * phi1 + 9 * phi2)) * np.sqrt(0.646e3) * ((1 - t15663) ** (0.5e1 / 0.2e1)) * ((1 + t15663) ** (0.13e2 / 0.2e1)) * (-253 * t15664 + 1 + (253 * t15664 + 55) * t15663)

        if Bindx == 2504:
            t15676 = np.sin(phi)
            t15674 = t15676 ** 2
            t15666 = np.cos(phi)
            t15667 = t15666 ** 2
            t15668 = t15666 * t15667
            t15671 = t15668 ** 2
            t15669 = t15667 ** 2
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((-4*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.13566e5) * t15674 ** 2 * (324 * t15667 + 344 * t15668 + 836 * t15671 - 9 + (-1270 + 759 * t15669) * t15669 + (-1704 * t15669 + 2024 * t15671 - 24) * t15666)

        if Bindx == 2505:
            t15677 = np.cos(phi)
            t15678 = t15677 ** 2
            t15680 = t15678 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (4 * phi1 + 7 * phi2)) * np.sqrt(0.13566e5) * ((1 - t15677) ** (0.3e1 / 0.2e1)) * ((1 + t15677) ** (0.11e2 / 0.2e1)) * (30 * t15678 - 1265 * t15680 + 3 + (550 * t15678 + 759 * t15680 - 45) * t15677)

        if Bindx == 2506:
            t15683 = np.cos(phi)
            t15684 = t15683 ** 2
            t15686 = t15684 ** 2
            t15690 = t15686 ** 2
            t15685 = t15683 * t15684
            t15688 = t15685 ** 2
            t15687 = t15683 * t15686
            t15682 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((-2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.119e3) * t15682 ** 2 * (-357 * t15684 - 2328 * t15685 + 2078 * t15686 - 1634 * t15688 - 4389 * t15690 + 7 + (10260 + 4807 * t15687) * t15687 + (-17176 * t15688 + 9614 * t15690 + 142) * t15683)

        if Bindx == 2507:
            t15693 = np.cos(phi)
            t15694 = t15693 ** 2
            t15695 = t15693 * t15694
            t15698 = t15695 ** 2
            t15696 = t15694 ** 2
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((-1*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.34e2) * np.sqrt((1 - t15693)) * ((1 + t15693) ** (0.9e1 / 0.2e1)) * (3591 * t15694 - 17955 * t15695 + 5985 * t15696 - 100947 * t15698 - 85 + (65835 * t15696 + 43263 * t15698 + 441) * t15693)

        if Bindx == 2508:
            t15700 = np.cos(phi)
            t15701 = t15700 ** 2
            t15703 = t15701 ** 2
            t15704 = t15700 * t15703
            t15709 = t15704 ** 2
            t15707 = t15703 ** 2
            t15702 = t15700 * t15701
            t15705 = t15702 ** 2
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((-4*1j) * (phi1 + phi2)) * (-14818 * t15701 + 214340 * t15702 + 174625 * t15703 - 1193944 * t15704 + 1884705 * t15707 - 1939938 * t15709 + 239 + (-838236 + 735471 * t15705) * t15705 + (2705448 * t15705 - 2693820 * t15707 + 980628 * t15709 - 10604) * t15700)

        if Bindx == 2509:
            t15712 = np.cos(phi)
            t15713 = t15712 ** 2
            t15715 = t15713 ** 2
            t15719 = t15715 ** 2
            t15714 = t15712 * t15713
            t15717 = t15714 ** 2
            tfunc[..., c] = (0.75e2 / 0.1024e4*1j) * np.exp((-1*1j) * (4 * phi1 + 3 * phi2)) * ((1 + t15712) ** (0.7e1 / 0.2e1)) * (-5780 * t15713 + 9996 * t15714 + 40698 * t15715 + 27132 * t15717 - 245157 * t15719 + 67 + (-122094 * t15715 + 213180 * t15717 + 81719 * t15719 + 239) * t15712) * ((1 - t15712) ** (-0.1e1 / 0.2e1))

        if Bindx == 2510:
            t15722 = np.cos(phi)
            t15723 = t15722 ** 2
            t15725 = t15723 ** 2
            t15729 = t15725 ** 2
            t15724 = t15722 * t15723
            t15727 = t15724 ** 2
            t15726 = t15722 * t15725
            t15721 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.6e1) * t15721 ** 2 * (10385 * t15723 - 29240 * t15724 - 105910 * t15725 + 366282 * t15727 - 508079 * t15729 - 155 + (153748 + 245157 * t15726) * t15726 + (-281656 * t15727 + 163438 * t15729 + 1390) * t15722)

        if Bindx == 2511:
            t15732 = np.cos(phi)
            t15733 = t15732 ** 2
            t15734 = t15732 * t15733
            t15737 = t15734 ** 2
            t15735 = t15733 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-510 * t15733 - 3230 * t15734 - 22610 * t15737 + 5 + (6460 + 22287 * t15735) * t15735 + (13566 * t15735 - 14858 * t15737 + 170) * t15732) * ((1 + t15732) ** (0.5e1 / 0.2e1)) * np.sqrt(0.231e3) * np.exp((-1*1j) * (4 * phi1 + phi2)) * ((1 - t15732) ** (0.3e1 / 0.2e1))

        if Bindx == 2512:
            t15747 = np.sin(phi)
            t15745 = t15747 ** 2
            t15740 = np.cos(phi)
            t15741 = t15740 ** 2
            t15742 = t15741 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4) * np.exp((-4*1j) * phi1) * np.sqrt(0.1001e4) * t15745 ** 2 * (-340 * t15741 + 5 + (-9044 * t15741 + 3230 + 7429 * t15742) * t15742)

        if Bindx == 2513:
            t15748 = np.cos(phi)
            t15749 = t15748 ** 2
            t15750 = t15748 * t15749
            t15753 = t15750 ** 2
            t15751 = t15749 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (-510 * t15749 + 3230 * t15750 - 22610 * t15753 + 5 + (6460 + 22287 * t15751) * t15751 + (-13566 * t15751 + 14858 * t15753 - 170) * t15748) * ((1 + t15748) ** (0.3e1 / 0.2e1)) * np.sqrt(0.231e3) * np.exp((-1*1j) * (4 * phi1 - phi2)) * ((1 - t15748) ** (0.5e1 / 0.2e1))

        if Bindx == 2514:
            t15757 = np.cos(phi)
            t15758 = t15757 ** 2
            t15760 = t15758 ** 2
            t15764 = t15760 ** 2
            t15759 = t15757 * t15758
            t15762 = t15759 ** 2
            t15761 = t15757 * t15760
            t15756 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.6e1) * t15756 ** 2 * (10385 * t15758 + 29240 * t15759 - 105910 * t15760 + 366282 * t15762 - 508079 * t15764 - 155 + (-153748 + 245157 * t15761) * t15761 + (281656 * t15762 - 163438 * t15764 - 1390) * t15757)

        if Bindx == 2515:
            t15767 = np.cos(phi)
            t15768 = t15767 ** 2
            t15769 = t15767 * t15768
            t15772 = t15769 ** 2
            t15770 = t15768 ** 2
            tfunc[..., c] = (0.75e2 / 0.1024e4*1j) * (5474 * t15768 + 4522 * t15769 + 49742 * t15772 - 67 + (-45220 + 81719 * t15770) * t15770 + (-76874 * t15770 + 163438 * t15772 + 306) * t15767) * np.sqrt((1 + t15767)) * np.exp((-1*1j) * (4 * phi1 - 3 * phi2)) * ((1 - t15767) ** (0.7e1 / 0.2e1))

        if Bindx == 2516:
            t15775 = np.cos(phi)
            t15776 = t15775 ** 2
            t15778 = t15776 ** 2
            t15779 = t15775 * t15778
            t15784 = t15779 ** 2
            t15782 = t15778 ** 2
            t15777 = t15775 * t15776
            t15780 = t15777 ** 2
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((-4*1j) * (phi1 - phi2)) * (-14818 * t15776 - 214340 * t15777 + 174625 * t15778 + 1193944 * t15779 + 1884705 * t15782 - 1939938 * t15784 + 239 + (-838236 + 735471 * t15780) * t15780 + (-2705448 * t15780 + 2693820 * t15782 - 980628 * t15784 + 10604) * t15775)

        if Bindx == 2517:
            t15787 = np.cos(phi)
            t15788 = t15787 ** 2
            t15789 = t15787 * t15788
            t15792 = t15789 ** 2
            t15790 = t15788 ** 2
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * (-3591 * t15788 - 17955 * t15789 - 5985 * t15790 + 100947 * t15792 + 85 + (65835 * t15790 + 43263 * t15792 + 441) * t15787) * np.sqrt((1 + t15787)) * np.sqrt(0.34e2) * np.exp((-1*1j) * (4 * phi1 - 5 * phi2)) * ((1 - t15787) ** (0.9e1 / 0.2e1))

        if Bindx == 2518:
            t15795 = np.cos(phi)
            t15796 = t15795 ** 2
            t15798 = t15796 ** 2
            t15802 = t15798 ** 2
            t15797 = t15795 * t15796
            t15800 = t15797 ** 2
            t15799 = t15795 * t15798
            t15794 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((-2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.119e3) * t15794 ** 2 * (-357 * t15796 + 2328 * t15797 + 2078 * t15798 - 1634 * t15800 - 4389 * t15802 + 7 + (-10260 + 4807 * t15799) * t15799 + (17176 * t15800 - 9614 * t15802 - 142) * t15795)

        if Bindx == 2519:
            t15805 = np.cos(phi)
            t15806 = t15805 ** 2
            t15808 = t15806 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (-30 * t15806 + 1265 * t15808 - 3 + (550 * t15806 + 759 * t15808 - 45) * t15805) * ((1 + t15805) ** (0.3e1 / 0.2e1)) * np.sqrt(0.13566e5) * np.exp((-1*1j) * (4 * phi1 - 7 * phi2)) * ((1 - t15805) ** (0.11e2 / 0.2e1))

        if Bindx == 2520:
            t15820 = np.sin(phi)
            t15818 = t15820 ** 2
            t15810 = np.cos(phi)
            t15811 = t15810 ** 2
            t15812 = t15810 * t15811
            t15815 = t15812 ** 2
            t15813 = t15811 ** 2
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((-4*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.13566e5) * t15818 ** 2 * (324 * t15811 - 344 * t15812 + 836 * t15815 - 9 + (-1270 + 759 * t15813) * t15813 + (1704 * t15813 - 2024 * t15815 + 24) * t15810)

        if Bindx == 2521:
            t15821 = np.cos(phi)
            t15824 = 253 * t15821 ** 2
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * (t15824 - 1 + (t15824 + 55) * t15821) * ((1 + t15821) ** (0.5e1 / 0.2e1)) * np.sqrt(0.646e3) * np.exp((-1*1j) * (4 * phi1 - 9 * phi2)) * ((1 - t15821) ** (0.13e2 / 0.2e1))

        if Bindx == 2522:
            t15834 = np.sin(phi)
            t15831 = t15834 ** 2
            t15832 = t15834 * t15831
            t15825 = np.cos(phi)
            t15826 = t15825 ** 2
            t15828 = t15826 ** 2
            t15827 = t15825 * t15826
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-2*1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.10659e5) * t15832 ** 2 * (-85 * t15826 + 235 * t15828 + 5 + (-20 + 69 * t15827) * t15827 + (-230 * t15828 + 26) * t15825)

        if Bindx == 2523:
            t15835 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (1 + 3 * t15835) * ((1 + t15835) ** (0.7e1 / 0.2e1)) * np.sqrt(0.490314e6) * np.exp((-1*1j) * (4 * phi1 - 11 * phi2)) * ((1 - t15835) ** (0.15e2 / 0.2e1))

        if Bindx == 2524:
            t15836 = np.cos(phi)
            t15843 = -1 + t15836
            t15842 = 1 + t15836
            t15840 = t15842 ** 2
            t15837 = t15843 ** 2
            t15838 = t15837 ** 2
            tfunc[..., c] = (0.75e2 / 0.4096e4) * np.exp((-4*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.81719e5) * t15838 ** 2 * t15840 ** 2

        if Bindx == 2525:
            t15844 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((-3*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.81719e5) * ((1 - t15844) ** (0.9e1 / 0.2e1)) * ((1 + t15844) ** (0.15e2 / 0.2e1))

        if Bindx == 2526:
            t15852 = np.sin(phi)
            t15849 = t15852 ** 2
            t15850 = t15849 ** 2
            t15845 = np.cos(phi)
            t15846 = t15845 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (3 * phi1 + 11 * phi2)) * np.sqrt(0.490314e6) * t15850 ** 2 * (t15845 - 1 + (11 * t15845 + 9 + 4 * t15846) * t15846)

        if Bindx == 2527:
            t15853 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (3 * phi1 + 10 * phi2)) * np.sqrt(0.10659e5) * ((1 - t15853) ** (0.7e1 / 0.2e1)) * ((1 + t15853) ** (0.13e2 / 0.2e1)) * (1 + (-23 + 46 * t15853) * t15853)

        if Bindx == 2528:
            t15863 = np.sin(phi)
            t15860 = t15863 ** 2
            t15861 = t15863 * t15860
            t15854 = np.cos(phi)
            t15855 = t15854 ** 2
            t15857 = t15855 ** 2
            t15856 = t15854 * t15855
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-3*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.646e3) * t15861 ** 2 * (-510 * t15855 + 825 * t15857 + 17 + (-1050 + 1012 * t15856) * t15856 + (2277 * t15857 + 117) * t15854)

        if Bindx == 2529:
            t15864 = np.cos(phi)
            t15865 = t15864 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (3 * phi1 + 8 * phi2)) * np.sqrt(0.13566e5) * ((1 - t15864) ** (0.5e1 / 0.2e1)) * ((1 + t15864) ** (0.11e2 / 0.2e1)) * (17 * t15864 - 2 + (-253 * t15864 + 33 + 253 * t15865) * t15865)

        if Bindx == 2530:
            t15878 = np.sin(phi)
            t15876 = t15878 ** 2
            t15868 = np.cos(phi)
            t15869 = t15868 ** 2
            t15870 = t15868 * t15869
            t15873 = t15870 ** 2
            t15871 = t15869 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.13566e5) * t15876 ** 2 * (47 * t15869 + 609 * t15870 - 539 * t15873 - 1 + (-135 + 1012 * t15871) * t15871 + (-1953 * t15871 + 1771 * t15873 - 43) * t15868)

        if Bindx == 2531:
            t15879 = np.cos(phi)
            t15880 = t15879 ** 2
            t15882 = t15880 ** 2
            t15881 = t15879 * t15880
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-3*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.119e3) * ((1 - t15879) ** (0.3e1 / 0.2e1)) * ((1 + t15879) ** (0.9e1 / 0.2e1)) * (-1140 * t15880 + 3135 * t15882 + 23 + (3230 + 9614 * t15881) * t15881 + (-14421 * t15882 - 57) * t15879)

        if Bindx == 2532:
            t15886 = np.cos(phi)
            t15887 = t15886 ** 2
            t15889 = t15887 ** 2
            t15893 = t15889 ** 2
            t15888 = t15886 * t15887
            t15891 = t15888 ** 2
            t15890 = t15886 * t15889
            t15885 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((-1*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.34e2) * t15885 ** 2 * (540 * t15887 - 5560 * t15888 - 5530 * t15889 + 21280 * t15891 - 34485 * t15893 - 9 + (26334 + 19228 * t15890) * t15890 + (-44080 * t15891 + 24035 * t15893 + 295) * t15886)

        if Bindx == 2533:
            t15896 = np.cos(phi)
            t15897 = t15896 ** 2
            t15898 = t15896 * t15897
            t15901 = t15898 ** 2
            t15899 = t15897 ** 2
            tfunc[..., c] = (-0.75e2 / 0.1024e4*1j) * np.exp((-1*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt((1 - t15896)) * ((1 + t15896) ** (0.7e1 / 0.2e1)) * (5474 * t15897 - 4522 * t15898 + 49742 * t15901 - 67 + (-45220 + 81719 * t15899) * t15899 + (76874 * t15899 - 163438 * t15901 - 306) * t15896)

        if Bindx == 2534:
            t15904 = np.cos(phi)
            t15905 = t15904 ** 2
            t15907 = t15905 ** 2
            t15908 = t15904 * t15907
            t15913 = t15908 ** 2
            t15911 = t15907 ** 2
            t15906 = t15904 * t15905
            t15909 = t15906 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-3*1j) * (phi1 + phi2)) * (-12213 * t15905 + 42105 * t15906 + 137430 * t15907 - 256122 * t15908 + 1090125 * t15911 - 969969 * t15913 + 177 + (-571914 + 326876 * t15909) * t15909 + (622098 * t15909 - 650845 * t15911 + 245157 * t15913 - 1881) * t15904)

        if Bindx == 2535:
            t15916 = np.cos(phi)
            t15917 = t15916 ** 2
            t15919 = t15917 ** 2
            t15923 = t15919 ** 2
            t15918 = t15916 * t15917
            t15921 = t15918 ** 2
            t15920 = t15916 * t15919
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.6e1) * ((1 + t15916) ** (0.5e1 / 0.2e1)) * (-6030 * t15917 - 9180 * t15918 + 82110 * t15919 - 271320 * t15921 + 159885 * t15923 + 45 + (-40698 + 163438 * t15920) * t15920 + (329460 * t15921 - 408595 * t15923 + 885) * t15916) * ((1 - t15916) ** (-0.1e1 / 0.2e1))

        if Bindx == 2536:
            t15927 = np.cos(phi)
            t15928 = t15927 ** 2
            t15930 = t15928 ** 2
            t15934 = t15930 ** 2
            t15929 = t15927 * t15928
            t15932 = t15929 ** 2
            t15931 = t15927 * t15930
            t15926 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.231e3) * t15926 ** 2 * (1080 * t15928 - 1020 * t15929 - 11730 * t15930 + 42636 * t15932 - 61047 * t15934 - 15 + (5814 + 29716 * t15931) * t15931 + (-11628 * t15932 + 7429 * t15934 + 45) * t15927)

        if Bindx == 2537:
            t15937 = np.cos(phi)
            t15938 = t15937 ** 2
            t15939 = t15938 ** 2
            tfunc[..., c] = (0.25e2 / 0.512e3*1j) * (-1020 * t15938 + 45 + (-11628 * t15938 + 5814 + 7429 * t15939) * t15939) * t15937 * ((1 + t15937) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1001e4) * np.exp((-3*1j) * phi1) * ((1 - t15937) ** (0.3e1 / 0.2e1))

        if Bindx == 2538:
            t15943 = np.cos(phi)
            t15944 = t15943 ** 2
            t15946 = t15944 ** 2
            t15950 = t15946 ** 2
            t15945 = t15943 * t15944
            t15948 = t15945 ** 2
            t15947 = t15943 * t15946
            t15942 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.231e3) * t15942 ** 2 * (1080 * t15944 + 1020 * t15945 - 11730 * t15946 + 42636 * t15948 - 61047 * t15950 - 15 + (-5814 + 29716 * t15947) * t15947 + (11628 * t15948 - 7429 * t15950 - 45) * t15943)

        if Bindx == 2539:
            t15953 = np.cos(phi)
            t15954 = t15953 ** 2
            t15956 = t15954 ** 2
            t15960 = t15956 ** 2
            t15955 = t15953 * t15954
            t15958 = t15955 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (-5100 * t15954 + 14280 * t15955 + 67830 * t15956 - 244188 * t15958 + 245157 * t15960 + 45 + (-27132 * t15956 - 85272 * t15958 + 163438 * t15960 - 930) * t15953) * np.sqrt((1 + t15953)) * np.sqrt(0.6e1) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t15953) ** (0.5e1 / 0.2e1))

        if Bindx == 2540:
            t15962 = np.cos(phi)
            t15963 = t15962 ** 2
            t15965 = t15963 ** 2
            t15966 = t15962 * t15965
            t15971 = t15966 ** 2
            t15969 = t15965 ** 2
            t15964 = t15962 * t15963
            t15967 = t15964 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-3*1j) * (phi1 - phi2)) * (-12213 * t15963 - 42105 * t15964 + 137430 * t15965 + 256122 * t15966 + 1090125 * t15969 - 969969 * t15971 + 177 + (-571914 + 326876 * t15967) * t15967 + (-622098 * t15967 + 650845 * t15969 - 245157 * t15971 + 1881) * t15962)

        if Bindx == 2541:
            t15974 = np.cos(phi)
            t15975 = t15974 ** 2
            t15976 = t15974 * t15975
            t15979 = t15976 ** 2
            t15977 = t15975 ** 2
            tfunc[..., c] = (0.75e2 / 0.1024e4*1j) * (5474 * t15975 + 4522 * t15976 + 49742 * t15979 - 67 + (-45220 + 81719 * t15977) * t15977 + (-76874 * t15977 + 163438 * t15979 + 306) * t15974) * np.sqrt((1 + t15974)) * np.exp((-1*1j) * (3 * phi1 - 4 * phi2)) * ((1 - t15974) ** (0.7e1 / 0.2e1))

        if Bindx == 2542:
            t15983 = np.cos(phi)
            t15984 = t15983 ** 2
            t15986 = t15984 ** 2
            t15990 = t15986 ** 2
            t15985 = t15983 * t15984
            t15988 = t15985 ** 2
            t15987 = t15983 * t15986
            t15982 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((-1*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.34e2) * t15982 ** 2 * (540 * t15984 + 5560 * t15985 - 5530 * t15986 + 21280 * t15988 - 34485 * t15990 - 9 + (-26334 + 19228 * t15987) * t15987 + (44080 * t15988 - 24035 * t15990 - 295) * t15983)

        if Bindx == 2543:
            t15993 = np.cos(phi)
            t15994 = t15993 ** 2
            t15996 = t15994 ** 2
            t15995 = t15993 * t15994
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (-1140 * t15994 + 3135 * t15996 + 23 + (-3230 + 9614 * t15995) * t15995 + (14421 * t15996 + 57) * t15993) * ((1 + t15993) ** (0.3e1 / 0.2e1)) * np.sqrt(0.119e3) * np.exp((-3*1j) * (phi1 - 2 * phi2)) * ((1 - t15993) ** (0.9e1 / 0.2e1))

        if Bindx == 2544:
            t16009 = np.sin(phi)
            t16007 = t16009 ** 2
            t15999 = np.cos(phi)
            t16000 = t15999 ** 2
            t16001 = t15999 * t16000
            t16004 = t16001 ** 2
            t16002 = t16000 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.13566e5) * t16007 ** 2 * (47 * t16000 - 609 * t16001 - 539 * t16004 - 1 + (-135 + 1012 * t16002) * t16002 + (1953 * t16002 - 1771 * t16004 + 43) * t15999)

        if Bindx == 2545:
            t16010 = np.cos(phi)
            t16011 = t16010 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-17 * t16010 - 2 + (253 * t16010 + 33 + 253 * t16011) * t16011) * ((1 + t16010) ** (0.5e1 / 0.2e1)) * np.sqrt(0.13566e5) * np.exp((-1*1j) * (3 * phi1 - 8 * phi2)) * ((1 - t16010) ** (0.11e2 / 0.2e1))

        if Bindx == 2546:
            t16023 = np.sin(phi)
            t16020 = t16023 ** 2
            t16021 = t16023 * t16020
            t16014 = np.cos(phi)
            t16015 = t16014 ** 2
            t16017 = t16015 ** 2
            t16016 = t16014 * t16015
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-3*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.646e3) * t16021 ** 2 * (-510 * t16015 + 825 * t16017 + 17 + (1050 + 1012 * t16016) * t16016 + (-2277 * t16017 - 117) * t16014)

        if Bindx == 2547:
            t16024 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (1 + (23 + 46 * t16024) * t16024) * ((1 + t16024) ** (0.7e1 / 0.2e1)) * np.sqrt(0.10659e5) * np.exp((-1*1j) * (3 * phi1 - 10 * phi2)) * ((1 - t16024) ** (0.13e2 / 0.2e1))

        if Bindx == 2548:
            t16032 = np.sin(phi)
            t16029 = t16032 ** 2
            t16030 = t16029 ** 2
            t16025 = np.cos(phi)
            t16026 = t16025 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (3 * phi1 - 11 * phi2)) * np.sqrt(0.490314e6) * t16030 ** 2 * (-t16025 - 1 + (-11 * t16025 + 9 + 4 * t16026) * t16026)

        if Bindx == 2549:
            t16033 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-3*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.81719e5) * ((1 - t16033) ** (0.15e2 / 0.2e1)) * ((1 + t16033) ** (0.9e1 / 0.2e1))

        if Bindx == 2550:
            t16034 = np.cos(phi)
            t16043 = -1 + t16034
            t16042 = 1 + t16034
            t16038 = t16042 ** 2
            t16039 = t16042 * t16038
            t16035 = t16043 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-2*1j) * (phi1 + 6 * phi2)) * np.sqrt(0.490314e6) * t16043 * t16035 ** 2 * t16042 * t16039 ** 2

        if Bindx == 2551:
            t16044 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (2 * phi1 + 11 * phi2)) * np.sqrt(0.81719e5) * ((1 - t16044) ** (0.9e1 / 0.2e1)) * ((1 + t16044) ** (0.13e2 / 0.2e1)) * (-1 + 6 * t16044)

        if Bindx == 2552:
            t16052 = np.sin(phi)
            t16049 = t16052 ** 2
            t16050 = t16049 ** 2
            t16045 = np.cos(phi)
            t16046 = t16045 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.7106e4) * t16050 ** 2 * (-25 * t16045 - 1 + (115 * t16045 + 22 + 69 * t16046) * t16046)

        if Bindx == 2553:
            t16053 = np.cos(phi)
            t16054 = t16053 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (2 * phi1 + 9 * phi2)) * np.sqrt(0.969e3) * ((1 - t16053) ** (0.7e1 / 0.2e1)) * ((1 + t16053) ** (0.11e2 / 0.2e1)) * (-253 * t16054 + 9 + (506 * t16054 - 22) * t16053)

        if Bindx == 2554:
            t16065 = np.sin(phi)
            t16062 = t16065 ** 2
            t16063 = t16065 * t16062
            t16056 = np.cos(phi)
            t16057 = t16056 ** 2
            t16059 = t16057 ** 2
            t16058 = t16056 * t16057
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.2261e4) * t16063 ** 2 * (41 * t16057 - 319 * t16059 - 1 + (-584 + 759 * t16058) * t16058 + (1012 * t16059 + 52) * t16056)

        if Bindx == 2555:
            t16066 = np.cos(phi)
            t16067 = t16066 ** 2
            t16069 = t16067 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (2 * phi1 + 7 * phi2)) * np.sqrt(0.2261e4) * ((1 - t16066) ** (0.5e1 / 0.2e1)) * ((1 + t16066) ** (0.9e1 / 0.2e1)) * (270 * t16067 - 1265 * t16069 - 5 + (-220 * t16067 + 1518 * t16069 - 10) * t16066)

        if Bindx == 2556:
            t16081 = np.sin(phi)
            t16079 = t16081 ** 2
            t16071 = np.cos(phi)
            t16072 = t16071 ** 2
            t16073 = t16071 * t16072
            t16076 = t16073 ** 2
            t16074 = t16072 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.714e3) * t16079 ** 2 * (-280 * t16072 + 1425 * t16073 - 5852 * t16076 + 5 + (2280 + 4807 * t16074) * t16074 + (-5187 * t16074 + 4807 * t16076 - 85) * t16071)

        if Bindx == 2557:
            t16082 = np.cos(phi)
            t16083 = t16082 ** 2
            t16084 = t16082 * t16083
            t16087 = t16084 ** 2
            t16085 = t16083 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.51e2) * ((1 - t16082) ** (0.3e1 / 0.2e1)) * ((1 + t16082) ** (0.7e1 / 0.2e1)) * (-1995 * t16083 - 1330 * t16084 + 17955 * t16085 - 33649 * t16087 + 25 + (-8778 * t16085 + 28842 * t16087 + 210) * t16082)

        if Bindx == 2558:
            t16090 = np.cos(phi)
            t16091 = t16090 ** 2
            t16093 = t16091 ** 2
            t16097 = t16093 ** 2
            t16092 = t16090 * t16091
            t16095 = t16092 ** 2
            t16094 = t16090 * t16093
            t16089 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.6e1) * t16089 ** 2 * (10385 * t16091 - 29240 * t16092 - 105910 * t16093 + 366282 * t16095 - 508079 * t16097 - 155 + (153748 + 245157 * t16094) * t16094 + (-281656 * t16095 + 163438 * t16097 + 1390) * t16090)

        if Bindx == 2559:
            t16100 = np.cos(phi)
            t16101 = t16100 ** 2
            t16103 = t16101 ** 2
            t16107 = t16103 ** 2
            t16102 = t16100 * t16101
            t16105 = t16102 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t16100)) * ((1 + t16100) ** (0.5e1 / 0.2e1)) * (5100 * t16101 + 14280 * t16102 - 67830 * t16103 + 244188 * t16105 - 245157 * t16107 - 45 + (-27132 * t16103 - 85272 * t16105 + 163438 * t16107 - 930) * t16100)

        if Bindx == 2560:
            t16109 = np.cos(phi)
            t16110 = t16109 ** 2
            t16112 = t16110 ** 2
            t16113 = t16109 * t16112
            t16118 = t16113 ** 2
            t16116 = t16112 ** 2
            t16111 = t16109 * t16110
            t16114 = t16111 ** 2
            tfunc[..., c] = (0.25e2 / 0.512e3) * np.exp((-2*1j) * (phi1 + phi2)) * (-8214 * t16110 + 10875 * t16111 + 97575 * t16112 - 70890 * t16113 + 818805 * t16116 - 731918 * t16118 + 111 + (-421260 + 245157 * t16114) * t16114 + (184110 * t16114 - 205105 * t16116 + 81719 * t16118 - 453) * t16109)

        if Bindx == 2561:
            t16121 = np.cos(phi)
            t16122 = t16121 ** 2
            t16124 = t16122 ** 2
            t16125 = t16121 * t16124
            t16130 = t16125 ** 2
            t16128 = t16124 ** 2
            t16123 = t16121 * t16122
            t16126 = t16123 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.154e3) * ((1 + t16121) ** (0.3e1 / 0.2e1)) * (-675 * t16122 - 4650 * t16123 + 12750 * t16124 + 21420 * t16125 - 67830 * t16126 + 130815 * t16128 - 81719 * t16130 + 3 + (-19380 * t16126 - 35530 * t16128 + 44574 * t16130 + 222) * t16121) * ((1 - t16121) ** (-0.1e1 / 0.2e1))

        if Bindx == 2562:
            t16133 = np.cos(phi)
            t16134 = t16133 ** 2
            t16135 = t16134 ** 2
            t16137 = t16135 ** 2
            t16132 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-2*1j) * phi1) * np.sqrt(0.6006e4) * t16132 ** 2 * (-2550 * t16135 - 14535 * t16137 - 3 + (9690 * t16135 + 7429 * t16137 + 225) * t16134)

        if Bindx == 2563:
            t16139 = np.cos(phi)
            t16140 = t16139 ** 2
            t16142 = t16140 ** 2
            t16146 = t16142 ** 2
            t16141 = t16139 * t16140
            t16144 = t16141 ** 2
            t16143 = t16139 * t16142
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (450 * t16140 - 5100 * t16141 - 7650 * t16142 + 38760 * t16144 - 72675 * t16146 - 3 + (29070 + 44574 * t16143) * t16143 + (-58140 * t16144 + 37145 * t16146 + 225) * t16139) * np.sqrt((1 + t16139)) * np.sqrt(0.154e3) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t16139) ** (0.3e1 / 0.2e1))

        if Bindx == 2564:
            t16149 = np.cos(phi)
            t16150 = t16149 ** 2
            t16152 = t16150 ** 2
            t16153 = t16149 * t16152
            t16158 = t16153 ** 2
            t16156 = t16152 ** 2
            t16151 = t16149 * t16150
            t16154 = t16151 ** 2
            tfunc[..., c] = (0.25e2 / 0.512e3) * np.exp((-2*1j) * (phi1 - phi2)) * (-8214 * t16150 - 10875 * t16151 + 97575 * t16152 + 70890 * t16153 + 818805 * t16156 - 731918 * t16158 + 111 + (-421260 + 245157 * t16154) * t16154 + (-184110 * t16154 + 205105 * t16156 - 81719 * t16158 + 453) * t16149)

        if Bindx == 2565:
            t16161 = np.cos(phi)
            t16162 = t16161 ** 2
            t16164 = t16162 ** 2
            t16168 = t16164 ** 2
            t16163 = t16161 * t16162
            t16166 = t16163 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (-5100 * t16162 + 14280 * t16163 + 67830 * t16164 - 244188 * t16166 + 245157 * t16168 + 45 + (-27132 * t16164 - 85272 * t16166 + 163438 * t16168 - 930) * t16161) * np.sqrt((1 + t16161)) * np.sqrt(0.6e1) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t16161) ** (0.5e1 / 0.2e1))

        if Bindx == 2566:
            t16171 = np.cos(phi)
            t16172 = t16171 ** 2
            t16174 = t16172 ** 2
            t16178 = t16174 ** 2
            t16173 = t16171 * t16172
            t16176 = t16173 ** 2
            t16175 = t16171 * t16174
            t16170 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.6e1) * t16170 ** 2 * (10385 * t16172 + 29240 * t16173 - 105910 * t16174 + 366282 * t16176 - 508079 * t16178 - 155 + (-153748 + 245157 * t16175) * t16175 + (281656 * t16176 - 163438 * t16178 - 1390) * t16171)

        if Bindx == 2567:
            t16181 = np.cos(phi)
            t16182 = t16181 ** 2
            t16183 = t16181 * t16182
            t16186 = t16183 ** 2
            t16184 = t16182 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (1995 * t16182 - 1330 * t16183 - 17955 * t16184 + 33649 * t16186 - 25 + (-8778 * t16184 + 28842 * t16186 + 210) * t16181) * ((1 + t16181) ** (0.3e1 / 0.2e1)) * np.sqrt(0.51e2) * np.exp((-1*1j) * (2 * phi1 - 5 * phi2)) * ((1 - t16181) ** (0.7e1 / 0.2e1))

        if Bindx == 2568:
            t16198 = np.sin(phi)
            t16196 = t16198 ** 2
            t16188 = np.cos(phi)
            t16189 = t16188 ** 2
            t16190 = t16188 * t16189
            t16193 = t16190 ** 2
            t16191 = t16189 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.714e3) * t16196 ** 2 * (-280 * t16189 - 1425 * t16190 - 5852 * t16193 + 5 + (2280 + 4807 * t16191) * t16191 + (5187 * t16191 - 4807 * t16193 + 85) * t16188)

        if Bindx == 2569:
            t16199 = np.cos(phi)
            t16200 = t16199 ** 2
            t16202 = t16200 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (-270 * t16200 + 1265 * t16202 + 5 + (-220 * t16200 + 1518 * t16202 - 10) * t16199) * ((1 + t16199) ** (0.5e1 / 0.2e1)) * np.sqrt(0.2261e4) * np.exp((-1*1j) * (2 * phi1 - 7 * phi2)) * ((1 - t16199) ** (0.9e1 / 0.2e1))

        if Bindx == 2570:
            t16213 = np.sin(phi)
            t16210 = t16213 ** 2
            t16211 = t16213 * t16210
            t16204 = np.cos(phi)
            t16205 = t16204 ** 2
            t16207 = t16205 ** 2
            t16206 = t16204 * t16205
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.2261e4) * t16211 ** 2 * (41 * t16205 - 319 * t16207 - 1 + (584 + 759 * t16206) * t16206 + (-1012 * t16207 - 52) * t16204)

        if Bindx == 2571:
            t16214 = np.cos(phi)
            t16215 = t16214 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (253 * t16215 - 9 + (506 * t16215 - 22) * t16214) * ((1 + t16214) ** (0.7e1 / 0.2e1)) * np.sqrt(0.969e3) * np.exp((-1*1j) * (2 * phi1 - 9 * phi2)) * ((1 - t16214) ** (0.11e2 / 0.2e1))

        if Bindx == 2572:
            t16224 = np.sin(phi)
            t16221 = t16224 ** 2
            t16222 = t16221 ** 2
            t16217 = np.cos(phi)
            t16218 = t16217 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.7106e4) * t16222 ** 2 * (25 * t16217 - 1 + (-115 * t16217 + 22 + 69 * t16218) * t16218)

        if Bindx == 2573:
            t16225 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (1 + 6 * t16225) * ((1 + t16225) ** (0.9e1 / 0.2e1)) * np.sqrt(0.81719e5) * np.exp((-1*1j) * (2 * phi1 - 11 * phi2)) * ((1 - t16225) ** (0.13e2 / 0.2e1))

        if Bindx == 2574:
            t16226 = np.cos(phi)
            t16235 = -1 + t16226
            t16234 = 1 + t16226
            t16231 = t16234 ** 2
            t16227 = t16235 ** 2
            t16228 = t16235 * t16227
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-2*1j) * (phi1 - 6 * phi2)) * np.sqrt(0.490314e6) * t16235 * t16228 ** 2 * t16234 * t16231 ** 2

        if Bindx == 2575:
            t16236 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (phi1 + 12 * phi2)) * np.sqrt(0.156009e6) * ((1 - t16236) ** (0.11e2 / 0.2e1)) * ((1 + t16236) ** (0.13e2 / 0.2e1))

        if Bindx == 2576:
            t16242 = np.sin(phi)
            t16238 = t16242 ** 2
            t16240 = t16242 * t16238 ** 2
            t16237 = np.cos(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 + 11 * phi2)) * np.sqrt(0.104006e6) * t16240 ** 2 * (-1 + (11 + 12 * t16237) * t16237)

        if Bindx == 2577:
            t16243 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (phi1 + 10 * phi2)) * np.sqrt(0.2261e4) * ((1 - t16243) ** (0.9e1 / 0.2e1)) * ((1 + t16243) ** (0.11e2 / 0.2e1)) * (-5 + (-23 + 138 * t16243) * t16243)

        if Bindx == 2578:
            t16251 = np.sin(phi)
            t16248 = t16251 ** 2
            t16249 = t16248 ** 2
            t16244 = np.cos(phi)
            t16245 = t16244 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 + 9 * phi2)) * np.sqrt(0.149226e6) * t16249 ** 2 * (-9 * t16244 + 1 + (69 * t16244 - 33 + 92 * t16245) * t16245)

        if Bindx == 2579:
            t16252 = np.cos(phi)
            t16253 = t16252 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (phi1 + 8 * phi2)) * np.sqrt(0.7106e4) * ((1 - t16252) ** (0.7e1 / 0.2e1)) * ((1 + t16252) ** (0.9e1 / 0.2e1)) * (21 * t16252 + 2 + (-161 * t16252 - 105 + 483 * t16253) * t16253)

        if Bindx == 2580:
            t16265 = np.sin(phi)
            t16262 = t16265 ** 2
            t16263 = t16265 * t16262
            t16256 = np.cos(phi)
            t16257 = t16256 ** 2
            t16259 = t16257 ** 2
            t16258 = t16256 * t16257
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 + 7 * phi2)) * np.sqrt(0.7106e4) * t16263 ** 2 * (250 * t16257 - 1505 * t16259 - 5 + (-490 + 1932 * t16258) * t16258 + (1127 * t16259 + 35) * t16256)

        if Bindx == 2581:
            t16266 = np.cos(phi)
            t16267 = t16266 ** 2
            t16269 = t16267 ** 2
            t16268 = t16266 * t16267
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (phi1 + 6 * phi2)) * np.sqrt(0.561e3) * ((1 - t16266) ** (0.5e1 / 0.2e1)) * ((1 + t16266) ** (0.7e1 / 0.2e1)) * (380 * t16267 - 3325 * t16269 - 5 + (1330 + 6118 * t16268) * t16268 + (-3059 * t16269 - 95) * t16266)

        if Bindx == 2582:
            t16282 = np.sin(phi)
            t16280 = t16282 ** 2
            t16272 = np.cos(phi)
            t16273 = t16272 ** 2
            t16274 = t16272 * t16273
            t16277 = t16274 ** 2
            t16275 = t16273 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.7854e4) * t16280 ** 2 * (-315 * t16273 + 475 * t16274 - 7049 * t16277 + 5 + (2755 + 5244 * t16275) * t16275 + (-1995 * t16275 + 2185 * t16277 - 25) * t16272)

        if Bindx == 2583:
            t16283 = np.cos(phi)
            t16284 = t16283 ** 2
            t16285 = t16283 * t16284
            t16288 = t16285 ** 2
            t16286 = t16284 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.231e3) * ((1 - t16283) ** (0.3e1 / 0.2e1)) * ((1 + t16283) ** (0.5e1 / 0.2e1)) * (-510 * t16284 - 3230 * t16285 - 22610 * t16288 + 5 + (6460 + 22287 * t16286) * t16286 + (13566 * t16286 - 14858 * t16288 + 170) * t16283)

        if Bindx == 2584:
            t16292 = np.cos(phi)
            t16293 = t16292 ** 2
            t16295 = t16293 ** 2
            t16299 = t16295 ** 2
            t16294 = t16292 * t16293
            t16297 = t16294 ** 2
            t16296 = t16292 * t16295
            t16291 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.231e3) * t16291 ** 2 * (1080 * t16293 - 1020 * t16294 - 11730 * t16295 + 42636 * t16297 - 61047 * t16299 - 15 + (5814 + 29716 * t16296) * t16296 + (-11628 * t16297 + 7429 * t16299 + 45) * t16292)

        if Bindx == 2585:
            t16302 = np.cos(phi)
            t16303 = t16302 ** 2
            t16305 = t16303 ** 2
            t16309 = t16305 ** 2
            t16304 = t16302 * t16303
            t16307 = t16304 ** 2
            t16306 = t16302 * t16305
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.154e3) * np.sqrt((1 - t16302)) * ((1 + t16302) ** (0.3e1 / 0.2e1)) * (450 * t16303 + 5100 * t16304 - 7650 * t16305 + 38760 * t16307 - 72675 * t16309 - 3 + (-29070 + 44574 * t16306) * t16306 + (58140 * t16307 - 37145 * t16309 - 225) * t16302)

        if Bindx == 2586:
            t16312 = np.cos(phi)
            t16313 = t16312 ** 2
            t16315 = t16313 ** 2
            t16316 = t16312 * t16315
            t16321 = t16316 ** 2
            t16319 = t16315 ** 2
            t16314 = t16312 * t16313
            t16317 = t16314 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-1*1j) * (phi1 + phi2)) * (-17787 * t16313 + 5775 * t16314 + 219450 * t16315 - 39270 * t16316 + 1971915 * t16319 - 1815583 * t16321 + 231 + (-981750 + 624036 * t16317) * t16317 + (106590 * t16317 - 124355 * t16319 + 52003 * t16321 - 231) * t16312)

        if Bindx == 2587:
            t16324 = np.cos(phi)
            t16325 = t16324 ** 2
            t16326 = t16324 * t16325
            t16327 = t16325 ** 2
            t16328 = t16324 * t16327
            t16335 = 106590 * t16326 ** 2 - 124355 * t16327 ** 2 + 52003 * t16328 ** 2 - 231
            tfunc[..., c] = (0.25e2 / 0.512e3*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.39e2) * np.sqrt((1 + t16324)) * t16324 * (t16324 * t16335 - 5775 * t16325 + 5775 * t16326 + 39270 * t16327 - 39270 * t16328 - t16335) * ((1 - t16324) ** (-0.1e1 / 0.2e1))

        if Bindx == 2588:
            t16336 = np.cos(phi)
            t16337 = t16336 ** 2
            t16339 = t16337 ** 2
            t16340 = t16336 * t16339
            t16345 = t16340 ** 2
            t16343 = t16339 ** 2
            t16338 = t16336 * t16337
            t16341 = t16338 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((-1*1j) * (phi1 - phi2)) * (-17787 * t16337 - 5775 * t16338 + 219450 * t16339 + 39270 * t16340 + 1971915 * t16343 - 1815583 * t16345 + 231 + (-981750 + 624036 * t16341) * t16341 + (-106590 * t16341 + 124355 * t16343 - 52003 * t16345 + 231) * t16336)

        if Bindx == 2589:
            t16348 = np.cos(phi)
            t16349 = t16348 ** 2
            t16351 = t16349 ** 2
            t16355 = t16351 ** 2
            t16350 = t16348 * t16349
            t16353 = t16350 ** 2
            t16352 = t16348 * t16351
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (450 * t16349 - 5100 * t16350 - 7650 * t16351 + 38760 * t16353 - 72675 * t16355 - 3 + (29070 + 44574 * t16352) * t16352 + (-58140 * t16353 + 37145 * t16355 + 225) * t16348) * np.sqrt((1 + t16348)) * np.sqrt(0.154e3) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t16348) ** (0.3e1 / 0.2e1))

        if Bindx == 2590:
            t16359 = np.cos(phi)
            t16360 = t16359 ** 2
            t16362 = t16360 ** 2
            t16366 = t16362 ** 2
            t16361 = t16359 * t16360
            t16364 = t16361 ** 2
            t16363 = t16359 * t16362
            t16358 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.231e3) * t16358 ** 2 * (1080 * t16360 + 1020 * t16361 - 11730 * t16362 + 42636 * t16364 - 61047 * t16366 - 15 + (-5814 + 29716 * t16363) * t16363 + (11628 * t16364 - 7429 * t16366 - 45) * t16359)

        if Bindx == 2591:
            t16369 = np.cos(phi)
            t16370 = t16369 ** 2
            t16371 = t16369 * t16370
            t16374 = t16371 ** 2
            t16372 = t16370 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (-510 * t16370 + 3230 * t16371 - 22610 * t16374 + 5 + (6460 + 22287 * t16372) * t16372 + (-13566 * t16372 + 14858 * t16374 - 170) * t16369) * ((1 + t16369) ** (0.3e1 / 0.2e1)) * np.sqrt(0.231e3) * np.exp((-1*1j) * (phi1 - 4 * phi2)) * ((1 - t16369) ** (0.5e1 / 0.2e1))

        if Bindx == 2592:
            t16387 = np.sin(phi)
            t16385 = t16387 ** 2
            t16377 = np.cos(phi)
            t16378 = t16377 ** 2
            t16379 = t16377 * t16378
            t16382 = t16379 ** 2
            t16380 = t16378 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.7854e4) * t16385 ** 2 * (-315 * t16378 - 475 * t16379 - 7049 * t16382 + 5 + (2755 + 5244 * t16380) * t16380 + (1995 * t16380 - 2185 * t16382 + 25) * t16377)

        if Bindx == 2593:
            t16388 = np.cos(phi)
            t16389 = t16388 ** 2
            t16391 = t16389 ** 2
            t16390 = t16388 * t16389
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (380 * t16389 - 3325 * t16391 - 5 + (-1330 + 6118 * t16390) * t16390 + (3059 * t16391 + 95) * t16388) * ((1 + t16388) ** (0.5e1 / 0.2e1)) * np.sqrt(0.561e3) * np.exp((-1*1j) * (phi1 - 6 * phi2)) * ((1 - t16388) ** (0.7e1 / 0.2e1))

        if Bindx == 2594:
            t16403 = np.sin(phi)
            t16400 = t16403 ** 2
            t16401 = t16403 * t16400
            t16394 = np.cos(phi)
            t16395 = t16394 ** 2
            t16397 = t16395 ** 2
            t16396 = t16394 * t16395
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 - 7 * phi2)) * np.sqrt(0.7106e4) * t16401 ** 2 * (250 * t16395 - 1505 * t16397 - 5 + (490 + 1932 * t16396) * t16396 + (-1127 * t16397 - 35) * t16394)

        if Bindx == 2595:
            t16404 = np.cos(phi)
            t16405 = t16404 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (-21 * t16404 + 2 + (161 * t16404 - 105 + 483 * t16405) * t16405) * ((1 + t16404) ** (0.7e1 / 0.2e1)) * np.sqrt(0.7106e4) * np.exp((-1*1j) * (phi1 - 8 * phi2)) * ((1 - t16404) ** (0.9e1 / 0.2e1))

        if Bindx == 2596:
            t16415 = np.sin(phi)
            t16412 = t16415 ** 2
            t16413 = t16412 ** 2
            t16408 = np.cos(phi)
            t16409 = t16408 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 - 9 * phi2)) * np.sqrt(0.149226e6) * t16413 ** 2 * (9 * t16408 + 1 + (-69 * t16408 - 33 + 92 * t16409) * t16409)

        if Bindx == 2597:
            t16416 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-5 + (23 + 138 * t16416) * t16416) * ((1 + t16416) ** (0.9e1 / 0.2e1)) * np.sqrt(0.2261e4) * np.exp((-1*1j) * (phi1 - 10 * phi2)) * ((1 - t16416) ** (0.11e2 / 0.2e1))

        if Bindx == 2598:
            t16422 = np.sin(phi)
            t16418 = t16422 ** 2
            t16420 = t16422 * t16418 ** 2
            t16417 = np.cos(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 - 11 * phi2)) * np.sqrt(0.104006e6) * t16420 ** 2 * (-1 + (-11 + 12 * t16417) * t16417)

        if Bindx == 2599:
            t16423 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((-1*1j) * (phi1 - 12 * phi2)) * np.sqrt(0.156009e6) * ((1 - t16423) ** (0.13e2 / 0.2e1)) * ((1 + t16423) ** (0.11e2 / 0.2e1))

        if Bindx == 2600:
            t16428 = np.sin(phi)
            t16424 = t16428 ** 2
            t16425 = t16428 * t16424
            t16426 = t16425 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-12*1j) * phi2) * np.sqrt(0.676039e6) * t16426 ** 2

        if Bindx == 2601:
            t16429 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-11*1j) * phi2) * np.sqrt(0.4056234e7) * ((1 - t16429) ** (0.11e2 / 0.2e1)) * ((1 + t16429) ** (0.11e2 / 0.2e1)) * t16429

        if Bindx == 2602:
            t16435 = np.sin(phi)
            t16431 = t16435 ** 2
            t16433 = t16435 * t16431 ** 2
            t16430 = np.cos(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-10*1j) * phi2) * np.sqrt(0.88179e5) * t16433 ** 2 * (23 * t16430 ** 2 - 1)

        if Bindx == 2603:
            t16436 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((-9*1j) * phi2) * np.sqrt(0.646646e6) * ((1 - t16436) ** (0.9e1 / 0.2e1)) * ((1 + t16436) ** (0.9e1 / 0.2e1)) * t16436 * (23 * t16436 ** 2 - 3)

        if Bindx == 2604:
            t16443 = np.sin(phi)
            t16440 = t16443 ** 2
            t16441 = t16440 ** 2
            t16437 = np.cos(phi)
            t16438 = t16437 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-8*1j) * phi2) * np.sqrt(0.277134e6) * t16441 ** 2 * (1 + (-42 + 161 * t16438) * t16438)

        if Bindx == 2605:
            t16444 = np.cos(phi)
            t16445 = t16444 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((-7*1j) * phi2) * np.sqrt(0.277134e6) * ((1 - t16444) ** (0.7e1 / 0.2e1)) * ((1 + t16444) ** (0.7e1 / 0.2e1)) * t16444 * (5 + (-70 + 161 * t16445) * t16445)

        if Bindx == 2606:
            t16454 = np.sin(phi)
            t16451 = t16454 ** 2
            t16452 = t16454 * t16451
            t16447 = np.cos(phi)
            t16448 = t16447 ** 2
            t16449 = t16448 ** 2
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-6*1j) * phi2) * np.sqrt(0.2431e4) * t16452 ** 2 * (-1995 * t16449 - 5 + (3059 * t16449 + 285) * t16448)

        if Bindx == 2607:
            t16455 = np.cos(phi)
            t16456 = t16455 ** 2
            t16457 = t16456 ** 2
            tfunc[..., c] = (-0.75e2 / 0.1024e4*1j) * np.exp((-5*1j) * phi2) * np.sqrt(0.34034e5) * ((1 - t16455) ** (0.5e1 / 0.2e1)) * ((1 + t16455) ** (0.5e1 / 0.2e1)) * t16455 * (-399 * t16457 - 5 + (437 * t16457 + 95) * t16456)

        if Bindx == 2608:
            t16466 = np.sin(phi)
            t16464 = t16466 ** 2
            t16459 = np.cos(phi)
            t16460 = t16459 ** 2
            t16461 = t16460 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4) * np.exp((-4*1j) * phi2) * np.sqrt(0.1001e4) * t16464 ** 2 * (-340 * t16460 + 5 + (-9044 * t16460 + 3230 + 7429 * t16461) * t16461)

        if Bindx == 2609:
            t16467 = np.cos(phi)
            t16468 = t16467 ** 2
            t16469 = t16468 ** 2
            tfunc[..., c] = (0.25e2 / 0.512e3*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.1001e4) * ((1 - t16467) ** (0.3e1 / 0.2e1)) * ((1 + t16467) ** (0.3e1 / 0.2e1)) * t16467 * (-1020 * t16468 + 45 + (-11628 * t16468 + 5814 + 7429 * t16469) * t16469)

        if Bindx == 2610:
            t16473 = np.cos(phi)
            t16474 = t16473 ** 2
            t16475 = t16474 ** 2
            t16477 = t16475 ** 2
            t16472 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-2*1j) * phi2) * np.sqrt(0.6006e4) * t16472 ** 2 * (-2550 * t16475 - 14535 * t16477 - 3 + (9690 * t16475 + 7429 * t16477 + 225) * t16474)

        if Bindx == 2611:
            t16479 = np.cos(phi)
            t16480 = t16479 ** 2
            t16481 = t16480 ** 2
            t16483 = t16481 ** 2
            tfunc[..., c] = (-0.25e2 / 0.512e3*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.39e2) * np.sqrt((1 - t16479)) * np.sqrt((1 + t16479)) * t16479 * (-39270 * t16481 - 124355 * t16483 - 231 + (106590 * t16481 + 52003 * t16483 + 5775) * t16480)

        if Bindx == 2612:
            t16485 = np.cos(phi)
            t16486 = t16485 ** 2
            t16487 = t16486 ** 2
            t16489 = t16487 ** 2
            t16488 = t16486 * t16487
            tfunc[..., c] = 0.51962625e8 / 0.1024e4 * t16489 + 0.5630625e7 / 0.1024e4 * t16487 + 0.5775e4 / 0.1024e4 + (-0.6381375e7 / 0.256e3 + 0.16900975e8 / 0.1024e4 * t16488) * t16488 + (-0.24249225e8 / 0.512e3 * t16489 - 0.225225e6 / 0.512e3) * t16486

        if Bindx == 2613:
            t16492 = np.cos(phi)
            t16493 = t16492 ** 2
            t16494 = t16492 * t16493
            t16495 = t16493 ** 2
            t16496 = t16492 * t16495
            t16503 = 106590 * t16494 ** 2 - 124355 * t16495 ** 2 + 52003 * t16496 ** 2 - 231
            tfunc[..., c] = (0.25e2 / 0.512e3*1j) * np.exp((1j) * phi2) * np.sqrt(0.39e2) * np.sqrt((1 + t16492)) * t16492 * (t16492 * t16503 - 5775 * t16493 + 5775 * t16494 + 39270 * t16495 - 39270 * t16496 - t16503) * ((1 - t16492) ** (-0.1e1 / 0.2e1))

        if Bindx == 2614:
            t16505 = np.cos(phi)
            t16506 = t16505 ** 2
            t16507 = t16506 ** 2
            t16509 = t16507 ** 2
            t16504 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((2*1j) * phi2) * np.sqrt(0.6006e4) * t16504 ** 2 * (-2550 * t16507 - 14535 * t16509 - 3 + (9690 * t16507 + 7429 * t16509 + 225) * t16506)

        if Bindx == 2615:
            t16511 = np.cos(phi)
            t16512 = t16511 ** 2
            t16513 = t16512 ** 2
            tfunc[..., c] = (0.25e2 / 0.512e3*1j) * (-1020 * t16512 + 45 + (-11628 * t16512 + 5814 + 7429 * t16513) * t16513) * t16511 * ((1 + t16511) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1001e4) * np.exp((3*1j) * phi2) * ((1 - t16511) ** (0.3e1 / 0.2e1))

        if Bindx == 2616:
            t16523 = np.sin(phi)
            t16521 = t16523 ** 2
            t16516 = np.cos(phi)
            t16517 = t16516 ** 2
            t16518 = t16517 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4) * np.exp((4*1j) * phi2) * np.sqrt(0.1001e4) * t16521 ** 2 * (-340 * t16517 + 5 + (-9044 * t16517 + 3230 + 7429 * t16518) * t16518)

        if Bindx == 2617:
            t16524 = np.cos(phi)
            t16525 = t16524 ** 2
            t16526 = t16525 ** 2
            tfunc[..., c] = (-0.75e2 / 0.1024e4*1j) * (-399 * t16526 - 5 + (437 * t16526 + 95) * t16525) * t16524 * ((1 + t16524) ** (0.5e1 / 0.2e1)) * np.sqrt(0.34034e5) * np.exp((5*1j) * phi2) * ((1 - t16524) ** (0.5e1 / 0.2e1))

        if Bindx == 2618:
            t16535 = np.sin(phi)
            t16532 = t16535 ** 2
            t16533 = t16535 * t16532
            t16528 = np.cos(phi)
            t16529 = t16528 ** 2
            t16530 = t16529 ** 2
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((6*1j) * phi2) * np.sqrt(0.2431e4) * t16533 ** 2 * (-1995 * t16530 - 5 + (3059 * t16530 + 285) * t16529)

        if Bindx == 2619:
            t16536 = np.cos(phi)
            t16537 = t16536 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (5 + (-70 + 161 * t16537) * t16537) * t16536 * ((1 + t16536) ** (0.7e1 / 0.2e1)) * np.sqrt(0.277134e6) * np.exp((7*1j) * phi2) * ((1 - t16536) ** (0.7e1 / 0.2e1))

        if Bindx == 2620:
            t16545 = np.sin(phi)
            t16542 = t16545 ** 2
            t16543 = t16542 ** 2
            t16539 = np.cos(phi)
            t16540 = t16539 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((8*1j) * phi2) * np.sqrt(0.277134e6) * t16543 ** 2 * (1 + (-42 + 161 * t16540) * t16540)

        if Bindx == 2621:
            t16546 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (23 * t16546 ** 2 - 3) * t16546 * ((1 + t16546) ** (0.9e1 / 0.2e1)) * np.sqrt(0.646646e6) * np.exp((9*1j) * phi2) * ((1 - t16546) ** (0.9e1 / 0.2e1))

        if Bindx == 2622:
            t16552 = np.sin(phi)
            t16548 = t16552 ** 2
            t16550 = t16552 * t16548 ** 2
            t16547 = np.cos(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((10*1j) * phi2) * np.sqrt(0.88179e5) * t16550 ** 2 * (23 * t16547 ** 2 - 1)

        if Bindx == 2623:
            t16553 = np.cos(phi)
            t16559 = -6 * t16553
            t16554 = t16553 ** 2
            t16555 = t16553 * t16554
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * t16553 * ((1 + t16553) ** (0.11e2 / 0.2e1)) * (t16559 + 1 + (-20 + t16555) * t16555 + (15 + (t16559 + 15) * t16554) * t16554) * np.sqrt(0.4056234e7) * np.exp((11*1j) * phi2) * ((1 - t16553) ** (-0.1e1 / 0.2e1))

        if Bindx == 2624:
            t16564 = np.sin(phi)
            t16560 = t16564 ** 2
            t16561 = t16564 * t16560
            t16562 = t16561 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((12*1j) * phi2) * np.sqrt(0.676039e6) * t16562 ** 2

        if Bindx == 2625:
            t16565 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (phi1 - 12 * phi2)) * np.sqrt(0.156009e6) * ((1 - t16565) ** (0.13e2 / 0.2e1)) * ((1 + t16565) ** (0.11e2 / 0.2e1))

        if Bindx == 2626:
            t16571 = np.sin(phi)
            t16567 = t16571 ** 2
            t16569 = t16571 * t16567 ** 2
            t16566 = np.cos(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (phi1 - 11 * phi2)) * np.sqrt(0.104006e6) * t16569 ** 2 * (-1 + (-11 + 12 * t16566) * t16566)

        if Bindx == 2627:
            t16572 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (phi1 - 10 * phi2)) * np.sqrt(0.2261e4) * ((1 - t16572) ** (0.11e2 / 0.2e1)) * ((1 + t16572) ** (0.9e1 / 0.2e1)) * (-5 + (23 + 138 * t16572) * t16572)

        if Bindx == 2628:
            t16580 = np.sin(phi)
            t16577 = t16580 ** 2
            t16578 = t16577 ** 2
            t16573 = np.cos(phi)
            t16574 = t16573 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (phi1 - 9 * phi2)) * np.sqrt(0.149226e6) * t16578 ** 2 * (9 * t16573 + 1 + (-69 * t16573 - 33 + 92 * t16574) * t16574)

        if Bindx == 2629:
            t16581 = np.cos(phi)
            t16582 = t16581 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (phi1 - 8 * phi2)) * np.sqrt(0.7106e4) * ((1 - t16581) ** (0.9e1 / 0.2e1)) * ((1 + t16581) ** (0.7e1 / 0.2e1)) * (-21 * t16581 + 2 + (161 * t16581 - 105 + 483 * t16582) * t16582)

        if Bindx == 2630:
            t16594 = np.sin(phi)
            t16591 = t16594 ** 2
            t16592 = t16594 * t16591
            t16585 = np.cos(phi)
            t16586 = t16585 ** 2
            t16588 = t16586 ** 2
            t16587 = t16585 * t16586
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (phi1 - 7 * phi2)) * np.sqrt(0.7106e4) * t16592 ** 2 * (250 * t16586 - 1505 * t16588 - 5 + (490 + 1932 * t16587) * t16587 + (-1127 * t16588 - 35) * t16585)

        if Bindx == 2631:
            t16595 = np.cos(phi)
            t16596 = t16595 ** 2
            t16598 = t16596 ** 2
            t16597 = t16595 * t16596
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (phi1 - 6 * phi2)) * np.sqrt(0.561e3) * ((1 - t16595) ** (0.7e1 / 0.2e1)) * ((1 + t16595) ** (0.5e1 / 0.2e1)) * (380 * t16596 - 3325 * t16598 - 5 + (-1330 + 6118 * t16597) * t16597 + (3059 * t16598 + 95) * t16595)

        if Bindx == 2632:
            t16611 = np.sin(phi)
            t16609 = t16611 ** 2
            t16601 = np.cos(phi)
            t16602 = t16601 ** 2
            t16603 = t16601 * t16602
            t16606 = t16603 ** 2
            t16604 = t16602 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (phi1 - 5 * phi2)) * np.sqrt(0.7854e4) * t16609 ** 2 * (-315 * t16602 - 475 * t16603 - 7049 * t16606 + 5 + (2755 + 5244 * t16604) * t16604 + (1995 * t16604 - 2185 * t16606 + 25) * t16601)

        if Bindx == 2633:
            t16612 = np.cos(phi)
            t16613 = t16612 ** 2
            t16614 = t16612 * t16613
            t16617 = t16614 ** 2
            t16615 = t16613 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (phi1 - 4 * phi2)) * np.sqrt(0.231e3) * ((1 - t16612) ** (0.5e1 / 0.2e1)) * ((1 + t16612) ** (0.3e1 / 0.2e1)) * (-510 * t16613 + 3230 * t16614 - 22610 * t16617 + 5 + (6460 + 22287 * t16615) * t16615 + (-13566 * t16615 + 14858 * t16617 - 170) * t16612)

        if Bindx == 2634:
            t16621 = np.cos(phi)
            t16622 = t16621 ** 2
            t16624 = t16622 ** 2
            t16628 = t16624 ** 2
            t16623 = t16621 * t16622
            t16626 = t16623 ** 2
            t16625 = t16621 * t16624
            t16620 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.231e3) * t16620 ** 2 * (1080 * t16622 + 1020 * t16623 - 11730 * t16624 + 42636 * t16626 - 61047 * t16628 - 15 + (-5814 + 29716 * t16625) * t16625 + (11628 * t16626 - 7429 * t16628 - 45) * t16621)

        if Bindx == 2635:
            t16631 = np.cos(phi)
            t16632 = t16631 ** 2
            t16634 = t16632 ** 2
            t16638 = t16634 ** 2
            t16633 = t16631 * t16632
            t16636 = t16633 ** 2
            t16635 = t16631 * t16634
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.154e3) * ((1 - t16631) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t16631)) * (450 * t16632 - 5100 * t16633 - 7650 * t16634 + 38760 * t16636 - 72675 * t16638 - 3 + (29070 + 44574 * t16635) * t16635 + (-58140 * t16636 + 37145 * t16638 + 225) * t16631)

        if Bindx == 2636:
            t16641 = np.cos(phi)
            t16642 = t16641 ** 2
            t16644 = t16642 ** 2
            t16645 = t16641 * t16644
            t16650 = t16645 ** 2
            t16648 = t16644 ** 2
            t16643 = t16641 * t16642
            t16646 = t16643 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((1j) * (phi1 - phi2)) * (-17787 * t16642 - 5775 * t16643 + 219450 * t16644 + 39270 * t16645 + 1971915 * t16648 - 1815583 * t16650 + 231 + (-981750 + 624036 * t16646) * t16646 + (-106590 * t16646 + 124355 * t16648 - 52003 * t16650 + 231) * t16641)

        if Bindx == 2637:
            t16653 = np.cos(phi)
            t16654 = t16653 ** 2
            t16655 = t16654 ** 2
            t16657 = t16655 ** 2
            tfunc[..., c] = (-0.25e2 / 0.512e3*1j) * np.exp((1j) * phi1) * np.sqrt(0.39e2) * np.sqrt((1 - t16653)) * np.sqrt((1 + t16653)) * t16653 * (-39270 * t16655 - 124355 * t16657 - 231 + (106590 * t16655 + 52003 * t16657 + 5775) * t16654)

        if Bindx == 2638:
            t16659 = np.cos(phi)
            t16660 = t16659 ** 2
            t16662 = t16660 ** 2
            t16663 = t16659 * t16662
            t16668 = t16663 ** 2
            t16666 = t16662 ** 2
            t16661 = t16659 * t16660
            t16664 = t16661 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((1j) * (phi1 + phi2)) * (-17787 * t16660 + 5775 * t16661 + 219450 * t16662 - 39270 * t16663 + 1971915 * t16666 - 1815583 * t16668 + 231 + (-981750 + 624036 * t16664) * t16664 + (106590 * t16664 - 124355 * t16666 + 52003 * t16668 - 231) * t16659)

        if Bindx == 2639:
            t16671 = np.cos(phi)
            t16672 = t16671 ** 2
            t16674 = t16672 ** 2
            t16675 = t16671 * t16674
            t16680 = t16675 ** 2
            t16678 = t16674 ** 2
            t16673 = t16671 * t16672
            t16676 = t16673 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.154e3) * ((1 + t16671) ** (0.3e1 / 0.2e1)) * (-675 * t16672 - 4650 * t16673 + 12750 * t16674 + 21420 * t16675 - 67830 * t16676 + 130815 * t16678 - 81719 * t16680 + 3 + (-19380 * t16676 - 35530 * t16678 + 44574 * t16680 + 222) * t16671) * ((1 - t16671) ** (-0.1e1 / 0.2e1))

        if Bindx == 2640:
            t16683 = np.cos(phi)
            t16684 = t16683 ** 2
            t16686 = t16684 ** 2
            t16690 = t16686 ** 2
            t16685 = t16683 * t16684
            t16688 = t16685 ** 2
            t16687 = t16683 * t16686
            t16682 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.231e3) * t16682 ** 2 * (1080 * t16684 - 1020 * t16685 - 11730 * t16686 + 42636 * t16688 - 61047 * t16690 - 15 + (5814 + 29716 * t16687) * t16687 + (-11628 * t16688 + 7429 * t16690 + 45) * t16683)

        if Bindx == 2641:
            t16693 = np.cos(phi)
            t16694 = t16693 ** 2
            t16695 = t16693 * t16694
            t16698 = t16695 ** 2
            t16696 = t16694 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-510 * t16694 - 3230 * t16695 - 22610 * t16698 + 5 + (6460 + 22287 * t16696) * t16696 + (13566 * t16696 - 14858 * t16698 + 170) * t16693) * ((1 + t16693) ** (0.5e1 / 0.2e1)) * np.sqrt(0.231e3) * np.exp((1j) * (phi1 + 4 * phi2)) * ((1 - t16693) ** (0.3e1 / 0.2e1))

        if Bindx == 2642:
            t16711 = np.sin(phi)
            t16709 = t16711 ** 2
            t16701 = np.cos(phi)
            t16702 = t16701 ** 2
            t16703 = t16701 * t16702
            t16706 = t16703 ** 2
            t16704 = t16702 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (phi1 + 5 * phi2)) * np.sqrt(0.7854e4) * t16709 ** 2 * (-315 * t16702 + 475 * t16703 - 7049 * t16706 + 5 + (2755 + 5244 * t16704) * t16704 + (-1995 * t16704 + 2185 * t16706 - 25) * t16701)

        if Bindx == 2643:
            t16712 = np.cos(phi)
            t16713 = t16712 ** 2
            t16715 = t16713 ** 2
            t16714 = t16712 * t16713
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (380 * t16713 - 3325 * t16715 - 5 + (1330 + 6118 * t16714) * t16714 + (-3059 * t16715 - 95) * t16712) * ((1 + t16712) ** (0.7e1 / 0.2e1)) * np.sqrt(0.561e3) * np.exp((1j) * (phi1 + 6 * phi2)) * ((1 - t16712) ** (0.5e1 / 0.2e1))

        if Bindx == 2644:
            t16727 = np.sin(phi)
            t16724 = t16727 ** 2
            t16725 = t16727 * t16724
            t16718 = np.cos(phi)
            t16719 = t16718 ** 2
            t16721 = t16719 ** 2
            t16720 = t16718 * t16719
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (phi1 + 7 * phi2)) * np.sqrt(0.7106e4) * t16725 ** 2 * (250 * t16719 - 1505 * t16721 - 5 + (-490 + 1932 * t16720) * t16720 + (1127 * t16721 + 35) * t16718)

        if Bindx == 2645:
            t16728 = np.cos(phi)
            t16729 = t16728 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (21 * t16728 + 2 + (-161 * t16728 - 105 + 483 * t16729) * t16729) * ((1 + t16728) ** (0.9e1 / 0.2e1)) * np.sqrt(0.7106e4) * np.exp((1j) * (phi1 + 8 * phi2)) * ((1 - t16728) ** (0.7e1 / 0.2e1))

        if Bindx == 2646:
            t16739 = np.sin(phi)
            t16736 = t16739 ** 2
            t16737 = t16736 ** 2
            t16732 = np.cos(phi)
            t16733 = t16732 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (phi1 + 9 * phi2)) * np.sqrt(0.149226e6) * t16737 ** 2 * (-9 * t16732 + 1 + (69 * t16732 - 33 + 92 * t16733) * t16733)

        if Bindx == 2647:
            t16740 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (-5 + (-23 + 138 * t16740) * t16740) * ((1 + t16740) ** (0.11e2 / 0.2e1)) * np.sqrt(0.2261e4) * np.exp((1j) * (phi1 + 10 * phi2)) * ((1 - t16740) ** (0.9e1 / 0.2e1))

        if Bindx == 2648:
            t16746 = np.sin(phi)
            t16742 = t16746 ** 2
            t16744 = t16746 * t16742 ** 2
            t16741 = np.cos(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (phi1 + 11 * phi2)) * np.sqrt(0.104006e6) * t16744 ** 2 * (-1 + (11 + 12 * t16741) * t16741)

        if Bindx == 2649:
            t16747 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (phi1 + 12 * phi2)) * np.sqrt(0.156009e6) * ((1 - t16747) ** (0.11e2 / 0.2e1)) * ((1 + t16747) ** (0.13e2 / 0.2e1))

        if Bindx == 2650:
            t16748 = np.cos(phi)
            t16757 = -1 + t16748
            t16756 = 1 + t16748
            t16753 = t16756 ** 2
            t16749 = t16757 ** 2
            t16750 = t16757 * t16749
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((2*1j) * (phi1 - 6 * phi2)) * np.sqrt(0.490314e6) * t16757 * t16750 ** 2 * t16756 * t16753 ** 2

        if Bindx == 2651:
            t16758 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 - 11 * phi2)) * np.sqrt(0.81719e5) * ((1 - t16758) ** (0.13e2 / 0.2e1)) * ((1 + t16758) ** (0.9e1 / 0.2e1)) * (1 + 6 * t16758)

        if Bindx == 2652:
            t16766 = np.sin(phi)
            t16763 = t16766 ** 2
            t16764 = t16763 ** 2
            t16759 = np.cos(phi)
            t16760 = t16759 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((2*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.7106e4) * t16764 ** 2 * (25 * t16759 - 1 + (-115 * t16759 + 22 + 69 * t16760) * t16760)

        if Bindx == 2653:
            t16767 = np.cos(phi)
            t16768 = t16767 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 - 9 * phi2)) * np.sqrt(0.969e3) * ((1 - t16767) ** (0.11e2 / 0.2e1)) * ((1 + t16767) ** (0.7e1 / 0.2e1)) * (253 * t16768 - 9 + (506 * t16768 - 22) * t16767)

        if Bindx == 2654:
            t16779 = np.sin(phi)
            t16776 = t16779 ** 2
            t16777 = t16779 * t16776
            t16770 = np.cos(phi)
            t16771 = t16770 ** 2
            t16773 = t16771 ** 2
            t16772 = t16770 * t16771
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((2*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.2261e4) * t16777 ** 2 * (41 * t16771 - 319 * t16773 - 1 + (584 + 759 * t16772) * t16772 + (-1012 * t16773 - 52) * t16770)

        if Bindx == 2655:
            t16780 = np.cos(phi)
            t16781 = t16780 ** 2
            t16783 = t16781 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 - 7 * phi2)) * np.sqrt(0.2261e4) * ((1 - t16780) ** (0.9e1 / 0.2e1)) * ((1 + t16780) ** (0.5e1 / 0.2e1)) * (-270 * t16781 + 1265 * t16783 + 5 + (-220 * t16781 + 1518 * t16783 - 10) * t16780)

        if Bindx == 2656:
            t16795 = np.sin(phi)
            t16793 = t16795 ** 2
            t16785 = np.cos(phi)
            t16786 = t16785 ** 2
            t16787 = t16785 * t16786
            t16790 = t16787 ** 2
            t16788 = t16786 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.714e3) * t16793 ** 2 * (-280 * t16786 - 1425 * t16787 - 5852 * t16790 + 5 + (2280 + 4807 * t16788) * t16788 + (5187 * t16788 - 4807 * t16790 + 85) * t16785)

        if Bindx == 2657:
            t16796 = np.cos(phi)
            t16797 = t16796 ** 2
            t16798 = t16796 * t16797
            t16801 = t16798 ** 2
            t16799 = t16797 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.51e2) * ((1 - t16796) ** (0.7e1 / 0.2e1)) * ((1 + t16796) ** (0.3e1 / 0.2e1)) * (1995 * t16797 - 1330 * t16798 - 17955 * t16799 + 33649 * t16801 - 25 + (-8778 * t16799 + 28842 * t16801 + 210) * t16796)

        if Bindx == 2658:
            t16804 = np.cos(phi)
            t16805 = t16804 ** 2
            t16807 = t16805 ** 2
            t16811 = t16807 ** 2
            t16806 = t16804 * t16805
            t16809 = t16806 ** 2
            t16808 = t16804 * t16807
            t16803 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.6e1) * t16803 ** 2 * (10385 * t16805 + 29240 * t16806 - 105910 * t16807 + 366282 * t16809 - 508079 * t16811 - 155 + (-153748 + 245157 * t16808) * t16808 + (281656 * t16809 - 163438 * t16811 - 1390) * t16804)

        if Bindx == 2659:
            t16814 = np.cos(phi)
            t16815 = t16814 ** 2
            t16817 = t16815 ** 2
            t16821 = t16817 ** 2
            t16816 = t16814 * t16815
            t16819 = t16816 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.6e1) * ((1 - t16814) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t16814)) * (-5100 * t16815 + 14280 * t16816 + 67830 * t16817 - 244188 * t16819 + 245157 * t16821 + 45 + (-27132 * t16817 - 85272 * t16819 + 163438 * t16821 - 930) * t16814)

        if Bindx == 2660:
            t16823 = np.cos(phi)
            t16824 = t16823 ** 2
            t16826 = t16824 ** 2
            t16827 = t16823 * t16826
            t16832 = t16827 ** 2
            t16830 = t16826 ** 2
            t16825 = t16823 * t16824
            t16828 = t16825 ** 2
            tfunc[..., c] = (0.25e2 / 0.512e3) * np.exp((2*1j) * (phi1 - phi2)) * (-8214 * t16824 - 10875 * t16825 + 97575 * t16826 + 70890 * t16827 + 818805 * t16830 - 731918 * t16832 + 111 + (-421260 + 245157 * t16828) * t16828 + (-184110 * t16828 + 205105 * t16830 - 81719 * t16832 + 453) * t16823)

        if Bindx == 2661:
            t16835 = np.cos(phi)
            t16836 = t16835 ** 2
            t16838 = t16836 ** 2
            t16842 = t16838 ** 2
            t16837 = t16835 * t16836
            t16840 = t16837 ** 2
            t16839 = t16835 * t16838
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.154e3) * ((1 - t16835) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t16835)) * (450 * t16836 - 5100 * t16837 - 7650 * t16838 + 38760 * t16840 - 72675 * t16842 - 3 + (29070 + 44574 * t16839) * t16839 + (-58140 * t16840 + 37145 * t16842 + 225) * t16835)

        if Bindx == 2662:
            t16846 = np.cos(phi)
            t16847 = t16846 ** 2
            t16848 = t16847 ** 2
            t16850 = t16848 ** 2
            t16845 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((2*1j) * phi1) * np.sqrt(0.6006e4) * t16845 ** 2 * (-2550 * t16848 - 14535 * t16850 - 3 + (9690 * t16848 + 7429 * t16850 + 225) * t16847)

        if Bindx == 2663:
            t16852 = np.cos(phi)
            t16853 = t16852 ** 2
            t16855 = t16853 ** 2
            t16859 = t16855 ** 2
            t16854 = t16852 * t16853
            t16857 = t16854 ** 2
            t16856 = t16852 * t16855
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.154e3) * np.sqrt((1 - t16852)) * ((1 + t16852) ** (0.3e1 / 0.2e1)) * (450 * t16853 + 5100 * t16854 - 7650 * t16855 + 38760 * t16857 - 72675 * t16859 - 3 + (-29070 + 44574 * t16856) * t16856 + (58140 * t16857 - 37145 * t16859 - 225) * t16852)

        if Bindx == 2664:
            t16862 = np.cos(phi)
            t16863 = t16862 ** 2
            t16865 = t16863 ** 2
            t16866 = t16862 * t16865
            t16871 = t16866 ** 2
            t16869 = t16865 ** 2
            t16864 = t16862 * t16863
            t16867 = t16864 ** 2
            tfunc[..., c] = (0.25e2 / 0.512e3) * np.exp((2*1j) * (phi1 + phi2)) * (-8214 * t16863 + 10875 * t16864 + 97575 * t16865 - 70890 * t16866 + 818805 * t16869 - 731918 * t16871 + 111 + (-421260 + 245157 * t16867) * t16867 + (184110 * t16867 - 205105 * t16869 + 81719 * t16871 - 453) * t16862)

        if Bindx == 2665:
            t16874 = np.cos(phi)
            t16875 = t16874 ** 2
            t16877 = t16875 ** 2
            t16881 = t16877 ** 2
            t16876 = t16874 * t16875
            t16879 = t16876 ** 2
            t16878 = t16874 * t16877
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.6e1) * ((1 + t16874) ** (0.5e1 / 0.2e1)) * (-6030 * t16875 - 9180 * t16876 + 82110 * t16877 - 271320 * t16879 + 159885 * t16881 + 45 + (-40698 + 163438 * t16878) * t16878 + (329460 * t16879 - 408595 * t16881 + 885) * t16874) * ((1 - t16874) ** (-0.1e1 / 0.2e1))

        if Bindx == 2666:
            t16885 = np.cos(phi)
            t16886 = t16885 ** 2
            t16888 = t16886 ** 2
            t16892 = t16888 ** 2
            t16887 = t16885 * t16886
            t16890 = t16887 ** 2
            t16889 = t16885 * t16888
            t16884 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.6e1) * t16884 ** 2 * (10385 * t16886 - 29240 * t16887 - 105910 * t16888 + 366282 * t16890 - 508079 * t16892 - 155 + (153748 + 245157 * t16889) * t16889 + (-281656 * t16890 + 163438 * t16892 + 1390) * t16885)

        if Bindx == 2667:
            t16895 = np.cos(phi)
            t16896 = t16895 ** 2
            t16897 = t16895 * t16896
            t16900 = t16897 ** 2
            t16898 = t16896 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-1995 * t16896 - 1330 * t16897 + 17955 * t16898 - 33649 * t16900 + 25 + (-8778 * t16898 + 28842 * t16900 + 210) * t16895) * ((1 + t16895) ** (0.7e1 / 0.2e1)) * np.sqrt(0.51e2) * np.exp((1j) * (2 * phi1 + 5 * phi2)) * ((1 - t16895) ** (0.3e1 / 0.2e1))

        if Bindx == 2668:
            t16912 = np.sin(phi)
            t16910 = t16912 ** 2
            t16902 = np.cos(phi)
            t16903 = t16902 ** 2
            t16904 = t16902 * t16903
            t16907 = t16904 ** 2
            t16905 = t16903 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.714e3) * t16910 ** 2 * (-280 * t16903 + 1425 * t16904 - 5852 * t16907 + 5 + (2280 + 4807 * t16905) * t16905 + (-5187 * t16905 + 4807 * t16907 - 85) * t16902)

        if Bindx == 2669:
            t16913 = np.cos(phi)
            t16914 = t16913 ** 2
            t16916 = t16914 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (270 * t16914 - 1265 * t16916 - 5 + (-220 * t16914 + 1518 * t16916 - 10) * t16913) * ((1 + t16913) ** (0.9e1 / 0.2e1)) * np.sqrt(0.2261e4) * np.exp((1j) * (2 * phi1 + 7 * phi2)) * ((1 - t16913) ** (0.5e1 / 0.2e1))

        if Bindx == 2670:
            t16927 = np.sin(phi)
            t16924 = t16927 ** 2
            t16925 = t16927 * t16924
            t16918 = np.cos(phi)
            t16919 = t16918 ** 2
            t16921 = t16919 ** 2
            t16920 = t16918 * t16919
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((2*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.2261e4) * t16925 ** 2 * (41 * t16919 - 319 * t16921 - 1 + (-584 + 759 * t16920) * t16920 + (1012 * t16921 + 52) * t16918)

        if Bindx == 2671:
            t16928 = np.cos(phi)
            t16929 = t16928 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-253 * t16929 + 9 + (506 * t16929 - 22) * t16928) * ((1 + t16928) ** (0.11e2 / 0.2e1)) * np.sqrt(0.969e3) * np.exp((1j) * (2 * phi1 + 9 * phi2)) * ((1 - t16928) ** (0.7e1 / 0.2e1))

        if Bindx == 2672:
            t16938 = np.sin(phi)
            t16935 = t16938 ** 2
            t16936 = t16935 ** 2
            t16931 = np.cos(phi)
            t16932 = t16931 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((2*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.7106e4) * t16936 ** 2 * (-25 * t16931 - 1 + (115 * t16931 + 22 + 69 * t16932) * t16932)

        if Bindx == 2673:
            t16939 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (-1 + 6 * t16939) * ((1 + t16939) ** (0.13e2 / 0.2e1)) * np.sqrt(0.81719e5) * np.exp((1j) * (2 * phi1 + 11 * phi2)) * ((1 - t16939) ** (0.9e1 / 0.2e1))

        if Bindx == 2674:
            t16940 = np.cos(phi)
            t16949 = -1 + t16940
            t16948 = 1 + t16940
            t16944 = t16948 ** 2
            t16945 = t16948 * t16944
            t16941 = t16949 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((2*1j) * (phi1 + 6 * phi2)) * np.sqrt(0.490314e6) * t16949 * t16941 ** 2 * t16948 * t16945 ** 2

        if Bindx == 2675:
            t16950 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((3*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.81719e5) * ((1 - t16950) ** (0.15e2 / 0.2e1)) * ((1 + t16950) ** (0.9e1 / 0.2e1))

        if Bindx == 2676:
            t16958 = np.sin(phi)
            t16955 = t16958 ** 2
            t16956 = t16955 ** 2
            t16951 = np.cos(phi)
            t16952 = t16951 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (3 * phi1 - 11 * phi2)) * np.sqrt(0.490314e6) * t16956 ** 2 * (-t16951 - 1 + (-11 * t16951 + 9 + 4 * t16952) * t16952)

        if Bindx == 2677:
            t16959 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (3 * phi1 - 10 * phi2)) * np.sqrt(0.10659e5) * ((1 - t16959) ** (0.13e2 / 0.2e1)) * ((1 + t16959) ** (0.7e1 / 0.2e1)) * (1 + (23 + 46 * t16959) * t16959)

        if Bindx == 2678:
            t16969 = np.sin(phi)
            t16966 = t16969 ** 2
            t16967 = t16969 * t16966
            t16960 = np.cos(phi)
            t16961 = t16960 ** 2
            t16963 = t16961 ** 2
            t16962 = t16960 * t16961
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((3*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.646e3) * t16967 ** 2 * (-510 * t16961 + 825 * t16963 + 17 + (1050 + 1012 * t16962) * t16962 + (-2277 * t16963 - 117) * t16960)

        if Bindx == 2679:
            t16970 = np.cos(phi)
            t16971 = t16970 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (3 * phi1 - 8 * phi2)) * np.sqrt(0.13566e5) * ((1 - t16970) ** (0.11e2 / 0.2e1)) * ((1 + t16970) ** (0.5e1 / 0.2e1)) * (-17 * t16970 - 2 + (253 * t16970 + 33 + 253 * t16971) * t16971)

        if Bindx == 2680:
            t16984 = np.sin(phi)
            t16982 = t16984 ** 2
            t16974 = np.cos(phi)
            t16975 = t16974 ** 2
            t16976 = t16974 * t16975
            t16979 = t16976 ** 2
            t16977 = t16975 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.13566e5) * t16982 ** 2 * (47 * t16975 - 609 * t16976 - 539 * t16979 - 1 + (-135 + 1012 * t16977) * t16977 + (1953 * t16977 - 1771 * t16979 + 43) * t16974)

        if Bindx == 2681:
            t16985 = np.cos(phi)
            t16986 = t16985 ** 2
            t16988 = t16986 ** 2
            t16987 = t16985 * t16986
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((3*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.119e3) * ((1 - t16985) ** (0.9e1 / 0.2e1)) * ((1 + t16985) ** (0.3e1 / 0.2e1)) * (-1140 * t16986 + 3135 * t16988 + 23 + (-3230 + 9614 * t16987) * t16987 + (14421 * t16988 + 57) * t16985)

        if Bindx == 2682:
            t16992 = np.cos(phi)
            t16993 = t16992 ** 2
            t16995 = t16993 ** 2
            t16999 = t16995 ** 2
            t16994 = t16992 * t16993
            t16997 = t16994 ** 2
            t16996 = t16992 * t16995
            t16991 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.34e2) * t16991 ** 2 * (540 * t16993 + 5560 * t16994 - 5530 * t16995 + 21280 * t16997 - 34485 * t16999 - 9 + (-26334 + 19228 * t16996) * t16996 + (44080 * t16997 - 24035 * t16999 - 295) * t16992)

        if Bindx == 2683:
            t17002 = np.cos(phi)
            t17003 = t17002 ** 2
            t17004 = t17002 * t17003
            t17007 = t17004 ** 2
            t17005 = t17003 ** 2
            tfunc[..., c] = (0.75e2 / 0.1024e4*1j) * np.exp((1j) * (3 * phi1 - 4 * phi2)) * ((1 - t17002) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t17002)) * (5474 * t17003 + 4522 * t17004 + 49742 * t17007 - 67 + (-45220 + 81719 * t17005) * t17005 + (-76874 * t17005 + 163438 * t17007 + 306) * t17002)

        if Bindx == 2684:
            t17010 = np.cos(phi)
            t17011 = t17010 ** 2
            t17013 = t17011 ** 2
            t17014 = t17010 * t17013
            t17019 = t17014 ** 2
            t17017 = t17013 ** 2
            t17012 = t17010 * t17011
            t17015 = t17012 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((3*1j) * (phi1 - phi2)) * (-12213 * t17011 - 42105 * t17012 + 137430 * t17013 + 256122 * t17014 + 1090125 * t17017 - 969969 * t17019 + 177 + (-571914 + 326876 * t17015) * t17015 + (-622098 * t17015 + 650845 * t17017 - 245157 * t17019 + 1881) * t17010)

        if Bindx == 2685:
            t17022 = np.cos(phi)
            t17023 = t17022 ** 2
            t17025 = t17023 ** 2
            t17029 = t17025 ** 2
            t17024 = t17022 * t17023
            t17027 = t17024 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.6e1) * ((1 - t17022) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t17022)) * (-5100 * t17023 + 14280 * t17024 + 67830 * t17025 - 244188 * t17027 + 245157 * t17029 + 45 + (-27132 * t17025 - 85272 * t17027 + 163438 * t17029 - 930) * t17022)

        if Bindx == 2686:
            t17032 = np.cos(phi)
            t17033 = t17032 ** 2
            t17035 = t17033 ** 2
            t17039 = t17035 ** 2
            t17034 = t17032 * t17033
            t17037 = t17034 ** 2
            t17036 = t17032 * t17035
            t17031 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.231e3) * t17031 ** 2 * (1080 * t17033 + 1020 * t17034 - 11730 * t17035 + 42636 * t17037 - 61047 * t17039 - 15 + (-5814 + 29716 * t17036) * t17036 + (11628 * t17037 - 7429 * t17039 - 45) * t17032)

        if Bindx == 2687:
            t17042 = np.cos(phi)
            t17043 = t17042 ** 2
            t17044 = t17043 ** 2
            tfunc[..., c] = (0.25e2 / 0.512e3*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.1001e4) * ((1 - t17042) ** (0.3e1 / 0.2e1)) * ((1 + t17042) ** (0.3e1 / 0.2e1)) * t17042 * (-1020 * t17043 + 45 + (-11628 * t17043 + 5814 + 7429 * t17044) * t17044)

        if Bindx == 2688:
            t17048 = np.cos(phi)
            t17049 = t17048 ** 2
            t17051 = t17049 ** 2
            t17055 = t17051 ** 2
            t17050 = t17048 * t17049
            t17053 = t17050 ** 2
            t17052 = t17048 * t17051
            t17047 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.231e3) * t17047 ** 2 * (1080 * t17049 - 1020 * t17050 - 11730 * t17051 + 42636 * t17053 - 61047 * t17055 - 15 + (5814 + 29716 * t17052) * t17052 + (-11628 * t17053 + 7429 * t17055 + 45) * t17048)

        if Bindx == 2689:
            t17058 = np.cos(phi)
            t17059 = t17058 ** 2
            t17061 = t17059 ** 2
            t17065 = t17061 ** 2
            t17060 = t17058 * t17059
            t17063 = t17060 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t17058)) * ((1 + t17058) ** (0.5e1 / 0.2e1)) * (5100 * t17059 + 14280 * t17060 - 67830 * t17061 + 244188 * t17063 - 245157 * t17065 - 45 + (-27132 * t17061 - 85272 * t17063 + 163438 * t17065 - 930) * t17058)

        if Bindx == 2690:
            t17067 = np.cos(phi)
            t17068 = t17067 ** 2
            t17070 = t17068 ** 2
            t17071 = t17067 * t17070
            t17076 = t17071 ** 2
            t17074 = t17070 ** 2
            t17069 = t17067 * t17068
            t17072 = t17069 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((3*1j) * (phi1 + phi2)) * (-12213 * t17068 + 42105 * t17069 + 137430 * t17070 - 256122 * t17071 + 1090125 * t17074 - 969969 * t17076 + 177 + (-571914 + 326876 * t17072) * t17072 + (622098 * t17072 - 650845 * t17074 + 245157 * t17076 - 1881) * t17067)

        if Bindx == 2691:
            t17079 = np.cos(phi)
            t17080 = t17079 ** 2
            t17082 = t17080 ** 2
            t17086 = t17082 ** 2
            t17081 = t17079 * t17080
            t17084 = t17081 ** 2
            tfunc[..., c] = (0.75e2 / 0.1024e4*1j) * np.exp((1j) * (3 * phi1 + 4 * phi2)) * ((1 + t17079) ** (0.7e1 / 0.2e1)) * (-5780 * t17080 + 9996 * t17081 + 40698 * t17082 + 27132 * t17084 - 245157 * t17086 + 67 + (-122094 * t17082 + 213180 * t17084 + 81719 * t17086 + 239) * t17079) * ((1 - t17079) ** (-0.1e1 / 0.2e1))

        if Bindx == 2692:
            t17089 = np.cos(phi)
            t17090 = t17089 ** 2
            t17092 = t17090 ** 2
            t17096 = t17092 ** 2
            t17091 = t17089 * t17090
            t17094 = t17091 ** 2
            t17093 = t17089 * t17092
            t17088 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.34e2) * t17088 ** 2 * (540 * t17090 - 5560 * t17091 - 5530 * t17092 + 21280 * t17094 - 34485 * t17096 - 9 + (26334 + 19228 * t17093) * t17093 + (-44080 * t17094 + 24035 * t17096 + 295) * t17089)

        if Bindx == 2693:
            t17099 = np.cos(phi)
            t17100 = t17099 ** 2
            t17102 = t17100 ** 2
            t17101 = t17099 * t17100
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-1140 * t17100 + 3135 * t17102 + 23 + (3230 + 9614 * t17101) * t17101 + (-14421 * t17102 - 57) * t17099) * ((1 + t17099) ** (0.9e1 / 0.2e1)) * np.sqrt(0.119e3) * np.exp((3*1j) * (phi1 + 2 * phi2)) * ((1 - t17099) ** (0.3e1 / 0.2e1))

        if Bindx == 2694:
            t17115 = np.sin(phi)
            t17113 = t17115 ** 2
            t17105 = np.cos(phi)
            t17106 = t17105 ** 2
            t17107 = t17105 * t17106
            t17110 = t17107 ** 2
            t17108 = t17106 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.13566e5) * t17113 ** 2 * (47 * t17106 + 609 * t17107 - 539 * t17110 - 1 + (-135 + 1012 * t17108) * t17108 + (-1953 * t17108 + 1771 * t17110 - 43) * t17105)

        if Bindx == 2695:
            t17116 = np.cos(phi)
            t17117 = t17116 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (17 * t17116 - 2 + (-253 * t17116 + 33 + 253 * t17117) * t17117) * ((1 + t17116) ** (0.11e2 / 0.2e1)) * np.sqrt(0.13566e5) * np.exp((1j) * (3 * phi1 + 8 * phi2)) * ((1 - t17116) ** (0.5e1 / 0.2e1))

        if Bindx == 2696:
            t17129 = np.sin(phi)
            t17126 = t17129 ** 2
            t17127 = t17129 * t17126
            t17120 = np.cos(phi)
            t17121 = t17120 ** 2
            t17123 = t17121 ** 2
            t17122 = t17120 * t17121
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((3*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.646e3) * t17127 ** 2 * (-510 * t17121 + 825 * t17123 + 17 + (-1050 + 1012 * t17122) * t17122 + (2277 * t17123 + 117) * t17120)

        if Bindx == 2697:
            t17130 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (1 + (-23 + 46 * t17130) * t17130) * ((1 + t17130) ** (0.13e2 / 0.2e1)) * np.sqrt(0.10659e5) * np.exp((1j) * (3 * phi1 + 10 * phi2)) * ((1 - t17130) ** (0.7e1 / 0.2e1))

        if Bindx == 2698:
            t17138 = np.sin(phi)
            t17135 = t17138 ** 2
            t17136 = t17135 ** 2
            t17131 = np.cos(phi)
            t17132 = t17131 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (3 * phi1 + 11 * phi2)) * np.sqrt(0.490314e6) * t17136 ** 2 * (t17131 - 1 + (11 * t17131 + 9 + 4 * t17132) * t17132)

        if Bindx == 2699:
            t17139 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((3*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.81719e5) * ((1 - t17139) ** (0.9e1 / 0.2e1)) * ((1 + t17139) ** (0.15e2 / 0.2e1))

        if Bindx == 2700:
            t17140 = np.cos(phi)
            t17147 = -1 + t17140
            t17146 = 1 + t17140
            t17144 = t17146 ** 2
            t17141 = t17147 ** 2
            t17142 = t17141 ** 2
            tfunc[..., c] = (0.75e2 / 0.4096e4) * np.exp((4*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.81719e5) * t17142 ** 2 * t17144 ** 2

        if Bindx == 2701:
            t17148 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (4 * phi1 - 11 * phi2)) * np.sqrt(0.490314e6) * ((1 - t17148) ** (0.15e2 / 0.2e1)) * ((1 + t17148) ** (0.7e1 / 0.2e1)) * (1 + 3 * t17148)

        if Bindx == 2702:
            t17158 = np.sin(phi)
            t17155 = t17158 ** 2
            t17156 = t17158 * t17155
            t17149 = np.cos(phi)
            t17150 = t17149 ** 2
            t17152 = t17150 ** 2
            t17151 = t17149 * t17150
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((2*1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.10659e5) * t17156 ** 2 * (-85 * t17150 + 235 * t17152 + 5 + (-20 + 69 * t17151) * t17151 + (-230 * t17152 + 26) * t17149)

        if Bindx == 2703:
            t17159 = np.cos(phi)
            t17162 = 253 * t17159 ** 2
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * np.exp((1j) * (4 * phi1 - 9 * phi2)) * np.sqrt(0.646e3) * ((1 - t17159) ** (0.13e2 / 0.2e1)) * ((1 + t17159) ** (0.5e1 / 0.2e1)) * (t17162 - 1 + (t17162 + 55) * t17159)

        if Bindx == 2704:
            t17173 = np.sin(phi)
            t17171 = t17173 ** 2
            t17163 = np.cos(phi)
            t17164 = t17163 ** 2
            t17165 = t17163 * t17164
            t17168 = t17165 ** 2
            t17166 = t17164 ** 2
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((4*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.13566e5) * t17171 ** 2 * (324 * t17164 - 344 * t17165 + 836 * t17168 - 9 + (-1270 + 759 * t17166) * t17166 + (1704 * t17166 - 2024 * t17168 + 24) * t17163)

        if Bindx == 2705:
            t17174 = np.cos(phi)
            t17175 = t17174 ** 2
            t17177 = t17175 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (4 * phi1 - 7 * phi2)) * np.sqrt(0.13566e5) * ((1 - t17174) ** (0.11e2 / 0.2e1)) * ((1 + t17174) ** (0.3e1 / 0.2e1)) * (-30 * t17175 + 1265 * t17177 - 3 + (550 * t17175 + 759 * t17177 - 45) * t17174)

        if Bindx == 2706:
            t17180 = np.cos(phi)
            t17181 = t17180 ** 2
            t17183 = t17181 ** 2
            t17187 = t17183 ** 2
            t17182 = t17180 * t17181
            t17185 = t17182 ** 2
            t17184 = t17180 * t17183
            t17179 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.119e3) * t17179 ** 2 * (-357 * t17181 + 2328 * t17182 + 2078 * t17183 - 1634 * t17185 - 4389 * t17187 + 7 + (-10260 + 4807 * t17184) * t17184 + (17176 * t17185 - 9614 * t17187 - 142) * t17180)

        if Bindx == 2707:
            t17190 = np.cos(phi)
            t17191 = t17190 ** 2
            t17192 = t17190 * t17191
            t17195 = t17192 ** 2
            t17193 = t17191 ** 2
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.34e2) * ((1 - t17190) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t17190)) * (-3591 * t17191 - 17955 * t17192 - 5985 * t17193 + 100947 * t17195 + 85 + (65835 * t17193 + 43263 * t17195 + 441) * t17190)

        if Bindx == 2708:
            t17197 = np.cos(phi)
            t17198 = t17197 ** 2
            t17200 = t17198 ** 2
            t17201 = t17197 * t17200
            t17206 = t17201 ** 2
            t17204 = t17200 ** 2
            t17199 = t17197 * t17198
            t17202 = t17199 ** 2
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((4*1j) * (phi1 - phi2)) * (-14818 * t17198 - 214340 * t17199 + 174625 * t17200 + 1193944 * t17201 + 1884705 * t17204 - 1939938 * t17206 + 239 + (-838236 + 735471 * t17202) * t17202 + (-2705448 * t17202 + 2693820 * t17204 - 980628 * t17206 + 10604) * t17197)

        if Bindx == 2709:
            t17209 = np.cos(phi)
            t17210 = t17209 ** 2
            t17211 = t17209 * t17210
            t17214 = t17211 ** 2
            t17212 = t17210 ** 2
            tfunc[..., c] = (0.75e2 / 0.1024e4*1j) * np.exp((1j) * (4 * phi1 - 3 * phi2)) * ((1 - t17209) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t17209)) * (5474 * t17210 + 4522 * t17211 + 49742 * t17214 - 67 + (-45220 + 81719 * t17212) * t17212 + (-76874 * t17212 + 163438 * t17214 + 306) * t17209)

        if Bindx == 2710:
            t17218 = np.cos(phi)
            t17219 = t17218 ** 2
            t17221 = t17219 ** 2
            t17225 = t17221 ** 2
            t17220 = t17218 * t17219
            t17223 = t17220 ** 2
            t17222 = t17218 * t17221
            t17217 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.6e1) * t17217 ** 2 * (10385 * t17219 + 29240 * t17220 - 105910 * t17221 + 366282 * t17223 - 508079 * t17225 - 155 + (-153748 + 245157 * t17222) * t17222 + (281656 * t17223 - 163438 * t17225 - 1390) * t17218)

        if Bindx == 2711:
            t17228 = np.cos(phi)
            t17229 = t17228 ** 2
            t17230 = t17228 * t17229
            t17233 = t17230 ** 2
            t17231 = t17229 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (4 * phi1 - phi2)) * np.sqrt(0.231e3) * ((1 - t17228) ** (0.5e1 / 0.2e1)) * ((1 + t17228) ** (0.3e1 / 0.2e1)) * (-510 * t17229 + 3230 * t17230 - 22610 * t17233 + 5 + (6460 + 22287 * t17231) * t17231 + (-13566 * t17231 + 14858 * t17233 - 170) * t17228)

        if Bindx == 2712:
            t17243 = np.sin(phi)
            t17241 = t17243 ** 2
            t17236 = np.cos(phi)
            t17237 = t17236 ** 2
            t17238 = t17237 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4) * np.exp((4*1j) * phi1) * np.sqrt(0.1001e4) * t17241 ** 2 * (-340 * t17237 + 5 + (-9044 * t17237 + 3230 + 7429 * t17238) * t17238)

        if Bindx == 2713:
            t17244 = np.cos(phi)
            t17245 = t17244 ** 2
            t17246 = t17244 * t17245
            t17249 = t17246 ** 2
            t17247 = t17245 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (4 * phi1 + phi2)) * np.sqrt(0.231e3) * ((1 - t17244) ** (0.3e1 / 0.2e1)) * ((1 + t17244) ** (0.5e1 / 0.2e1)) * (-510 * t17245 - 3230 * t17246 - 22610 * t17249 + 5 + (6460 + 22287 * t17247) * t17247 + (13566 * t17247 - 14858 * t17249 + 170) * t17244)

        if Bindx == 2714:
            t17253 = np.cos(phi)
            t17254 = t17253 ** 2
            t17256 = t17254 ** 2
            t17260 = t17256 ** 2
            t17255 = t17253 * t17254
            t17258 = t17255 ** 2
            t17257 = t17253 * t17256
            t17252 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.6e1) * t17252 ** 2 * (10385 * t17254 - 29240 * t17255 - 105910 * t17256 + 366282 * t17258 - 508079 * t17260 - 155 + (153748 + 245157 * t17257) * t17257 + (-281656 * t17258 + 163438 * t17260 + 1390) * t17253)

        if Bindx == 2715:
            t17263 = np.cos(phi)
            t17264 = t17263 ** 2
            t17265 = t17263 * t17264
            t17268 = t17265 ** 2
            t17266 = t17264 ** 2
            tfunc[..., c] = (-0.75e2 / 0.1024e4*1j) * np.exp((1j) * (4 * phi1 + 3 * phi2)) * np.sqrt((1 - t17263)) * ((1 + t17263) ** (0.7e1 / 0.2e1)) * (5474 * t17264 - 4522 * t17265 + 49742 * t17268 - 67 + (-45220 + 81719 * t17266) * t17266 + (76874 * t17266 - 163438 * t17268 - 306) * t17263)

        if Bindx == 2716:
            t17271 = np.cos(phi)
            t17272 = t17271 ** 2
            t17274 = t17272 ** 2
            t17275 = t17271 * t17274
            t17280 = t17275 ** 2
            t17278 = t17274 ** 2
            t17273 = t17271 * t17272
            t17276 = t17273 ** 2
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((4*1j) * (phi1 + phi2)) * (-14818 * t17272 + 214340 * t17273 + 174625 * t17274 - 1193944 * t17275 + 1884705 * t17278 - 1939938 * t17280 + 239 + (-838236 + 735471 * t17276) * t17276 + (2705448 * t17276 - 2693820 * t17278 + 980628 * t17280 - 10604) * t17271)

        if Bindx == 2717:
            t17283 = np.cos(phi)
            t17284 = t17283 ** 2
            t17285 = t17283 * t17284
            t17288 = t17285 ** 2
            t17286 = t17284 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.34e2) * ((1 + t17283) ** (0.9e1 / 0.2e1)) * (-3150 * t17284 + 21546 * t17285 + 166782 * t17288 + 85 + (-23940 + 43263 * t17286) * t17286 + (-59850 * t17286 - 144210 * t17288 - 526) * t17283) * ((1 - t17283) ** (-0.1e1 / 0.2e1))

        if Bindx == 2718:
            t17292 = np.cos(phi)
            t17293 = t17292 ** 2
            t17295 = t17293 ** 2
            t17299 = t17295 ** 2
            t17294 = t17292 * t17293
            t17297 = t17294 ** 2
            t17296 = t17292 * t17295
            t17291 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.119e3) * t17291 ** 2 * (-357 * t17293 - 2328 * t17294 + 2078 * t17295 - 1634 * t17297 - 4389 * t17299 + 7 + (10260 + 4807 * t17296) * t17296 + (-17176 * t17297 + 9614 * t17299 + 142) * t17292)

        if Bindx == 2719:
            t17302 = np.cos(phi)
            t17303 = t17302 ** 2
            t17305 = t17303 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (30 * t17303 - 1265 * t17305 + 3 + (550 * t17303 + 759 * t17305 - 45) * t17302) * ((1 + t17302) ** (0.11e2 / 0.2e1)) * np.sqrt(0.13566e5) * np.exp((1j) * (4 * phi1 + 7 * phi2)) * ((1 - t17302) ** (0.3e1 / 0.2e1))

        if Bindx == 2720:
            t17317 = np.sin(phi)
            t17315 = t17317 ** 2
            t17307 = np.cos(phi)
            t17308 = t17307 ** 2
            t17309 = t17307 * t17308
            t17312 = t17309 ** 2
            t17310 = t17308 ** 2
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((4*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.13566e5) * t17315 ** 2 * (324 * t17308 + 344 * t17309 + 836 * t17312 - 9 + (-1270 + 759 * t17310) * t17310 + (-1704 * t17310 + 2024 * t17312 - 24) * t17307)

        if Bindx == 2721:
            t17318 = np.cos(phi)
            t17319 = t17318 ** 2
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * (-253 * t17319 + 1 + (253 * t17319 + 55) * t17318) * ((1 + t17318) ** (0.13e2 / 0.2e1)) * np.sqrt(0.646e3) * np.exp((1j) * (4 * phi1 + 9 * phi2)) * ((1 - t17318) ** (0.5e1 / 0.2e1))

        if Bindx == 2722:
            t17330 = np.sin(phi)
            t17327 = t17330 ** 2
            t17328 = t17330 * t17327
            t17321 = np.cos(phi)
            t17322 = t17321 ** 2
            t17324 = t17322 ** 2
            t17323 = t17321 * t17322
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((2*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.10659e5) * t17328 ** 2 * (-85 * t17322 + 235 * t17324 + 5 + (20 + 69 * t17323) * t17323 + (230 * t17324 - 26) * t17321)

        if Bindx == 2723:
            t17331 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (-1 + 3 * t17331) * ((1 + t17331) ** (0.15e2 / 0.2e1)) * np.sqrt(0.490314e6) * np.exp((1j) * (4 * phi1 + 11 * phi2)) * ((1 - t17331) ** (0.7e1 / 0.2e1))

        if Bindx == 2724:
            t17332 = np.cos(phi)
            t17339 = -1 + t17332
            t17338 = 1 + t17332
            t17335 = t17338 ** 2
            t17336 = t17335 ** 2
            t17333 = t17339 ** 2
            tfunc[..., c] = (0.75e2 / 0.4096e4) * np.exp((4*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.81719e5) * t17333 ** 2 * t17336 ** 2

        if Bindx == 2725:
            t17340 = np.cos(phi)
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * np.exp((1j) * (5 * phi1 - 12 * phi2)) * np.sqrt(0.9614e4) * ((1 - t17340) ** (0.17e2 / 0.2e1)) * ((1 + t17340) ** (0.7e1 / 0.2e1))

        if Bindx == 2726:
            t17341 = np.cos(phi)
            t17348 = -1 + t17341
            t17347 = 1 + t17341
            t17345 = t17347 ** 2
            t17342 = t17348 ** 2
            t17343 = t17342 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 - 11 * phi2)) * np.sqrt(0.14421e5) * t17343 ** 2 * t17347 * t17345 * (5 + 12 * t17341)

        if Bindx == 2727:
            t17349 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((5*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.1254e4) * ((1 - t17349) ** (0.15e2 / 0.2e1)) * ((1 + t17349) ** (0.5e1 / 0.2e1)) * (19 + (115 + 138 * t17349) * t17349)

        if Bindx == 2728:
            t17360 = np.sin(phi)
            t17358 = t17360 ** 2
            t17350 = np.cos(phi)
            t17351 = t17350 ** 2
            t17352 = t17350 * t17351
            t17355 = t17352 ** 2
            t17353 = t17351 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 - 9 * phi2)) * np.sqrt(0.19e2) * t17358 ** 2 * (575 * t17351 + 1383 * t17352 + 4213 * t17355 - 25 + (-3535 + 1012 * t17353) * t17353 + (465 * t17353 - 3795 * t17355 - 293) * t17350)

        if Bindx == 2729:
            t17361 = np.cos(phi)
            t17362 = t17361 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (5 * phi1 - 8 * phi2)) * np.sqrt(0.399e3) * ((1 - t17361) ** (0.13e2 / 0.2e1)) * ((1 + t17361) ** (0.3e1 / 0.2e1)) * (75 * t17361 - 6 + (1265 * t17361 + 627 + 759 * t17362) * t17362)

        if Bindx == 2730:
            t17366 = np.cos(phi)
            t17367 = t17366 ** 2
            t17369 = t17367 ** 2
            t17373 = t17369 ** 2
            t17368 = t17366 * t17367
            t17371 = t17368 ** 2
            t17370 = t17366 * t17369
            t17365 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.399e3) * t17365 ** 2 * (-1080 * t17367 + 500 * t17368 + 6010 * t17369 - 10140 * t17371 + 2915 * t17373 + 27 + (-5138 + 3036 * t17370) * t17370 + (12740 * t17371 - 8855 * t17373 - 15) * t17366)

        if Bindx == 2731:
            t17376 = np.cos(phi)
            t17377 = t17376 ** 2
            t17379 = t17377 ** 2
            t17378 = t17376 * t17377
            tfunc[..., c] = (0.75e2 / 0.2048e4*1j) * np.exp((1j) * (5 * phi1 - 6 * phi2)) * np.sqrt(0.14e2) * ((1 - t17376) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t17376)) * (-1140 * t17377 + 19855 * t17379 - 25 + (4750 + 9614 * t17378) * t17378 + (24035 * t17379 - 513) * t17376)

        if Bindx == 2732:
            t17382 = np.cos(phi)
            t17383 = t17382 ** 2
            t17385 = t17383 ** 2
            t17386 = t17382 * t17385
            t17391 = t17386 ** 2
            t17389 = t17385 ** 2
            t17384 = t17382 * t17383
            t17387 = t17384 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((5*1j) * (phi1 - phi2)) * (13939 * t17383 - 79585 * t17384 - 98650 * t17385 + 419402 * t17386 + 25365 * t17389 - 292809 * t17391 - 263 + (180390 + 173052 * t17387) * t17387 + (-949506 * t17387 + 964725 * t17389 - 360525 * t17391 + 4465) * t17382)

        if Bindx == 2733:
            t17394 = np.cos(phi)
            t17395 = t17394 ** 2
            t17396 = t17394 * t17395
            t17399 = t17396 ** 2
            t17397 = t17395 ** 2
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.34e2) * ((1 - t17394) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t17394)) * (-3591 * t17395 - 17955 * t17396 - 5985 * t17397 + 100947 * t17399 + 85 + (65835 * t17397 + 43263 * t17399 + 441) * t17394)

        if Bindx == 2734:
            t17402 = np.cos(phi)
            t17403 = t17402 ** 2
            t17405 = t17403 ** 2
            t17409 = t17405 ** 2
            t17404 = t17402 * t17403
            t17407 = t17404 ** 2
            t17406 = t17402 * t17405
            t17401 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.34e2) * t17401 ** 2 * (540 * t17403 + 5560 * t17404 - 5530 * t17405 + 21280 * t17407 - 34485 * t17409 - 9 + (-26334 + 19228 * t17406) * t17406 + (44080 * t17407 - 24035 * t17409 - 295) * t17402)

        if Bindx == 2735:
            t17412 = np.cos(phi)
            t17413 = t17412 ** 2
            t17414 = t17412 * t17413
            t17417 = t17414 ** 2
            t17415 = t17413 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.51e2) * ((1 - t17412) ** (0.7e1 / 0.2e1)) * ((1 + t17412) ** (0.3e1 / 0.2e1)) * (1995 * t17413 - 1330 * t17414 - 17955 * t17415 + 33649 * t17417 - 25 + (-8778 * t17415 + 28842 * t17417 + 210) * t17412)

        if Bindx == 2736:
            t17429 = np.sin(phi)
            t17427 = t17429 ** 2
            t17419 = np.cos(phi)
            t17420 = t17419 ** 2
            t17421 = t17419 * t17420
            t17424 = t17421 ** 2
            t17422 = t17420 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 - phi2)) * np.sqrt(0.7854e4) * t17427 ** 2 * (-315 * t17420 - 475 * t17421 - 7049 * t17424 + 5 + (2755 + 5244 * t17422) * t17422 + (1995 * t17422 - 2185 * t17424 + 25) * t17419)

        if Bindx == 2737:
            t17430 = np.cos(phi)
            t17431 = t17430 ** 2
            t17432 = t17431 ** 2
            tfunc[..., c] = (-0.75e2 / 0.1024e4*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.34034e5) * ((1 - t17430) ** (0.5e1 / 0.2e1)) * ((1 + t17430) ** (0.5e1 / 0.2e1)) * t17430 * (-399 * t17432 - 5 + (437 * t17432 + 95) * t17431)

        if Bindx == 2738:
            t17444 = np.sin(phi)
            t17442 = t17444 ** 2
            t17434 = np.cos(phi)
            t17435 = t17434 ** 2
            t17436 = t17434 * t17435
            t17439 = t17436 ** 2
            t17437 = t17435 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 + phi2)) * np.sqrt(0.7854e4) * t17442 ** 2 * (-315 * t17435 + 475 * t17436 - 7049 * t17439 + 5 + (2755 + 5244 * t17437) * t17437 + (-1995 * t17437 + 2185 * t17439 - 25) * t17434)

        if Bindx == 2739:
            t17445 = np.cos(phi)
            t17446 = t17445 ** 2
            t17447 = t17445 * t17446
            t17450 = t17447 ** 2
            t17448 = t17446 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.51e2) * ((1 - t17445) ** (0.3e1 / 0.2e1)) * ((1 + t17445) ** (0.7e1 / 0.2e1)) * (-1995 * t17446 - 1330 * t17447 + 17955 * t17448 - 33649 * t17450 + 25 + (-8778 * t17448 + 28842 * t17450 + 210) * t17445)

        if Bindx == 2740:
            t17453 = np.cos(phi)
            t17454 = t17453 ** 2
            t17456 = t17454 ** 2
            t17460 = t17456 ** 2
            t17455 = t17453 * t17454
            t17458 = t17455 ** 2
            t17457 = t17453 * t17456
            t17452 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.34e2) * t17452 ** 2 * (540 * t17454 - 5560 * t17455 - 5530 * t17456 + 21280 * t17458 - 34485 * t17460 - 9 + (26334 + 19228 * t17457) * t17457 + (-44080 * t17458 + 24035 * t17460 + 295) * t17453)

        if Bindx == 2741:
            t17463 = np.cos(phi)
            t17464 = t17463 ** 2
            t17465 = t17463 * t17464
            t17468 = t17465 ** 2
            t17466 = t17464 ** 2
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.34e2) * np.sqrt((1 - t17463)) * ((1 + t17463) ** (0.9e1 / 0.2e1)) * (3591 * t17464 - 17955 * t17465 + 5985 * t17466 - 100947 * t17468 - 85 + (65835 * t17466 + 43263 * t17468 + 441) * t17463)

        if Bindx == 2742:
            t17470 = np.cos(phi)
            t17471 = t17470 ** 2
            t17473 = t17471 ** 2
            t17474 = t17470 * t17473
            t17479 = t17474 ** 2
            t17477 = t17473 ** 2
            t17472 = t17470 * t17471
            t17475 = t17472 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((5*1j) * (phi1 + phi2)) * (13939 * t17471 + 79585 * t17472 - 98650 * t17473 - 419402 * t17474 + 25365 * t17477 - 292809 * t17479 - 263 + (180390 + 173052 * t17475) * t17475 + (949506 * t17475 - 964725 * t17477 + 360525 * t17479 - 4465) * t17470)

        if Bindx == 2743:
            t17482 = np.cos(phi)
            t17483 = t17482 ** 2
            t17484 = t17482 * t17483
            t17487 = t17484 ** 2
            t17485 = t17483 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4*1j) * np.exp((1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.14e2) * ((1 + t17482) ** (0.11e2 / 0.2e1)) * (1653 * t17483 + 3610 * t17484 - 24605 * t17485 - 33649 * t17487 + 25 + (43890 * t17485 + 9614 * t17487 - 538) * t17482) * ((1 - t17482) ** (-0.1e1 / 0.2e1))

        if Bindx == 2744:
            t17490 = np.cos(phi)
            t17491 = t17490 ** 2
            t17493 = t17491 ** 2
            t17497 = t17493 ** 2
            t17492 = t17490 * t17491
            t17495 = t17492 ** 2
            t17494 = t17490 * t17493
            t17489 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.399e3) * t17489 ** 2 * (-1080 * t17491 - 500 * t17492 + 6010 * t17493 - 10140 * t17495 + 2915 * t17497 + 27 + (5138 + 3036 * t17494) * t17494 + (-12740 * t17495 + 8855 * t17497 + 15) * t17490)

        if Bindx == 2745:
            t17500 = np.cos(phi)
            t17501 = t17500 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-75 * t17500 - 6 + (-1265 * t17500 + 627 + 759 * t17501) * t17501) * ((1 + t17500) ** (0.13e2 / 0.2e1)) * np.sqrt(0.399e3) * np.exp((1j) * (5 * phi1 + 8 * phi2)) * ((1 - t17500) ** (0.3e1 / 0.2e1))

        if Bindx == 2746:
            t17514 = np.sin(phi)
            t17512 = t17514 ** 2
            t17504 = np.cos(phi)
            t17505 = t17504 ** 2
            t17506 = t17504 * t17505
            t17509 = t17506 ** 2
            t17507 = t17505 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 + 9 * phi2)) * np.sqrt(0.19e2) * t17512 ** 2 * (575 * t17505 - 1383 * t17506 + 4213 * t17509 - 25 + (-3535 + 1012 * t17507) * t17507 + (-465 * t17507 + 3795 * t17509 + 293) * t17504)

        if Bindx == 2747:
            t17515 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * (19 + (-115 + 138 * t17515) * t17515) * ((1 + t17515) ** (0.15e2 / 0.2e1)) * np.sqrt(0.1254e4) * np.exp((5*1j) * (phi1 + 2 * phi2)) * ((1 - t17515) ** (0.5e1 / 0.2e1))

        if Bindx == 2748:
            t17525 = np.sin(phi)
            t17522 = t17525 ** 2
            t17523 = t17525 * t17522
            t17516 = np.cos(phi)
            t17517 = t17516 ** 2
            t17519 = t17517 ** 2
            t17518 = t17516 * t17517
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (5 * phi1 + 11 * phi2)) * np.sqrt(0.14421e5) * t17523 ** 2 * (10 * t17517 + 95 * t17519 - 5 + (70 + 12 * t17518) * t17518 + (55 * t17519 - 13) * t17516)

        if Bindx == 2749:
            t17526 = np.cos(phi)
            tfunc[..., c] = (0.75e2 / 0.2048e4*1j) * np.exp((1j) * (5 * phi1 + 12 * phi2)) * np.sqrt(0.9614e4) * ((1 - t17526) ** (0.7e1 / 0.2e1)) * ((1 + t17526) ** (0.17e2 / 0.2e1))

        if Bindx == 2750:
            t17527 = np.cos(phi)
            t17535 = -1 + t17527
            t17534 = 1 + t17527
            t17532 = t17534 ** 2
            t17528 = t17535 ** 2
            t17529 = t17528 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((6*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.33649e5) * t17535 * t17529 ** 2 * t17534 * t17532

        if Bindx == 2751:
            t17536 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (6 * phi1 - 11 * phi2)) * np.sqrt(0.201894e6) * ((1 - t17536) ** (0.17e2 / 0.2e1)) * ((1 + t17536) ** (0.5e1 / 0.2e1)) * (1 + 2 * t17536)

        if Bindx == 2752:
            t17547 = np.sin(phi)
            t17545 = t17547 ** 2
            t17537 = np.cos(phi)
            t17538 = t17537 ** 2
            t17539 = t17537 * t17538
            t17542 = t17539 ** 2
            t17540 = t17538 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.4389e4) * t17545 ** 2 * (-40 * t17538 + 107 * t17539 + 212 * t17542 + 5 + (-40 + 23 * t17540) * t17540 + (-145 * t17540 - 115 * t17542 - 7) * t17537)

        if Bindx == 2753:
            t17548 = np.cos(phi)
            t17549 = t17548 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((3*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.266e3) * ((1 - t17548) ** (0.15e2 / 0.2e1)) * ((1 + t17548) ** (0.3e1 / 0.2e1)) * (759 * t17549 + 37 + (506 * t17549 + 330) * t17548)

        if Bindx == 2754:
            t17552 = np.cos(phi)
            t17553 = t17552 ** 2
            t17555 = t17553 ** 2
            t17559 = t17555 ** 2
            t17554 = t17552 * t17553
            t17557 = t17554 ** 2
            t17556 = t17552 * t17555
            t17551 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((2*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.114e3) * t17551 ** 2 * (-513 * t17553 - 2928 * t17554 + 5094 * t17555 - 12714 * t17557 + 7623 * t17559 + 19 + (3960 + 1771 * t17556) * t17556 + (4368 * t17557 - 7084 * t17559 + 404) * t17552)

        if Bindx == 2755:
            t17562 = np.cos(phi)
            t17563 = t17562 ** 2
            t17565 = t17563 ** 2
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (6 * phi1 - 7 * phi2)) * np.sqrt(0.114e3) * ((1 - t17562) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t17562)) * (2590 * t17563 + 8855 * t17565 - 29 + (7700 * t17563 + 3542 * t17565 + 190) * t17562)

        if Bindx == 2756:
            t17567 = np.cos(phi)
            t17568 = t17567 ** 2
            t17570 = t17568 ** 2
            t17571 = t17567 * t17570
            t17576 = t17571 ** 2
            t17574 = t17570 ** 2
            t17569 = t17567 * t17568
            t17572 = t17569 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((6*1j) * (phi1 - phi2)) * (11298 * t17568 - 2695 * t17569 - 75285 * t17570 + 49266 * t17571 - 158175 * t17574 + 8778 * t17576 - 269 + (180516 + 33649 * t17572) * t17572 + (-178182 * t17572 + 232085 * t17574 - 100947 * t17576 - 39) * t17567)

        if Bindx == 2757:
            t17579 = np.cos(phi)
            t17580 = t17579 ** 2
            t17582 = t17580 ** 2
            t17581 = t17579 * t17580
            tfunc[..., c] = (0.75e2 / 0.2048e4*1j) * np.exp((1j) * (6 * phi1 - 5 * phi2)) * np.sqrt(0.14e2) * ((1 - t17579) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t17579)) * (-1140 * t17580 + 19855 * t17582 - 25 + (4750 + 9614 * t17581) * t17581 + (24035 * t17582 - 513) * t17579)

        if Bindx == 2758:
            t17586 = np.cos(phi)
            t17587 = t17586 ** 2
            t17589 = t17587 ** 2
            t17593 = t17589 ** 2
            t17588 = t17586 * t17587
            t17591 = t17588 ** 2
            t17590 = t17586 * t17589
            t17585 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.119e3) * t17585 ** 2 * (-357 * t17587 + 2328 * t17588 + 2078 * t17589 - 1634 * t17591 - 4389 * t17593 + 7 + (-10260 + 4807 * t17590) * t17590 + (17176 * t17591 - 9614 * t17593 - 142) * t17586)

        if Bindx == 2759:
            t17596 = np.cos(phi)
            t17597 = t17596 ** 2
            t17599 = t17597 ** 2
            t17598 = t17596 * t17597
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((3*1j) * (2 * phi1 - phi2)) * np.sqrt(0.119e3) * ((1 - t17596) ** (0.9e1 / 0.2e1)) * ((1 + t17596) ** (0.3e1 / 0.2e1)) * (-1140 * t17597 + 3135 * t17599 + 23 + (-3230 + 9614 * t17598) * t17598 + (14421 * t17599 + 57) * t17596)

        if Bindx == 2760:
            t17612 = np.sin(phi)
            t17610 = t17612 ** 2
            t17602 = np.cos(phi)
            t17603 = t17602 ** 2
            t17604 = t17602 * t17603
            t17607 = t17604 ** 2
            t17605 = t17603 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.714e3) * t17610 ** 2 * (-280 * t17603 - 1425 * t17604 - 5852 * t17607 + 5 + (2280 + 4807 * t17605) * t17605 + (5187 * t17605 - 4807 * t17607 + 85) * t17602)

        if Bindx == 2761:
            t17613 = np.cos(phi)
            t17614 = t17613 ** 2
            t17616 = t17614 ** 2
            t17615 = t17613 * t17614
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (6 * phi1 - phi2)) * np.sqrt(0.561e3) * ((1 - t17613) ** (0.7e1 / 0.2e1)) * ((1 + t17613) ** (0.5e1 / 0.2e1)) * (380 * t17614 - 3325 * t17616 - 5 + (-1330 + 6118 * t17615) * t17615 + (3059 * t17616 + 95) * t17613)

        if Bindx == 2762:
            t17626 = np.sin(phi)
            t17623 = t17626 ** 2
            t17624 = t17626 * t17623
            t17619 = np.cos(phi)
            t17620 = t17619 ** 2
            t17621 = t17620 ** 2
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((6*1j) * phi1) * np.sqrt(0.2431e4) * t17624 ** 2 * (-1995 * t17621 - 5 + (3059 * t17621 + 285) * t17620)

        if Bindx == 2763:
            t17627 = np.cos(phi)
            t17628 = t17627 ** 2
            t17630 = t17628 ** 2
            t17629 = t17627 * t17628
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (6 * phi1 + phi2)) * np.sqrt(0.561e3) * ((1 - t17627) ** (0.5e1 / 0.2e1)) * ((1 + t17627) ** (0.7e1 / 0.2e1)) * (380 * t17628 - 3325 * t17630 - 5 + (1330 + 6118 * t17629) * t17629 + (-3059 * t17630 - 95) * t17627)

        if Bindx == 2764:
            t17643 = np.sin(phi)
            t17641 = t17643 ** 2
            t17633 = np.cos(phi)
            t17634 = t17633 ** 2
            t17635 = t17633 * t17634
            t17638 = t17635 ** 2
            t17636 = t17634 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.714e3) * t17641 ** 2 * (-280 * t17634 + 1425 * t17635 - 5852 * t17638 + 5 + (2280 + 4807 * t17636) * t17636 + (-5187 * t17636 + 4807 * t17638 - 85) * t17633)

        if Bindx == 2765:
            t17644 = np.cos(phi)
            t17645 = t17644 ** 2
            t17647 = t17645 ** 2
            t17646 = t17644 * t17645
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((3*1j) * (2 * phi1 + phi2)) * np.sqrt(0.119e3) * ((1 - t17644) ** (0.3e1 / 0.2e1)) * ((1 + t17644) ** (0.9e1 / 0.2e1)) * (-1140 * t17645 + 3135 * t17647 + 23 + (3230 + 9614 * t17646) * t17646 + (-14421 * t17647 - 57) * t17644)

        if Bindx == 2766:
            t17651 = np.cos(phi)
            t17652 = t17651 ** 2
            t17654 = t17652 ** 2
            t17658 = t17654 ** 2
            t17653 = t17651 * t17652
            t17656 = t17653 ** 2
            t17655 = t17651 * t17654
            t17650 = np.sin(phi)
            tfunc[..., c] = -(0.75e2 / 0.2048e4) * np.exp((2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.119e3) * t17650 ** 2 * (-357 * t17652 - 2328 * t17653 + 2078 * t17654 - 1634 * t17656 - 4389 * t17658 + 7 + (10260 + 4807 * t17655) * t17655 + (-17176 * t17656 + 9614 * t17658 + 142) * t17651)

        if Bindx == 2767:
            t17661 = np.cos(phi)
            t17662 = t17661 ** 2
            t17664 = t17662 ** 2
            t17663 = t17661 * t17662
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * np.exp((1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t17661)) * ((1 + t17661) ** (0.11e2 / 0.2e1)) * (-1140 * t17662 + 19855 * t17664 - 25 + (-4750 + 9614 * t17663) * t17663 + (-24035 * t17664 + 513) * t17661)

        if Bindx == 2768:
            t17667 = np.cos(phi)
            t17668 = t17667 ** 2
            t17670 = t17668 ** 2
            t17671 = t17667 * t17670
            t17676 = t17671 ** 2
            t17674 = t17670 ** 2
            t17669 = t17667 * t17668
            t17672 = t17669 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((6*1j) * (phi1 + phi2)) * (11298 * t17668 + 2695 * t17669 - 75285 * t17670 - 49266 * t17671 - 158175 * t17674 + 8778 * t17676 - 269 + (180516 + 33649 * t17672) * t17672 + (178182 * t17672 - 232085 * t17674 + 100947 * t17676 + 39) * t17667)

        if Bindx == 2769:
            t17679 = np.cos(phi)
            t17680 = t17679 ** 2
            t17682 = t17680 ** 2
            t17681 = t17679 * t17680
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.114e3) * ((1 + t17679) ** (0.13e2 / 0.2e1)) * (2780 * t17680 + 16555 * t17682 - 29 + (-10290 + 3542 * t17681) * t17681 + (-12397 * t17682 - 161) * t17679) * ((1 - t17679) ** (-0.1e1 / 0.2e1))

        if Bindx == 2770:
            t17686 = np.cos(phi)
            t17687 = t17686 ** 2
            t17689 = t17687 ** 2
            t17693 = t17689 ** 2
            t17688 = t17686 * t17687
            t17691 = t17688 ** 2
            t17690 = t17686 * t17689
            t17685 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((2*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.114e3) * t17685 ** 2 * (-513 * t17687 + 2928 * t17688 + 5094 * t17689 - 12714 * t17691 + 7623 * t17693 + 19 + (-3960 + 1771 * t17690) * t17690 + (-4368 * t17691 + 7084 * t17693 - 404) * t17686)

        if Bindx == 2771:
            t17696 = np.cos(phi)
            t17697 = t17696 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (-759 * t17697 - 37 + (506 * t17697 + 330) * t17696) * ((1 + t17696) ** (0.15e2 / 0.2e1)) * np.sqrt(0.266e3) * np.exp((3*1j) * (2 * phi1 + 3 * phi2)) * ((1 - t17696) ** (0.3e1 / 0.2e1))

        if Bindx == 2772:
            t17709 = np.sin(phi)
            t17707 = t17709 ** 2
            t17699 = np.cos(phi)
            t17700 = t17699 ** 2
            t17701 = t17699 * t17700
            t17704 = t17701 ** 2
            t17702 = t17700 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.4389e4) * t17707 ** 2 * (-40 * t17700 - 107 * t17701 + 212 * t17704 + 5 + (-40 + 23 * t17702) * t17702 + (145 * t17702 + 115 * t17704 + 7) * t17699)

        if Bindx == 2773:
            t17710 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * (2 * t17710 - 1) * ((1 + t17710) ** (0.17e2 / 0.2e1)) * np.sqrt(0.201894e6) * np.exp((1j) * (6 * phi1 + 11 * phi2)) * ((1 - t17710) ** (0.5e1 / 0.2e1))

        if Bindx == 2774:
            t17711 = np.cos(phi)
            t17719 = -1 + t17711
            t17718 = 1 + t17711
            t17714 = t17718 ** 2
            t17715 = t17714 ** 2
            t17712 = t17719 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((6*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.33649e5) * t17719 * t17712 * t17718 * t17715 ** 2

        if Bindx == 2775:
            t17720 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (7 * phi1 - 12 * phi2)) * np.sqrt(0.10626e5) * ((1 - t17720) ** (0.19e2 / 0.2e1)) * ((1 + t17720) ** (0.5e1 / 0.2e1))

        if Bindx == 2776:
            t17722 = np.cos(phi)
            t17727 = -1 + t17722
            t17723 = t17727 ** 2
            t17724 = t17723 ** 2
            t17721 = 1 + t17722
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 - 11 * phi2)) * np.sqrt(0.1771e4) * t17727 * t17724 ** 2 * t17721 ** 2 * (7 + 12 * t17722)

        if Bindx == 2777:
            t17728 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (7 * phi1 - 10 * phi2)) * np.sqrt(0.154e3) * ((1 - t17728) ** (0.17e2 / 0.2e1)) * ((1 + t17728) ** (0.3e1 / 0.2e1)) * (43 + (161 + 138 * t17728) * t17728)

        if Bindx == 2778:
            t17730 = np.cos(phi)
            t17731 = t17730 ** 2
            t17733 = t17731 ** 2
            t17737 = t17733 ** 2
            t17732 = t17730 * t17731
            t17735 = t17732 ** 2
            t17734 = t17730 * t17733
            t17729 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 - 9 * phi2)) * np.sqrt(0.21e2) * t17729 ** 2 * (1764 * t17731 - 3336 * t17732 - 2142 * t17733 - 7728 * t17735 + 9801 * t17737 - 147 + (10710 + 1012 * t17734) * t17734 + (-4704 * t17735 - 5313 * t17737 + 83) * t17730)

        if Bindx == 2779:
            t17740 = np.cos(phi)
            t17741 = t17740 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (7 * phi1 - 8 * phi2)) * ((1 - t17740) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t17740)) * (3087 * t17740 + 278 + (12397 * t17740 + 9933 + 5313 * t17741) * t17741)

        if Bindx == 2780:
            t17744 = np.cos(phi)
            t17745 = t17744 ** 2
            t17747 = t17745 ** 2
            t17748 = t17744 * t17747
            t17753 = t17748 ** 2
            t17751 = t17747 ** 2
            t17746 = t17744 * t17745
            t17749 = t17746 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((7*1j) * (phi1 - phi2)) * (4669 * t17745 + 38745 * t17746 - 57750 * t17747 - 88746 * t17748 - 245565 * t17751 + 78617 * t17753 - 161 + (199962 + 21252 * t17749) * t17749 + (14994 * t17749 + 125195 * t17751 - 86779 * t17753 - 4433) * t17744)

        if Bindx == 2781:
            t17756 = np.cos(phi)
            t17757 = t17756 ** 2
            t17759 = t17757 ** 2
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (7 * phi1 - 6 * phi2)) * np.sqrt(0.114e3) * ((1 - t17756) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t17756)) * (2590 * t17757 + 8855 * t17759 - 29 + (7700 * t17757 + 3542 * t17759 + 190) * t17756)

        if Bindx == 2782:
            t17762 = np.cos(phi)
            t17763 = t17762 ** 2
            t17765 = t17763 ** 2
            t17769 = t17765 ** 2
            t17764 = t17762 * t17763
            t17767 = t17764 ** 2
            t17766 = t17762 * t17765
            t17761 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.399e3) * t17761 ** 2 * (-1080 * t17763 + 500 * t17764 + 6010 * t17765 - 10140 * t17767 + 2915 * t17769 + 27 + (-5138 + 3036 * t17766) * t17766 + (12740 * t17767 - 8855 * t17769 - 15) * t17762)

        if Bindx == 2783:
            t17772 = np.cos(phi)
            t17773 = t17772 ** 2
            t17775 = t17773 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (7 * phi1 - 4 * phi2)) * np.sqrt(0.13566e5) * ((1 - t17772) ** (0.11e2 / 0.2e1)) * ((1 + t17772) ** (0.3e1 / 0.2e1)) * (-30 * t17773 + 1265 * t17775 - 3 + (550 * t17773 + 759 * t17775 - 45) * t17772)

        if Bindx == 2784:
            t17787 = np.sin(phi)
            t17785 = t17787 ** 2
            t17777 = np.cos(phi)
            t17778 = t17777 ** 2
            t17779 = t17777 * t17778
            t17782 = t17779 ** 2
            t17780 = t17778 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.13566e5) * t17785 ** 2 * (47 * t17778 - 609 * t17779 - 539 * t17782 - 1 + (-135 + 1012 * t17780) * t17780 + (1953 * t17780 - 1771 * t17782 + 43) * t17777)

        if Bindx == 2785:
            t17788 = np.cos(phi)
            t17789 = t17788 ** 2
            t17791 = t17789 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (7 * phi1 - 2 * phi2)) * np.sqrt(0.2261e4) * ((1 - t17788) ** (0.9e1 / 0.2e1)) * ((1 + t17788) ** (0.5e1 / 0.2e1)) * (-270 * t17789 + 1265 * t17791 + 5 + (-220 * t17789 + 1518 * t17791 - 10) * t17788)

        if Bindx == 2786:
            t17802 = np.sin(phi)
            t17799 = t17802 ** 2
            t17800 = t17802 * t17799
            t17793 = np.cos(phi)
            t17794 = t17793 ** 2
            t17796 = t17794 ** 2
            t17795 = t17793 * t17794
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 - phi2)) * np.sqrt(0.7106e4) * t17800 ** 2 * (250 * t17794 - 1505 * t17796 - 5 + (490 + 1932 * t17795) * t17795 + (-1127 * t17796 - 35) * t17793)

        if Bindx == 2787:
            t17803 = np.cos(phi)
            t17804 = t17803 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.277134e6) * ((1 - t17803) ** (0.7e1 / 0.2e1)) * ((1 + t17803) ** (0.7e1 / 0.2e1)) * t17803 * (5 + (-70 + 161 * t17804) * t17804)

        if Bindx == 2788:
            t17815 = np.sin(phi)
            t17812 = t17815 ** 2
            t17813 = t17815 * t17812
            t17806 = np.cos(phi)
            t17807 = t17806 ** 2
            t17809 = t17807 ** 2
            t17808 = t17806 * t17807
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 + phi2)) * np.sqrt(0.7106e4) * t17813 ** 2 * (250 * t17807 - 1505 * t17809 - 5 + (-490 + 1932 * t17808) * t17808 + (1127 * t17809 + 35) * t17806)

        if Bindx == 2789:
            t17816 = np.cos(phi)
            t17817 = t17816 ** 2
            t17819 = t17817 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (7 * phi1 + 2 * phi2)) * np.sqrt(0.2261e4) * ((1 - t17816) ** (0.5e1 / 0.2e1)) * ((1 + t17816) ** (0.9e1 / 0.2e1)) * (270 * t17817 - 1265 * t17819 - 5 + (-220 * t17817 + 1518 * t17819 - 10) * t17816)

        if Bindx == 2790:
            t17831 = np.sin(phi)
            t17829 = t17831 ** 2
            t17821 = np.cos(phi)
            t17822 = t17821 ** 2
            t17823 = t17821 * t17822
            t17826 = t17823 ** 2
            t17824 = t17822 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.13566e5) * t17829 ** 2 * (47 * t17822 + 609 * t17823 - 539 * t17826 - 1 + (-135 + 1012 * t17824) * t17824 + (-1953 * t17824 + 1771 * t17826 - 43) * t17821)

        if Bindx == 2791:
            t17832 = np.cos(phi)
            t17833 = t17832 ** 2
            t17835 = t17833 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (7 * phi1 + 4 * phi2)) * np.sqrt(0.13566e5) * ((1 - t17832) ** (0.3e1 / 0.2e1)) * ((1 + t17832) ** (0.11e2 / 0.2e1)) * (30 * t17833 - 1265 * t17835 + 3 + (550 * t17833 + 759 * t17835 - 45) * t17832)

        if Bindx == 2792:
            t17838 = np.cos(phi)
            t17839 = t17838 ** 2
            t17841 = t17839 ** 2
            t17845 = t17841 ** 2
            t17840 = t17838 * t17839
            t17843 = t17840 ** 2
            t17842 = t17838 * t17841
            t17837 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.399e3) * t17837 ** 2 * (-1080 * t17839 - 500 * t17840 + 6010 * t17841 - 10140 * t17843 + 2915 * t17845 + 27 + (5138 + 3036 * t17842) * t17842 + (-12740 * t17843 + 8855 * t17845 + 15) * t17838)

        if Bindx == 2793:
            t17848 = np.cos(phi)
            t17849 = t17848 ** 2
            t17851 = t17849 ** 2
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.114e3) * np.sqrt((1 - t17848)) * ((1 + t17848) ** (0.13e2 / 0.2e1)) * (-2590 * t17849 - 8855 * t17851 + 29 + (7700 * t17849 + 3542 * t17851 + 190) * t17848)

        if Bindx == 2794:
            t17853 = np.cos(phi)
            t17854 = t17853 ** 2
            t17856 = t17854 ** 2
            t17857 = t17853 * t17856
            t17862 = t17857 ** 2
            t17860 = t17856 ** 2
            t17855 = t17853 * t17854
            t17858 = t17855 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((7*1j) * (phi1 + phi2)) * (4669 * t17854 - 38745 * t17855 - 57750 * t17856 + 88746 * t17857 - 245565 * t17860 + 78617 * t17862 - 161 + (199962 + 21252 * t17858) * t17858 + (-14994 * t17858 - 125195 * t17860 + 86779 * t17862 + 4433) * t17853)

        if Bindx == 2795:
            t17865 = np.cos(phi)
            t17866 = t17865 ** 2
            t17868 = t17866 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (7 * phi1 + 8 * phi2)) * ((1 + t17865) ** (0.15e2 / 0.2e1)) * (-13020 * t17866 - 17710 * t17868 - 278 + (22330 * t17866 + 5313 * t17868 + 3365) * t17865) * ((1 - t17865) ** (-0.1e1 / 0.2e1))

        if Bindx == 2796:
            t17871 = np.cos(phi)
            t17872 = t17871 ** 2
            t17874 = t17872 ** 2
            t17878 = t17874 ** 2
            t17873 = t17871 * t17872
            t17876 = t17873 ** 2
            t17875 = t17871 * t17874
            t17870 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 + 9 * phi2)) * np.sqrt(0.21e2) * t17870 ** 2 * (1764 * t17872 + 3336 * t17873 - 2142 * t17874 - 7728 * t17876 + 9801 * t17878 - 147 + (-10710 + 1012 * t17875) * t17875 + (4704 * t17876 + 5313 * t17878 - 83) * t17871)

        if Bindx == 2797:
            t17881 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (43 + (-161 + 138 * t17881) * t17881) * ((1 + t17881) ** (0.17e2 / 0.2e1)) * np.sqrt(0.154e3) * np.exp((1j) * (7 * phi1 + 10 * phi2)) * ((1 - t17881) ** (0.3e1 / 0.2e1))

        if Bindx == 2798:
            t17883 = np.cos(phi)
            t17888 = 1 + t17883
            t17884 = t17888 ** 2
            t17885 = t17884 ** 2
            t17882 = -1 + t17883
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (7 * phi1 + 11 * phi2)) * np.sqrt(0.1771e4) * t17882 ** 2 * t17888 * t17885 ** 2 * (-7 + 12 * t17883)

        if Bindx == 2799:
            t17889 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (7 * phi1 + 12 * phi2)) * np.sqrt(0.10626e5) * ((1 - t17889) ** (0.5e1 / 0.2e1)) * ((1 + t17889) ** (0.19e2 / 0.2e1))

        if Bindx == 2800:
            t17891 = np.cos(phi)
            t17896 = -1 + t17891
            t17892 = t17896 ** 2
            t17894 = t17896 * t17892 ** 2
            t17890 = 1 + t17891
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((4*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.10626e5) * t17894 ** 2 * t17890 ** 2

        if Bindx == 2801:
            t17897 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 - 11 * phi2)) * np.sqrt(0.1771e4) * ((1 - t17897) ** (0.19e2 / 0.2e1)) * ((1 + t17897) ** (0.3e1 / 0.2e1)) * (2 + 3 * t17897)

        if Bindx == 2802:
            t17898 = np.cos(phi)
            t17903 = -1 + t17898
            t17899 = t17903 ** 2
            t17900 = t17899 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((2*1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.154e3) * t17903 * t17900 ** 2 * (1 + t17898) * (29 + (92 + 69 * t17898) * t17898)

        if Bindx == 2803:
            t17904 = np.cos(phi)
            t17905 = t17904 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 - 9 * phi2)) * np.sqrt(0.21e2) * ((1 - t17904) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t17904)) * (506 * t17905 + 62 + (253 * t17905 + 319) * t17904)

        if Bindx == 2804:
            t17907 = np.cos(phi)
            t17908 = t17907 ** 2
            t17910 = t17908 ** 2
            t17911 = t17907 * t17910
            t17916 = t17911 ** 2
            t17914 = t17910 ** 2
            t17909 = t17907 * t17908
            t17912 = t17909 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((8*1j) * (phi1 - phi2)) * (-9422 * t17908 + 15120 * t17909 + 22575 * t17910 - 69216 * t17911 - 87345 * t17914 + 48818 * t17916 + 673 + (20412 + 5313 * t17912) * t17912 + (84384 * t17912 - 2800 * t17914 - 28336 * t17916 - 176) * t17907)

        if Bindx == 2805:
            t17919 = np.cos(phi)
            t17920 = t17919 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 - 7 * phi2)) * ((1 - t17919) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t17919)) * (3087 * t17919 + 278 + (12397 * t17919 + 9933 + 5313 * t17920) * t17920)

        if Bindx == 2806:
            t17924 = np.cos(phi)
            t17925 = t17924 ** 2
            t17927 = t17925 ** 2
            t17931 = t17927 ** 2
            t17926 = t17924 * t17925
            t17929 = t17926 ** 2
            t17928 = t17924 * t17927
            t17923 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((2*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.114e3) * t17923 ** 2 * (-513 * t17925 - 2928 * t17926 + 5094 * t17927 - 12714 * t17929 + 7623 * t17931 + 19 + (3960 + 1771 * t17928) * t17928 + (4368 * t17929 - 7084 * t17931 + 404) * t17924)

        if Bindx == 2807:
            t17934 = np.cos(phi)
            t17935 = t17934 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 - 5 * phi2)) * np.sqrt(0.399e3) * ((1 - t17934) ** (0.13e2 / 0.2e1)) * ((1 + t17934) ** (0.3e1 / 0.2e1)) * (75 * t17934 - 6 + (1265 * t17934 + 627 + 759 * t17935) * t17935)

        if Bindx == 2808:
            t17948 = np.sin(phi)
            t17946 = t17948 ** 2
            t17938 = np.cos(phi)
            t17939 = t17938 ** 2
            t17940 = t17938 * t17939
            t17943 = t17940 ** 2
            t17941 = t17939 ** 2
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((4*1j) * (2 * phi1 - phi2)) * np.sqrt(0.13566e5) * t17946 ** 2 * (324 * t17939 - 344 * t17940 + 836 * t17943 - 9 + (-1270 + 759 * t17941) * t17941 + (1704 * t17941 - 2024 * t17943 + 24) * t17938)

        if Bindx == 2809:
            t17949 = np.cos(phi)
            t17950 = t17949 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 - 3 * phi2)) * np.sqrt(0.13566e5) * ((1 - t17949) ** (0.11e2 / 0.2e1)) * ((1 + t17949) ** (0.5e1 / 0.2e1)) * (-17 * t17949 - 2 + (253 * t17949 + 33 + 253 * t17950) * t17950)

        if Bindx == 2810:
            t17962 = np.sin(phi)
            t17959 = t17962 ** 2
            t17960 = t17962 * t17959
            t17953 = np.cos(phi)
            t17954 = t17953 ** 2
            t17956 = t17954 ** 2
            t17955 = t17953 * t17954
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((2*1j) * (4 * phi1 - phi2)) * np.sqrt(0.2261e4) * t17960 ** 2 * (41 * t17954 - 319 * t17956 - 1 + (584 + 759 * t17955) * t17955 + (-1012 * t17956 - 52) * t17953)

        if Bindx == 2811:
            t17963 = np.cos(phi)
            t17964 = t17963 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 - phi2)) * np.sqrt(0.7106e4) * ((1 - t17963) ** (0.9e1 / 0.2e1)) * ((1 + t17963) ** (0.7e1 / 0.2e1)) * (-21 * t17963 + 2 + (161 * t17963 - 105 + 483 * t17964) * t17964)

        if Bindx == 2812:
            t17973 = np.sin(phi)
            t17970 = t17973 ** 2
            t17971 = t17970 ** 2
            t17967 = np.cos(phi)
            t17968 = t17967 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((8*1j) * phi1) * np.sqrt(0.277134e6) * t17971 ** 2 * (1 + (-42 + 161 * t17968) * t17968)

        if Bindx == 2813:
            t17974 = np.cos(phi)
            t17975 = t17974 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 + phi2)) * np.sqrt(0.7106e4) * ((1 - t17974) ** (0.7e1 / 0.2e1)) * ((1 + t17974) ** (0.9e1 / 0.2e1)) * (21 * t17974 + 2 + (-161 * t17974 - 105 + 483 * t17975) * t17975)

        if Bindx == 2814:
            t17987 = np.sin(phi)
            t17984 = t17987 ** 2
            t17985 = t17987 * t17984
            t17978 = np.cos(phi)
            t17979 = t17978 ** 2
            t17981 = t17979 ** 2
            t17980 = t17978 * t17979
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((2*1j) * (4 * phi1 + phi2)) * np.sqrt(0.2261e4) * t17985 ** 2 * (41 * t17979 - 319 * t17981 - 1 + (-584 + 759 * t17980) * t17980 + (1012 * t17981 + 52) * t17978)

        if Bindx == 2815:
            t17988 = np.cos(phi)
            t17989 = t17988 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 + 3 * phi2)) * np.sqrt(0.13566e5) * ((1 - t17988) ** (0.5e1 / 0.2e1)) * ((1 + t17988) ** (0.11e2 / 0.2e1)) * (17 * t17988 - 2 + (-253 * t17988 + 33 + 253 * t17989) * t17989)

        if Bindx == 2816:
            t18002 = np.sin(phi)
            t18000 = t18002 ** 2
            t17992 = np.cos(phi)
            t17993 = t17992 ** 2
            t17994 = t17992 * t17993
            t17997 = t17994 ** 2
            t17995 = t17993 ** 2
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((4*1j) * (2 * phi1 + phi2)) * np.sqrt(0.13566e5) * t18000 ** 2 * (324 * t17993 + 344 * t17994 + 836 * t17997 - 9 + (-1270 + 759 * t17995) * t17995 + (-1704 * t17995 + 2024 * t17997 - 24) * t17992)

        if Bindx == 2817:
            t18003 = np.cos(phi)
            t18004 = t18003 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 + 5 * phi2)) * np.sqrt(0.399e3) * ((1 - t18003) ** (0.3e1 / 0.2e1)) * ((1 + t18003) ** (0.13e2 / 0.2e1)) * (-75 * t18003 - 6 + (-1265 * t18003 + 627 + 759 * t18004) * t18004)

        if Bindx == 2818:
            t18008 = np.cos(phi)
            t18009 = t18008 ** 2
            t18011 = t18009 ** 2
            t18015 = t18011 ** 2
            t18010 = t18008 * t18009
            t18013 = t18010 ** 2
            t18012 = t18008 * t18011
            t18007 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((2*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.114e3) * t18007 ** 2 * (-513 * t18009 + 2928 * t18010 + 5094 * t18011 - 12714 * t18013 + 7623 * t18015 + 19 + (-3960 + 1771 * t18012) * t18012 + (-4368 * t18013 + 7084 * t18015 - 404) * t18008)

        if Bindx == 2819:
            t18018 = np.cos(phi)
            t18019 = t18018 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 + 7 * phi2)) * np.sqrt((1 - t18018)) * ((1 + t18018) ** (0.15e2 / 0.2e1)) * (-3087 * t18018 + 278 + (-12397 * t18018 + 9933 + 5313 * t18019) * t18019)

        if Bindx == 2820:
            t18022 = np.cos(phi)
            t18023 = t18022 ** 2
            t18025 = t18023 ** 2
            t18026 = t18022 * t18025
            t18031 = t18026 ** 2
            t18029 = t18025 ** 2
            t18024 = t18022 * t18023
            t18027 = t18024 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((8*1j) * (phi1 + phi2)) * (-9422 * t18023 - 15120 * t18024 + 22575 * t18025 + 69216 * t18026 - 87345 * t18029 + 48818 * t18031 + 673 + (20412 + 5313 * t18027) * t18027 + (-84384 * t18027 + 2800 * t18029 + 28336 * t18031 + 176) * t18022)

        if Bindx == 2821:
            t18034 = np.cos(phi)
            t18035 = t18034 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (8 * phi1 + 9 * phi2)) * np.sqrt(0.21e2) * ((1 + t18034) ** (0.17e2 / 0.2e1)) * (-381 * t18034 + 62 + (-759 * t18034 + 825 + 253 * t18035) * t18035) * ((1 - t18034) ** (-0.1e1 / 0.2e1))

        if Bindx == 2822:
            t18038 = np.cos(phi)
            t18043 = 1 + t18038
            t18039 = t18043 ** 2
            t18040 = t18039 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((2*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.154e3) * (-1 + t18038) * t18043 * t18040 ** 2 * (29 + (-92 + 69 * t18038) * t18038)

        if Bindx == 2823:
            t18044 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (-2 + 3 * t18044) * ((1 + t18044) ** (0.19e2 / 0.2e1)) * np.sqrt(0.1771e4) * np.exp((1j) * (8 * phi1 + 11 * phi2)) * ((1 - t18044) ** (0.3e1 / 0.2e1))

        if Bindx == 2824:
            t18046 = np.cos(phi)
            t18051 = 1 + t18046
            t18047 = t18051 ** 2
            t18049 = t18051 * t18047 ** 2
            t18045 = -1 + t18046
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((4*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.10626e5) * t18045 ** 2 * t18049 ** 2

        if Bindx == 2825:
            t18052 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((3*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.506e3) * ((1 - t18052) ** (0.21e2 / 0.2e1)) * ((1 + t18052) ** (0.3e1 / 0.2e1))

        if Bindx == 2826:
            t18053 = np.cos(phi)
            t18058 = -1 + t18053
            t18054 = t18058 ** 2
            t18056 = t18058 * t18054 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 - 11 * phi2)) * np.sqrt(0.759e3) * t18056 ** 2 * (1 + t18053) * (3 + 4 * t18053)

        if Bindx == 2827:
            t18059 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (9 * phi1 - 10 * phi2)) * np.sqrt(0.66e2) * ((1 - t18059) ** (0.19e2 / 0.2e1)) * np.sqrt((1 + t18059)) * (25 + (69 + 46 * t18059) * t18059)

        if Bindx == 2828:
            t18060 = np.cos(phi)
            t18061 = t18060 ** 2
            t18063 = t18061 ** 2
            t18064 = t18060 * t18063
            t18069 = t18064 ** 2
            t18067 = t18063 ** 2
            t18062 = t18060 * t18061
            t18065 = t18062 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((9*1j) * (phi1 - phi2)) * (-1143 * t18061 - 7915 * t18062 + 17730 * t18063 - 5058 * t18064 - 7785 * t18067 + 17589 * t18069 - 381 + (-25998 + 1012 * t18065) * t18065 + (34506 * t18065 - 17505 * t18067 - 6831 * t18069 + 1779) * t18060)

        if Bindx == 2829:
            t18072 = np.cos(phi)
            t18073 = t18072 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (9 * phi1 - 8 * phi2)) * np.sqrt(0.21e2) * ((1 - t18072) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t18072)) * (506 * t18073 + 62 + (253 * t18073 + 319) * t18072)

        if Bindx == 2830:
            t18076 = np.cos(phi)
            t18077 = t18076 ** 2
            t18079 = t18077 ** 2
            t18083 = t18079 ** 2
            t18078 = t18076 * t18077
            t18081 = t18078 ** 2
            t18080 = t18076 * t18079
            t18075 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 - 7 * phi2)) * np.sqrt(0.21e2) * t18075 ** 2 * (1764 * t18077 - 3336 * t18078 - 2142 * t18079 - 7728 * t18081 + 9801 * t18083 - 147 + (10710 + 1012 * t18080) * t18080 + (-4704 * t18081 - 5313 * t18083 + 83) * t18076)

        if Bindx == 2831:
            t18086 = np.cos(phi)
            t18087 = t18086 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((3*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.266e3) * ((1 - t18086) ** (0.15e2 / 0.2e1)) * ((1 + t18086) ** (0.3e1 / 0.2e1)) * (759 * t18087 + 37 + (506 * t18087 + 330) * t18086)

        if Bindx == 2832:
            t18099 = np.sin(phi)
            t18097 = t18099 ** 2
            t18089 = np.cos(phi)
            t18090 = t18089 ** 2
            t18091 = t18089 * t18090
            t18094 = t18091 ** 2
            t18092 = t18090 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 - 5 * phi2)) * np.sqrt(0.19e2) * t18097 ** 2 * (575 * t18090 + 1383 * t18091 + 4213 * t18094 - 25 + (-3535 + 1012 * t18092) * t18092 + (465 * t18092 - 3795 * t18094 - 293) * t18089)

        if Bindx == 2833:
            t18100 = np.cos(phi)
            t18103 = 253 * t18100 ** 2
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * np.exp((1j) * (9 * phi1 - 4 * phi2)) * np.sqrt(0.646e3) * ((1 - t18100) ** (0.13e2 / 0.2e1)) * ((1 + t18100) ** (0.5e1 / 0.2e1)) * (t18103 - 1 + (t18103 + 55) * t18100)

        if Bindx == 2834:
            t18113 = np.sin(phi)
            t18110 = t18113 ** 2
            t18111 = t18113 * t18110
            t18104 = np.cos(phi)
            t18105 = t18104 ** 2
            t18107 = t18105 ** 2
            t18106 = t18104 * t18105
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((3*1j) * (3 * phi1 - phi2)) * np.sqrt(0.646e3) * t18111 ** 2 * (-510 * t18105 + 825 * t18107 + 17 + (1050 + 1012 * t18106) * t18106 + (-2277 * t18107 - 117) * t18104)

        if Bindx == 2835:
            t18114 = np.cos(phi)
            t18115 = t18114 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (9 * phi1 - 2 * phi2)) * np.sqrt(0.969e3) * ((1 - t18114) ** (0.11e2 / 0.2e1)) * ((1 + t18114) ** (0.7e1 / 0.2e1)) * (253 * t18115 - 9 + (506 * t18115 - 22) * t18114)

        if Bindx == 2836:
            t18124 = np.sin(phi)
            t18121 = t18124 ** 2
            t18122 = t18121 ** 2
            t18117 = np.cos(phi)
            t18118 = t18117 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 - phi2)) * np.sqrt(0.149226e6) * t18122 ** 2 * (9 * t18117 + 1 + (-69 * t18117 - 33 + 92 * t18118) * t18118)

        if Bindx == 2837:
            t18125 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((9*1j) * phi1) * np.sqrt(0.646646e6) * ((1 - t18125) ** (0.9e1 / 0.2e1)) * ((1 + t18125) ** (0.9e1 / 0.2e1)) * t18125 * (23 * t18125 ** 2 - 3)

        if Bindx == 2838:
            t18133 = np.sin(phi)
            t18130 = t18133 ** 2
            t18131 = t18130 ** 2
            t18126 = np.cos(phi)
            t18127 = t18126 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 + phi2)) * np.sqrt(0.149226e6) * t18131 ** 2 * (-9 * t18126 + 1 + (69 * t18126 - 33 + 92 * t18127) * t18127)

        if Bindx == 2839:
            t18134 = np.cos(phi)
            t18135 = t18134 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (9 * phi1 + 2 * phi2)) * np.sqrt(0.969e3) * ((1 - t18134) ** (0.7e1 / 0.2e1)) * ((1 + t18134) ** (0.11e2 / 0.2e1)) * (-253 * t18135 + 9 + (506 * t18135 - 22) * t18134)

        if Bindx == 2840:
            t18146 = np.sin(phi)
            t18143 = t18146 ** 2
            t18144 = t18146 * t18143
            t18137 = np.cos(phi)
            t18138 = t18137 ** 2
            t18140 = t18138 ** 2
            t18139 = t18137 * t18138
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((3*1j) * (3 * phi1 + phi2)) * np.sqrt(0.646e3) * t18144 ** 2 * (-510 * t18138 + 825 * t18140 + 17 + (-1050 + 1012 * t18139) * t18139 + (2277 * t18140 + 117) * t18137)

        if Bindx == 2841:
            t18147 = np.cos(phi)
            t18148 = t18147 ** 2
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * np.exp((1j) * (9 * phi1 + 4 * phi2)) * np.sqrt(0.646e3) * ((1 - t18147) ** (0.5e1 / 0.2e1)) * ((1 + t18147) ** (0.13e2 / 0.2e1)) * (-253 * t18148 + 1 + (253 * t18148 + 55) * t18147)

        if Bindx == 2842:
            t18160 = np.sin(phi)
            t18158 = t18160 ** 2
            t18150 = np.cos(phi)
            t18151 = t18150 ** 2
            t18152 = t18150 * t18151
            t18155 = t18152 ** 2
            t18153 = t18151 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 + 5 * phi2)) * np.sqrt(0.19e2) * t18158 ** 2 * (575 * t18151 - 1383 * t18152 + 4213 * t18155 - 25 + (-3535 + 1012 * t18153) * t18153 + (-465 * t18153 + 3795 * t18155 + 293) * t18150)

        if Bindx == 2843:
            t18161 = np.cos(phi)
            t18162 = t18161 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((3*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.266e3) * ((1 - t18161) ** (0.3e1 / 0.2e1)) * ((1 + t18161) ** (0.15e2 / 0.2e1)) * (-759 * t18162 - 37 + (506 * t18162 + 330) * t18161)

        if Bindx == 2844:
            t18165 = np.cos(phi)
            t18166 = t18165 ** 2
            t18168 = t18166 ** 2
            t18172 = t18168 ** 2
            t18167 = t18165 * t18166
            t18170 = t18167 ** 2
            t18169 = t18165 * t18168
            t18164 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 + 7 * phi2)) * np.sqrt(0.21e2) * t18164 ** 2 * (1764 * t18166 + 3336 * t18167 - 2142 * t18168 - 7728 * t18170 + 9801 * t18172 - 147 + (-10710 + 1012 * t18169) * t18169 + (4704 * t18170 + 5313 * t18172 - 83) * t18165)

        if Bindx == 2845:
            t18175 = np.cos(phi)
            t18176 = t18175 ** 2
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (9 * phi1 + 8 * phi2)) * np.sqrt(0.21e2) * np.sqrt((1 - t18175)) * ((1 + t18175) ** (0.17e2 / 0.2e1)) * (-506 * t18176 - 62 + (253 * t18176 + 319) * t18175)

        if Bindx == 2846:
            t18178 = np.cos(phi)
            t18179 = t18178 ** 2
            t18181 = t18179 ** 2
            t18182 = t18178 * t18181
            t18187 = t18182 ** 2
            t18185 = t18181 ** 2
            t18180 = t18178 * t18179
            t18183 = t18180 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((9*1j) * (phi1 + phi2)) * (-1143 * t18179 + 7915 * t18180 + 17730 * t18181 + 5058 * t18182 - 7785 * t18185 + 17589 * t18187 - 381 + (-25998 + 1012 * t18183) * t18183 + (-34506 * t18183 + 17505 * t18185 + 6831 * t18187 - 1779) * t18178)

        if Bindx == 2847:
            t18190 = np.cos(phi)
            t18191 = t18190 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (9 * phi1 + 10 * phi2)) * np.sqrt(0.66e2) * ((1 + t18190) ** (0.19e2 / 0.2e1)) * (-115 * t18191 - 25 + (46 * t18191 + 94) * t18190) * ((1 - t18190) ** (-0.1e1 / 0.2e1))

        if Bindx == 2848:
            t18193 = np.cos(phi)
            t18198 = 1 + t18193
            t18194 = t18198 ** 2
            t18196 = t18198 * t18194 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (9 * phi1 + 11 * phi2)) * np.sqrt(0.759e3) * (-1 + t18193) * t18196 ** 2 * (-3 + 4 * t18193)

        if Bindx == 2849:
            t18199 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((3*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.506e3) * ((1 - t18199) ** (0.3e1 / 0.2e1)) * ((1 + t18199) ** (0.21e2 / 0.2e1))

        if Bindx == 2850:
            t18200 = np.cos(phi)
            t18206 = -1 + t18200
            t18201 = t18206 ** 2
            t18203 = t18206 * t18201 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((2*1j) * (5 * phi1 - 6 * phi2)) * np.sqrt(0.69e2) * t18206 * t18203 ** 2 * (1 + t18200)

        if Bindx == 2851:
            t18207 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 - 11 * phi2)) * np.sqrt(0.46e2) * ((1 - t18207) ** (0.21e2 / 0.2e1)) * np.sqrt((1 + t18207)) * (5 + 6 * t18207)

        if Bindx == 2852:
            t18208 = np.cos(phi)
            t18209 = t18208 ** 2
            t18211 = t18209 ** 2
            t18212 = t18208 * t18211
            t18217 = t18212 ** 2
            t18215 = t18211 ** 2
            t18210 = t18208 * t18209
            t18213 = t18210 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((10*1j) * (phi1 - phi2)) * (1034 * t18209 - 1155 * t18210 - 825 * t18211 + 4026 * t18212 + 2805 * t18215 + 2002 * t18217 + 47 + (-4620 + 69 * t18213) * t18213 + (1122 * t18213 - 3575 * t18215 - 575 * t18217 - 355) * t18208)

        if Bindx == 2853:
            t18220 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 - 9 * phi2)) * np.sqrt(0.66e2) * ((1 - t18220) ** (0.19e2 / 0.2e1)) * np.sqrt((1 + t18220)) * (25 + (69 + 46 * t18220) * t18220)

        if Bindx == 2854:
            t18222 = np.cos(phi)
            t18223 = t18222 ** 2
            t18225 = t18223 ** 2
            t18229 = t18225 ** 2
            t18224 = t18222 * t18223
            t18227 = t18224 ** 2
            t18226 = t18222 * t18225
            t18221 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((2*1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.154e3) * t18221 ** 2 * (145 * t18223 + 400 * t18224 - 1190 * t18225 + 490 * t18227 + 1225 * t18229 + 29 + (952 + 69 * t18226) * t18226 + (-1520 * t18227 - 460 * t18229 - 140) * t18222)

        if Bindx == 2855:
            t18232 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 - 7 * phi2)) * np.sqrt(0.154e3) * ((1 - t18232) ** (0.17e2 / 0.2e1)) * ((1 + t18232) ** (0.3e1 / 0.2e1)) * (43 + (161 + 138 * t18232) * t18232)

        if Bindx == 2856:
            t18243 = np.sin(phi)
            t18241 = t18243 ** 2
            t18233 = np.cos(phi)
            t18234 = t18233 ** 2
            t18235 = t18233 * t18234
            t18238 = t18235 ** 2
            t18236 = t18234 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.4389e4) * t18241 ** 2 * (-40 * t18234 + 107 * t18235 + 212 * t18238 + 5 + (-40 + 23 * t18236) * t18236 + (-145 * t18236 - 115 * t18238 - 7) * t18233)

        if Bindx == 2857:
            t18244 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((5*1j) * (2 * phi1 - phi2)) * np.sqrt(0.1254e4) * ((1 - t18244) ** (0.15e2 / 0.2e1)) * ((1 + t18244) ** (0.5e1 / 0.2e1)) * (19 + (115 + 138 * t18244) * t18244)

        if Bindx == 2858:
            t18254 = np.sin(phi)
            t18251 = t18254 ** 2
            t18252 = t18254 * t18251
            t18245 = np.cos(phi)
            t18246 = t18245 ** 2
            t18248 = t18246 ** 2
            t18247 = t18245 * t18246
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((2*1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.10659e5) * t18252 ** 2 * (-85 * t18246 + 235 * t18248 + 5 + (-20 + 69 * t18247) * t18247 + (-230 * t18248 + 26) * t18245)

        if Bindx == 2859:
            t18255 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (10 * phi1 - 3 * phi2)) * np.sqrt(0.10659e5) * ((1 - t18255) ** (0.13e2 / 0.2e1)) * ((1 + t18255) ** (0.7e1 / 0.2e1)) * (1 + (23 + 46 * t18255) * t18255)

        if Bindx == 2860:
            t18263 = np.sin(phi)
            t18260 = t18263 ** 2
            t18261 = t18260 ** 2
            t18256 = np.cos(phi)
            t18257 = t18256 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 - phi2)) * np.sqrt(0.7106e4) * t18261 ** 2 * (25 * t18256 - 1 + (-115 * t18256 + 22 + 69 * t18257) * t18257)

        if Bindx == 2861:
            t18264 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (10 * phi1 - phi2)) * np.sqrt(0.2261e4) * ((1 - t18264) ** (0.11e2 / 0.2e1)) * ((1 + t18264) ** (0.9e1 / 0.2e1)) * (-5 + (23 + 138 * t18264) * t18264)

        if Bindx == 2862:
            t18270 = np.sin(phi)
            t18266 = t18270 ** 2
            t18268 = t18270 * t18266 ** 2
            t18265 = np.cos(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((10*1j) * phi1) * np.sqrt(0.88179e5) * t18268 ** 2 * (23 * t18265 ** 2 - 1)

        if Bindx == 2863:
            t18271 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (10 * phi1 + phi2)) * np.sqrt(0.2261e4) * ((1 - t18271) ** (0.9e1 / 0.2e1)) * ((1 + t18271) ** (0.11e2 / 0.2e1)) * (-5 + (-23 + 138 * t18271) * t18271)

        if Bindx == 2864:
            t18279 = np.sin(phi)
            t18276 = t18279 ** 2
            t18277 = t18276 ** 2
            t18272 = np.cos(phi)
            t18273 = t18272 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 + phi2)) * np.sqrt(0.7106e4) * t18277 ** 2 * (-25 * t18272 - 1 + (115 * t18272 + 22 + 69 * t18273) * t18273)

        if Bindx == 2865:
            t18280 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (10 * phi1 + 3 * phi2)) * np.sqrt(0.10659e5) * ((1 - t18280) ** (0.7e1 / 0.2e1)) * ((1 + t18280) ** (0.13e2 / 0.2e1)) * (1 + (-23 + 46 * t18280) * t18280)

        if Bindx == 2866:
            t18290 = np.sin(phi)
            t18287 = t18290 ** 2
            t18288 = t18290 * t18287
            t18281 = np.cos(phi)
            t18282 = t18281 ** 2
            t18284 = t18282 ** 2
            t18283 = t18281 * t18282
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((2*1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.10659e5) * t18288 ** 2 * (-85 * t18282 + 235 * t18284 + 5 + (20 + 69 * t18283) * t18283 + (230 * t18284 - 26) * t18281)

        if Bindx == 2867:
            t18291 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((5*1j) * (2 * phi1 + phi2)) * np.sqrt(0.1254e4) * ((1 - t18291) ** (0.5e1 / 0.2e1)) * ((1 + t18291) ** (0.15e2 / 0.2e1)) * (19 + (-115 + 138 * t18291) * t18291)

        if Bindx == 2868:
            t18302 = np.sin(phi)
            t18300 = t18302 ** 2
            t18292 = np.cos(phi)
            t18293 = t18292 ** 2
            t18294 = t18292 * t18293
            t18297 = t18294 ** 2
            t18295 = t18293 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.4389e4) * t18300 ** 2 * (-40 * t18293 - 107 * t18294 + 212 * t18297 + 5 + (-40 + 23 * t18295) * t18295 + (145 * t18295 + 115 * t18297 + 7) * t18292)

        if Bindx == 2869:
            t18303 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 + 7 * phi2)) * np.sqrt(0.154e3) * ((1 - t18303) ** (0.3e1 / 0.2e1)) * ((1 + t18303) ** (0.17e2 / 0.2e1)) * (43 + (-161 + 138 * t18303) * t18303)

        if Bindx == 2870:
            t18304 = np.cos(phi)
            t18309 = 1 + t18304
            t18305 = t18309 ** 2
            t18306 = t18305 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((2*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.154e3) * (-1 + t18304) * t18309 * t18306 ** 2 * (29 + (-92 + 69 * t18304) * t18304)

        if Bindx == 2871:
            t18310 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 + 9 * phi2)) * np.sqrt(0.66e2) * np.sqrt((1 - t18310)) * ((1 + t18310) ** (0.19e2 / 0.2e1)) * (25 + (-69 + 46 * t18310) * t18310)

        if Bindx == 2872:
            t18311 = np.cos(phi)
            t18312 = t18311 ** 2
            t18314 = t18312 ** 2
            t18315 = t18311 * t18314
            t18320 = t18315 ** 2
            t18318 = t18314 ** 2
            t18313 = t18311 * t18312
            t18316 = t18313 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4) * np.exp((10*1j) * (phi1 + phi2)) * (1034 * t18312 + 1155 * t18313 - 825 * t18314 - 4026 * t18315 + 2805 * t18318 + 2002 * t18320 + 47 + (-4620 + 69 * t18316) * t18316 + (-1122 * t18316 + 3575 * t18318 + 575 * t18320 + 355) * t18311)

        if Bindx == 2873:
            t18323 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 + 11 * phi2)) * np.sqrt(0.46e2) * ((1 + t18323) ** (0.21e2 / 0.2e1)) * (5 + (-11 + 6 * t18323) * t18323) * ((1 - t18323) ** (-0.1e1 / 0.2e1))

        if Bindx == 2874:
            t18324 = np.cos(phi)
            t18330 = 1 + t18324
            t18325 = t18330 ** 2
            t18327 = t18330 * t18325 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((2*1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.69e2) * (-1 + t18324) * t18330 * t18327 ** 2

        if Bindx == 2875:
            t18331 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (11 * phi1 - 12 * phi2)) * np.sqrt(0.6e1) * ((1 - t18331) ** (0.23e2 / 0.2e1)) * np.sqrt((1 + t18331))

        if Bindx == 2876:
            t18332 = np.cos(phi)
            t18333 = t18332 ** 2
            t18335 = t18333 ** 2
            t18336 = t18332 * t18335
            t18341 = t18336 ** 2
            t18339 = t18335 ** 2
            t18334 = t18332 * t18333
            t18337 = t18334 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((11*1j) * (phi1 - phi2)) * (-473 * t18333 + 1155 * t18334 - 1650 * t18335 + 1122 * t18336 + 2145 * t18339 + 539 * t18341 - 11 + (462 + 12 * t18337) * t18337 + (-1914 * t18337 - 1375 * t18339 - 121 * t18341 + 109) * t18332)

        if Bindx == 2877:
            t18344 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (11 * phi1 - 10 * phi2)) * np.sqrt(0.46e2) * ((1 - t18344) ** (0.21e2 / 0.2e1)) * np.sqrt((1 + t18344)) * (5 + 6 * t18344)

        if Bindx == 2878:
            t18345 = np.cos(phi)
            t18350 = -1 + t18345
            t18346 = t18350 ** 2
            t18348 = t18350 * t18346 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * (3 + 4 * t18345) * (1 + t18345) * t18348 ** 2 * np.sqrt(0.759e3) * np.exp((1j) * (11 * phi1 - 9 * phi2))

        if Bindx == 2879:
            t18351 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (11 * phi1 - 8 * phi2)) * np.sqrt(0.1771e4) * ((1 - t18351) ** (0.19e2 / 0.2e1)) * ((1 + t18351) ** (0.3e1 / 0.2e1)) * (2 + 3 * t18351)

        if Bindx == 2880:
            t18353 = np.cos(phi)
            t18358 = -1 + t18353
            t18354 = t18358 ** 2
            t18355 = t18354 ** 2
            t18352 = 1 + t18353
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 - 7 * phi2)) * np.sqrt(0.1771e4) * t18358 * t18355 ** 2 * t18352 ** 2 * (7 + 12 * t18353)

        if Bindx == 2881:
            t18359 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (11 * phi1 - 6 * phi2)) * np.sqrt(0.201894e6) * ((1 - t18359) ** (0.17e2 / 0.2e1)) * ((1 + t18359) ** (0.5e1 / 0.2e1)) * (1 + 2 * t18359)

        if Bindx == 2882:
            t18369 = np.sin(phi)
            t18366 = t18369 ** 2
            t18367 = t18369 * t18366
            t18360 = np.cos(phi)
            t18361 = t18360 ** 2
            t18363 = t18361 ** 2
            t18362 = t18360 * t18361
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 - 5 * phi2)) * np.sqrt(0.14421e5) * t18367 ** 2 * (10 * t18361 + 95 * t18363 - 5 + (-70 + 12 * t18362) * t18362 + (-55 * t18363 + 13) * t18360)

        if Bindx == 2883:
            t18370 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (11 * phi1 - 4 * phi2)) * np.sqrt(0.490314e6) * ((1 - t18370) ** (0.15e2 / 0.2e1)) * ((1 + t18370) ** (0.7e1 / 0.2e1)) * (1 + 3 * t18370)

        if Bindx == 2884:
            t18378 = np.sin(phi)
            t18375 = t18378 ** 2
            t18376 = t18375 ** 2
            t18371 = np.cos(phi)
            t18372 = t18371 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 - 3 * phi2)) * np.sqrt(0.490314e6) * t18376 ** 2 * (-t18371 - 1 + (-11 * t18371 + 9 + 4 * t18372) * t18372)

        if Bindx == 2885:
            t18379 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (11 * phi1 - 2 * phi2)) * np.sqrt(0.81719e5) * ((1 - t18379) ** (0.13e2 / 0.2e1)) * ((1 + t18379) ** (0.9e1 / 0.2e1)) * (1 + 6 * t18379)

        if Bindx == 2886:
            t18385 = np.sin(phi)
            t18381 = t18385 ** 2
            t18383 = t18385 * t18381 ** 2
            t18380 = np.cos(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 - phi2)) * np.sqrt(0.104006e6) * t18383 ** 2 * (-1 + (-11 + 12 * t18380) * t18380)

        if Bindx == 2887:
            t18386 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((11*1j) * phi1) * np.sqrt(0.4056234e7) * ((1 - t18386) ** (0.11e2 / 0.2e1)) * ((1 + t18386) ** (0.11e2 / 0.2e1)) * t18386

        if Bindx == 2888:
            t18392 = np.sin(phi)
            t18388 = t18392 ** 2
            t18390 = t18392 * t18388 ** 2
            t18387 = np.cos(phi)
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 + phi2)) * np.sqrt(0.104006e6) * t18390 ** 2 * (-1 + (11 + 12 * t18387) * t18387)

        if Bindx == 2889:
            t18393 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (11 * phi1 + 2 * phi2)) * np.sqrt(0.81719e5) * ((1 - t18393) ** (0.9e1 / 0.2e1)) * ((1 + t18393) ** (0.13e2 / 0.2e1)) * (-1 + 6 * t18393)

        if Bindx == 2890:
            t18401 = np.sin(phi)
            t18398 = t18401 ** 2
            t18399 = t18398 ** 2
            t18394 = np.cos(phi)
            t18395 = t18394 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 + 3 * phi2)) * np.sqrt(0.490314e6) * t18399 ** 2 * (t18394 - 1 + (11 * t18394 + 9 + 4 * t18395) * t18395)

        if Bindx == 2891:
            t18402 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (11 * phi1 + 4 * phi2)) * np.sqrt(0.490314e6) * ((1 - t18402) ** (0.7e1 / 0.2e1)) * ((1 + t18402) ** (0.15e2 / 0.2e1)) * (-1 + 3 * t18402)

        if Bindx == 2892:
            t18412 = np.sin(phi)
            t18409 = t18412 ** 2
            t18410 = t18412 * t18409
            t18403 = np.cos(phi)
            t18404 = t18403 ** 2
            t18406 = t18404 ** 2
            t18405 = t18403 * t18404
            tfunc[..., c] = -(0.25e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 + 5 * phi2)) * np.sqrt(0.14421e5) * t18410 ** 2 * (10 * t18404 + 95 * t18406 - 5 + (70 + 12 * t18405) * t18405 + (55 * t18406 - 13) * t18403)

        if Bindx == 2893:
            t18413 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (11 * phi1 + 6 * phi2)) * np.sqrt(0.201894e6) * ((1 - t18413) ** (0.5e1 / 0.2e1)) * ((1 + t18413) ** (0.17e2 / 0.2e1)) * (2 * t18413 - 1)

        if Bindx == 2894:
            t18415 = np.cos(phi)
            t18420 = 1 + t18415
            t18416 = t18420 ** 2
            t18417 = t18416 ** 2
            t18414 = -1 + t18415
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 + 7 * phi2)) * np.sqrt(0.1771e4) * t18414 ** 2 * t18420 * t18417 ** 2 * (-7 + 12 * t18415)

        if Bindx == 2895:
            t18421 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (11 * phi1 + 8 * phi2)) * np.sqrt(0.1771e4) * ((1 - t18421) ** (0.3e1 / 0.2e1)) * ((1 + t18421) ** (0.19e2 / 0.2e1)) * (-2 + 3 * t18421)

        if Bindx == 2896:
            t18422 = np.cos(phi)
            t18427 = 1 + t18422
            t18423 = t18427 ** 2
            t18425 = t18427 * t18423 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((1j) * (11 * phi1 + 9 * phi2)) * np.sqrt(0.759e3) * (-1 + t18422) * t18425 ** 2 * (-3 + 4 * t18422)

        if Bindx == 2897:
            t18428 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (11 * phi1 + 10 * phi2)) * np.sqrt(0.46e2) * np.sqrt((1 - t18428)) * ((1 + t18428) ** (0.21e2 / 0.2e1)) * (-5 + 6 * t18428)

        if Bindx == 2898:
            t18429 = np.cos(phi)
            t18430 = t18429 ** 2
            t18432 = t18430 ** 2
            t18433 = t18429 * t18432
            t18438 = t18433 ** 2
            t18436 = t18432 ** 2
            t18431 = t18429 * t18430
            t18434 = t18431 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((11*1j) * (phi1 + phi2)) * (-473 * t18430 - 1155 * t18431 - 1650 * t18432 - 1122 * t18433 + 2145 * t18436 + 539 * t18438 - 11 + (462 + 12 * t18434) * t18434 + (1914 * t18434 + 1375 * t18436 + 121 * t18438 - 109) * t18429)

        if Bindx == 2899:
            t18441 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (11 * phi1 + 12 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t18441)) * ((1 + t18441) ** (0.23e2 / 0.2e1))

        if Bindx == 2900:
            t18442 = np.cos(phi)
            t18454 = -12 * t18442
            t18443 = t18442 ** 2
            t18444 = t18442 * t18443
            t18447 = t18444 ** 2
            t18445 = t18443 ** 2
            t18446 = t18442 * t18445
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((12*1j) * (phi1 - phi2)) * (66 * t18443 - 220 * t18444 + t18454 + 1 + (-792 * t18442 + 924 + t18447) * t18447 + (-792 + (t18454 + 66) * t18446) * t18446 + (495 + (-220 * t18442 + 495) * t18445) * t18445)

        if Bindx == 2901:
            t18455 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (12 * phi1 - 11 * phi2)) * np.sqrt(0.6e1) * ((1 - t18455) ** (0.23e2 / 0.2e1)) * np.sqrt((1 + t18455))

        if Bindx == 2902:
            t18456 = np.cos(phi)
            t18462 = -1 + t18456
            t18457 = t18462 ** 2
            t18459 = t18462 * t18457 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((2*1j) * (6 * phi1 - 5 * phi2)) * np.sqrt(0.69e2) * t18462 * t18459 ** 2 * (1 + t18456)

        if Bindx == 2903:
            t18463 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((3*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.506e3) * ((1 - t18463) ** (0.21e2 / 0.2e1)) * ((1 + t18463) ** (0.3e1 / 0.2e1))

        if Bindx == 2904:
            t18465 = np.cos(phi)
            t18470 = -1 + t18465
            t18466 = t18470 ** 2
            t18468 = t18470 * t18466 ** 2
            t18464 = 1 + t18465
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((4*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.10626e5) * t18468 ** 2 * t18464 ** 2

        if Bindx == 2905:
            t18471 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((1j) * (12 * phi1 - 7 * phi2)) * np.sqrt(0.10626e5) * ((1 - t18471) ** (0.19e2 / 0.2e1)) * ((1 + t18471) ** (0.5e1 / 0.2e1))

        if Bindx == 2906:
            t18472 = np.cos(phi)
            t18480 = -1 + t18472
            t18479 = 1 + t18472
            t18477 = t18479 ** 2
            t18473 = t18480 ** 2
            t18474 = t18473 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((6*1j) * (2 * phi1 - phi2)) * np.sqrt(0.33649e5) * t18480 * t18474 ** 2 * t18479 * t18477

        if Bindx == 2907:
            t18481 = np.cos(phi)
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * np.exp((1j) * (12 * phi1 - 5 * phi2)) * np.sqrt(0.9614e4) * ((1 - t18481) ** (0.17e2 / 0.2e1)) * ((1 + t18481) ** (0.7e1 / 0.2e1))

        if Bindx == 2908:
            t18482 = np.cos(phi)
            t18489 = -1 + t18482
            t18488 = 1 + t18482
            t18486 = t18488 ** 2
            t18483 = t18489 ** 2
            t18484 = t18483 ** 2
            tfunc[..., c] = (0.75e2 / 0.4096e4) * np.exp((4*1j) * (3 * phi1 - phi2)) * np.sqrt(0.81719e5) * t18484 ** 2 * t18486 ** 2

        if Bindx == 2909:
            t18490 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((3*1j) * (4 * phi1 - phi2)) * np.sqrt(0.81719e5) * ((1 - t18490) ** (0.15e2 / 0.2e1)) * ((1 + t18490) ** (0.9e1 / 0.2e1))

        if Bindx == 2910:
            t18491 = np.cos(phi)
            t18500 = -1 + t18491
            t18499 = 1 + t18491
            t18496 = t18499 ** 2
            t18492 = t18500 ** 2
            t18493 = t18500 * t18492
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((2*1j) * (6 * phi1 - phi2)) * np.sqrt(0.490314e6) * t18500 * t18493 ** 2 * t18499 * t18496 ** 2

        if Bindx == 2911:
            t18501 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((1j) * (12 * phi1 - phi2)) * np.sqrt(0.156009e6) * ((1 - t18501) ** (0.13e2 / 0.2e1)) * ((1 + t18501) ** (0.11e2 / 0.2e1))

        if Bindx == 2912:
            t18506 = np.sin(phi)
            t18502 = t18506 ** 2
            t18503 = t18506 * t18502
            t18504 = t18503 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((12*1j) * phi1) * np.sqrt(0.676039e6) * t18504 ** 2

        if Bindx == 2913:
            t18507 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((1j) * (12 * phi1 + phi2)) * np.sqrt(0.156009e6) * ((1 - t18507) ** (0.11e2 / 0.2e1)) * ((1 + t18507) ** (0.13e2 / 0.2e1))

        if Bindx == 2914:
            t18508 = np.cos(phi)
            t18517 = -1 + t18508
            t18516 = 1 + t18508
            t18512 = t18516 ** 2
            t18513 = t18516 * t18512
            t18509 = t18517 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((2*1j) * (6 * phi1 + phi2)) * np.sqrt(0.490314e6) * t18517 * t18509 ** 2 * t18516 * t18513 ** 2

        if Bindx == 2915:
            t18518 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((3*1j) * (4 * phi1 + phi2)) * np.sqrt(0.81719e5) * ((1 - t18518) ** (0.9e1 / 0.2e1)) * ((1 + t18518) ** (0.15e2 / 0.2e1))

        if Bindx == 2916:
            t18519 = np.cos(phi)
            t18526 = -1 + t18519
            t18525 = 1 + t18519
            t18522 = t18525 ** 2
            t18523 = t18522 ** 2
            t18520 = t18526 ** 2
            tfunc[..., c] = (0.75e2 / 0.4096e4) * np.exp((4*1j) * (3 * phi1 + phi2)) * np.sqrt(0.81719e5) * t18520 ** 2 * t18523 ** 2

        if Bindx == 2917:
            t18527 = np.cos(phi)
            tfunc[..., c] = (0.75e2 / 0.2048e4*1j) * np.exp((1j) * (12 * phi1 + 5 * phi2)) * np.sqrt(0.9614e4) * ((1 - t18527) ** (0.7e1 / 0.2e1)) * ((1 + t18527) ** (0.17e2 / 0.2e1))

        if Bindx == 2918:
            t18528 = np.cos(phi)
            t18536 = -1 + t18528
            t18535 = 1 + t18528
            t18531 = t18535 ** 2
            t18532 = t18531 ** 2
            t18529 = t18536 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((6*1j) * (2 * phi1 + phi2)) * np.sqrt(0.33649e5) * t18536 * t18529 * t18535 * t18532 ** 2

        if Bindx == 2919:
            t18537 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (12 * phi1 + 7 * phi2)) * np.sqrt(0.10626e5) * ((1 - t18537) ** (0.5e1 / 0.2e1)) * ((1 + t18537) ** (0.19e2 / 0.2e1))

        if Bindx == 2920:
            t18539 = np.cos(phi)
            t18544 = 1 + t18539
            t18540 = t18544 ** 2
            t18542 = t18544 * t18540 ** 2
            t18538 = -1 + t18539
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((4*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.10626e5) * t18538 ** 2 * t18542 ** 2

        if Bindx == 2921:
            t18545 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.exp((3*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.506e3) * ((1 - t18545) ** (0.3e1 / 0.2e1)) * ((1 + t18545) ** (0.21e2 / 0.2e1))

        if Bindx == 2922:
            t18546 = np.cos(phi)
            t18552 = 1 + t18546
            t18547 = t18552 ** 2
            t18549 = t18552 * t18547 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((2*1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.69e2) * (-1 + t18546) * t18552 * t18549 ** 2

        if Bindx == 2923:
            t18553 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.exp((1j) * (12 * phi1 + 11 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t18553)) * ((1 + t18553) ** (0.23e2 / 0.2e1))

        if Bindx == 2924:
            t18554 = np.cos(phi)
            t18566 = 12 * t18554
            t18555 = t18554 ** 2
            t18556 = t18554 * t18555
            t18559 = t18556 ** 2
            t18557 = t18555 ** 2
            t18558 = t18554 * t18557
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.exp((12*1j) * (phi1 + phi2)) * (66 * t18555 + 220 * t18556 + t18566 + 1 + (792 * t18554 + 924 + t18559) * t18559 + (792 + (t18566 + 66) * t18558) * t18558 + (495 + (220 * t18554 + 495) * t18557) * t18557)

        if Bindx == 2925:
            t18567 = np.cos(phi)
            t18568 = t18567 ** 2
            t18569 = t18567 * t18568
            t18572 = t18569 ** 2
            t18580 = 1716 * t18572
            t18578 = t18572 ** 2
            t18570 = t18568 ** 2
            t18571 = t18567 * t18570
            t18576 = t18571 ** 2
            t18574 = t18570 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-13*1j) * (phi1 + phi2)) * (78 * t18568 + 286 * t18569 + 715 * t18570 + 1287 * t18571 + 1287 * t18574 + 286 * t18576 + 13 * t18578 + t18580 + 1 + (715 * t18574 + 78 * t18576 + t18578 + t18580 + 13) * t18567)

        if Bindx == 2926:
            t18581 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((-1*1j) * (13 * phi1 + 12 * phi2)) * np.sqrt(0.26e2) * ((1 + t18581) ** (0.25e2 / 0.2e1)) * np.sqrt((1 - t18581))

        if Bindx == 2927:
            t18582 = np.cos(phi)
            t18587 = 1 + t18582
            t18583 = t18587 ** 2
            t18584 = t18587 * t18583
            t18585 = t18584 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((-1*1j) * (13 * phi1 + 11 * phi2)) * np.sqrt(0.13e2) * (-1 + t18582) * t18585 ** 2

        if Bindx == 2928:
            t18588 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((-1*1j) * (13 * phi1 + 10 * phi2)) * np.sqrt(0.26e2) * ((1 - t18588) ** (0.3e1 / 0.2e1)) * ((1 + t18588) ** (0.23e2 / 0.2e1))

        if Bindx == 2929:
            t18590 = np.cos(phi)
            t18596 = 1 + t18590
            t18591 = t18596 ** 2
            t18593 = t18596 * t18591 ** 2
            t18589 = -1 + t18590
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((-1*1j) * (13 * phi1 + 9 * phi2)) * np.sqrt(0.598e3) * t18589 ** 2 * t18596 * t18593 ** 2

        if Bindx == 2930:
            t18597 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (13 * phi1 + 8 * phi2)) * np.sqrt(0.16445e5) * ((1 - t18597) ** (0.5e1 / 0.2e1)) * ((1 + t18597) ** (0.21e2 / 0.2e1))

        if Bindx == 2931:
            t18598 = np.cos(phi)
            t18606 = -1 + t18598
            t18605 = 1 + t18598
            t18601 = t18605 ** 2
            t18603 = t18605 * t18601 ** 2
            t18599 = t18606 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (13 * phi1 + 7 * phi2)) * np.sqrt(0.230230e6) * t18606 * t18599 * t18603 ** 2

        if Bindx == 2932:
            t18607 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((-1*1j) * (13 * phi1 + 6 * phi2)) * np.sqrt(0.6578e4) * ((1 - t18607) ** (0.7e1 / 0.2e1)) * ((1 + t18607) ** (0.19e2 / 0.2e1))

        if Bindx == 2933:
            t18608 = np.cos(phi)
            t18616 = -1 + t18608
            t18615 = 1 + t18608
            t18611 = t18615 ** 2
            t18612 = t18611 ** 2
            t18609 = t18616 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((-1*1j) * (13 * phi1 + 5 * phi2)) * np.sqrt(0.62491e5) * t18609 ** 2 * t18615 * t18612 ** 2

        if Bindx == 2934:
            t18617 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * np.exp((-1*1j) * (13 * phi1 + 4 * phi2)) * np.sqrt(0.124982e6) * ((1 - t18617) ** (0.9e1 / 0.2e1)) * ((1 + t18617) ** (0.17e2 / 0.2e1))

        if Bindx == 2935:
            t18618 = np.cos(phi)
            t18626 = -1 + t18618
            t18625 = 1 + t18618
            t18622 = t18625 ** 2
            t18623 = t18622 ** 2
            t18619 = t18626 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (13 * phi1 + 3 * phi2)) * np.sqrt(0.5311735e7) * t18626 * t18619 ** 2 * t18623 ** 2

        if Bindx == 2936:
            t18627 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (13 * phi1 + 2 * phi2)) * np.sqrt(0.482885e6) * ((1 - t18627) ** (0.11e2 / 0.2e1)) * ((1 + t18627) ** (0.15e2 / 0.2e1))

        if Bindx == 2937:
            t18632 = np.sin(phi)
            t18628 = t18632 ** 2
            t18629 = t18632 * t18628
            t18630 = t18629 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((-1*1j) * (13 * phi1 + phi2)) * np.sqrt(0.96577e5) * t18630 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 2938:
            t18633 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.4096e4*1j) * np.exp((-13*1j) * phi1) * np.sqrt(0.104006e6) * ((1 - t18633) ** (0.13e2 / 0.2e1)) * ((1 + t18633) ** (0.13e2 / 0.2e1))

        if Bindx == 2939:
            t18638 = np.sin(phi)
            t18634 = t18638 ** 2
            t18635 = t18638 * t18634
            t18636 = t18635 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((-1*1j) * (13 * phi1 - phi2)) * np.sqrt(0.96577e5) * t18636 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 2940:
            t18639 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (13 * phi1 - 2 * phi2)) * np.sqrt(0.482885e6) * ((1 - t18639) ** (0.15e2 / 0.2e1)) * ((1 + t18639) ** (0.11e2 / 0.2e1))

        if Bindx == 2941:
            t18640 = np.cos(phi)
            t18648 = -1 + t18640
            t18647 = 1 + t18640
            t18644 = t18647 ** 2
            t18641 = t18648 ** 2
            t18642 = t18641 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (13 * phi1 - 3 * phi2)) * np.sqrt(0.5311735e7) * t18642 ** 2 * t18647 * t18644 ** 2

        if Bindx == 2942:
            t18649 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * np.exp((-1*1j) * (13 * phi1 - 4 * phi2)) * np.sqrt(0.124982e6) * ((1 - t18649) ** (0.17e2 / 0.2e1)) * ((1 + t18649) ** (0.9e1 / 0.2e1))

        if Bindx == 2943:
            t18650 = np.cos(phi)
            t18658 = -1 + t18650
            t18657 = 1 + t18650
            t18655 = t18657 ** 2
            t18651 = t18658 ** 2
            t18652 = t18651 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((-1*1j) * (13 * phi1 - 5 * phi2)) * np.sqrt(0.62491e5) * t18658 * t18652 ** 2 * t18655 ** 2

        if Bindx == 2944:
            t18659 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((-1*1j) * (13 * phi1 - 6 * phi2)) * np.sqrt(0.6578e4) * ((1 - t18659) ** (0.19e2 / 0.2e1)) * ((1 + t18659) ** (0.7e1 / 0.2e1))

        if Bindx == 2945:
            t18660 = np.cos(phi)
            t18668 = -1 + t18660
            t18667 = 1 + t18660
            t18665 = t18667 ** 2
            t18661 = t18668 ** 2
            t18663 = t18668 * t18661 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (13 * phi1 - 7 * phi2)) * np.sqrt(0.230230e6) * t18663 ** 2 * t18667 * t18665

        if Bindx == 2946:
            t18669 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (13 * phi1 - 8 * phi2)) * np.sqrt(0.16445e5) * ((1 - t18669) ** (0.21e2 / 0.2e1)) * ((1 + t18669) ** (0.5e1 / 0.2e1))

        if Bindx == 2947:
            t18671 = np.cos(phi)
            t18677 = -1 + t18671
            t18672 = t18677 ** 2
            t18674 = t18677 * t18672 ** 2
            t18670 = 1 + t18671
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((-1*1j) * (13 * phi1 - 9 * phi2)) * np.sqrt(0.598e3) * t18677 * t18674 ** 2 * t18670 ** 2

        if Bindx == 2948:
            t18678 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((-1*1j) * (13 * phi1 - 10 * phi2)) * np.sqrt(0.26e2) * ((1 - t18678) ** (0.23e2 / 0.2e1)) * ((1 + t18678) ** (0.3e1 / 0.2e1))

        if Bindx == 2949:
            t18679 = np.cos(phi)
            t18684 = -1 + t18679
            t18680 = t18684 ** 2
            t18681 = t18684 * t18680
            t18682 = t18681 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((-1*1j) * (13 * phi1 - 11 * phi2)) * np.sqrt(0.13e2) * t18682 ** 2 * (1 + t18679)

        if Bindx == 2950:
            t18685 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((-1*1j) * (13 * phi1 - 12 * phi2)) * np.sqrt(0.26e2) * ((1 - t18685) ** (0.25e2 / 0.2e1)) * np.sqrt((1 + t18685))

        if Bindx == 2951:
            t18686 = np.cos(phi)
            t18687 = t18686 ** 2
            t18688 = t18686 * t18687
            t18691 = t18688 ** 2
            t18697 = t18691 ** 2
            t18689 = t18687 ** 2
            t18690 = t18686 * t18689
            t18695 = t18690 ** 2
            t18693 = t18689 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-13*1j) * (phi1 - phi2)) * (-78 * t18687 + 286 * t18688 - 715 * t18689 + 1287 * t18690 - 1716 * t18691 - 1287 * t18693 - 286 * t18695 - 13 * t18697 - 1 + (1716 * t18691 + 715 * t18693 + 78 * t18695 + t18697 + 13) * t18686)

        if Bindx == 2952:
            t18699 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((-1*1j) * (12 * phi1 + 13 * phi2)) * np.sqrt(0.26e2) * np.sqrt((1 - t18699)) * ((1 + t18699) ** (0.25e2 / 0.2e1))

        if Bindx == 2953:
            t18700 = np.cos(phi)
            t18701 = t18700 ** 2
            t18702 = t18700 * t18701
            t18705 = t18702 ** 2
            t18711 = t18705 ** 2
            t18703 = t18701 ** 2
            t18704 = t18700 * t18703
            t18709 = t18704 ** 2
            t18707 = t18703 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-12*1j) * (phi1 + phi2)) * (-636 * t18701 - 1782 * t18702 - 3080 * t18703 - 3069 * t18704 - 792 * t18705 + 4356 * t18707 + 2068 * t18709 + 144 * t18711 - 12 + (2508 * t18705 + 3795 * t18707 + 714 * t18709 + 13 * t18711 - 131) * t18700)

        if Bindx == 2954:
            t18713 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.8192e4*1j) * np.exp((-1*1j) * (12 * phi1 + 11 * phi2)) * np.sqrt(0.2e1) * ((1 + t18713) ** (0.23e2 / 0.2e1)) * (11 + (-24 + 13 * t18713) * t18713) * ((1 - t18713) ** (-0.1e1 / 0.2e1))

        if Bindx == 2955:
            t18714 = np.cos(phi)
            t18720 = 1 + t18714
            t18715 = t18720 ** 2
            t18717 = t18720 * t18715 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * (-10 + 13 * t18714) * (-1 + t18714) * t18720 * t18717 ** 2 * np.exp((-2*1j) * (6 * phi1 + 5 * phi2))

        if Bindx == 2956:
            t18721 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * (-9 + 13 * t18721) * ((1 + t18721) ** (0.21e2 / 0.2e1)) * np.sqrt(0.23e2) * np.exp((-3*1j) * (4 * phi1 + 3 * phi2)) * ((1 - t18721) ** (0.3e1 / 0.2e1))

        if Bindx == 2957:
            t18723 = np.cos(phi)
            t18728 = 1 + t18723
            t18724 = t18728 ** 2
            t18726 = t18728 * t18724 ** 2
            t18722 = -1 + t18723
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-4*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.2530e4) * t18726 ** 2 * t18722 ** 2 * (-8 + 13 * t18723)

        if Bindx == 2958:
            t18729 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (-7 + 13 * t18729) * ((1 + t18729) ** (0.19e2 / 0.2e1)) * np.sqrt(0.8855e4) * np.exp((-1*1j) * (12 * phi1 + 7 * phi2)) * ((1 - t18729) ** (0.5e1 / 0.2e1))

        if Bindx == 2959:
            t18740 = np.sin(phi)
            t18737 = t18740 ** 2
            t18738 = t18740 * t18737
            t18730 = np.cos(phi)
            t18731 = t18730 ** 2
            t18732 = t18730 * t18731
            t18735 = t18732 ** 2
            t18733 = t18731 ** 2
            tfunc[..., c] = -(0.135e3 / 0.2048e4) * np.exp((-6*1j) * (2 * phi1 + phi2)) * np.sqrt(0.253e3) * t18738 ** 2 * (-12 * t18731 + 75 * t18732 + 170 * t18733 + 72 * t18735 - 6 + (159 * t18733 + 13 * t18735 - 23) * t18730)

        if Bindx == 2960:
            t18741 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.8192e4*1j) * (-5 + 13 * t18741) * ((1 + t18741) ** (0.17e2 / 0.2e1)) * np.sqrt(0.9614e4) * np.exp((-1*1j) * (12 * phi1 + 5 * phi2)) * ((1 - t18741) ** (0.7e1 / 0.2e1))

        if Bindx == 2961:
            t18750 = np.sin(phi)
            t18747 = t18750 ** 2
            t18748 = t18747 ** 2
            t18742 = np.cos(phi)
            t18743 = t18742 ** 2
            t18745 = t18743 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((-4*1j) * (3 * phi1 + phi2)) * np.sqrt(0.4807e4) * t18748 ** 2 * (28 * t18743 + 48 * t18745 - 4 + (62 * t18743 + 13 * t18745 - 3) * t18742)

        if Bindx == 2962:
            t18751 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * (-3 + 13 * t18751) * ((1 + t18751) ** (0.15e2 / 0.2e1)) * np.sqrt(0.817190e6) * np.exp((-3*1j) * (4 * phi1 + phi2)) * ((1 - t18751) ** (0.9e1 / 0.2e1))

        if Bindx == 2963:
            t18759 = np.sin(phi)
            t18755 = t18759 ** 2
            t18757 = t18759 * t18755 ** 2
            t18752 = np.cos(phi)
            t18753 = t18752 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (6 * phi1 + phi2)) * np.sqrt(0.74290e5) * t18757 ** 2 * (24 * t18753 - 2 + (13 * t18753 + 9) * t18752)

        if Bindx == 2964:
            t18760 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * (-1 + 13 * t18760) * ((1 + t18760) ** (0.13e2 / 0.2e1)) * np.sqrt(0.14858e5) * np.exp((-1*1j) * (12 * phi1 + phi2)) * ((1 - t18760) ** (0.11e2 / 0.2e1))

        if Bindx == 2965:
            t18765 = np.sin(phi)
            t18761 = t18765 ** 2
            t18762 = t18765 * t18761
            t18763 = t18762 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((-12*1j) * phi1) * np.sqrt(0.676039e6) * t18763 ** 2 * np.cos(phi)

        if Bindx == 2966:
            t18766 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.4096e4*1j) * (1 + 13 * t18766) * ((1 + t18766) ** (0.11e2 / 0.2e1)) * np.sqrt(0.14858e5) * np.exp((-1*1j) * (12 * phi1 - phi2)) * ((1 - t18766) ** (0.13e2 / 0.2e1))

        if Bindx == 2967:
            t18774 = np.sin(phi)
            t18770 = t18774 ** 2
            t18772 = t18774 * t18770 ** 2
            t18767 = np.cos(phi)
            t18768 = t18767 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (6 * phi1 - phi2)) * np.sqrt(0.74290e5) * t18772 ** 2 * (-24 * t18768 + 2 + (13 * t18768 + 9) * t18767)

        if Bindx == 2968:
            t18775 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * (3 + 13 * t18775) * ((1 + t18775) ** (0.9e1 / 0.2e1)) * np.sqrt(0.817190e6) * np.exp((-3*1j) * (4 * phi1 - phi2)) * ((1 - t18775) ** (0.15e2 / 0.2e1))

        if Bindx == 2969:
            t18784 = np.sin(phi)
            t18781 = t18784 ** 2
            t18782 = t18781 ** 2
            t18776 = np.cos(phi)
            t18777 = t18776 ** 2
            t18779 = t18777 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((-4*1j) * (3 * phi1 - phi2)) * np.sqrt(0.4807e4) * t18782 ** 2 * (-28 * t18777 - 48 * t18779 + 4 + (62 * t18777 + 13 * t18779 - 3) * t18776)

        if Bindx == 2970:
            t18785 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * (5 + 13 * t18785) * ((1 + t18785) ** (0.7e1 / 0.2e1)) * np.sqrt(0.9614e4) * np.exp((-1*1j) * (12 * phi1 - 5 * phi2)) * ((1 - t18785) ** (0.17e2 / 0.2e1))

        if Bindx == 2971:
            t18786 = np.cos(phi)
            t18794 = -1 + t18786
            t18793 = 1 + t18786
            t18791 = t18793 ** 2
            t18787 = t18794 ** 2
            t18788 = t18787 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((-6*1j) * (2 * phi1 - phi2)) * np.sqrt(0.253e3) * t18793 * t18791 * t18794 * t18788 ** 2 * (6 + 13 * t18786)

        if Bindx == 2972:
            t18795 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (7 + 13 * t18795) * ((1 + t18795) ** (0.5e1 / 0.2e1)) * np.sqrt(0.8855e4) * np.exp((-1*1j) * (12 * phi1 - 7 * phi2)) * ((1 - t18795) ** (0.19e2 / 0.2e1))

        if Bindx == 2973:
            t18797 = np.cos(phi)
            t18802 = -1 + t18797
            t18798 = t18802 ** 2
            t18800 = t18802 * t18798 ** 2
            t18796 = 1 + t18797
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-4*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.2530e4) * t18796 ** 2 * t18800 ** 2 * (8 + 13 * t18797)

        if Bindx == 2974:
            t18803 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.4096e4*1j) * (9 + 13 * t18803) * ((1 + t18803) ** (0.3e1 / 0.2e1)) * np.sqrt(0.23e2) * np.exp((-3*1j) * (4 * phi1 - 3 * phi2)) * ((1 - t18803) ** (0.21e2 / 0.2e1))

        if Bindx == 2975:
            t18804 = np.cos(phi)
            t18810 = -1 + t18804
            t18805 = t18810 ** 2
            t18807 = t18810 * t18805 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((-2*1j) * (6 * phi1 - 5 * phi2)) * (1 + t18804) * t18810 * t18807 ** 2 * (10 + 13 * t18804)

        if Bindx == 2976:
            t18811 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.8192e4*1j) * (11 + 13 * t18811) * np.sqrt((1 + t18811)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (12 * phi1 - 11 * phi2)) * ((1 - t18811) ** (0.23e2 / 0.2e1))

        if Bindx == 2977:
            t18812 = np.cos(phi)
            t18813 = t18812 ** 2
            t18814 = t18812 * t18813
            t18817 = t18814 ** 2
            t18823 = t18817 ** 2
            t18815 = t18813 ** 2
            t18816 = t18812 * t18815
            t18821 = t18816 ** 2
            t18819 = t18815 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-12*1j) * (phi1 - phi2)) * (636 * t18813 - 1782 * t18814 + 3080 * t18815 - 3069 * t18816 + 792 * t18817 - 4356 * t18819 - 2068 * t18821 - 144 * t18823 + 12 + (2508 * t18817 + 3795 * t18819 + 714 * t18821 + 13 * t18823 - 131) * t18812)

        if Bindx == 2978:
            t18825 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((-1*1j) * (12 * phi1 - 13 * phi2)) * np.sqrt(0.26e2) * ((1 - t18825) ** (0.25e2 / 0.2e1)) * np.sqrt((1 + t18825))

        if Bindx == 2979:
            t18826 = np.cos(phi)
            t18831 = 1 + t18826
            t18827 = t18831 ** 2
            t18828 = t18831 * t18827
            t18829 = t18828 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((-1*1j) * (11 * phi1 + 13 * phi2)) * np.sqrt(0.13e2) * (-1 + t18826) * t18829 ** 2

        if Bindx == 2980:
            t18832 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * np.exp((-1*1j) * (11 * phi1 + 12 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t18832)) * ((1 + t18832) ** (0.23e2 / 0.2e1)) * (-11 + 13 * t18832)

        if Bindx == 2981:
            t18833 = np.cos(phi)
            t18834 = t18833 ** 2
            t18835 = t18833 * t18834
            t18838 = t18835 ** 2
            t18844 = t18838 ** 2
            t18836 = t18834 ** 2
            t18837 = t18833 * t18836
            t18842 = t18837 ** 2
            t18840 = t18836 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-11*1j) * (phi1 + phi2)) * (6870 * t18834 + 11110 * t18835 + 2695 * t18836 - 22077 * t18837 - 41052 * t18838 + 6435 * t18840 + 25894 * t18842 + 3025 * t18844 + 229 + (-28380 * t18838 + 29095 * t18840 + 12054 * t18842 + 325 * t18844 + 1969) * t18833)

        if Bindx == 2982:
            t18846 = np.cos(phi)
            t18847 = t18846 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (11 * phi1 + 10 * phi2)) * np.sqrt(0.2e1) * ((1 + t18846) ** (0.21e2 / 0.2e1)) * (-825 * t18847 - 187 + (325 * t18847 + 687) * t18846) * ((1 - t18846) ** (-0.1e1 / 0.2e1))

        if Bindx == 2983:
            t18849 = np.cos(phi)
            t18854 = 1 + t18849
            t18850 = t18854 ** 2
            t18852 = t18854 * t18850 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * (149 + (-450 + 325 * t18849) * t18849) * (-1 + t18849) * t18852 ** 2 * np.sqrt(0.46e2) * np.exp((-1*1j) * (11 * phi1 + 9 * phi2))

        if Bindx == 2984:
            t18855 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (23 + (-80 + 65 * t18855) * t18855) * ((1 + t18855) ** (0.19e2 / 0.2e1)) * np.sqrt(0.1265e4) * np.exp((-1*1j) * (11 * phi1 + 8 * phi2)) * ((1 - t18855) ** (0.3e1 / 0.2e1))

        if Bindx == 2985:
            t18867 = np.sin(phi)
            t18865 = t18867 ** 2
            t18856 = np.cos(phi)
            t18857 = t18856 ** 2
            t18859 = t18857 ** 2
            t18863 = t18859 ** 2
            t18858 = t18856 * t18857
            t18861 = t18858 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (11 * phi1 + 7 * phi2)) * np.sqrt(0.17710e5) * t18865 ** 2 * (-68 * t18857 - 420 * t18858 - 490 * t18859 + 924 * t18861 + 385 * t18863 + 17 + (182 * t18859 + 892 * t18861 + 65 * t18863 + 49) * t18856)

        if Bindx == 2986:
            t18868 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (59 + (-300 + 325 * t18868) * t18868) * ((1 + t18868) ** (0.17e2 / 0.2e1)) * np.sqrt(0.506e3) * np.exp((-1*1j) * (11 * phi1 + 6 * phi2)) * ((1 - t18868) ** (0.5e1 / 0.2e1))

        if Bindx == 2987:
            t18879 = np.sin(phi)
            t18876 = t18879 ** 2
            t18877 = t18879 * t18876
            t18869 = np.cos(phi)
            t18870 = t18869 ** 2
            t18871 = t18869 * t18870
            t18874 = t18871 ** 2
            t18872 = t18870 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-1*1j) * (11 * phi1 + 5 * phi2)) * np.sqrt(0.4807e4) * t18877 ** 2 * (-555 * t18870 - 505 * t18871 + 935 * t18872 + 1375 * t18874 + 37 + (2037 * t18872 + 325 * t18874 - 65) * t18869)

        if Bindx == 2988:
            t18880 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * (19 + (-200 + 325 * t18880) * t18880) * ((1 + t18880) ** (0.15e2 / 0.2e1)) * np.sqrt(0.9614e4) * np.exp((-1*1j) * (11 * phi1 + 4 * phi2)) * ((1 - t18880) ** (0.7e1 / 0.2e1))

        if Bindx == 2989:
            t18889 = np.sin(phi)
            t18886 = t18889 ** 2
            t18887 = t18886 ** 2
            t18881 = np.cos(phi)
            t18882 = t18881 ** 2
            t18884 = t18882 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (11 * phi1 + 3 * phi2)) * np.sqrt(0.408595e6) * t18887 ** 2 * (-22 * t18882 + 165 * t18884 + 1 + (106 * t18882 + 65 * t18884 - 27) * t18881)

        if Bindx == 2990:
            t18890 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-1 + (-20 + 65 * t18890) * t18890) * ((1 + t18890) ** (0.13e2 / 0.2e1)) * np.sqrt(0.37145e5) * np.exp((-1*1j) * (11 * phi1 + 2 * phi2)) * ((1 - t18890) ** (0.9e1 / 0.2e1))

        if Bindx == 2991:
            t18898 = np.sin(phi)
            t18894 = t18898 ** 2
            t18896 = t18898 * t18894 ** 2
            t18891 = np.cos(phi)
            t18892 = t18891 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (11 * phi1 + phi2)) * np.sqrt(0.7429e4) * t18896 ** 2 * (275 * t18892 - 11 + (325 * t18892 - 61) * t18891)

        if Bindx == 2992:
            t18899 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (25 * t18899 ** 2 - 1) * ((1 + t18899) ** (0.11e2 / 0.2e1)) * np.sqrt(0.1352078e7) * np.exp((-11*1j) * phi1) * ((1 - t18899) ** (0.11e2 / 0.2e1))

        if Bindx == 2993:
            t18907 = np.sin(phi)
            t18903 = t18907 ** 2
            t18905 = t18907 * t18903 ** 2
            t18900 = np.cos(phi)
            t18901 = t18900 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (11 * phi1 - phi2)) * np.sqrt(0.7429e4) * t18905 ** 2 * (-275 * t18901 + 11 + (325 * t18901 - 61) * t18900)

        if Bindx == 2994:
            t18908 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-1 + (20 + 65 * t18908) * t18908) * ((1 + t18908) ** (0.9e1 / 0.2e1)) * np.sqrt(0.37145e5) * np.exp((-1*1j) * (11 * phi1 - 2 * phi2)) * ((1 - t18908) ** (0.13e2 / 0.2e1))

        if Bindx == 2995:
            t18917 = np.sin(phi)
            t18914 = t18917 ** 2
            t18915 = t18914 ** 2
            t18909 = np.cos(phi)
            t18910 = t18909 ** 2
            t18912 = t18910 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (11 * phi1 - 3 * phi2)) * np.sqrt(0.408595e6) * t18915 ** 2 * (22 * t18910 - 165 * t18912 - 1 + (106 * t18910 + 65 * t18912 - 27) * t18909)

        if Bindx == 2996:
            t18918 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * (19 + (200 + 325 * t18918) * t18918) * ((1 + t18918) ** (0.7e1 / 0.2e1)) * np.sqrt(0.9614e4) * np.exp((-1*1j) * (11 * phi1 - 4 * phi2)) * ((1 - t18918) ** (0.15e2 / 0.2e1))

        if Bindx == 2997:
            t18929 = np.sin(phi)
            t18926 = t18929 ** 2
            t18927 = t18929 * t18926
            t18919 = np.cos(phi)
            t18920 = t18919 ** 2
            t18921 = t18919 * t18920
            t18924 = t18921 ** 2
            t18922 = t18920 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-1*1j) * (11 * phi1 - 5 * phi2)) * np.sqrt(0.4807e4) * t18927 ** 2 * (555 * t18920 - 505 * t18921 - 935 * t18922 - 1375 * t18924 - 37 + (2037 * t18922 + 325 * t18924 - 65) * t18919)

        if Bindx == 2998:
            t18930 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (59 + (300 + 325 * t18930) * t18930) * ((1 + t18930) ** (0.5e1 / 0.2e1)) * np.sqrt(0.506e3) * np.exp((-1*1j) * (11 * phi1 - 6 * phi2)) * ((1 - t18930) ** (0.17e2 / 0.2e1))

        if Bindx == 2999:
            t18932 = np.cos(phi)
            t18937 = -1 + t18932
            t18933 = t18937 ** 2
            t18934 = t18933 ** 2
            t18931 = 1 + t18932
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (11 * phi1 - 7 * phi2)) * np.sqrt(0.17710e5) * t18931 ** 2 * t18937 * t18934 ** 2 * (17 + (70 + 65 * t18932) * t18932)

        if Bindx == 3000:
            t18938 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (23 + (80 + 65 * t18938) * t18938) * ((1 + t18938) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1265e4) * np.exp((-1*1j) * (11 * phi1 - 8 * phi2)) * ((1 - t18938) ** (0.19e2 / 0.2e1))

        if Bindx == 3001:
            t18939 = np.cos(phi)
            t18944 = -1 + t18939
            t18940 = t18944 ** 2
            t18942 = t18944 * t18940 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (11 * phi1 - 9 * phi2)) * np.sqrt(0.46e2) * (1 + t18939) * t18942 ** 2 * (149 + (450 + 325 * t18939) * t18939)

        if Bindx == 3002:
            t18945 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (187 + (500 + 325 * t18945) * t18945) * np.sqrt((1 + t18945)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (11 * phi1 - 10 * phi2)) * ((1 - t18945) ** (0.21e2 / 0.2e1))

        if Bindx == 3003:
            t18946 = np.cos(phi)
            t18947 = t18946 ** 2
            t18948 = t18946 * t18947
            t18951 = t18948 ** 2
            t18957 = t18951 ** 2
            t18949 = t18947 ** 2
            t18950 = t18946 * t18949
            t18955 = t18950 ** 2
            t18953 = t18949 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-11*1j) * (phi1 - phi2)) * (-6870 * t18947 + 11110 * t18948 - 2695 * t18949 - 22077 * t18950 + 41052 * t18951 - 6435 * t18953 - 25894 * t18955 - 3025 * t18957 - 229 + (-28380 * t18951 + 29095 * t18953 + 12054 * t18955 + 325 * t18957 + 1969) * t18946)

        if Bindx == 3004:
            t18959 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.8192e4*1j) * (11 + 13 * t18959) * np.sqrt((1 + t18959)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (11 * phi1 - 12 * phi2)) * ((1 - t18959) ** (0.23e2 / 0.2e1))

        if Bindx == 3005:
            t18960 = np.cos(phi)
            t18965 = -1 + t18960
            t18961 = t18965 ** 2
            t18962 = t18965 * t18961
            t18963 = t18962 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((-1*1j) * (11 * phi1 - 13 * phi2)) * np.sqrt(0.13e2) * t18963 ** 2 * (1 + t18960)

        if Bindx == 3006:
            t18966 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((-1*1j) * (10 * phi1 + 13 * phi2)) * np.sqrt(0.26e2) * ((1 - t18966) ** (0.3e1 / 0.2e1)) * ((1 + t18966) ** (0.23e2 / 0.2e1))

        if Bindx == 3007:
            t18967 = np.cos(phi)
            t18973 = 1 + t18967
            t18968 = t18973 ** 2
            t18970 = t18973 * t18968 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((-2*1j) * (5 * phi1 + 6 * phi2)) * (-1 + t18967) * t18973 * t18970 ** 2 * (-10 + 13 * t18967)

        if Bindx == 3008:
            t18974 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (10 * phi1 + 11 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t18974)) * ((1 + t18974) ** (0.21e2 / 0.2e1)) * (187 + (-500 + 325 * t18974) * t18974)

        if Bindx == 3009:
            t18975 = np.cos(phi)
            t18976 = t18975 ** 2
            t18977 = t18975 * t18976
            t18980 = t18977 ** 2
            t18986 = t18980 ** 2
            t18978 = t18976 ** 2
            t18979 = t18975 * t18978
            t18984 = t18979 ** 2
            t18982 = t18978 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-10*1j) * (phi1 + phi2)) * (-1215 * t18976 + 1870 * t18977 + 8470 * t18978 + 8415 * t18979 - 5478 * t18980 - 14355 * t18982 + 10725 * t18984 + 2500 * t18986 - 135 + (-19140 * t18980 + 2145 * t18982 + 7686 * t18984 + 325 * t18986 - 789) * t18975)

        if Bindx == 3010:
            t18988 = np.cos(phi)
            t18989 = t18988 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (10 * phi1 + 9 * phi2)) * np.sqrt(0.23e2) * ((1 + t18988) ** (0.19e2 / 0.2e1)) * (-540 * t18988 + 93 + (-1000 * t18988 + 1122 + 325 * t18989) * t18989) * ((1 - t18988) ** (-0.1e1 / 0.2e1))

        if Bindx == 3011:
            t18993 = np.cos(phi)
            t18994 = t18993 ** 2
            t18996 = t18994 ** 2
            t18997 = t18993 * t18996
            t19002 = t18997 ** 2
            t19000 = t18996 ** 2
            t18995 = t18993 * t18994
            t18998 = t18995 ** 2
            t18992 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.2530e4) * t18992 ** 2 * (96 * t18994 + 365 * t18995 + 184 * t18996 - 742 * t18997 - 1232 * t18998 + 820 * t19000 + 400 * t19002 - 12 + (-334 * t18998 + 929 * t19000 + 65 * t19002 - 27) * t18993)

        if Bindx == 3012:
            t19004 = np.cos(phi)
            t19005 = t19004 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (-105 * t19005 - 7 + (65 * t19005 + 51) * t19004) * ((1 + t19004) ** (0.17e2 / 0.2e1)) * np.sqrt(0.8855e4) * np.exp((-1*1j) * (10 * phi1 + 7 * phi2)) * ((1 - t19004) ** (0.3e1 / 0.2e1))

        if Bindx == 3013:
            t19018 = np.sin(phi)
            t19016 = t19018 ** 2
            t19007 = np.cos(phi)
            t19008 = t19007 ** 2
            t19010 = t19008 ** 2
            t19014 = t19010 ** 2
            t19009 = t19007 * t19008
            t19012 = t19009 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.253e3) * t19016 ** 2 * (357 * t19008 - 60 * t19009 - 1515 * t19010 + 795 * t19012 + 1500 * t19014 - 17 + (-1572 * t19010 + 2352 * t19012 + 325 * t19014 + 75) * t19007)

        if Bindx == 3014:
            t19019 = np.cos(phi)
            t19020 = t19019 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (-375 * t19020 - 5 + (325 * t19020 + 111) * t19019) * ((1 + t19019) ** (0.15e2 / 0.2e1)) * np.sqrt(0.9614e4) * np.exp((-5*1j) * (2 * phi1 + phi2)) * ((1 - t19019) ** (0.5e1 / 0.2e1))

        if Bindx == 3015:
            t19032 = np.sin(phi)
            t19029 = t19032 ** 2
            t19030 = t19032 * t19029
            t19022 = np.cos(phi)
            t19023 = t19022 ** 2
            t19024 = t19022 * t19023
            t19027 = t19024 ** 2
            t19025 = t19023 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.4807e4) * t19030 ** 2 * (-60 * t19023 - 525 * t19024 - 270 * t19025 + 1000 * t19027 + 2 + (807 * t19025 + 325 * t19027 + 65) * t19022)

        if Bindx == 3016:
            t19033 = np.cos(phi)
            t19034 = t19033 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-45 * t19034 + 1 + (65 * t19034 + 3) * t19033) * ((1 + t19033) ** (0.13e2 / 0.2e1)) * np.sqrt(0.817190e6) * np.exp((-1*1j) * (10 * phi1 + 3 * phi2)) * ((1 - t19033) ** (0.7e1 / 0.2e1))

        if Bindx == 3017:
            t19044 = np.sin(phi)
            t19041 = t19044 ** 2
            t19042 = t19041 ** 2
            t19036 = np.cos(phi)
            t19037 = t19036 ** 2
            t19039 = t19037 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 + phi2)) * np.sqrt(0.74290e5) * t19042 ** 2 * (-35 * t19037 + 100 * t19039 + 1 + (2 * t19037 + 65 * t19039 - 1) * t19036)

        if Bindx == 3018:
            t19045 = np.cos(phi)
            t19046 = t19045 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-75 * t19046 + 3 + (325 * t19046 - 33) * t19045) * ((1 + t19045) ** (0.11e2 / 0.2e1)) * np.sqrt(0.14858e5) * np.exp((-1*1j) * (10 * phi1 + phi2)) * ((1 - t19045) ** (0.9e1 / 0.2e1))

        if Bindx == 3019:
            t19053 = np.sin(phi)
            t19049 = t19053 ** 2
            t19051 = t19053 * t19049 ** 2
            t19048 = np.cos(phi)
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((-10*1j) * phi1) * np.sqrt(0.676039e6) * t19051 ** 2 * t19048 * (25 * t19048 ** 2 - 3)

        if Bindx == 3020:
            t19054 = np.cos(phi)
            t19055 = t19054 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (75 * t19055 - 3 + (325 * t19055 - 33) * t19054) * ((1 + t19054) ** (0.9e1 / 0.2e1)) * np.sqrt(0.14858e5) * np.exp((-1*1j) * (10 * phi1 - phi2)) * ((1 - t19054) ** (0.11e2 / 0.2e1))

        if Bindx == 3021:
            t19065 = np.sin(phi)
            t19062 = t19065 ** 2
            t19063 = t19062 ** 2
            t19057 = np.cos(phi)
            t19058 = t19057 ** 2
            t19060 = t19058 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 - phi2)) * np.sqrt(0.74290e5) * t19063 ** 2 * (35 * t19058 - 100 * t19060 - 1 + (2 * t19058 + 65 * t19060 - 1) * t19057)

        if Bindx == 3022:
            t19066 = np.cos(phi)
            t19067 = t19066 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (45 * t19067 - 1 + (65 * t19067 + 3) * t19066) * ((1 + t19066) ** (0.7e1 / 0.2e1)) * np.sqrt(0.817190e6) * np.exp((-1*1j) * (10 * phi1 - 3 * phi2)) * ((1 - t19066) ** (0.13e2 / 0.2e1))

        if Bindx == 3023:
            t19079 = np.sin(phi)
            t19076 = t19079 ** 2
            t19077 = t19079 * t19076
            t19069 = np.cos(phi)
            t19070 = t19069 ** 2
            t19071 = t19069 * t19070
            t19074 = t19071 ** 2
            t19072 = t19070 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.4807e4) * t19077 ** 2 * (60 * t19070 - 525 * t19071 + 270 * t19072 - 1000 * t19074 - 2 + (807 * t19072 + 325 * t19074 + 65) * t19069)

        if Bindx == 3024:
            t19080 = np.cos(phi)
            t19081 = t19080 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (375 * t19081 + 5 + (325 * t19081 + 111) * t19080) * ((1 + t19080) ** (0.5e1 / 0.2e1)) * np.sqrt(0.9614e4) * np.exp((-5*1j) * (2 * phi1 - phi2)) * ((1 - t19080) ** (0.15e2 / 0.2e1))

        if Bindx == 3025:
            t19094 = np.sin(phi)
            t19092 = t19094 ** 2
            t19083 = np.cos(phi)
            t19084 = t19083 ** 2
            t19086 = t19084 ** 2
            t19090 = t19086 ** 2
            t19085 = t19083 * t19084
            t19088 = t19085 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-2*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.253e3) * t19092 ** 2 * (-357 * t19084 - 60 * t19085 + 1515 * t19086 - 795 * t19088 - 1500 * t19090 + 17 + (-1572 * t19086 + 2352 * t19088 + 325 * t19090 + 75) * t19083)

        if Bindx == 3026:
            t19095 = np.cos(phi)
            t19096 = t19095 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (105 * t19096 + 7 + (65 * t19096 + 51) * t19095) * ((1 + t19095) ** (0.3e1 / 0.2e1)) * np.sqrt(0.8855e4) * np.exp((-1*1j) * (10 * phi1 - 7 * phi2)) * ((1 - t19095) ** (0.17e2 / 0.2e1))

        if Bindx == 3027:
            t19099 = np.cos(phi)
            t19100 = t19099 ** 2
            t19102 = t19100 ** 2
            t19103 = t19099 * t19102
            t19108 = t19103 ** 2
            t19106 = t19102 ** 2
            t19101 = t19099 * t19100
            t19104 = t19101 ** 2
            t19098 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.2530e4) * t19098 ** 2 * (-96 * t19100 + 365 * t19101 - 184 * t19102 - 742 * t19103 + 1232 * t19104 - 820 * t19106 - 400 * t19108 + 12 + (-334 * t19104 + 929 * t19106 + 65 * t19108 - 27) * t19099)

        if Bindx == 3028:
            t19110 = np.cos(phi)
            t19111 = t19110 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (675 * t19111 + 93 + (325 * t19111 + 447) * t19110) * np.sqrt((1 + t19110)) * np.sqrt(0.23e2) * np.exp((-1*1j) * (10 * phi1 - 9 * phi2)) * ((1 - t19110) ** (0.19e2 / 0.2e1))

        if Bindx == 3029:
            t19113 = np.cos(phi)
            t19114 = t19113 ** 2
            t19115 = t19113 * t19114
            t19118 = t19115 ** 2
            t19124 = t19118 ** 2
            t19116 = t19114 ** 2
            t19117 = t19113 * t19116
            t19122 = t19117 ** 2
            t19120 = t19116 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-10*1j) * (phi1 - phi2)) * (1215 * t19114 + 1870 * t19115 - 8470 * t19116 + 8415 * t19117 + 5478 * t19118 + 14355 * t19120 - 10725 * t19122 - 2500 * t19124 + 135 + (-19140 * t19118 + 2145 * t19120 + 7686 * t19122 + 325 * t19124 - 789) * t19113)

        if Bindx == 3030:
            t19126 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (187 + (500 + 325 * t19126) * t19126) * np.sqrt((1 + t19126)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (10 * phi1 - 11 * phi2)) * ((1 - t19126) ** (0.21e2 / 0.2e1))

        if Bindx == 3031:
            t19127 = np.cos(phi)
            t19133 = -1 + t19127
            t19128 = t19133 ** 2
            t19130 = t19133 * t19128 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((-2*1j) * (5 * phi1 - 6 * phi2)) * (1 + t19127) * t19133 * t19130 ** 2 * (10 + 13 * t19127)

        if Bindx == 3032:
            t19134 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((-1*1j) * (10 * phi1 - 13 * phi2)) * np.sqrt(0.26e2) * ((1 - t19134) ** (0.23e2 / 0.2e1)) * ((1 + t19134) ** (0.3e1 / 0.2e1))

        if Bindx == 3033:
            t19136 = np.cos(phi)
            t19142 = 1 + t19136
            t19137 = t19142 ** 2
            t19139 = t19142 * t19137 ** 2
            t19135 = -1 + t19136
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((-1*1j) * (9 * phi1 + 13 * phi2)) * np.sqrt(0.598e3) * t19135 ** 2 * t19142 * t19139 ** 2

        if Bindx == 3034:
            t19143 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((-3*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.23e2) * ((1 - t19143) ** (0.3e1 / 0.2e1)) * ((1 + t19143) ** (0.21e2 / 0.2e1)) * (-9 + 13 * t19143)

        if Bindx == 3035:
            t19144 = np.cos(phi)
            t19149 = 1 + t19144
            t19145 = t19149 ** 2
            t19147 = t19149 * t19145 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (9 * phi1 + 11 * phi2)) * np.sqrt(0.46e2) * (-1 + t19144) * t19147 ** 2 * (149 + (-450 + 325 * t19144) * t19144)

        if Bindx == 3036:
            t19150 = np.cos(phi)
            t19151 = t19150 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (9 * phi1 + 10 * phi2)) * np.sqrt(0.23e2) * np.sqrt((1 - t19150)) * ((1 + t19150) ** (0.19e2 / 0.2e1)) * (-675 * t19151 - 93 + (325 * t19151 + 447) * t19150)

        if Bindx == 3037:
            t19153 = np.cos(phi)
            t19154 = t19153 ** 2
            t19155 = t19153 * t19154
            t19158 = t19155 ** 2
            t19164 = t19158 ** 2
            t19156 = t19154 ** 2
            t19157 = t19153 * t19156
            t19162 = t19157 ** 2
            t19160 = t19156 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-9*1j) * (phi1 + phi2)) * (-12270 * t19154 - 40590 * t19155 - 2695 * t19156 + 125829 * t19157 + 146124 * t19158 - 236115 * t19160 + 59202 * t19162 + 46575 * t19164 + 1227 + (-64020 * t19158 - 132495 * t19160 + 103362 * t19162 + 7475 * t19164 + 2487) * t19153)

        if Bindx == 3038:
            t19166 = np.cos(phi)
            t19167 = t19166 ** 2
            t19169 = t19167 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (9 * phi1 + 8 * phi2)) * np.sqrt(0.110e3) * ((1 + t19166) ** (0.17e2 / 0.2e1)) * (-4278 * t19167 - 5175 * t19169 - 123 + (6854 * t19167 + 1495 * t19169 + 1227) * t19166) * ((1 - t19166) ** (-0.1e1 / 0.2e1))

        if Bindx == 3039:
            t19172 = np.cos(phi)
            t19173 = t19172 ** 2
            t19175 = t19173 ** 2
            t19176 = t19172 * t19175
            t19181 = t19176 ** 2
            t19179 = t19175 ** 2
            t19174 = t19172 * t19173
            t19177 = t19174 ** 2
            t19171 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (9 * phi1 + 7 * phi2)) * np.sqrt(0.385e3) * t19171 ** 2 * (-1175 * t19173 + 1323 * t19174 + 7326 * t19175 + 3402 * t19176 - 12390 * t19177 + 483 * t19179 + 7245 * t19181 + 47 + (-15570 * t19177 + 11201 * t19179 + 1495 * t19181 - 315) * t19172)

        if Bindx == 3040:
            t19183 = np.cos(phi)
            t19184 = t19183 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (-1564 * t19183 + 27 + (-13800 * t19183 + 8142 + 7475 * t19184) * t19184) * ((1 + t19183) ** (0.15e2 / 0.2e1)) * np.sqrt(0.11e2) * np.exp((-3*1j) * (3 * phi1 + 2 * phi2)) * ((1 - t19183) ** (0.3e1 / 0.2e1))

        if Bindx == 3041:
            t19198 = np.sin(phi)
            t19196 = t19198 ** 2
            t19187 = np.cos(phi)
            t19188 = t19187 ** 2
            t19190 = t19188 ** 2
            t19194 = t19190 ** 2
            t19189 = t19187 * t19188
            t19192 = t19189 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (9 * phi1 + 5 * phi2)) * np.sqrt(0.418e3) * t19196 ** 2 * (2196 * t19188 + 8820 * t19189 - 3870 * t19190 - 15180 * t19192 + 25875 * t19194 - 61 + (-28926 * t19190 + 22356 * t19192 + 7475 * t19194 - 765) * t19187)

        if Bindx == 3042:
            t19199 = np.cos(phi)
            t19200 = t19199 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (184 * t19199 - 73 + (-9200 * t19199 + 2622 + 7475 * t19200) * t19200) * ((1 + t19199) ** (0.13e2 / 0.2e1)) * np.sqrt(0.209e3) * np.exp((-1*1j) * (9 * phi1 + 4 * phi2)) * ((1 - t19199) ** (0.5e1 / 0.2e1))

        if Bindx == 3043:
            t19213 = np.sin(phi)
            t19210 = t19213 ** 2
            t19211 = t19213 * t19210
            t19203 = np.cos(phi)
            t19204 = t19203 ** 2
            t19205 = t19203 * t19204
            t19208 = t19205 ** 2
            t19206 = t19204 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-3*1j) * (3 * phi1 + phi2)) * np.sqrt(0.35530e5) * t19211 ** 2 * (387 * t19204 - 699 * t19205 - 2139 * t19206 + 3105 * t19208 - 9 + (483 * t19206 + 1495 * t19208 + 65) * t19203)

        if Bindx == 3044:
            t19214 = np.cos(phi)
            t19215 = t19214 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (92 * t19214 - 1 + (-920 * t19214 - 138 + 1495 * t19215) * t19215) * ((1 + t19214) ** (0.11e2 / 0.2e1)) * np.sqrt(0.3230e4) * np.exp((-1*1j) * (9 * phi1 + 2 * phi2)) * ((1 - t19214) ** (0.7e1 / 0.2e1))

        if Bindx == 3045:
            t19226 = np.sin(phi)
            t19223 = t19226 ** 2
            t19224 = t19223 ** 2
            t19218 = np.cos(phi)
            t19219 = t19218 ** 2
            t19221 = t19219 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-1*1j) * (9 * phi1 + phi2)) * np.sqrt(0.646e3) * t19224 ** 2 * (-1242 * t19219 + 5175 * t19221 + 27 + (-3818 * t19219 + 7475 * t19221 + 303) * t19218)

        if Bindx == 3046:
            t19227 = np.cos(phi)
            t19228 = t19227 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (3 + (-138 + 575 * t19228) * t19228) * ((1 + t19227) ** (0.9e1 / 0.2e1)) * np.sqrt(0.29393e5) * np.exp((-9*1j) * phi1) * ((1 - t19227) ** (0.9e1 / 0.2e1))

        if Bindx == 3047:
            t19238 = np.sin(phi)
            t19235 = t19238 ** 2
            t19236 = t19235 ** 2
            t19230 = np.cos(phi)
            t19231 = t19230 ** 2
            t19233 = t19231 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-1*1j) * (9 * phi1 - phi2)) * np.sqrt(0.646e3) * t19236 ** 2 * (1242 * t19231 - 5175 * t19233 - 27 + (-3818 * t19231 + 7475 * t19233 + 303) * t19230)

        if Bindx == 3048:
            t19239 = np.cos(phi)
            t19240 = t19239 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (-92 * t19239 - 1 + (920 * t19239 - 138 + 1495 * t19240) * t19240) * ((1 + t19239) ** (0.7e1 / 0.2e1)) * np.sqrt(0.3230e4) * np.exp((-1*1j) * (9 * phi1 - 2 * phi2)) * ((1 - t19239) ** (0.11e2 / 0.2e1))

        if Bindx == 3049:
            t19253 = np.sin(phi)
            t19250 = t19253 ** 2
            t19251 = t19253 * t19250
            t19243 = np.cos(phi)
            t19244 = t19243 ** 2
            t19245 = t19243 * t19244
            t19248 = t19245 ** 2
            t19246 = t19244 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-3*1j) * (3 * phi1 - phi2)) * np.sqrt(0.35530e5) * t19251 ** 2 * (-387 * t19244 - 699 * t19245 + 2139 * t19246 - 3105 * t19248 + 9 + (483 * t19246 + 1495 * t19248 + 65) * t19243)

        if Bindx == 3050:
            t19254 = np.cos(phi)
            t19255 = t19254 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (-184 * t19254 - 73 + (9200 * t19254 + 2622 + 7475 * t19255) * t19255) * ((1 + t19254) ** (0.5e1 / 0.2e1)) * np.sqrt(0.209e3) * np.exp((-1*1j) * (9 * phi1 - 4 * phi2)) * ((1 - t19254) ** (0.13e2 / 0.2e1))

        if Bindx == 3051:
            t19269 = np.sin(phi)
            t19267 = t19269 ** 2
            t19258 = np.cos(phi)
            t19259 = t19258 ** 2
            t19261 = t19259 ** 2
            t19265 = t19261 ** 2
            t19260 = t19258 * t19259
            t19263 = t19260 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (9 * phi1 - 5 * phi2)) * np.sqrt(0.418e3) * t19267 ** 2 * (-2196 * t19259 + 8820 * t19260 + 3870 * t19261 + 15180 * t19263 - 25875 * t19265 + 61 + (-28926 * t19261 + 22356 * t19263 + 7475 * t19265 - 765) * t19258)

        if Bindx == 3052:
            t19270 = np.cos(phi)
            t19271 = t19270 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (1564 * t19270 + 27 + (13800 * t19270 + 8142 + 7475 * t19271) * t19271) * ((1 + t19270) ** (0.3e1 / 0.2e1)) * np.sqrt(0.11e2) * np.exp((-3*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t19270) ** (0.15e2 / 0.2e1))

        if Bindx == 3053:
            t19275 = np.cos(phi)
            t19276 = t19275 ** 2
            t19278 = t19276 ** 2
            t19279 = t19275 * t19278
            t19284 = t19279 ** 2
            t19282 = t19278 ** 2
            t19277 = t19275 * t19276
            t19280 = t19277 ** 2
            t19274 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (9 * phi1 - 7 * phi2)) * np.sqrt(0.385e3) * t19274 ** 2 * (1175 * t19276 + 1323 * t19277 - 7326 * t19278 + 3402 * t19279 + 12390 * t19280 - 483 * t19282 - 7245 * t19284 - 47 + (-15570 * t19280 + 11201 * t19282 + 1495 * t19284 - 315) * t19275)

        if Bindx == 3054:
            t19286 = np.cos(phi)
            t19287 = t19286 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (1104 * t19286 + 123 + (3680 * t19286 + 3174 + 1495 * t19287) * t19287) * np.sqrt((1 + t19286)) * np.sqrt(0.110e3) * np.exp((-1*1j) * (9 * phi1 - 8 * phi2)) * ((1 - t19286) ** (0.17e2 / 0.2e1))

        if Bindx == 3055:
            t19290 = np.cos(phi)
            t19291 = t19290 ** 2
            t19292 = t19290 * t19291
            t19295 = t19292 ** 2
            t19301 = t19295 ** 2
            t19293 = t19291 ** 2
            t19294 = t19290 * t19293
            t19299 = t19294 ** 2
            t19297 = t19293 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-9*1j) * (phi1 - phi2)) * (12270 * t19291 - 40590 * t19292 + 2695 * t19293 + 125829 * t19294 - 146124 * t19295 + 236115 * t19297 - 59202 * t19299 - 46575 * t19301 - 1227 + (-64020 * t19295 - 132495 * t19297 + 103362 * t19299 + 7475 * t19301 + 2487) * t19290)

        if Bindx == 3056:
            t19303 = np.cos(phi)
            t19304 = t19303 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (675 * t19304 + 93 + (325 * t19304 + 447) * t19303) * np.sqrt((1 + t19303)) * np.sqrt(0.23e2) * np.exp((-1*1j) * (9 * phi1 - 10 * phi2)) * ((1 - t19303) ** (0.19e2 / 0.2e1))

        if Bindx == 3057:
            t19306 = np.cos(phi)
            t19311 = -1 + t19306
            t19307 = t19311 ** 2
            t19309 = t19311 * t19307 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (9 * phi1 - 11 * phi2)) * np.sqrt(0.46e2) * (1 + t19306) * t19309 ** 2 * (149 + (450 + 325 * t19306) * t19306)

        if Bindx == 3058:
            t19312 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.4096e4*1j) * (9 + 13 * t19312) * ((1 + t19312) ** (0.3e1 / 0.2e1)) * np.sqrt(0.23e2) * np.exp((-3*1j) * (3 * phi1 - 4 * phi2)) * ((1 - t19312) ** (0.21e2 / 0.2e1))

        if Bindx == 3059:
            t19314 = np.cos(phi)
            t19320 = -1 + t19314
            t19315 = t19320 ** 2
            t19317 = t19320 * t19315 ** 2
            t19313 = 1 + t19314
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((-1*1j) * (9 * phi1 - 13 * phi2)) * np.sqrt(0.598e3) * t19320 * t19317 ** 2 * t19313 ** 2

        if Bindx == 3060:
            t19321 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (8 * phi1 + 13 * phi2)) * np.sqrt(0.16445e5) * ((1 - t19321) ** (0.5e1 / 0.2e1)) * ((1 + t19321) ** (0.21e2 / 0.2e1))

        if Bindx == 3061:
            t19323 = np.cos(phi)
            t19328 = 1 + t19323
            t19324 = t19328 ** 2
            t19326 = t19328 * t19324 ** 2
            t19322 = -1 + t19323
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-4*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.2530e4) * t19322 ** 2 * t19326 ** 2 * (-8 + 13 * t19323)

        if Bindx == 3062:
            t19329 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (8 * phi1 + 11 * phi2)) * np.sqrt(0.1265e4) * ((1 - t19329) ** (0.3e1 / 0.2e1)) * ((1 + t19329) ** (0.19e2 / 0.2e1)) * (23 + (-80 + 65 * t19329) * t19329)

        if Bindx == 3063:
            t19331 = np.cos(phi)
            t19332 = t19331 ** 2
            t19334 = t19332 ** 2
            t19335 = t19331 * t19334
            t19340 = t19335 ** 2
            t19338 = t19334 ** 2
            t19333 = t19331 * t19332
            t19336 = t19333 ** 2
            t19330 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.2530e4) * t19330 ** 2 * (96 * t19332 + 365 * t19333 + 184 * t19334 - 742 * t19335 - 1232 * t19336 + 820 * t19338 + 400 * t19340 - 12 + (-334 * t19336 + 929 * t19338 + 65 * t19340 - 27) * t19331)

        if Bindx == 3064:
            t19342 = np.cos(phi)
            t19343 = t19342 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (8 * phi1 + 9 * phi2)) * np.sqrt(0.110e3) * np.sqrt((1 - t19342)) * ((1 + t19342) ** (0.17e2 / 0.2e1)) * (-1104 * t19342 + 123 + (-3680 * t19342 + 3174 + 1495 * t19343) * t19343)

        if Bindx == 3065:
            t19346 = np.cos(phi)
            t19347 = t19346 ** 2
            t19348 = t19346 * t19347
            t19351 = t19348 ** 2
            t19357 = t19351 ** 2
            t19349 = t19347 ** 2
            t19350 = t19346 * t19349
            t19355 = t19350 ** 2
            t19353 = t19349 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((-8*1j) * (phi1 + phi2)) * (11664 * t19347 - 19462 * t19348 - 86560 * t19349 - 9837 * t19350 + 214944 * t19351 - 158832 * t19353 - 60720 * t19355 + 80960 * t19357 - 432 + (185964 * t19351 - 289245 * t19353 + 113850 * t19355 + 16445 * t19357 + 3309) * t19346)

        if Bindx == 3066:
            t19359 = np.cos(phi)
            t19360 = t19359 ** 2
            t19362 = t19360 ** 2
            t19361 = t19359 * t19360
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (8 * phi1 + 7 * phi2)) * np.sqrt(0.14e2) * ((1 + t19359) ** (0.15e2 / 0.2e1)) * (20295 * t19360 + 87285 * t19362 + 7 + (-60720 + 16445 * t19361) * t19361 + (-60720 * t19362 - 2592) * t19359) * ((1 - t19359) ** (-0.1e1 / 0.2e1))

        if Bindx == 3067:
            t19366 = np.cos(phi)
            t19367 = t19366 ** 2
            t19369 = t19367 ** 2
            t19370 = t19366 * t19369
            t19375 = t19370 ** 2
            t19373 = t19369 ** 2
            t19368 = t19366 * t19367
            t19371 = t19368 ** 2
            t19365 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.10e2) * t19365 ** 2 * (-4960 * t19367 - 14823 * t19368 + 19944 * t19369 + 69714 * t19370 - 624 * t19371 - 69828 * t19373 + 60720 * t19375 + 124 + (-115830 * t19371 + 48829 * t19373 + 16445 * t19375 + 1041) * t19366)

        if Bindx == 3068:
            t19377 = np.cos(phi)
            t19378 = t19377 ** 2
            t19380 = t19378 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-2530 * t19378 - 31625 * t19380 + 107 + (18722 * t19378 + 16445 * t19380 - 671) * t19377) * ((1 + t19377) ** (0.13e2 / 0.2e1)) * np.sqrt(0.95e2) * np.exp((-1*1j) * (8 * phi1 + 5 * phi2)) * ((1 - t19377) ** (0.3e1 / 0.2e1))

        if Bindx == 3069:
            t19393 = np.sin(phi)
            t19391 = t19393 ** 2
            t19382 = np.cos(phi)
            t19383 = t19382 ** 2
            t19385 = t19383 ** 2
            t19389 = t19385 ** 2
            t19384 = t19382 * t19383
            t19387 = t19384 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-4*1j) * (2 * phi1 + phi2)) * np.sqrt(0.190e3) * t19391 ** 2 * (-1960 * t19383 + 9004 * t19384 + 16056 * t19385 - 46552 * t19387 + 40480 * t19389 + 40 + (-23826 * t19385 + 7084 * t19387 + 16445 * t19389 - 643) * t19382)

        if Bindx == 3070:
            t19394 = np.cos(phi)
            t19395 = t19394 ** 2
            t19399 = 2530 * t19395
            t19397 = t19395 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (-18975 * t19397 + t19399 - 19 + (16445 * t19397 + t19399 - 495) * t19394) * ((1 + t19394) ** (0.11e2 / 0.2e1)) * np.sqrt(0.323e3) * np.exp((-1*1j) * (8 * phi1 + 3 * phi2)) * ((1 - t19394) ** (0.5e1 / 0.2e1))

        if Bindx == 3071:
            t19410 = np.sin(phi)
            t19407 = t19410 ** 2
            t19408 = t19410 * t19407
            t19400 = np.cos(phi)
            t19401 = t19400 ** 2
            t19402 = t19400 * t19401
            t19405 = t19402 ** 2
            t19403 = t19401 ** 2
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((-2*1j) * (4 * phi1 + phi2)) * np.sqrt(0.3553e4) * t19408 ** 2 * (216 * t19401 + 225 * t19402 - 1380 * t19403 + 1840 * t19405 - 4 + (-1035 * t19403 + 1495 * t19405 - 13) * t19400)

        if Bindx == 3072:
            t19411 = np.cos(phi)
            t19412 = t19411 ** 2
            t19414 = t19412 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (138 * t19412 - 575 * t19414 - 3 + (-506 * t19412 + 1495 * t19414 + 27) * t19411) * ((1 + t19411) ** (0.9e1 / 0.2e1)) * np.sqrt(0.17765e5) * np.exp((-1*1j) * (8 * phi1 + phi2)) * ((1 - t19411) ** (0.7e1 / 0.2e1))

        if Bindx == 3073:
            t19422 = np.sin(phi)
            t19419 = t19422 ** 2
            t19420 = t19419 ** 2
            t19416 = np.cos(phi)
            t19417 = t19416 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((-8*1j) * phi1) * np.sqrt(0.3233230e7) * t19420 ** 2 * t19416 * (3 + (-46 + 115 * t19417) * t19417)

        if Bindx == 3074:
            t19423 = np.cos(phi)
            t19424 = t19423 ** 2
            t19426 = t19424 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-138 * t19424 + 575 * t19426 + 3 + (-506 * t19424 + 1495 * t19426 + 27) * t19423) * ((1 + t19423) ** (0.7e1 / 0.2e1)) * np.sqrt(0.17765e5) * np.exp((-1*1j) * (8 * phi1 - phi2)) * ((1 - t19423) ** (0.9e1 / 0.2e1))

        if Bindx == 3075:
            t19438 = np.sin(phi)
            t19435 = t19438 ** 2
            t19436 = t19438 * t19435
            t19428 = np.cos(phi)
            t19429 = t19428 ** 2
            t19430 = t19428 * t19429
            t19433 = t19430 ** 2
            t19431 = t19429 ** 2
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((-2*1j) * (4 * phi1 - phi2)) * np.sqrt(0.3553e4) * t19436 ** 2 * (-216 * t19429 + 225 * t19430 + 1380 * t19431 - 1840 * t19433 + 4 + (-1035 * t19431 + 1495 * t19433 - 13) * t19428)

        if Bindx == 3076:
            t19439 = np.cos(phi)
            t19440 = t19439 ** 2
            t19442 = t19440 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-2530 * t19440 + 18975 * t19442 + 19 + (2530 * t19440 + 16445 * t19442 - 495) * t19439) * ((1 + t19439) ** (0.5e1 / 0.2e1)) * np.sqrt(0.323e3) * np.exp((-1*1j) * (8 * phi1 - 3 * phi2)) * ((1 - t19439) ** (0.11e2 / 0.2e1))

        if Bindx == 3077:
            t19455 = np.sin(phi)
            t19453 = t19455 ** 2
            t19444 = np.cos(phi)
            t19445 = t19444 ** 2
            t19447 = t19445 ** 2
            t19451 = t19447 ** 2
            t19446 = t19444 * t19445
            t19449 = t19446 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-4*1j) * (2 * phi1 - phi2)) * np.sqrt(0.190e3) * t19453 ** 2 * (1960 * t19445 + 9004 * t19446 - 16056 * t19447 + 46552 * t19449 - 40480 * t19451 - 40 + (-23826 * t19447 + 7084 * t19449 + 16445 * t19451 - 643) * t19444)

        if Bindx == 3078:
            t19456 = np.cos(phi)
            t19457 = t19456 ** 2
            t19459 = t19457 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (2530 * t19457 + 31625 * t19459 - 107 + (18722 * t19457 + 16445 * t19459 - 671) * t19456) * ((1 + t19456) ** (0.3e1 / 0.2e1)) * np.sqrt(0.95e2) * np.exp((-1*1j) * (8 * phi1 - 5 * phi2)) * ((1 - t19456) ** (0.13e2 / 0.2e1))

        if Bindx == 3079:
            t19462 = np.cos(phi)
            t19463 = t19462 ** 2
            t19465 = t19463 ** 2
            t19466 = t19462 * t19465
            t19471 = t19466 ** 2
            t19469 = t19465 ** 2
            t19464 = t19462 * t19463
            t19467 = t19464 ** 2
            t19461 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.10e2) * t19461 ** 2 * (4960 * t19463 - 14823 * t19464 - 19944 * t19465 + 69714 * t19466 + 624 * t19467 + 69828 * t19469 - 60720 * t19471 - 124 + (-115830 * t19467 + 48829 * t19469 + 16445 * t19471 + 1041) * t19462)

        if Bindx == 3080:
            t19473 = np.cos(phi)
            t19474 = t19473 ** 2
            t19476 = t19474 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (17710 * t19474 + 44275 * t19476 + 7 + (43010 * t19474 + 16445 * t19476 + 2585) * t19473) * np.sqrt((1 + t19473)) * np.sqrt(0.14e2) * np.exp((-1*1j) * (8 * phi1 - 7 * phi2)) * ((1 - t19473) ** (0.15e2 / 0.2e1))

        if Bindx == 3081:
            t19478 = np.cos(phi)
            t19479 = t19478 ** 2
            t19480 = t19478 * t19479
            t19483 = t19480 ** 2
            t19489 = t19483 ** 2
            t19481 = t19479 ** 2
            t19482 = t19478 * t19481
            t19487 = t19482 ** 2
            t19485 = t19481 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((-8*1j) * (phi1 - phi2)) * (-11664 * t19479 - 19462 * t19480 + 86560 * t19481 - 9837 * t19482 - 214944 * t19483 + 158832 * t19485 + 60720 * t19487 - 80960 * t19489 + 432 + (185964 * t19483 - 289245 * t19485 + 113850 * t19487 + 16445 * t19489 + 3309) * t19478)

        if Bindx == 3082:
            t19491 = np.cos(phi)
            t19492 = t19491 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (1104 * t19491 + 123 + (3680 * t19491 + 3174 + 1495 * t19492) * t19492) * np.sqrt((1 + t19491)) * np.sqrt(0.110e3) * np.exp((-1*1j) * (8 * phi1 - 9 * phi2)) * ((1 - t19491) ** (0.17e2 / 0.2e1))

        if Bindx == 3083:
            t19496 = np.cos(phi)
            t19497 = t19496 ** 2
            t19499 = t19497 ** 2
            t19500 = t19496 * t19499
            t19505 = t19500 ** 2
            t19503 = t19499 ** 2
            t19498 = t19496 * t19497
            t19501 = t19498 ** 2
            t19495 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.2530e4) * t19495 ** 2 * (-96 * t19497 + 365 * t19498 - 184 * t19499 - 742 * t19500 + 1232 * t19501 - 820 * t19503 - 400 * t19505 + 12 + (-334 * t19501 + 929 * t19503 + 65 * t19505 - 27) * t19496)

        if Bindx == 3084:
            t19507 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (23 + (80 + 65 * t19507) * t19507) * ((1 + t19507) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1265e4) * np.exp((-1*1j) * (8 * phi1 - 11 * phi2)) * ((1 - t19507) ** (0.19e2 / 0.2e1))

        if Bindx == 3085:
            t19509 = np.cos(phi)
            t19514 = -1 + t19509
            t19510 = t19514 ** 2
            t19512 = t19514 * t19510 ** 2
            t19508 = 1 + t19509
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-4*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.2530e4) * t19512 ** 2 * t19508 ** 2 * (8 + 13 * t19509)

        if Bindx == 3086:
            t19515 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (8 * phi1 - 13 * phi2)) * np.sqrt(0.16445e5) * ((1 - t19515) ** (0.21e2 / 0.2e1)) * ((1 + t19515) ** (0.5e1 / 0.2e1))

        if Bindx == 3087:
            t19516 = np.cos(phi)
            t19524 = -1 + t19516
            t19523 = 1 + t19516
            t19519 = t19523 ** 2
            t19521 = t19523 * t19519 ** 2
            t19517 = t19524 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (7 * phi1 + 13 * phi2)) * np.sqrt(0.230230e6) * t19524 * t19517 * t19521 ** 2

        if Bindx == 3088:
            t19525 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (7 * phi1 + 12 * phi2)) * np.sqrt(0.8855e4) * ((1 - t19525) ** (0.5e1 / 0.2e1)) * ((1 + t19525) ** (0.19e2 / 0.2e1)) * (-7 + 13 * t19525)

        if Bindx == 3089:
            t19537 = np.sin(phi)
            t19535 = t19537 ** 2
            t19526 = np.cos(phi)
            t19527 = t19526 ** 2
            t19529 = t19527 ** 2
            t19533 = t19529 ** 2
            t19528 = t19526 * t19527
            t19531 = t19528 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (7 * phi1 + 11 * phi2)) * np.sqrt(0.17710e5) * t19535 ** 2 * (-68 * t19527 - 420 * t19528 - 490 * t19529 + 924 * t19531 + 385 * t19533 + 17 + (182 * t19529 + 892 * t19531 + 65 * t19533 + 49) * t19526)

        if Bindx == 3090:
            t19538 = np.cos(phi)
            t19539 = t19538 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (7 * phi1 + 10 * phi2)) * np.sqrt(0.8855e4) * ((1 - t19538) ** (0.3e1 / 0.2e1)) * ((1 + t19538) ** (0.17e2 / 0.2e1)) * (-105 * t19539 - 7 + (65 * t19539 + 51) * t19538)

        if Bindx == 3091:
            t19542 = np.cos(phi)
            t19543 = t19542 ** 2
            t19545 = t19543 ** 2
            t19546 = t19542 * t19545
            t19551 = t19546 ** 2
            t19549 = t19545 ** 2
            t19544 = t19542 * t19543
            t19547 = t19544 ** 2
            t19541 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (7 * phi1 + 9 * phi2)) * np.sqrt(0.385e3) * t19541 ** 2 * (-1175 * t19543 + 1323 * t19544 + 7326 * t19545 + 3402 * t19546 - 12390 * t19547 + 483 * t19549 + 7245 * t19551 + 47 + (-15570 * t19547 + 11201 * t19549 + 1495 * t19551 - 315) * t19542)

        if Bindx == 3092:
            t19553 = np.cos(phi)
            t19554 = t19553 ** 2
            t19556 = t19554 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (7 * phi1 + 8 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t19553)) * ((1 + t19553) ** (0.15e2 / 0.2e1)) * (-17710 * t19554 - 44275 * t19556 - 7 + (43010 * t19554 + 16445 * t19556 + 2585) * t19553)

        if Bindx == 3093:
            t19558 = np.cos(phi)
            t19559 = t19558 ** 2
            t19560 = t19558 * t19559
            t19563 = t19560 ** 2
            t19569 = t19563 ** 2
            t19561 = t19559 ** 2
            t19562 = t19558 * t19561
            t19567 = t19562 ** 2
            t19565 = t19561 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-7*1j) * (phi1 + phi2)) * (34818 * t19559 + 96866 * t19560 - 183295 * t19561 - 545139 * t19562 + 205548 * t19563 + 379701 * t19565 - 867790 * t19567 + 433895 * t19569 - 829 + (1261068 * t19563 - 1185415 * t19565 + 265650 * t19567 + 115115 * t19569 - 6097) * t19558)

        if Bindx == 3094:
            t19571 = np.cos(phi)
            t19572 = t19571 ** 2
            t19573 = t19571 * t19572
            t19576 = t19573 ** 2
            t19574 = t19572 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.35e2) * ((1 + t19571) ** (0.13e2 / 0.2e1)) * (-147 * t19572 + 18095 * t19573 - 61985 * t19574 - 61985 * t19576 + 85 + (90321 * t19574 + 16445 * t19576 - 829) * t19571) * ((1 - t19571) ** (-0.1e1 / 0.2e1))

        if Bindx == 3095:
            t19579 = np.cos(phi)
            t19580 = t19579 ** 2
            t19582 = t19580 ** 2
            t19583 = t19579 * t19582
            t19588 = t19583 ** 2
            t19586 = t19582 ** 2
            t19581 = t19579 * t19580
            t19584 = t19581 ** 2
            t19578 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-1*1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.1330e4) * t19578 ** 2 * (1007 * t19580 - 8895 * t19581 - 11022 * t19582 + 34926 * t19583 + 47502 * t19584 - 79695 * t19586 + 44275 * t19588 - 19 + (-43758 * t19584 + 2783 * t19586 + 16445 * t19588 + 547) * t19579)

        if Bindx == 3096:
            t19590 = np.cos(phi)
            t19591 = t19590 ** 2
            t19593 = t19591 ** 2
            t19592 = t19590 * t19591
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-2409 * t19591 + 14421 * t19593 + 23 + (2024 + 16445 * t19592) * t19592 + (-30360 * t19593 + 240) * t19590) * ((1 + t19590) ** (0.11e2 / 0.2e1)) * np.sqrt(0.665e3) * np.exp((-1*1j) * (7 * phi1 + 4 * phi2)) * ((1 - t19590) ** (0.3e1 / 0.2e1))

        if Bindx == 3097:
            t19607 = np.sin(phi)
            t19605 = t19607 ** 2
            t19596 = np.cos(phi)
            t19597 = t19596 ** 2
            t19599 = t19597 ** 2
            t19603 = t19599 ** 2
            t19598 = t19596 * t19597
            t19601 = t19598 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.4522e4) * t19605 ** 2 * (-1740 * t19597 + 292 * t19598 + 14406 * t19599 - 35420 * t19601 + 26565 * t19603 + 29 + (2310 * t19599 - 15180 * t19601 + 16445 * t19603 - 27) * t19596)

        if Bindx == 3098:
            t19608 = np.cos(phi)
            t19609 = t19608 ** 2
            t19611 = t19609 ** 2
            t19610 = t19608 * t19609
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-15 * t19609 - 345 * t19611 + 1 + (460 + 1495 * t19610) * t19610 + (-1380 * t19611 - 24) * t19608) * ((1 + t19608) ** (0.9e1 / 0.2e1)) * np.sqrt(0.49742e5) * np.exp((-1*1j) * (7 * phi1 + 2 * phi2)) * ((1 - t19608) ** (0.5e1 / 0.2e1))

        if Bindx == 3099:
            t19624 = np.sin(phi)
            t19621 = t19624 ** 2
            t19622 = t19624 * t19621
            t19614 = np.cos(phi)
            t19615 = t19614 ** 2
            t19616 = t19614 * t19615
            t19619 = t19616 ** 2
            t19617 = t19615 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (7 * phi1 + phi2)) * np.sqrt(0.248710e6) * t19622 ** 2 * (63 * t19615 + 357 * t19616 - 483 * t19617 + 805 * t19619 - 1 + (-1449 * t19617 + 1495 * t19619 - 19) * t19614)

        if Bindx == 3100:
            t19625 = np.cos(phi)
            t19626 = t19625 ** 2
            t19627 = t19626 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (-483 * t19627 - 1 + (805 * t19627 + 63) * t19626) * ((1 + t19625) ** (0.7e1 / 0.2e1)) * np.sqrt(0.230945e6) * np.exp((-7*1j) * phi1) * ((1 - t19625) ** (0.7e1 / 0.2e1))

        if Bindx == 3101:
            t19639 = np.sin(phi)
            t19636 = t19639 ** 2
            t19637 = t19639 * t19636
            t19629 = np.cos(phi)
            t19630 = t19629 ** 2
            t19631 = t19629 * t19630
            t19634 = t19631 ** 2
            t19632 = t19630 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (7 * phi1 - phi2)) * np.sqrt(0.248710e6) * t19637 ** 2 * (-63 * t19630 + 357 * t19631 + 483 * t19632 - 805 * t19634 + 1 + (-1449 * t19632 + 1495 * t19634 - 19) * t19629)

        if Bindx == 3102:
            t19640 = np.cos(phi)
            t19641 = t19640 ** 2
            t19643 = t19641 ** 2
            t19642 = t19640 * t19641
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-15 * t19641 - 345 * t19643 + 1 + (-460 + 1495 * t19642) * t19642 + (1380 * t19643 + 24) * t19640) * ((1 + t19640) ** (0.5e1 / 0.2e1)) * np.sqrt(0.49742e5) * np.exp((-1*1j) * (7 * phi1 - 2 * phi2)) * ((1 - t19640) ** (0.9e1 / 0.2e1))

        if Bindx == 3103:
            t19657 = np.sin(phi)
            t19655 = t19657 ** 2
            t19646 = np.cos(phi)
            t19647 = t19646 ** 2
            t19649 = t19647 ** 2
            t19653 = t19649 ** 2
            t19648 = t19646 * t19647
            t19651 = t19648 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.4522e4) * t19655 ** 2 * (1740 * t19647 + 292 * t19648 - 14406 * t19649 + 35420 * t19651 - 26565 * t19653 - 29 + (2310 * t19649 - 15180 * t19651 + 16445 * t19653 - 27) * t19646)

        if Bindx == 3104:
            t19658 = np.cos(phi)
            t19659 = t19658 ** 2
            t19661 = t19659 ** 2
            t19660 = t19658 * t19659
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-2409 * t19659 + 14421 * t19661 + 23 + (-2024 + 16445 * t19660) * t19660 + (30360 * t19661 - 240) * t19658) * ((1 + t19658) ** (0.3e1 / 0.2e1)) * np.sqrt(0.665e3) * np.exp((-1*1j) * (7 * phi1 - 4 * phi2)) * ((1 - t19658) ** (0.11e2 / 0.2e1))

        if Bindx == 3105:
            t19665 = np.cos(phi)
            t19666 = t19665 ** 2
            t19668 = t19666 ** 2
            t19669 = t19665 * t19668
            t19674 = t19669 ** 2
            t19672 = t19668 ** 2
            t19667 = t19665 * t19666
            t19670 = t19667 ** 2
            t19664 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-1*1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.1330e4) * t19664 ** 2 * (-1007 * t19666 - 8895 * t19667 + 11022 * t19668 + 34926 * t19669 - 47502 * t19670 + 79695 * t19672 - 44275 * t19674 + 19 + (-43758 * t19670 + 2783 * t19672 + 16445 * t19674 + 547) * t19665)

        if Bindx == 3106:
            t19676 = np.cos(phi)
            t19677 = t19676 ** 2
            t19679 = t19677 ** 2
            t19678 = t19676 * t19677
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (891 * t19677 + 44781 * t19679 - 85 + (17204 + 16445 * t19678) * t19678 + (45540 * t19679 - 744) * t19676) * np.sqrt((1 + t19676)) * np.sqrt(0.35e2) * np.exp((-1*1j) * (7 * phi1 - 6 * phi2)) * ((1 - t19676) ** (0.13e2 / 0.2e1))

        if Bindx == 3107:
            t19682 = np.cos(phi)
            t19683 = t19682 ** 2
            t19684 = t19682 * t19683
            t19687 = t19684 ** 2
            t19693 = t19687 ** 2
            t19685 = t19683 ** 2
            t19686 = t19682 * t19685
            t19691 = t19686 ** 2
            t19689 = t19685 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-7*1j) * (phi1 - phi2)) * (-34818 * t19683 + 96866 * t19684 + 183295 * t19685 - 545139 * t19686 - 205548 * t19687 - 379701 * t19689 + 867790 * t19691 - 433895 * t19693 + 829 + (1261068 * t19687 - 1185415 * t19689 + 265650 * t19691 + 115115 * t19693 - 6097) * t19682)

        if Bindx == 3108:
            t19695 = np.cos(phi)
            t19696 = t19695 ** 2
            t19698 = t19696 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (17710 * t19696 + 44275 * t19698 + 7 + (43010 * t19696 + 16445 * t19698 + 2585) * t19695) * np.sqrt((1 + t19695)) * np.sqrt(0.14e2) * np.exp((-1*1j) * (7 * phi1 - 8 * phi2)) * ((1 - t19695) ** (0.15e2 / 0.2e1))

        if Bindx == 3109:
            t19701 = np.cos(phi)
            t19702 = t19701 ** 2
            t19704 = t19702 ** 2
            t19705 = t19701 * t19704
            t19710 = t19705 ** 2
            t19708 = t19704 ** 2
            t19703 = t19701 * t19702
            t19706 = t19703 ** 2
            t19700 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (7 * phi1 - 9 * phi2)) * np.sqrt(0.385e3) * t19700 ** 2 * (1175 * t19702 + 1323 * t19703 - 7326 * t19704 + 3402 * t19705 + 12390 * t19706 - 483 * t19708 - 7245 * t19710 - 47 + (-15570 * t19706 + 11201 * t19708 + 1495 * t19710 - 315) * t19701)

        if Bindx == 3110:
            t19712 = np.cos(phi)
            t19713 = t19712 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (105 * t19713 + 7 + (65 * t19713 + 51) * t19712) * ((1 + t19712) ** (0.3e1 / 0.2e1)) * np.sqrt(0.8855e4) * np.exp((-1*1j) * (7 * phi1 - 10 * phi2)) * ((1 - t19712) ** (0.17e2 / 0.2e1))

        if Bindx == 3111:
            t19726 = np.sin(phi)
            t19724 = t19726 ** 2
            t19715 = np.cos(phi)
            t19716 = t19715 ** 2
            t19718 = t19716 ** 2
            t19722 = t19718 ** 2
            t19717 = t19715 * t19716
            t19720 = t19717 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (7 * phi1 - 11 * phi2)) * np.sqrt(0.17710e5) * t19724 ** 2 * (68 * t19716 - 420 * t19717 + 490 * t19718 - 924 * t19720 - 385 * t19722 - 17 + (182 * t19718 + 892 * t19720 + 65 * t19722 + 49) * t19715)

        if Bindx == 3112:
            t19727 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (7 + 13 * t19727) * ((1 + t19727) ** (0.5e1 / 0.2e1)) * np.sqrt(0.8855e4) * np.exp((-1*1j) * (7 * phi1 - 12 * phi2)) * ((1 - t19727) ** (0.19e2 / 0.2e1))

        if Bindx == 3113:
            t19728 = np.cos(phi)
            t19736 = -1 + t19728
            t19735 = 1 + t19728
            t19733 = t19735 ** 2
            t19729 = t19736 ** 2
            t19731 = t19736 * t19729 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (7 * phi1 - 13 * phi2)) * np.sqrt(0.230230e6) * t19731 ** 2 * t19735 * t19733

        if Bindx == 3114:
            t19737 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((-1*1j) * (6 * phi1 + 13 * phi2)) * np.sqrt(0.6578e4) * ((1 - t19737) ** (0.7e1 / 0.2e1)) * ((1 + t19737) ** (0.19e2 / 0.2e1))

        if Bindx == 3115:
            t19738 = np.cos(phi)
            t19746 = -1 + t19738
            t19745 = 1 + t19738
            t19741 = t19745 ** 2
            t19742 = t19741 ** 2
            t19739 = t19746 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((-6*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.253e3) * t19746 * t19739 * t19745 * t19742 ** 2 * (-6 + 13 * t19738)

        if Bindx == 3116:
            t19747 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (6 * phi1 + 11 * phi2)) * np.sqrt(0.506e3) * ((1 - t19747) ** (0.5e1 / 0.2e1)) * ((1 + t19747) ** (0.17e2 / 0.2e1)) * (59 + (-300 + 325 * t19747) * t19747)

        if Bindx == 3117:
            t19759 = np.sin(phi)
            t19757 = t19759 ** 2
            t19748 = np.cos(phi)
            t19749 = t19748 ** 2
            t19751 = t19749 ** 2
            t19755 = t19751 ** 2
            t19750 = t19748 * t19749
            t19753 = t19750 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.253e3) * t19757 ** 2 * (357 * t19749 - 60 * t19750 - 1515 * t19751 + 795 * t19753 + 1500 * t19755 - 17 + (-1572 * t19751 + 2352 * t19753 + 325 * t19755 + 75) * t19748)

        if Bindx == 3118:
            t19760 = np.cos(phi)
            t19761 = t19760 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((-3*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.11e2) * ((1 - t19760) ** (0.3e1 / 0.2e1)) * ((1 + t19760) ** (0.15e2 / 0.2e1)) * (-1564 * t19760 + 27 + (-13800 * t19760 + 8142 + 7475 * t19761) * t19761)

        if Bindx == 3119:
            t19765 = np.cos(phi)
            t19766 = t19765 ** 2
            t19768 = t19766 ** 2
            t19769 = t19765 * t19768
            t19774 = t19769 ** 2
            t19772 = t19768 ** 2
            t19767 = t19765 * t19766
            t19770 = t19767 ** 2
            t19764 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.10e2) * t19764 ** 2 * (-4960 * t19766 - 14823 * t19767 + 19944 * t19768 + 69714 * t19769 - 624 * t19770 - 69828 * t19772 + 60720 * t19774 + 124 + (-115830 * t19770 + 48829 * t19772 + 16445 * t19774 + 1041) * t19765)

        if Bindx == 3120:
            t19776 = np.cos(phi)
            t19777 = t19776 ** 2
            t19779 = t19777 ** 2
            t19778 = t19776 * t19777
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.35e2) * np.sqrt((1 - t19776)) * ((1 + t19776) ** (0.13e2 / 0.2e1)) * (891 * t19777 + 44781 * t19779 - 85 + (-17204 + 16445 * t19778) * t19778 + (-45540 * t19779 + 744) * t19776)

        if Bindx == 3121:
            t19782 = np.cos(phi)
            t19783 = t19782 ** 2
            t19784 = t19782 * t19783
            t19787 = t19784 ** 2
            t19793 = t19787 ** 2
            t19785 = t19783 ** 2
            t19786 = t19782 * t19785
            t19791 = t19786 ** 2
            t19789 = t19785 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-6*1j) * (phi1 + phi2)) * (-3795 * t19783 + 45270 * t19784 + 48670 * t19785 - 217629 * t19786 - 257454 * t19787 + 595305 * t19789 - 609983 * t19791 + 227700 * t19793 + 69 + (410700 * t19787 - 270435 * t19789 - 47058 * t19791 + 82225 * t19793 - 2561) * t19782)

        if Bindx == 3122:
            t19795 = np.cos(phi)
            t19796 = t19795 ** 2
            t19797 = t19795 * t19796
            t19800 = t19797 ** 2
            t19798 = t19796 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.38e2) * ((1 + t19795) ** (0.11e2 / 0.2e1)) * (-11900 * t19796 + 34720 * t19797 + 417956 * t19800 + 113 + (20790 + 82225 * t19798) * t19798 + (-240856 * t19798 - 303600 * t19800 + 552) * t19795) * ((1 - t19795) ** (-0.1e1 / 0.2e1))

        if Bindx == 3123:
            t19804 = np.cos(phi)
            t19805 = t19804 ** 2
            t19807 = t19805 ** 2
            t19808 = t19804 * t19807
            t19813 = t19808 ** 2
            t19811 = t19807 ** 2
            t19806 = t19804 * t19805
            t19809 = t19806 ** 2
            t19803 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.19e2) * t19803 ** 2 * (6784 * t19805 - 6899 * t19806 - 66396 * t19807 + 20762 * t19808 + 224728 * t19809 - 312202 * t19811 + 151800 * t19813 - 106 + (22242 * t19809 - 114103 * t19811 + 82225 * t19813 + 381) * t19804)

        if Bindx == 3124:
            t19815 = np.cos(phi)
            t19816 = t19815 ** 2
            t19817 = t19815 * t19816
            t19820 = t19817 ** 2
            t19818 = t19816 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-399 * t19816 - 3465 * t19817 + 8855 * t19818 - 26565 * t19820 - 3 + (5313 * t19818 + 16445 * t19820 + 203) * t19815) * ((1 + t19815) ** (0.9e1 / 0.2e1)) * np.sqrt(0.3230e4) * np.exp((-3*1j) * (2 * phi1 + phi2)) * ((1 - t19815) ** (0.3e1 / 0.2e1))

        if Bindx == 3125:
            t19833 = np.sin(phi)
            t19831 = t19833 ** 2
            t19822 = np.cos(phi)
            t19823 = t19822 ** 2
            t19825 = t19823 ** 2
            t19829 = t19825 ** 2
            t19824 = t19822 * t19823
            t19827 = t19824 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.35530e5) * t19831 ** 2 * (-69 * t19823 - 196 * t19824 + 651 * t19825 - 1771 * t19827 + 1380 * t19829 + 1 + (1092 * t19825 - 2208 * t19827 + 1495 * t19829 + 9) * t19822)

        if Bindx == 3126:
            t19834 = np.cos(phi)
            t19835 = t19834 ** 2
            t19836 = t19834 * t19835
            t19839 = t19836 ** 2
            t19837 = t19835 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-315 * t19835 + 945 * t19836 + 2415 * t19837 - 4025 * t19839 + 5 + (-5313 * t19837 + 7475 * t19839 - 35) * t19834) * ((1 + t19834) ** (0.7e1 / 0.2e1)) * np.sqrt(0.7106e4) * np.exp((-1*1j) * (6 * phi1 + phi2)) * ((1 - t19834) ** (0.5e1 / 0.2e1))

        if Bindx == 3127:
            t19848 = np.sin(phi)
            t19845 = t19848 ** 2
            t19846 = t19848 * t19845
            t19841 = np.cos(phi)
            t19842 = t19841 ** 2
            t19843 = t19842 ** 2
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((-6*1j) * phi1) * np.sqrt(0.323323e6) * t19846 ** 2 * t19841 * (-483 * t19843 - 5 + (575 * t19843 + 105) * t19842)

        if Bindx == 3128:
            t19849 = np.cos(phi)
            t19850 = t19849 ** 2
            t19851 = t19849 * t19850
            t19854 = t19851 ** 2
            t19852 = t19850 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (315 * t19850 + 945 * t19851 - 2415 * t19852 + 4025 * t19854 - 5 + (-5313 * t19852 + 7475 * t19854 - 35) * t19849) * ((1 + t19849) ** (0.5e1 / 0.2e1)) * np.sqrt(0.7106e4) * np.exp((-1*1j) * (6 * phi1 - phi2)) * ((1 - t19849) ** (0.7e1 / 0.2e1))

        if Bindx == 3129:
            t19867 = np.sin(phi)
            t19865 = t19867 ** 2
            t19856 = np.cos(phi)
            t19857 = t19856 ** 2
            t19859 = t19857 ** 2
            t19863 = t19859 ** 2
            t19858 = t19856 * t19857
            t19861 = t19858 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.35530e5) * t19865 ** 2 * (69 * t19857 - 196 * t19858 - 651 * t19859 + 1771 * t19861 - 1380 * t19863 - 1 + (1092 * t19859 - 2208 * t19861 + 1495 * t19863 + 9) * t19856)

        if Bindx == 3130:
            t19868 = np.cos(phi)
            t19869 = t19868 ** 2
            t19870 = t19868 * t19869
            t19873 = t19870 ** 2
            t19871 = t19869 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (399 * t19869 - 3465 * t19870 - 8855 * t19871 + 26565 * t19873 + 3 + (5313 * t19871 + 16445 * t19873 + 203) * t19868) * ((1 + t19868) ** (0.3e1 / 0.2e1)) * np.sqrt(0.3230e4) * np.exp((-3*1j) * (2 * phi1 - phi2)) * ((1 - t19868) ** (0.9e1 / 0.2e1))

        if Bindx == 3131:
            t19876 = np.cos(phi)
            t19877 = t19876 ** 2
            t19879 = t19877 ** 2
            t19880 = t19876 * t19879
            t19885 = t19880 ** 2
            t19883 = t19879 ** 2
            t19878 = t19876 * t19877
            t19881 = t19878 ** 2
            t19875 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.19e2) * t19875 ** 2 * (-6784 * t19877 - 6899 * t19878 + 66396 * t19879 + 20762 * t19880 - 224728 * t19881 + 312202 * t19883 - 151800 * t19885 + 106 + (22242 * t19881 - 114103 * t19883 + 82225 * t19885 + 381) * t19876)

        if Bindx == 3132:
            t19887 = np.cos(phi)
            t19888 = t19887 ** 2
            t19889 = t19887 * t19888
            t19892 = t19889 ** 2
            t19890 = t19888 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-11235 * t19888 - 23485 * t19889 + 44275 * t19890 + 221375 * t19892 + 113 + (196581 * t19890 + 82225 * t19892 - 665) * t19887) * np.sqrt((1 + t19887)) * np.sqrt(0.38e2) * np.exp((-1*1j) * (6 * phi1 - 5 * phi2)) * ((1 - t19887) ** (0.11e2 / 0.2e1))

        if Bindx == 3133:
            t19894 = np.cos(phi)
            t19895 = t19894 ** 2
            t19896 = t19894 * t19895
            t19899 = t19896 ** 2
            t19905 = t19899 ** 2
            t19897 = t19895 ** 2
            t19898 = t19894 * t19897
            t19903 = t19898 ** 2
            t19901 = t19897 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-6*1j) * (phi1 - phi2)) * (3795 * t19895 + 45270 * t19896 - 48670 * t19897 - 217629 * t19898 + 257454 * t19899 - 595305 * t19901 + 609983 * t19903 - 227700 * t19905 - 69 + (410700 * t19899 - 270435 * t19901 - 47058 * t19903 + 82225 * t19905 - 2561) * t19894)

        if Bindx == 3134:
            t19907 = np.cos(phi)
            t19908 = t19907 ** 2
            t19910 = t19908 ** 2
            t19909 = t19907 * t19908
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (891 * t19908 + 44781 * t19910 - 85 + (17204 + 16445 * t19909) * t19909 + (45540 * t19910 - 744) * t19907) * np.sqrt((1 + t19907)) * np.sqrt(0.35e2) * np.exp((-1*1j) * (6 * phi1 - 7 * phi2)) * ((1 - t19907) ** (0.13e2 / 0.2e1))

        if Bindx == 3135:
            t19914 = np.cos(phi)
            t19915 = t19914 ** 2
            t19917 = t19915 ** 2
            t19918 = t19914 * t19917
            t19923 = t19918 ** 2
            t19921 = t19917 ** 2
            t19916 = t19914 * t19915
            t19919 = t19916 ** 2
            t19913 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.10e2) * t19913 ** 2 * (4960 * t19915 - 14823 * t19916 - 19944 * t19917 + 69714 * t19918 + 624 * t19919 + 69828 * t19921 - 60720 * t19923 - 124 + (-115830 * t19919 + 48829 * t19921 + 16445 * t19923 + 1041) * t19914)

        if Bindx == 3136:
            t19925 = np.cos(phi)
            t19926 = t19925 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (1564 * t19925 + 27 + (13800 * t19925 + 8142 + 7475 * t19926) * t19926) * ((1 + t19925) ** (0.3e1 / 0.2e1)) * np.sqrt(0.11e2) * np.exp((-3*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t19925) ** (0.15e2 / 0.2e1))

        if Bindx == 3137:
            t19940 = np.sin(phi)
            t19938 = t19940 ** 2
            t19929 = np.cos(phi)
            t19930 = t19929 ** 2
            t19932 = t19930 ** 2
            t19936 = t19932 ** 2
            t19931 = t19929 * t19930
            t19934 = t19931 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-2*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.253e3) * t19938 ** 2 * (-357 * t19930 - 60 * t19931 + 1515 * t19932 - 795 * t19934 - 1500 * t19936 + 17 + (-1572 * t19932 + 2352 * t19934 + 325 * t19936 + 75) * t19929)

        if Bindx == 3138:
            t19941 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (59 + (300 + 325 * t19941) * t19941) * ((1 + t19941) ** (0.5e1 / 0.2e1)) * np.sqrt(0.506e3) * np.exp((-1*1j) * (6 * phi1 - 11 * phi2)) * ((1 - t19941) ** (0.17e2 / 0.2e1))

        if Bindx == 3139:
            t19942 = np.cos(phi)
            t19950 = -1 + t19942
            t19949 = 1 + t19942
            t19947 = t19949 ** 2
            t19943 = t19950 ** 2
            t19944 = t19943 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((-6*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.253e3) * t19950 * t19944 ** 2 * t19949 * t19947 * (6 + 13 * t19942)

        if Bindx == 3140:
            t19951 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((-1*1j) * (6 * phi1 - 13 * phi2)) * np.sqrt(0.6578e4) * ((1 - t19951) ** (0.19e2 / 0.2e1)) * ((1 + t19951) ** (0.7e1 / 0.2e1))

        if Bindx == 3141:
            t19952 = np.cos(phi)
            t19960 = -1 + t19952
            t19959 = 1 + t19952
            t19955 = t19959 ** 2
            t19956 = t19955 ** 2
            t19953 = t19960 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((-1*1j) * (5 * phi1 + 13 * phi2)) * np.sqrt(0.62491e5) * t19953 ** 2 * t19959 * t19956 ** 2

        if Bindx == 3142:
            t19961 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.8192e4*1j) * np.exp((-1*1j) * (5 * phi1 + 12 * phi2)) * np.sqrt(0.9614e4) * ((1 - t19961) ** (0.7e1 / 0.2e1)) * ((1 + t19961) ** (0.17e2 / 0.2e1)) * (-5 + 13 * t19961)

        if Bindx == 3143:
            t19972 = np.sin(phi)
            t19969 = t19972 ** 2
            t19970 = t19972 * t19969
            t19962 = np.cos(phi)
            t19963 = t19962 ** 2
            t19964 = t19962 * t19963
            t19967 = t19964 ** 2
            t19965 = t19963 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-1*1j) * (5 * phi1 + 11 * phi2)) * np.sqrt(0.4807e4) * t19970 ** 2 * (-555 * t19963 - 505 * t19964 + 935 * t19965 + 1375 * t19967 + 37 + (2037 * t19965 + 325 * t19967 - 65) * t19962)

        if Bindx == 3144:
            t19973 = np.cos(phi)
            t19974 = t19973 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((-5*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.9614e4) * ((1 - t19973) ** (0.5e1 / 0.2e1)) * ((1 + t19973) ** (0.15e2 / 0.2e1)) * (-375 * t19974 - 5 + (325 * t19974 + 111) * t19973)

        if Bindx == 3145:
            t19987 = np.sin(phi)
            t19985 = t19987 ** 2
            t19976 = np.cos(phi)
            t19977 = t19976 ** 2
            t19979 = t19977 ** 2
            t19983 = t19979 ** 2
            t19978 = t19976 * t19977
            t19981 = t19978 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (5 * phi1 + 9 * phi2)) * np.sqrt(0.418e3) * t19985 ** 2 * (2196 * t19977 + 8820 * t19978 - 3870 * t19979 - 15180 * t19981 + 25875 * t19983 - 61 + (-28926 * t19979 + 22356 * t19981 + 7475 * t19983 - 765) * t19976)

        if Bindx == 3146:
            t19988 = np.cos(phi)
            t19989 = t19988 ** 2
            t19991 = t19989 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (5 * phi1 + 8 * phi2)) * np.sqrt(0.95e2) * ((1 - t19988) ** (0.3e1 / 0.2e1)) * ((1 + t19988) ** (0.13e2 / 0.2e1)) * (-2530 * t19989 - 31625 * t19991 + 107 + (18722 * t19989 + 16445 * t19991 - 671) * t19988)

        if Bindx == 3147:
            t19994 = np.cos(phi)
            t19995 = t19994 ** 2
            t19997 = t19995 ** 2
            t19998 = t19994 * t19997
            t20003 = t19998 ** 2
            t20001 = t19997 ** 2
            t19996 = t19994 * t19995
            t19999 = t19996 ** 2
            t19993 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-1*1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.1330e4) * t19993 ** 2 * (1007 * t19995 - 8895 * t19996 - 11022 * t19997 + 34926 * t19998 + 47502 * t19999 - 79695 * t20001 + 44275 * t20003 - 19 + (-43758 * t19999 + 2783 * t20001 + 16445 * t20003 + 547) * t19994)

        if Bindx == 3148:
            t20005 = np.cos(phi)
            t20006 = t20005 ** 2
            t20007 = t20005 * t20006
            t20010 = t20007 ** 2
            t20008 = t20006 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.38e2) * np.sqrt((1 - t20005)) * ((1 + t20005) ** (0.11e2 / 0.2e1)) * (11235 * t20006 - 23485 * t20007 - 44275 * t20008 - 221375 * t20010 - 113 + (196581 * t20008 + 82225 * t20010 - 665) * t20005)

        if Bindx == 3149:
            t20012 = np.cos(phi)
            t20013 = t20012 ** 2
            t20014 = t20012 * t20013
            t20017 = t20014 ** 2
            t20023 = t20017 ** 2
            t20015 = t20013 ** 2
            t20016 = t20012 * t20015
            t20021 = t20016 ** 2
            t20019 = t20015 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-5*1j) * (phi1 + phi2)) * (-118470 * t20013 + 162730 * t20014 + 1285585 * t20015 - 705195 * t20016 - 5251524 * t20017 + 9975285 * t20019 - 8892950 * t20021 + 3004375 * t20023 + 1795 + (505020 * t20017 + 1919665 * t20019 - 3432198 * t20021 + 1562275 * t20023 - 8201) * t20012)

        if Bindx == 3150:
            t20025 = np.cos(phi)
            t20026 = t20025 ** 2
            t20028 = t20026 ** 2
            t20032 = t20028 ** 2
            t20027 = t20025 * t20026
            t20030 = t20027 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * np.exp((-1*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.2e1) * ((1 + t20025) ** (0.9e1 / 0.2e1)) * (-77292 * t20026 - 151620 * t20027 + 1280790 * t20028 - 2018940 * t20030 - 5407875 * t20032 - 43 + (-1606374 * t20028 + 6402924 * t20030 + 1562275 * t20032 + 16155) * t20025) * ((1 - t20025) ** (-0.1e1 / 0.2e1))

        if Bindx == 3151:
            t20035 = np.cos(phi)
            t20036 = t20035 ** 2
            t20038 = t20036 ** 2
            t20039 = t20035 * t20038
            t20044 = t20039 ** 2
            t20042 = t20038 ** 2
            t20037 = t20035 * t20036
            t20040 = t20037 ** 2
            t20034 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-1*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.85e2) * t20034 ** 2 * (13505 * t20036 + 24515 * t20037 - 146490 * t20038 - 171038 * t20039 + 526946 * t20040 - 745085 * t20042 + 360525 * t20044 - 185 + (502854 * t20040 - 658559 * t20042 + 312455 * t20044 - 1011) * t20035)

        if Bindx == 3152:
            t20046 = np.cos(phi)
            t20047 = t20046 ** 2
            t20048 = t20046 * t20047
            t20051 = t20048 ** 2
            t20049 = t20047 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (532 * t20047 - 4256 * t20048 - 12236 * t20051 - 11 + (-1330 + 28405 * t20049) * t20049 + (24472 * t20049 - 34960 * t20051 + 152) * t20046) * ((1 + t20046) ** (0.7e1 / 0.2e1)) * np.sqrt(0.935e3) * np.exp((-1*1j) * (5 * phi1 + 2 * phi2)) * ((1 - t20046) ** (0.3e1 / 0.2e1))

        if Bindx == 3153:
            t20065 = np.sin(phi)
            t20063 = t20065 ** 2
            t20054 = np.cos(phi)
            t20055 = t20054 ** 2
            t20057 = t20055 ** 2
            t20061 = t20057 ** 2
            t20056 = t20054 * t20055
            t20059 = t20056 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-1*1j) * (5 * phi1 + phi2)) * np.sqrt(0.187e3) * t20063 ** 2 * (-1900 * t20055 - 18620 * t20056 + 19950 * t20057 - 61180 * t20059 + 54625 * t20061 + 25 + (109326 * t20057 - 221996 * t20059 + 142025 * t20061 + 785) * t20054)

        if Bindx == 3154:
            t20066 = np.cos(phi)
            t20067 = t20066 ** 2
            t20068 = t20067 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (-380 * t20067 + 5 + (-12236 * t20067 + 3990 + 10925 * t20068) * t20068) * ((1 + t20066) ** (0.5e1 / 0.2e1)) * np.sqrt(0.34034e5) * np.exp((-5*1j) * phi1) * ((1 - t20066) ** (0.5e1 / 0.2e1))

        if Bindx == 3155:
            t20082 = np.sin(phi)
            t20080 = t20082 ** 2
            t20071 = np.cos(phi)
            t20072 = t20071 ** 2
            t20074 = t20072 ** 2
            t20078 = t20074 ** 2
            t20073 = t20071 * t20072
            t20076 = t20073 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-1*1j) * (5 * phi1 - phi2)) * np.sqrt(0.187e3) * t20080 ** 2 * (1900 * t20072 - 18620 * t20073 - 19950 * t20074 + 61180 * t20076 - 54625 * t20078 - 25 + (109326 * t20074 - 221996 * t20076 + 142025 * t20078 + 785) * t20071)

        if Bindx == 3156:
            t20083 = np.cos(phi)
            t20084 = t20083 ** 2
            t20085 = t20083 * t20084
            t20088 = t20085 ** 2
            t20086 = t20084 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (532 * t20084 + 4256 * t20085 - 12236 * t20088 - 11 + (-1330 + 28405 * t20086) * t20086 + (-24472 * t20086 + 34960 * t20088 - 152) * t20083) * ((1 + t20083) ** (0.3e1 / 0.2e1)) * np.sqrt(0.935e3) * np.exp((-1*1j) * (5 * phi1 - 2 * phi2)) * ((1 - t20083) ** (0.7e1 / 0.2e1))

        if Bindx == 3157:
            t20092 = np.cos(phi)
            t20093 = t20092 ** 2
            t20095 = t20093 ** 2
            t20096 = t20092 * t20095
            t20101 = t20096 ** 2
            t20099 = t20095 ** 2
            t20094 = t20092 * t20093
            t20097 = t20094 ** 2
            t20091 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-1*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.85e2) * t20091 ** 2 * (-13505 * t20093 + 24515 * t20094 + 146490 * t20095 - 171038 * t20096 - 526946 * t20097 + 745085 * t20099 - 360525 * t20101 + 185 + (502854 * t20097 - 658559 * t20099 + 312455 * t20101 - 1011) * t20092)

        if Bindx == 3158:
            t20103 = np.cos(phi)
            t20104 = t20103 ** 2
            t20105 = t20103 * t20104
            t20108 = t20105 ** 2
            t20106 = t20104 ** 2
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * (61180 * t20104 - 212800 * t20105 + 2557324 * t20108 + 43 + (-1067990 + 1562275 * t20106) * t20106 + (-538384 * t20106 + 3845600 * t20108 + 16112) * t20103) * np.sqrt((1 + t20103)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (5 * phi1 - 4 * phi2)) * ((1 - t20103) ** (0.9e1 / 0.2e1))

        if Bindx == 3159:
            t20111 = np.cos(phi)
            t20112 = t20111 ** 2
            t20113 = t20111 * t20112
            t20116 = t20113 ** 2
            t20122 = t20116 ** 2
            t20114 = t20112 ** 2
            t20115 = t20111 * t20114
            t20120 = t20115 ** 2
            t20118 = t20114 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-5*1j) * (phi1 - phi2)) * (118470 * t20112 + 162730 * t20113 - 1285585 * t20114 - 705195 * t20115 + 5251524 * t20116 - 9975285 * t20118 + 8892950 * t20120 - 3004375 * t20122 - 1795 + (505020 * t20116 + 1919665 * t20118 - 3432198 * t20120 + 1562275 * t20122 - 8201) * t20111)

        if Bindx == 3160:
            t20124 = np.cos(phi)
            t20125 = t20124 ** 2
            t20126 = t20124 * t20125
            t20129 = t20126 ** 2
            t20127 = t20125 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-11235 * t20125 - 23485 * t20126 + 44275 * t20127 + 221375 * t20129 + 113 + (196581 * t20127 + 82225 * t20129 - 665) * t20124) * np.sqrt((1 + t20124)) * np.sqrt(0.38e2) * np.exp((-1*1j) * (5 * phi1 - 6 * phi2)) * ((1 - t20124) ** (0.11e2 / 0.2e1))

        if Bindx == 3161:
            t20132 = np.cos(phi)
            t20133 = t20132 ** 2
            t20135 = t20133 ** 2
            t20136 = t20132 * t20135
            t20141 = t20136 ** 2
            t20139 = t20135 ** 2
            t20134 = t20132 * t20133
            t20137 = t20134 ** 2
            t20131 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-1*1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.1330e4) * t20131 ** 2 * (-1007 * t20133 - 8895 * t20134 + 11022 * t20135 + 34926 * t20136 - 47502 * t20137 + 79695 * t20139 - 44275 * t20141 + 19 + (-43758 * t20137 + 2783 * t20139 + 16445 * t20141 + 547) * t20132)

        if Bindx == 3162:
            t20143 = np.cos(phi)
            t20144 = t20143 ** 2
            t20146 = t20144 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (2530 * t20144 + 31625 * t20146 - 107 + (18722 * t20144 + 16445 * t20146 - 671) * t20143) * ((1 + t20143) ** (0.3e1 / 0.2e1)) * np.sqrt(0.95e2) * np.exp((-1*1j) * (5 * phi1 - 8 * phi2)) * ((1 - t20143) ** (0.13e2 / 0.2e1))

        if Bindx == 3163:
            t20159 = np.sin(phi)
            t20157 = t20159 ** 2
            t20148 = np.cos(phi)
            t20149 = t20148 ** 2
            t20151 = t20149 ** 2
            t20155 = t20151 ** 2
            t20150 = t20148 * t20149
            t20153 = t20150 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (5 * phi1 - 9 * phi2)) * np.sqrt(0.418e3) * t20157 ** 2 * (-2196 * t20149 + 8820 * t20150 + 3870 * t20151 + 15180 * t20153 - 25875 * t20155 + 61 + (-28926 * t20151 + 22356 * t20153 + 7475 * t20155 - 765) * t20148)

        if Bindx == 3164:
            t20160 = np.cos(phi)
            t20161 = t20160 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (375 * t20161 + 5 + (325 * t20161 + 111) * t20160) * ((1 + t20160) ** (0.5e1 / 0.2e1)) * np.sqrt(0.9614e4) * np.exp((-5*1j) * (phi1 - 2 * phi2)) * ((1 - t20160) ** (0.15e2 / 0.2e1))

        if Bindx == 3165:
            t20173 = np.sin(phi)
            t20170 = t20173 ** 2
            t20171 = t20173 * t20170
            t20163 = np.cos(phi)
            t20164 = t20163 ** 2
            t20165 = t20163 * t20164
            t20168 = t20165 ** 2
            t20166 = t20164 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-1*1j) * (5 * phi1 - 11 * phi2)) * np.sqrt(0.4807e4) * t20171 ** 2 * (555 * t20164 - 505 * t20165 - 935 * t20166 - 1375 * t20168 - 37 + (2037 * t20166 + 325 * t20168 - 65) * t20163)

        if Bindx == 3166:
            t20174 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * (5 + 13 * t20174) * ((1 + t20174) ** (0.7e1 / 0.2e1)) * np.sqrt(0.9614e4) * np.exp((-1*1j) * (5 * phi1 - 12 * phi2)) * ((1 - t20174) ** (0.17e2 / 0.2e1))

        if Bindx == 3167:
            t20175 = np.cos(phi)
            t20183 = -1 + t20175
            t20182 = 1 + t20175
            t20180 = t20182 ** 2
            t20176 = t20183 ** 2
            t20177 = t20176 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((-1*1j) * (5 * phi1 - 13 * phi2)) * np.sqrt(0.62491e5) * t20183 * t20177 ** 2 * t20180 ** 2

        if Bindx == 3168:
            t20184 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * np.exp((-1*1j) * (4 * phi1 + 13 * phi2)) * np.sqrt(0.124982e6) * ((1 - t20184) ** (0.9e1 / 0.2e1)) * ((1 + t20184) ** (0.17e2 / 0.2e1))

        if Bindx == 3169:
            t20185 = np.cos(phi)
            t20192 = -1 + t20185
            t20191 = 1 + t20185
            t20188 = t20191 ** 2
            t20189 = t20188 ** 2
            t20186 = t20192 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((-4*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.4807e4) * t20186 ** 2 * t20189 ** 2 * (-4 + 13 * t20185)

        if Bindx == 3170:
            t20193 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * np.exp((-1*1j) * (4 * phi1 + 11 * phi2)) * np.sqrt(0.9614e4) * ((1 - t20193) ** (0.7e1 / 0.2e1)) * ((1 + t20193) ** (0.15e2 / 0.2e1)) * (19 + (-200 + 325 * t20193) * t20193)

        if Bindx == 3171:
            t20204 = np.sin(phi)
            t20201 = t20204 ** 2
            t20202 = t20204 * t20201
            t20194 = np.cos(phi)
            t20195 = t20194 ** 2
            t20196 = t20194 * t20195
            t20199 = t20196 ** 2
            t20197 = t20195 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.4807e4) * t20202 ** 2 * (-60 * t20195 - 525 * t20196 - 270 * t20197 + 1000 * t20199 + 2 + (807 * t20197 + 325 * t20199 + 65) * t20194)

        if Bindx == 3172:
            t20205 = np.cos(phi)
            t20206 = t20205 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (4 * phi1 + 9 * phi2)) * np.sqrt(0.209e3) * ((1 - t20205) ** (0.5e1 / 0.2e1)) * ((1 + t20205) ** (0.13e2 / 0.2e1)) * (184 * t20205 - 73 + (-9200 * t20205 + 2622 + 7475 * t20206) * t20206)

        if Bindx == 3173:
            t20220 = np.sin(phi)
            t20218 = t20220 ** 2
            t20209 = np.cos(phi)
            t20210 = t20209 ** 2
            t20212 = t20210 ** 2
            t20216 = t20212 ** 2
            t20211 = t20209 * t20210
            t20214 = t20211 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-4*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.190e3) * t20218 ** 2 * (-1960 * t20210 + 9004 * t20211 + 16056 * t20212 - 46552 * t20214 + 40480 * t20216 + 40 + (-23826 * t20212 + 7084 * t20214 + 16445 * t20216 - 643) * t20209)

        if Bindx == 3174:
            t20221 = np.cos(phi)
            t20222 = t20221 ** 2
            t20224 = t20222 ** 2
            t20223 = t20221 * t20222
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (4 * phi1 + 7 * phi2)) * np.sqrt(0.665e3) * ((1 - t20221) ** (0.3e1 / 0.2e1)) * ((1 + t20221) ** (0.11e2 / 0.2e1)) * (-2409 * t20222 + 14421 * t20224 + 23 + (2024 + 16445 * t20223) * t20223 + (-30360 * t20224 + 240) * t20221)

        if Bindx == 3175:
            t20228 = np.cos(phi)
            t20229 = t20228 ** 2
            t20231 = t20229 ** 2
            t20232 = t20228 * t20231
            t20237 = t20232 ** 2
            t20235 = t20231 ** 2
            t20230 = t20228 * t20229
            t20233 = t20230 ** 2
            t20227 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.19e2) * t20227 ** 2 * (6784 * t20229 - 6899 * t20230 - 66396 * t20231 + 20762 * t20232 + 224728 * t20233 - 312202 * t20235 + 151800 * t20237 - 106 + (22242 * t20233 - 114103 * t20235 + 82225 * t20237 + 381) * t20228)

        if Bindx == 3176:
            t20239 = np.cos(phi)
            t20240 = t20239 ** 2
            t20241 = t20239 * t20240
            t20244 = t20241 ** 2
            t20242 = t20240 ** 2
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((-1*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t20239)) * ((1 + t20239) ** (0.9e1 / 0.2e1)) * (61180 * t20240 + 212800 * t20241 + 2557324 * t20244 + 43 + (-1067990 + 1562275 * t20242) * t20242 + (538384 * t20242 - 3845600 * t20244 - 16112) * t20239)

        if Bindx == 3177:
            t20247 = np.cos(phi)
            t20248 = t20247 ** 2
            t20249 = t20247 * t20248
            t20252 = t20249 ** 2
            t20258 = t20252 ** 2
            t20250 = t20248 ** 2
            t20251 = t20247 * t20250
            t20256 = t20251 ** 2
            t20254 = t20250 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-4*1j) * (phi1 + phi2)) * (-65700 * t20248 - 100650 * t20249 + 780360 * t20250 + 804429 * t20251 - 3347496 * t20252 + 6460380 * t20254 - 5749172 * t20256 + 1922800 * t20258 + 876 + (-2917260 * t20252 + 5292925 * t20254 - 4643562 * t20256 + 1562275 * t20258 + 3891) * t20247)

        if Bindx == 3178:
            t20260 = np.cos(phi)
            t20261 = t20260 ** 2
            t20263 = t20261 ** 2
            t20267 = t20263 ** 2
            t20262 = t20260 * t20261
            t20265 = t20262 ** 2
            t20264 = t20260 * t20263
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * np.exp((-1*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.170e3) * ((1 + t20260) ** (0.7e1 / 0.2e1)) * (387 * t20261 - 48336 * t20262 + 91770 * t20263 - 640794 * t20265 + 821997 * t20267 - 87 + (191520 + 312455 * t20264) * t20264 + (230736 * t20265 - 961400 * t20267 + 1752) * t20260) * ((1 - t20260) ** (-0.1e1 / 0.2e1))

        if Bindx == 3179:
            t20271 = np.cos(phi)
            t20272 = t20271 ** 2
            t20274 = t20272 ** 2
            t20275 = t20271 * t20274
            t20280 = t20275 ** 2
            t20278 = t20274 ** 2
            t20273 = t20271 * t20272
            t20276 = t20273 ** 2
            t20270 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.1870e4) * t20270 ** 2 * (480 * t20272 + 2865 * t20273 - 5700 * t20274 - 19950 * t20275 + 22344 * t20276 - 34086 * t20278 + 17480 * t20280 - 6 + (55290 * t20276 - 65987 * t20278 + 28405 * t20280 - 111) * t20271)

        if Bindx == 3180:
            t20282 = np.cos(phi)
            t20283 = t20282 ** 2
            t20285 = t20283 ** 2
            t20289 = t20285 ** 2
            t20284 = t20282 * t20283
            t20287 = t20284 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (3420 * t20283 - 7980 * t20284 - 35910 * t20285 + 110124 * t20287 - 98325 * t20289 - 45 + (64638 * t20285 - 173052 * t20287 + 142025 * t20289 + 225) * t20282) * ((1 + t20282) ** (0.5e1 / 0.2e1)) * np.sqrt(0.374e3) * np.exp((-1*1j) * (4 * phi1 + phi2)) * ((1 - t20282) ** (0.3e1 / 0.2e1))

        if Bindx == 3181:
            t20298 = np.sin(phi)
            t20296 = t20298 ** 2
            t20291 = np.cos(phi)
            t20292 = t20291 ** 2
            t20293 = t20292 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((-4*1j) * phi1) * np.sqrt(0.17017e5) * t20296 ** 2 * t20291 * (-1140 * t20292 + 45 + (-15732 * t20292 + 7182 + 10925 * t20293) * t20293)

        if Bindx == 3182:
            t20299 = np.cos(phi)
            t20300 = t20299 ** 2
            t20302 = t20300 ** 2
            t20306 = t20302 ** 2
            t20301 = t20299 * t20300
            t20304 = t20301 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (-3420 * t20300 - 7980 * t20301 + 35910 * t20302 - 110124 * t20304 + 98325 * t20306 + 45 + (64638 * t20302 - 173052 * t20304 + 142025 * t20306 + 225) * t20299) * ((1 + t20299) ** (0.3e1 / 0.2e1)) * np.sqrt(0.374e3) * np.exp((-1*1j) * (4 * phi1 - phi2)) * ((1 - t20299) ** (0.5e1 / 0.2e1))

        if Bindx == 3183:
            t20309 = np.cos(phi)
            t20310 = t20309 ** 2
            t20312 = t20310 ** 2
            t20313 = t20309 * t20312
            t20318 = t20313 ** 2
            t20316 = t20312 ** 2
            t20311 = t20309 * t20310
            t20314 = t20311 ** 2
            t20308 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.1870e4) * t20308 ** 2 * (-480 * t20310 + 2865 * t20311 + 5700 * t20312 - 19950 * t20313 - 22344 * t20314 + 34086 * t20316 - 17480 * t20318 + 6 + (55290 * t20314 - 65987 * t20316 + 28405 * t20318 - 111) * t20309)

        if Bindx == 3184:
            t20320 = np.cos(phi)
            t20321 = t20320 ** 2
            t20323 = t20321 ** 2
            t20327 = t20323 ** 2
            t20322 = t20320 * t20321
            t20325 = t20322 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * (2052 * t20321 + 46284 * t20322 + 45486 * t20323 - 403788 * t20325 + 648945 * t20327 - 87 + (-237006 * t20323 + 173052 * t20325 + 312455 * t20327 - 1665) * t20320) * np.sqrt((1 + t20320)) * np.sqrt(0.170e3) * np.exp((-1*1j) * (4 * phi1 - 3 * phi2)) * ((1 - t20320) ** (0.7e1 / 0.2e1))

        if Bindx == 3185:
            t20329 = np.cos(phi)
            t20330 = t20329 ** 2
            t20331 = t20329 * t20330
            t20334 = t20331 ** 2
            t20340 = t20334 ** 2
            t20332 = t20330 ** 2
            t20333 = t20329 * t20332
            t20338 = t20333 ** 2
            t20336 = t20332 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-4*1j) * (phi1 - phi2)) * (65700 * t20330 - 100650 * t20331 - 780360 * t20332 + 804429 * t20333 + 3347496 * t20334 - 6460380 * t20336 + 5749172 * t20338 - 1922800 * t20340 - 876 + (-2917260 * t20334 + 5292925 * t20336 - 4643562 * t20338 + 1562275 * t20340 + 3891) * t20329)

        if Bindx == 3186:
            t20342 = np.cos(phi)
            t20343 = t20342 ** 2
            t20344 = t20342 * t20343
            t20347 = t20344 ** 2
            t20345 = t20343 ** 2
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * (61180 * t20343 - 212800 * t20344 + 2557324 * t20347 + 43 + (-1067990 + 1562275 * t20345) * t20345 + (-538384 * t20345 + 3845600 * t20347 + 16112) * t20342) * np.sqrt((1 + t20342)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (4 * phi1 - 5 * phi2)) * ((1 - t20342) ** (0.9e1 / 0.2e1))

        if Bindx == 3187:
            t20351 = np.cos(phi)
            t20352 = t20351 ** 2
            t20354 = t20352 ** 2
            t20355 = t20351 * t20354
            t20360 = t20355 ** 2
            t20358 = t20354 ** 2
            t20353 = t20351 * t20352
            t20356 = t20353 ** 2
            t20350 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.19e2) * t20350 ** 2 * (-6784 * t20352 - 6899 * t20353 + 66396 * t20354 + 20762 * t20355 - 224728 * t20356 + 312202 * t20358 - 151800 * t20360 + 106 + (22242 * t20356 - 114103 * t20358 + 82225 * t20360 + 381) * t20351)

        if Bindx == 3188:
            t20362 = np.cos(phi)
            t20363 = t20362 ** 2
            t20365 = t20363 ** 2
            t20364 = t20362 * t20363
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-2409 * t20363 + 14421 * t20365 + 23 + (-2024 + 16445 * t20364) * t20364 + (30360 * t20365 - 240) * t20362) * ((1 + t20362) ** (0.3e1 / 0.2e1)) * np.sqrt(0.665e3) * np.exp((-1*1j) * (4 * phi1 - 7 * phi2)) * ((1 - t20362) ** (0.11e2 / 0.2e1))

        if Bindx == 3189:
            t20379 = np.sin(phi)
            t20377 = t20379 ** 2
            t20368 = np.cos(phi)
            t20369 = t20368 ** 2
            t20371 = t20369 ** 2
            t20375 = t20371 ** 2
            t20370 = t20368 * t20369
            t20373 = t20370 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-4*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.190e3) * t20377 ** 2 * (1960 * t20369 + 9004 * t20370 - 16056 * t20371 + 46552 * t20373 - 40480 * t20375 - 40 + (-23826 * t20371 + 7084 * t20373 + 16445 * t20375 - 643) * t20368)

        if Bindx == 3190:
            t20380 = np.cos(phi)
            t20381 = t20380 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (-184 * t20380 - 73 + (9200 * t20380 + 2622 + 7475 * t20381) * t20381) * ((1 + t20380) ** (0.5e1 / 0.2e1)) * np.sqrt(0.209e3) * np.exp((-1*1j) * (4 * phi1 - 9 * phi2)) * ((1 - t20380) ** (0.13e2 / 0.2e1))

        if Bindx == 3191:
            t20394 = np.sin(phi)
            t20391 = t20394 ** 2
            t20392 = t20394 * t20391
            t20384 = np.cos(phi)
            t20385 = t20384 ** 2
            t20386 = t20384 * t20385
            t20389 = t20386 ** 2
            t20387 = t20385 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.4807e4) * t20392 ** 2 * (60 * t20385 - 525 * t20386 + 270 * t20387 - 1000 * t20389 - 2 + (807 * t20387 + 325 * t20389 + 65) * t20384)

        if Bindx == 3192:
            t20395 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * (19 + (200 + 325 * t20395) * t20395) * ((1 + t20395) ** (0.7e1 / 0.2e1)) * np.sqrt(0.9614e4) * np.exp((-1*1j) * (4 * phi1 - 11 * phi2)) * ((1 - t20395) ** (0.15e2 / 0.2e1))

        if Bindx == 3193:
            t20404 = np.sin(phi)
            t20401 = t20404 ** 2
            t20402 = t20401 ** 2
            t20396 = np.cos(phi)
            t20397 = t20396 ** 2
            t20399 = t20397 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((-4*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.4807e4) * t20402 ** 2 * (-28 * t20397 - 48 * t20399 + 4 + (62 * t20397 + 13 * t20399 - 3) * t20396)

        if Bindx == 3194:
            t20405 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * np.exp((-1*1j) * (4 * phi1 - 13 * phi2)) * np.sqrt(0.124982e6) * ((1 - t20405) ** (0.17e2 / 0.2e1)) * ((1 + t20405) ** (0.9e1 / 0.2e1))

        if Bindx == 3195:
            t20406 = np.cos(phi)
            t20414 = -1 + t20406
            t20413 = 1 + t20406
            t20410 = t20413 ** 2
            t20411 = t20410 ** 2
            t20407 = t20414 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (3 * phi1 + 13 * phi2)) * np.sqrt(0.5311735e7) * t20414 * t20407 ** 2 * t20411 ** 2

        if Bindx == 3196:
            t20415 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((-3*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.817190e6) * ((1 - t20415) ** (0.9e1 / 0.2e1)) * ((1 + t20415) ** (0.15e2 / 0.2e1)) * (-3 + 13 * t20415)

        if Bindx == 3197:
            t20424 = np.sin(phi)
            t20421 = t20424 ** 2
            t20422 = t20421 ** 2
            t20416 = np.cos(phi)
            t20417 = t20416 ** 2
            t20419 = t20417 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (3 * phi1 + 11 * phi2)) * np.sqrt(0.408595e6) * t20422 ** 2 * (-22 * t20417 + 165 * t20419 + 1 + (106 * t20417 + 65 * t20419 - 27) * t20416)

        if Bindx == 3198:
            t20425 = np.cos(phi)
            t20426 = t20425 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (3 * phi1 + 10 * phi2)) * np.sqrt(0.817190e6) * ((1 - t20425) ** (0.7e1 / 0.2e1)) * ((1 + t20425) ** (0.13e2 / 0.2e1)) * (-45 * t20426 + 1 + (65 * t20426 + 3) * t20425)

        if Bindx == 3199:
            t20438 = np.sin(phi)
            t20435 = t20438 ** 2
            t20436 = t20438 * t20435
            t20428 = np.cos(phi)
            t20429 = t20428 ** 2
            t20430 = t20428 * t20429
            t20433 = t20430 ** 2
            t20431 = t20429 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-3*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.35530e5) * t20436 ** 2 * (387 * t20429 - 699 * t20430 - 2139 * t20431 + 3105 * t20433 - 9 + (483 * t20431 + 1495 * t20433 + 65) * t20428)

        if Bindx == 3200:
            t20439 = np.cos(phi)
            t20440 = t20439 ** 2
            t20444 = 2530 * t20440
            t20442 = t20440 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (3 * phi1 + 8 * phi2)) * np.sqrt(0.323e3) * ((1 - t20439) ** (0.5e1 / 0.2e1)) * ((1 + t20439) ** (0.11e2 / 0.2e1)) * (-18975 * t20442 + t20444 - 19 + (16445 * t20442 + t20444 - 495) * t20439)

        if Bindx == 3201:
            t20456 = np.sin(phi)
            t20454 = t20456 ** 2
            t20445 = np.cos(phi)
            t20446 = t20445 ** 2
            t20448 = t20446 ** 2
            t20452 = t20448 ** 2
            t20447 = t20445 * t20446
            t20450 = t20447 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.4522e4) * t20454 ** 2 * (-1740 * t20446 + 292 * t20447 + 14406 * t20448 - 35420 * t20450 + 26565 * t20452 + 29 + (2310 * t20448 - 15180 * t20450 + 16445 * t20452 - 27) * t20445)

        if Bindx == 3202:
            t20457 = np.cos(phi)
            t20458 = t20457 ** 2
            t20459 = t20457 * t20458
            t20462 = t20459 ** 2
            t20460 = t20458 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((-3*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.3230e4) * ((1 - t20457) ** (0.3e1 / 0.2e1)) * ((1 + t20457) ** (0.9e1 / 0.2e1)) * (-399 * t20458 - 3465 * t20459 + 8855 * t20460 - 26565 * t20462 - 3 + (5313 * t20460 + 16445 * t20462 + 203) * t20457)

        if Bindx == 3203:
            t20465 = np.cos(phi)
            t20466 = t20465 ** 2
            t20468 = t20466 ** 2
            t20469 = t20465 * t20468
            t20474 = t20469 ** 2
            t20472 = t20468 ** 2
            t20467 = t20465 * t20466
            t20470 = t20467 ** 2
            t20464 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-1*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.85e2) * t20464 ** 2 * (13505 * t20466 + 24515 * t20467 - 146490 * t20468 - 171038 * t20469 + 526946 * t20470 - 745085 * t20472 + 360525 * t20474 - 185 + (502854 * t20470 - 658559 * t20472 + 312455 * t20474 - 1011) * t20465)

        if Bindx == 3204:
            t20476 = np.cos(phi)
            t20477 = t20476 ** 2
            t20479 = t20477 ** 2
            t20483 = t20479 ** 2
            t20478 = t20476 * t20477
            t20481 = t20478 ** 2
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((-1*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.170e3) * np.sqrt((1 - t20476)) * ((1 + t20476) ** (0.7e1 / 0.2e1)) * (-2052 * t20477 + 46284 * t20478 - 45486 * t20479 + 403788 * t20481 - 648945 * t20483 + 87 + (-237006 * t20479 + 173052 * t20481 + 312455 * t20483 - 1665) * t20476)

        if Bindx == 3205:
            t20485 = np.cos(phi)
            t20486 = t20485 ** 2
            t20487 = t20485 * t20486
            t20490 = t20487 ** 2
            t20496 = t20490 ** 2
            t20488 = t20486 ** 2
            t20489 = t20485 * t20488
            t20494 = t20489 ** 2
            t20492 = t20488 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-3*1j) * (phi1 + phi2)) * (-93726 * t20486 - 495342 * t20487 + 1208445 * t20488 + 3864321 * t20489 - 5569812 * t20490 + 11404161 * t20492 - 10623470 * t20494 + 3677355 * t20496 + 1143 + (-13011732 * t20490 + 21477885 * t20492 - 17160990 * t20494 + 5311735 * t20496 + 18219) * t20485)

        if Bindx == 3206:
            t20498 = np.cos(phi)
            t20499 = t20498 ** 2
            t20501 = t20499 ** 2
            t20502 = t20498 * t20501
            t20507 = t20502 ** 2
            t20505 = t20501 ** 2
            t20500 = t20498 * t20499
            t20503 = t20500 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.11e2) * ((1 + t20498) ** (0.5e1 / 0.2e1)) * (7395 * t20499 - 47175 * t20500 - 29070 * t20501 + 393414 * t20502 - 257754 * t20503 + 1225785 * t20505 - 1225785 * t20507 - 123 + (-959310 * t20503 + 408595 * t20505 + 482885 * t20507 + 1143) * t20498) * ((1 - t20498) ** (-0.1e1 / 0.2e1))

        if Bindx == 3207:
            t20510 = np.cos(phi)
            t20511 = t20510 ** 2
            t20513 = t20511 ** 2
            t20514 = t20510 * t20513
            t20519 = t20514 ** 2
            t20517 = t20513 ** 2
            t20512 = t20510 * t20511
            t20515 = t20512 ** 2
            t20509 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.55e2) * t20509 ** 2 * (2295 * t20511 + 42585 * t20512 - 29070 * t20513 - 312018 * t20514 + 122094 * t20515 - 200583 * t20517 + 111435 * t20519 - 27 + (901170 * t20515 - 1106921 * t20517 + 482885 * t20519 - 1557) * t20510)

        if Bindx == 3208:
            t20521 = np.cos(phi)
            t20522 = t20521 ** 2
            t20523 = t20522 ** 2
            t20525 = t20523 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-9690 * t20523 - 66861 * t20525 - 9 + (40698 * t20523 + 37145 * t20525 + 765) * t20522) * ((1 + t20521) ** (0.3e1 / 0.2e1)) * np.sqrt(0.10010e5) * np.exp((-3*1j) * phi1) * ((1 - t20521) ** (0.3e1 / 0.2e1))

        if Bindx == 3209:
            t20528 = np.cos(phi)
            t20529 = t20528 ** 2
            t20531 = t20529 ** 2
            t20532 = t20528 * t20531
            t20537 = t20532 ** 2
            t20535 = t20531 ** 2
            t20530 = t20528 * t20529
            t20533 = t20530 ** 2
            t20527 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.55e2) * t20527 ** 2 * (-2295 * t20529 + 42585 * t20530 + 29070 * t20531 - 312018 * t20532 - 122094 * t20533 + 200583 * t20535 - 111435 * t20537 + 27 + (901170 * t20533 - 1106921 * t20535 + 482885 * t20537 - 1557) * t20528)

        if Bindx == 3210:
            t20539 = np.cos(phi)
            t20540 = t20539 ** 2
            t20542 = t20540 ** 2
            t20546 = t20542 ** 2
            t20541 = t20539 * t20540
            t20544 = t20541 ** 2
            t20543 = t20539 * t20542
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-8415 * t20540 - 38760 * t20541 + 67830 * t20542 - 67830 * t20544 - 334305 * t20546 + 123 + (325584 + 482885 * t20543) * t20543 + (-891480 * t20544 + 742900 * t20546 + 1020) * t20539) * np.sqrt((1 + t20539)) * np.sqrt(0.11e2) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t20539) ** (0.5e1 / 0.2e1))

        if Bindx == 3211:
            t20549 = np.cos(phi)
            t20550 = t20549 ** 2
            t20551 = t20549 * t20550
            t20554 = t20551 ** 2
            t20560 = t20554 ** 2
            t20552 = t20550 ** 2
            t20553 = t20549 * t20552
            t20558 = t20553 ** 2
            t20556 = t20552 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-3*1j) * (phi1 - phi2)) * (93726 * t20550 - 495342 * t20551 - 1208445 * t20552 + 3864321 * t20553 + 5569812 * t20554 - 11404161 * t20556 + 10623470 * t20558 - 3677355 * t20560 - 1143 + (-13011732 * t20554 + 21477885 * t20556 - 17160990 * t20558 + 5311735 * t20560 + 18219) * t20549)

        if Bindx == 3212:
            t20562 = np.cos(phi)
            t20563 = t20562 ** 2
            t20565 = t20563 ** 2
            t20569 = t20565 ** 2
            t20564 = t20562 * t20563
            t20567 = t20564 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * (2052 * t20563 + 46284 * t20564 + 45486 * t20565 - 403788 * t20567 + 648945 * t20569 - 87 + (-237006 * t20565 + 173052 * t20567 + 312455 * t20569 - 1665) * t20562) * np.sqrt((1 + t20562)) * np.sqrt(0.170e3) * np.exp((-1*1j) * (3 * phi1 - 4 * phi2)) * ((1 - t20562) ** (0.7e1 / 0.2e1))

        if Bindx == 3213:
            t20572 = np.cos(phi)
            t20573 = t20572 ** 2
            t20575 = t20573 ** 2
            t20576 = t20572 * t20575
            t20581 = t20576 ** 2
            t20579 = t20575 ** 2
            t20574 = t20572 * t20573
            t20577 = t20574 ** 2
            t20571 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-1*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.85e2) * t20571 ** 2 * (-13505 * t20573 + 24515 * t20574 + 146490 * t20575 - 171038 * t20576 - 526946 * t20577 + 745085 * t20579 - 360525 * t20581 + 185 + (502854 * t20577 - 658559 * t20579 + 312455 * t20581 - 1011) * t20572)

        if Bindx == 3214:
            t20583 = np.cos(phi)
            t20584 = t20583 ** 2
            t20585 = t20583 * t20584
            t20588 = t20585 ** 2
            t20586 = t20584 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (399 * t20584 - 3465 * t20585 - 8855 * t20586 + 26565 * t20588 + 3 + (5313 * t20586 + 16445 * t20588 + 203) * t20583) * ((1 + t20583) ** (0.3e1 / 0.2e1)) * np.sqrt(0.3230e4) * np.exp((-3*1j) * (phi1 - 2 * phi2)) * ((1 - t20583) ** (0.9e1 / 0.2e1))

        if Bindx == 3215:
            t20601 = np.sin(phi)
            t20599 = t20601 ** 2
            t20590 = np.cos(phi)
            t20591 = t20590 ** 2
            t20593 = t20591 ** 2
            t20597 = t20593 ** 2
            t20592 = t20590 * t20591
            t20595 = t20592 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.4522e4) * t20599 ** 2 * (1740 * t20591 + 292 * t20592 - 14406 * t20593 + 35420 * t20595 - 26565 * t20597 - 29 + (2310 * t20593 - 15180 * t20595 + 16445 * t20597 - 27) * t20590)

        if Bindx == 3216:
            t20602 = np.cos(phi)
            t20603 = t20602 ** 2
            t20605 = t20603 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-2530 * t20603 + 18975 * t20605 + 19 + (2530 * t20603 + 16445 * t20605 - 495) * t20602) * ((1 + t20602) ** (0.5e1 / 0.2e1)) * np.sqrt(0.323e3) * np.exp((-1*1j) * (3 * phi1 - 8 * phi2)) * ((1 - t20602) ** (0.11e2 / 0.2e1))

        if Bindx == 3217:
            t20617 = np.sin(phi)
            t20614 = t20617 ** 2
            t20615 = t20617 * t20614
            t20607 = np.cos(phi)
            t20608 = t20607 ** 2
            t20609 = t20607 * t20608
            t20612 = t20609 ** 2
            t20610 = t20608 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((-3*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.35530e5) * t20615 ** 2 * (-387 * t20608 - 699 * t20609 + 2139 * t20610 - 3105 * t20612 + 9 + (483 * t20610 + 1495 * t20612 + 65) * t20607)

        if Bindx == 3218:
            t20618 = np.cos(phi)
            t20619 = t20618 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (45 * t20619 - 1 + (65 * t20619 + 3) * t20618) * ((1 + t20618) ** (0.7e1 / 0.2e1)) * np.sqrt(0.817190e6) * np.exp((-1*1j) * (3 * phi1 - 10 * phi2)) * ((1 - t20618) ** (0.13e2 / 0.2e1))

        if Bindx == 3219:
            t20629 = np.sin(phi)
            t20626 = t20629 ** 2
            t20627 = t20626 ** 2
            t20621 = np.cos(phi)
            t20622 = t20621 ** 2
            t20624 = t20622 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (3 * phi1 - 11 * phi2)) * np.sqrt(0.408595e6) * t20627 ** 2 * (22 * t20622 - 165 * t20624 - 1 + (106 * t20622 + 65 * t20624 - 27) * t20621)

        if Bindx == 3220:
            t20630 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * (3 + 13 * t20630) * ((1 + t20630) ** (0.9e1 / 0.2e1)) * np.sqrt(0.817190e6) * np.exp((-3*1j) * (phi1 - 4 * phi2)) * ((1 - t20630) ** (0.15e2 / 0.2e1))

        if Bindx == 3221:
            t20631 = np.cos(phi)
            t20639 = -1 + t20631
            t20638 = 1 + t20631
            t20635 = t20638 ** 2
            t20632 = t20639 ** 2
            t20633 = t20632 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((-1*1j) * (3 * phi1 - 13 * phi2)) * np.sqrt(0.5311735e7) * t20633 ** 2 * t20638 * t20635 ** 2

        if Bindx == 3222:
            t20640 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (2 * phi1 + 13 * phi2)) * np.sqrt(0.482885e6) * ((1 - t20640) ** (0.11e2 / 0.2e1)) * ((1 + t20640) ** (0.15e2 / 0.2e1))

        if Bindx == 3223:
            t20648 = np.sin(phi)
            t20644 = t20648 ** 2
            t20646 = t20648 * t20644 ** 2
            t20641 = np.cos(phi)
            t20642 = t20641 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (phi1 + 6 * phi2)) * np.sqrt(0.74290e5) * t20646 ** 2 * (24 * t20642 - 2 + (13 * t20642 + 9) * t20641)

        if Bindx == 3224:
            t20649 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (2 * phi1 + 11 * phi2)) * np.sqrt(0.37145e5) * ((1 - t20649) ** (0.9e1 / 0.2e1)) * ((1 + t20649) ** (0.13e2 / 0.2e1)) * (-1 + (-20 + 65 * t20649) * t20649)

        if Bindx == 3225:
            t20658 = np.sin(phi)
            t20655 = t20658 ** 2
            t20656 = t20655 ** 2
            t20650 = np.cos(phi)
            t20651 = t20650 ** 2
            t20653 = t20651 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.74290e5) * t20656 ** 2 * (-35 * t20651 + 100 * t20653 + 1 + (2 * t20651 + 65 * t20653 - 1) * t20650)

        if Bindx == 3226:
            t20659 = np.cos(phi)
            t20660 = t20659 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (2 * phi1 + 9 * phi2)) * np.sqrt(0.3230e4) * ((1 - t20659) ** (0.7e1 / 0.2e1)) * ((1 + t20659) ** (0.11e2 / 0.2e1)) * (92 * t20659 - 1 + (-920 * t20659 - 138 + 1495 * t20660) * t20660)

        if Bindx == 3227:
            t20673 = np.sin(phi)
            t20670 = t20673 ** 2
            t20671 = t20673 * t20670
            t20663 = np.cos(phi)
            t20664 = t20663 ** 2
            t20665 = t20663 * t20664
            t20668 = t20665 ** 2
            t20666 = t20664 ** 2
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.3553e4) * t20671 ** 2 * (216 * t20664 + 225 * t20665 - 1380 * t20666 + 1840 * t20668 - 4 + (-1035 * t20666 + 1495 * t20668 - 13) * t20663)

        if Bindx == 3228:
            t20674 = np.cos(phi)
            t20675 = t20674 ** 2
            t20677 = t20675 ** 2
            t20676 = t20674 * t20675
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (2 * phi1 + 7 * phi2)) * np.sqrt(0.49742e5) * ((1 - t20674) ** (0.5e1 / 0.2e1)) * ((1 + t20674) ** (0.9e1 / 0.2e1)) * (-15 * t20675 - 345 * t20677 + 1 + (460 + 1495 * t20676) * t20676 + (-1380 * t20677 - 24) * t20674)

        if Bindx == 3229:
            t20691 = np.sin(phi)
            t20689 = t20691 ** 2
            t20680 = np.cos(phi)
            t20681 = t20680 ** 2
            t20683 = t20681 ** 2
            t20687 = t20683 ** 2
            t20682 = t20680 * t20681
            t20685 = t20682 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.35530e5) * t20689 ** 2 * (-69 * t20681 - 196 * t20682 + 651 * t20683 - 1771 * t20685 + 1380 * t20687 + 1 + (1092 * t20683 - 2208 * t20685 + 1495 * t20687 + 9) * t20680)

        if Bindx == 3230:
            t20692 = np.cos(phi)
            t20693 = t20692 ** 2
            t20694 = t20692 * t20693
            t20697 = t20694 ** 2
            t20695 = t20693 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.935e3) * ((1 - t20692) ** (0.3e1 / 0.2e1)) * ((1 + t20692) ** (0.7e1 / 0.2e1)) * (532 * t20693 - 4256 * t20694 - 12236 * t20697 - 11 + (-1330 + 28405 * t20695) * t20695 + (24472 * t20695 - 34960 * t20697 + 152) * t20692)

        if Bindx == 3231:
            t20701 = np.cos(phi)
            t20702 = t20701 ** 2
            t20704 = t20702 ** 2
            t20705 = t20701 * t20704
            t20710 = t20705 ** 2
            t20708 = t20704 ** 2
            t20703 = t20701 * t20702
            t20706 = t20703 ** 2
            t20700 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.1870e4) * t20700 ** 2 * (480 * t20702 + 2865 * t20703 - 5700 * t20704 - 19950 * t20705 + 22344 * t20706 - 34086 * t20708 + 17480 * t20710 - 6 + (55290 * t20706 - 65987 * t20708 + 28405 * t20710 - 111) * t20701)

        if Bindx == 3232:
            t20712 = np.cos(phi)
            t20713 = t20712 ** 2
            t20715 = t20713 ** 2
            t20719 = t20715 ** 2
            t20714 = t20712 * t20713
            t20717 = t20714 ** 2
            t20716 = t20712 * t20715
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.11e2) * np.sqrt((1 - t20712)) * ((1 + t20712) ** (0.5e1 / 0.2e1)) * (-8415 * t20713 + 38760 * t20714 + 67830 * t20715 - 67830 * t20717 - 334305 * t20719 + 123 + (-325584 + 482885 * t20716) * t20716 + (891480 * t20717 - 742900 * t20719 - 1020) * t20712)

        if Bindx == 3233:
            t20722 = np.cos(phi)
            t20723 = t20722 ** 2
            t20724 = t20722 * t20723
            t20727 = t20724 ** 2
            t20733 = t20727 ** 2
            t20725 = t20723 ** 2
            t20726 = t20722 * t20725
            t20731 = t20726 ** 2
            t20729 = t20725 ** 2
            tfunc[..., c] = (0.27e2 / 0.512e3) * np.exp((-2*1j) * (phi1 + phi2)) * (-2871 * t20723 - 40722 * t20724 + 39270 * t20725 + 331551 * t20726 - 191862 * t20727 + 415701 * t20729 - 408595 * t20731 + 148580 * t20733 + 33 + (-1151172 * t20727 + 1936385 * t20729 - 1560090 * t20731 + 482885 * t20733 + 1419) * t20722)

        if Bindx == 3234:
            t20735 = np.cos(phi)
            t20736 = t20735 ** 2
            t20738 = t20736 ** 2
            t20739 = t20735 * t20738
            t20744 = t20739 ** 2
            t20742 = t20738 ** 2
            t20737 = t20735 * t20736
            t20740 = t20737 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.5e1) * ((1 + t20735) ** (0.3e1 / 0.2e1)) * (8118 * t20736 - 22440 * t20737 - 92565 * t20738 + 255816 * t20739 - 159885 * t20742 - 490314 * t20744 - 99 + (298452 + 482885 * t20740) * t20740 + (-1023264 * t20740 + 1634380 * t20742 - 891480 * t20744 + 396) * t20735) * ((1 - t20735) ** (-0.1e1 / 0.2e1))

        if Bindx == 3235:
            t20748 = np.cos(phi)
            t20749 = t20748 ** 2
            t20750 = t20749 ** 2
            t20752 = t20750 ** 2
            t20747 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((-2*1j) * phi1) * np.sqrt(0.910e3) * t20747 ** 2 * t20748 * (-21318 * t20750 - 81719 * t20752 - 99 + (63954 * t20750 + 37145 * t20752 + 2805) * t20749)

        if Bindx == 3236:
            t20754 = np.cos(phi)
            t20755 = t20754 ** 2
            t20757 = t20755 ** 2
            t20758 = t20754 * t20757
            t20763 = t20758 ** 2
            t20761 = t20757 ** 2
            t20756 = t20754 * t20755
            t20759 = t20756 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4*1j) * (8415 * t20755 + 14025 * t20756 - 106590 * t20757 - 149226 * t20758 + 447678 * t20759 - 735471 * t20761 + 408595 * t20763 - 99 + (575586 * t20759 - 898909 * t20761 + 482885 * t20763 - 297) * t20754) * np.sqrt((1 + t20754)) * np.sqrt(0.5e1) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t20754) ** (0.3e1 / 0.2e1))

        if Bindx == 3237:
            t20765 = np.cos(phi)
            t20766 = t20765 ** 2
            t20767 = t20765 * t20766
            t20770 = t20767 ** 2
            t20776 = t20770 ** 2
            t20768 = t20766 ** 2
            t20769 = t20765 * t20768
            t20774 = t20769 ** 2
            t20772 = t20768 ** 2
            tfunc[..., c] = (0.27e2 / 0.512e3) * np.exp((-2*1j) * (phi1 - phi2)) * (2871 * t20766 - 40722 * t20767 - 39270 * t20768 + 331551 * t20769 + 191862 * t20770 - 415701 * t20772 + 408595 * t20774 - 148580 * t20776 - 33 + (-1151172 * t20770 + 1936385 * t20772 - 1560090 * t20774 + 482885 * t20776 + 1419) * t20765)

        if Bindx == 3238:
            t20778 = np.cos(phi)
            t20779 = t20778 ** 2
            t20781 = t20779 ** 2
            t20785 = t20781 ** 2
            t20780 = t20778 * t20779
            t20783 = t20780 ** 2
            t20782 = t20778 * t20781
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-8415 * t20779 - 38760 * t20780 + 67830 * t20781 - 67830 * t20783 - 334305 * t20785 + 123 + (325584 + 482885 * t20782) * t20782 + (-891480 * t20783 + 742900 * t20785 + 1020) * t20778) * np.sqrt((1 + t20778)) * np.sqrt(0.11e2) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t20778) ** (0.5e1 / 0.2e1))

        if Bindx == 3239:
            t20789 = np.cos(phi)
            t20790 = t20789 ** 2
            t20792 = t20790 ** 2
            t20793 = t20789 * t20792
            t20798 = t20793 ** 2
            t20796 = t20792 ** 2
            t20791 = t20789 * t20790
            t20794 = t20791 ** 2
            t20788 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.1870e4) * t20788 ** 2 * (-480 * t20790 + 2865 * t20791 + 5700 * t20792 - 19950 * t20793 - 22344 * t20794 + 34086 * t20796 - 17480 * t20798 + 6 + (55290 * t20794 - 65987 * t20796 + 28405 * t20798 - 111) * t20789)

        if Bindx == 3240:
            t20800 = np.cos(phi)
            t20801 = t20800 ** 2
            t20802 = t20800 * t20801
            t20805 = t20802 ** 2
            t20803 = t20801 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (532 * t20801 + 4256 * t20802 - 12236 * t20805 - 11 + (-1330 + 28405 * t20803) * t20803 + (-24472 * t20803 + 34960 * t20805 - 152) * t20800) * ((1 + t20800) ** (0.3e1 / 0.2e1)) * np.sqrt(0.935e3) * np.exp((-1*1j) * (2 * phi1 - 5 * phi2)) * ((1 - t20800) ** (0.7e1 / 0.2e1))

        if Bindx == 3241:
            t20819 = np.sin(phi)
            t20817 = t20819 ** 2
            t20808 = np.cos(phi)
            t20809 = t20808 ** 2
            t20811 = t20809 ** 2
            t20815 = t20811 ** 2
            t20810 = t20808 * t20809
            t20813 = t20810 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.35530e5) * t20817 ** 2 * (69 * t20809 - 196 * t20810 - 651 * t20811 + 1771 * t20813 - 1380 * t20815 - 1 + (1092 * t20811 - 2208 * t20813 + 1495 * t20815 + 9) * t20808)

        if Bindx == 3242:
            t20820 = np.cos(phi)
            t20821 = t20820 ** 2
            t20823 = t20821 ** 2
            t20822 = t20820 * t20821
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-15 * t20821 - 345 * t20823 + 1 + (-460 + 1495 * t20822) * t20822 + (1380 * t20823 + 24) * t20820) * ((1 + t20820) ** (0.5e1 / 0.2e1)) * np.sqrt(0.49742e5) * np.exp((-1*1j) * (2 * phi1 - 7 * phi2)) * ((1 - t20820) ** (0.9e1 / 0.2e1))

        if Bindx == 3243:
            t20836 = np.sin(phi)
            t20833 = t20836 ** 2
            t20834 = t20836 * t20833
            t20826 = np.cos(phi)
            t20827 = t20826 ** 2
            t20828 = t20826 * t20827
            t20831 = t20828 ** 2
            t20829 = t20827 ** 2
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.3553e4) * t20834 ** 2 * (-216 * t20827 + 225 * t20828 + 1380 * t20829 - 1840 * t20831 + 4 + (-1035 * t20829 + 1495 * t20831 - 13) * t20826)

        if Bindx == 3244:
            t20837 = np.cos(phi)
            t20838 = t20837 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (-92 * t20837 - 1 + (920 * t20837 - 138 + 1495 * t20838) * t20838) * ((1 + t20837) ** (0.7e1 / 0.2e1)) * np.sqrt(0.3230e4) * np.exp((-1*1j) * (2 * phi1 - 9 * phi2)) * ((1 - t20837) ** (0.11e2 / 0.2e1))

        if Bindx == 3245:
            t20849 = np.sin(phi)
            t20846 = t20849 ** 2
            t20847 = t20846 ** 2
            t20841 = np.cos(phi)
            t20842 = t20841 ** 2
            t20844 = t20842 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((-2*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.74290e5) * t20847 ** 2 * (35 * t20842 - 100 * t20844 - 1 + (2 * t20842 + 65 * t20844 - 1) * t20841)

        if Bindx == 3246:
            t20850 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-1 + (20 + 65 * t20850) * t20850) * ((1 + t20850) ** (0.9e1 / 0.2e1)) * np.sqrt(0.37145e5) * np.exp((-1*1j) * (2 * phi1 - 11 * phi2)) * ((1 - t20850) ** (0.13e2 / 0.2e1))

        if Bindx == 3247:
            t20858 = np.sin(phi)
            t20854 = t20858 ** 2
            t20856 = t20858 * t20854 ** 2
            t20851 = np.cos(phi)
            t20852 = t20851 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((-2*1j) * (phi1 - 6 * phi2)) * np.sqrt(0.74290e5) * t20856 ** 2 * (-24 * t20852 + 2 + (13 * t20852 + 9) * t20851)

        if Bindx == 3248:
            t20859 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (2 * phi1 - 13 * phi2)) * np.sqrt(0.482885e6) * ((1 - t20859) ** (0.15e2 / 0.2e1)) * ((1 + t20859) ** (0.11e2 / 0.2e1))

        if Bindx == 3249:
            t20864 = np.sin(phi)
            t20860 = t20864 ** 2
            t20861 = t20864 * t20860
            t20862 = t20861 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((-1*1j) * (phi1 + 13 * phi2)) * np.sqrt(0.96577e5) * t20862 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 3250:
            t20865 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((-1*1j) * (phi1 + 12 * phi2)) * np.sqrt(0.14858e5) * ((1 - t20865) ** (0.11e2 / 0.2e1)) * ((1 + t20865) ** (0.13e2 / 0.2e1)) * (-1 + 13 * t20865)

        if Bindx == 3251:
            t20873 = np.sin(phi)
            t20869 = t20873 ** 2
            t20871 = t20873 * t20869 ** 2
            t20866 = np.cos(phi)
            t20867 = t20866 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (phi1 + 11 * phi2)) * np.sqrt(0.7429e4) * t20871 ** 2 * (275 * t20867 - 11 + (325 * t20867 - 61) * t20866)

        if Bindx == 3252:
            t20874 = np.cos(phi)
            t20875 = t20874 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (phi1 + 10 * phi2)) * np.sqrt(0.14858e5) * ((1 - t20874) ** (0.9e1 / 0.2e1)) * ((1 + t20874) ** (0.11e2 / 0.2e1)) * (-75 * t20875 + 3 + (325 * t20875 - 33) * t20874)

        if Bindx == 3253:
            t20885 = np.sin(phi)
            t20882 = t20885 ** 2
            t20883 = t20882 ** 2
            t20877 = np.cos(phi)
            t20878 = t20877 ** 2
            t20880 = t20878 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-1*1j) * (phi1 + 9 * phi2)) * np.sqrt(0.646e3) * t20883 ** 2 * (-1242 * t20878 + 5175 * t20880 + 27 + (-3818 * t20878 + 7475 * t20880 + 303) * t20877)

        if Bindx == 3254:
            t20886 = np.cos(phi)
            t20887 = t20886 ** 2
            t20889 = t20887 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (phi1 + 8 * phi2)) * np.sqrt(0.17765e5) * ((1 - t20886) ** (0.7e1 / 0.2e1)) * ((1 + t20886) ** (0.9e1 / 0.2e1)) * (138 * t20887 - 575 * t20889 - 3 + (-506 * t20887 + 1495 * t20889 + 27) * t20886)

        if Bindx == 3255:
            t20901 = np.sin(phi)
            t20898 = t20901 ** 2
            t20899 = t20901 * t20898
            t20891 = np.cos(phi)
            t20892 = t20891 ** 2
            t20893 = t20891 * t20892
            t20896 = t20893 ** 2
            t20894 = t20892 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (phi1 + 7 * phi2)) * np.sqrt(0.248710e6) * t20899 ** 2 * (63 * t20892 + 357 * t20893 - 483 * t20894 + 805 * t20896 - 1 + (-1449 * t20894 + 1495 * t20896 - 19) * t20891)

        if Bindx == 3256:
            t20902 = np.cos(phi)
            t20903 = t20902 ** 2
            t20904 = t20902 * t20903
            t20907 = t20904 ** 2
            t20905 = t20903 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * (phi1 + 6 * phi2)) * np.sqrt(0.7106e4) * ((1 - t20902) ** (0.5e1 / 0.2e1)) * ((1 + t20902) ** (0.7e1 / 0.2e1)) * (-315 * t20903 + 945 * t20904 + 2415 * t20905 - 4025 * t20907 + 5 + (-5313 * t20905 + 7475 * t20907 - 35) * t20902)

        if Bindx == 3257:
            t20920 = np.sin(phi)
            t20918 = t20920 ** 2
            t20909 = np.cos(phi)
            t20910 = t20909 ** 2
            t20912 = t20910 ** 2
            t20916 = t20912 ** 2
            t20911 = t20909 * t20910
            t20914 = t20911 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-1*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.187e3) * t20918 ** 2 * (-1900 * t20910 - 18620 * t20911 + 19950 * t20912 - 61180 * t20914 + 54625 * t20916 + 25 + (109326 * t20912 - 221996 * t20914 + 142025 * t20916 + 785) * t20909)

        if Bindx == 3258:
            t20921 = np.cos(phi)
            t20922 = t20921 ** 2
            t20924 = t20922 ** 2
            t20928 = t20924 ** 2
            t20923 = t20921 * t20922
            t20926 = t20923 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((-1*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.374e3) * ((1 - t20921) ** (0.3e1 / 0.2e1)) * ((1 + t20921) ** (0.5e1 / 0.2e1)) * (3420 * t20922 - 7980 * t20923 - 35910 * t20924 + 110124 * t20926 - 98325 * t20928 - 45 + (64638 * t20924 - 173052 * t20926 + 142025 * t20928 + 225) * t20921)

        if Bindx == 3259:
            t20931 = np.cos(phi)
            t20932 = t20931 ** 2
            t20934 = t20932 ** 2
            t20935 = t20931 * t20934
            t20940 = t20935 ** 2
            t20938 = t20934 ** 2
            t20933 = t20931 * t20932
            t20936 = t20933 ** 2
            t20930 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.55e2) * t20930 ** 2 * (2295 * t20932 + 42585 * t20933 - 29070 * t20934 - 312018 * t20935 + 122094 * t20936 - 200583 * t20938 + 111435 * t20940 - 27 + (901170 * t20936 - 1106921 * t20938 + 482885 * t20940 - 1557) * t20931)

        if Bindx == 3260:
            t20942 = np.cos(phi)
            t20943 = t20942 ** 2
            t20945 = t20943 ** 2
            t20946 = t20942 * t20945
            t20951 = t20946 ** 2
            t20949 = t20945 ** 2
            t20944 = t20942 * t20943
            t20947 = t20944 ** 2
            tfunc[..., c] = (-0.27e2 / 0.1024e4*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.5e1) * np.sqrt((1 - t20942)) * ((1 + t20942) ** (0.3e1 / 0.2e1)) * (-8415 * t20943 + 14025 * t20944 + 106590 * t20945 - 149226 * t20946 - 447678 * t20947 + 735471 * t20949 - 408595 * t20951 + 99 + (575586 * t20947 - 898909 * t20949 + 482885 * t20951 - 297) * t20942)

        if Bindx == 3261:
            t20953 = np.cos(phi)
            t20954 = t20953 ** 2
            t20955 = t20953 * t20954
            t20958 = t20955 ** 2
            t20964 = t20958 ** 2
            t20956 = t20954 ** 2
            t20957 = t20953 * t20956
            t20962 = t20957 ** 2
            t20960 = t20956 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 + phi2)) * (-2970 * t20954 - 177210 * t20955 + 42075 * t20956 + 1489455 * t20957 - 213180 * t20958 + 479655 * t20960 - 490314 * t20962 + 185725 * t20964 + 33 + (-5329500 * t20958 + 9220035 * t20960 - 7622154 * t20962 + 2414425 * t20964 + 5973) * t20953)

        if Bindx == 3262:
            t20966 = np.cos(phi)
            t20967 = t20966 ** 2
            t20969 = t20967 ** 2
            t20970 = t20966 * t20969
            t20968 = t20966 * t20967
            t20971 = t20968 ** 2
            t20979 = -479655 * t20969 ** 2 + 490314 * t20970 ** 2 - 33 + (213180 - 185725 * t20971) * t20971
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.182e3) * np.sqrt((1 + t20966)) * (-t20966 * t20979 + 2970 * t20967 - 2970 * t20968 - 42075 * t20969 + 42075 * t20970 + t20979) * ((1 - t20966) ** (-0.1e1 / 0.2e1))

        if Bindx == 3263:
            t20980 = np.cos(phi)
            t20981 = t20980 ** 2
            t20982 = t20980 * t20981
            t20985 = t20982 ** 2
            t20991 = t20985 ** 2
            t20983 = t20981 ** 2
            t20984 = t20980 * t20983
            t20989 = t20984 ** 2
            t20987 = t20983 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((-1*1j) * (phi1 - phi2)) * (2970 * t20981 - 177210 * t20982 - 42075 * t20983 + 1489455 * t20984 + 213180 * t20985 - 479655 * t20987 + 490314 * t20989 - 185725 * t20991 - 33 + (-5329500 * t20985 + 9220035 * t20987 - 7622154 * t20989 + 2414425 * t20991 + 5973) * t20980)

        if Bindx == 3264:
            t20993 = np.cos(phi)
            t20994 = t20993 ** 2
            t20996 = t20994 ** 2
            t20997 = t20993 * t20996
            t21002 = t20997 ** 2
            t21000 = t20996 ** 2
            t20995 = t20993 * t20994
            t20998 = t20995 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4*1j) * (8415 * t20994 + 14025 * t20995 - 106590 * t20996 - 149226 * t20997 + 447678 * t20998 - 735471 * t21000 + 408595 * t21002 - 99 + (575586 * t20998 - 898909 * t21000 + 482885 * t21002 - 297) * t20993) * np.sqrt((1 + t20993)) * np.sqrt(0.5e1) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t20993) ** (0.3e1 / 0.2e1))

        if Bindx == 3265:
            t21005 = np.cos(phi)
            t21006 = t21005 ** 2
            t21008 = t21006 ** 2
            t21009 = t21005 * t21008
            t21014 = t21009 ** 2
            t21012 = t21008 ** 2
            t21007 = t21005 * t21006
            t21010 = t21007 ** 2
            t21004 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.55e2) * t21004 ** 2 * (-2295 * t21006 + 42585 * t21007 + 29070 * t21008 - 312018 * t21009 - 122094 * t21010 + 200583 * t21012 - 111435 * t21014 + 27 + (901170 * t21010 - 1106921 * t21012 + 482885 * t21014 - 1557) * t21005)

        if Bindx == 3266:
            t21016 = np.cos(phi)
            t21017 = t21016 ** 2
            t21019 = t21017 ** 2
            t21023 = t21019 ** 2
            t21018 = t21016 * t21017
            t21021 = t21018 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (-3420 * t21017 - 7980 * t21018 + 35910 * t21019 - 110124 * t21021 + 98325 * t21023 + 45 + (64638 * t21019 - 173052 * t21021 + 142025 * t21023 + 225) * t21016) * ((1 + t21016) ** (0.3e1 / 0.2e1)) * np.sqrt(0.374e3) * np.exp((-1*1j) * (phi1 - 4 * phi2)) * ((1 - t21016) ** (0.5e1 / 0.2e1))

        if Bindx == 3267:
            t21036 = np.sin(phi)
            t21034 = t21036 ** 2
            t21025 = np.cos(phi)
            t21026 = t21025 ** 2
            t21028 = t21026 ** 2
            t21032 = t21028 ** 2
            t21027 = t21025 * t21026
            t21030 = t21027 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-1*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.187e3) * t21034 ** 2 * (1900 * t21026 - 18620 * t21027 - 19950 * t21028 + 61180 * t21030 - 54625 * t21032 - 25 + (109326 * t21028 - 221996 * t21030 + 142025 * t21032 + 785) * t21025)

        if Bindx == 3268:
            t21037 = np.cos(phi)
            t21038 = t21037 ** 2
            t21039 = t21037 * t21038
            t21042 = t21039 ** 2
            t21040 = t21038 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (315 * t21038 + 945 * t21039 - 2415 * t21040 + 4025 * t21042 - 5 + (-5313 * t21040 + 7475 * t21042 - 35) * t21037) * ((1 + t21037) ** (0.5e1 / 0.2e1)) * np.sqrt(0.7106e4) * np.exp((-1*1j) * (phi1 - 6 * phi2)) * ((1 - t21037) ** (0.7e1 / 0.2e1))

        if Bindx == 3269:
            t21054 = np.sin(phi)
            t21051 = t21054 ** 2
            t21052 = t21054 * t21051
            t21044 = np.cos(phi)
            t21045 = t21044 ** 2
            t21046 = t21044 * t21045
            t21049 = t21046 ** 2
            t21047 = t21045 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (phi1 - 7 * phi2)) * np.sqrt(0.248710e6) * t21052 ** 2 * (-63 * t21045 + 357 * t21046 + 483 * t21047 - 805 * t21049 + 1 + (-1449 * t21047 + 1495 * t21049 - 19) * t21044)

        if Bindx == 3270:
            t21055 = np.cos(phi)
            t21056 = t21055 ** 2
            t21058 = t21056 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-138 * t21056 + 575 * t21058 + 3 + (-506 * t21056 + 1495 * t21058 + 27) * t21055) * ((1 + t21055) ** (0.7e1 / 0.2e1)) * np.sqrt(0.17765e5) * np.exp((-1*1j) * (phi1 - 8 * phi2)) * ((1 - t21055) ** (0.9e1 / 0.2e1))

        if Bindx == 3271:
            t21068 = np.sin(phi)
            t21065 = t21068 ** 2
            t21066 = t21065 ** 2
            t21060 = np.cos(phi)
            t21061 = t21060 ** 2
            t21063 = t21061 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((-1*1j) * (phi1 - 9 * phi2)) * np.sqrt(0.646e3) * t21066 ** 2 * (1242 * t21061 - 5175 * t21063 - 27 + (-3818 * t21061 + 7475 * t21063 + 303) * t21060)

        if Bindx == 3272:
            t21069 = np.cos(phi)
            t21070 = t21069 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (75 * t21070 - 3 + (325 * t21070 - 33) * t21069) * ((1 + t21069) ** (0.9e1 / 0.2e1)) * np.sqrt(0.14858e5) * np.exp((-1*1j) * (phi1 - 10 * phi2)) * ((1 - t21069) ** (0.11e2 / 0.2e1))

        if Bindx == 3273:
            t21079 = np.sin(phi)
            t21075 = t21079 ** 2
            t21077 = t21079 * t21075 ** 2
            t21072 = np.cos(phi)
            t21073 = t21072 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((-1*1j) * (phi1 - 11 * phi2)) * np.sqrt(0.7429e4) * t21077 ** 2 * (-275 * t21073 + 11 + (325 * t21073 - 61) * t21072)

        if Bindx == 3274:
            t21080 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.4096e4*1j) * (1 + 13 * t21080) * ((1 + t21080) ** (0.11e2 / 0.2e1)) * np.sqrt(0.14858e5) * np.exp((-1*1j) * (phi1 - 12 * phi2)) * ((1 - t21080) ** (0.13e2 / 0.2e1))

        if Bindx == 3275:
            t21085 = np.sin(phi)
            t21081 = t21085 ** 2
            t21082 = t21085 * t21081
            t21083 = t21082 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((-1*1j) * (phi1 - 13 * phi2)) * np.sqrt(0.96577e5) * t21083 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 3276:
            t21086 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.4096e4*1j) * np.exp((-13*1j) * phi2) * np.sqrt(0.104006e6) * ((1 - t21086) ** (0.13e2 / 0.2e1)) * ((1 + t21086) ** (0.13e2 / 0.2e1))

        if Bindx == 3277:
            t21091 = np.sin(phi)
            t21087 = t21091 ** 2
            t21088 = t21091 * t21087
            t21089 = t21088 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((-12*1j) * phi2) * np.sqrt(0.676039e6) * t21089 ** 2 * np.cos(phi)

        if Bindx == 3278:
            t21092 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((-11*1j) * phi2) * np.sqrt(0.1352078e7) * ((1 - t21092) ** (0.11e2 / 0.2e1)) * ((1 + t21092) ** (0.11e2 / 0.2e1)) * (25 * t21092 ** 2 - 1)

        if Bindx == 3279:
            t21098 = np.sin(phi)
            t21094 = t21098 ** 2
            t21096 = t21098 * t21094 ** 2
            t21093 = np.cos(phi)
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((-10*1j) * phi2) * np.sqrt(0.676039e6) * t21096 ** 2 * t21093 * (25 * t21093 ** 2 - 3)

        if Bindx == 3280:
            t21099 = np.cos(phi)
            t21100 = t21099 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((-9*1j) * phi2) * np.sqrt(0.29393e5) * ((1 - t21099) ** (0.9e1 / 0.2e1)) * ((1 + t21099) ** (0.9e1 / 0.2e1)) * (3 + (-138 + 575 * t21100) * t21100)

        if Bindx == 3281:
            t21108 = np.sin(phi)
            t21105 = t21108 ** 2
            t21106 = t21105 ** 2
            t21102 = np.cos(phi)
            t21103 = t21102 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((-8*1j) * phi2) * np.sqrt(0.3233230e7) * t21106 ** 2 * t21102 * (3 + (-46 + 115 * t21103) * t21103)

        if Bindx == 3282:
            t21109 = np.cos(phi)
            t21110 = t21109 ** 2
            t21111 = t21110 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((-7*1j) * phi2) * np.sqrt(0.230945e6) * ((1 - t21109) ** (0.7e1 / 0.2e1)) * ((1 + t21109) ** (0.7e1 / 0.2e1)) * (-483 * t21111 - 1 + (805 * t21111 + 63) * t21110)

        if Bindx == 3283:
            t21120 = np.sin(phi)
            t21117 = t21120 ** 2
            t21118 = t21120 * t21117
            t21113 = np.cos(phi)
            t21114 = t21113 ** 2
            t21115 = t21114 ** 2
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((-6*1j) * phi2) * np.sqrt(0.323323e6) * t21118 ** 2 * t21113 * (-483 * t21115 - 5 + (575 * t21115 + 105) * t21114)

        if Bindx == 3284:
            t21121 = np.cos(phi)
            t21122 = t21121 ** 2
            t21123 = t21122 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((-5*1j) * phi2) * np.sqrt(0.34034e5) * ((1 - t21121) ** (0.5e1 / 0.2e1)) * ((1 + t21121) ** (0.5e1 / 0.2e1)) * (-380 * t21122 + 5 + (-12236 * t21122 + 3990 + 10925 * t21123) * t21123)

        if Bindx == 3285:
            t21133 = np.sin(phi)
            t21131 = t21133 ** 2
            t21126 = np.cos(phi)
            t21127 = t21126 ** 2
            t21128 = t21127 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((-4*1j) * phi2) * np.sqrt(0.17017e5) * t21131 ** 2 * t21126 * (-1140 * t21127 + 45 + (-15732 * t21127 + 7182 + 10925 * t21128) * t21128)

        if Bindx == 3286:
            t21134 = np.cos(phi)
            t21135 = t21134 ** 2
            t21136 = t21135 ** 2
            t21138 = t21136 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.10010e5) * ((1 - t21134) ** (0.3e1 / 0.2e1)) * ((1 + t21134) ** (0.3e1 / 0.2e1)) * (-9690 * t21136 - 66861 * t21138 - 9 + (40698 * t21136 + 37145 * t21138 + 765) * t21135)

        if Bindx == 3287:
            t21141 = np.cos(phi)
            t21142 = t21141 ** 2
            t21143 = t21142 ** 2
            t21145 = t21143 ** 2
            t21140 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((-2*1j) * phi2) * np.sqrt(0.910e3) * t21140 ** 2 * t21141 * (-21318 * t21143 - 81719 * t21145 - 99 + (63954 * t21143 + 37145 * t21145 + 2805) * t21142)

        if Bindx == 3288:
            t21147 = np.cos(phi)
            t21148 = t21147 ** 2
            t21149 = t21148 ** 2
            t21151 = t21149 ** 2
            t21150 = t21148 * t21149
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.182e3) * np.sqrt((1 - t21147)) * np.sqrt((1 + t21147)) * (42075 * t21149 + 479655 * t21151 + 33 + (-213180 + 185725 * t21150) * t21150 + (-490314 * t21151 - 2970) * t21148)

        if Bindx == 3289:
            t21154 = np.cos(phi)
            t21155 = t21154 ** 2
            t21156 = t21155 ** 2
            t21158 = t21156 ** 2
            t21157 = t21155 * t21156
            tfunc[..., c] = 0.27e2 / 0.1024e4 * t21154 * (765765 * t21156 + 4849845 * t21158 + 3003 + (-2771340 + 1300075 * t21157) * t21157 + (-4056234 * t21158 - 90090) * t21155)

        if Bindx == 3290:
            t21161 = np.cos(phi)
            t21162 = t21161 ** 2
            t21164 = t21162 ** 2
            t21165 = t21161 * t21164
            t21163 = t21161 * t21162
            t21166 = t21163 ** 2
            t21174 = -479655 * t21164 ** 2 + 490314 * t21165 ** 2 - 33 + (213180 - 185725 * t21166) * t21166
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * phi2) * np.sqrt(0.182e3) * np.sqrt((1 + t21161)) * (-t21161 * t21174 + 2970 * t21162 - 2970 * t21163 - 42075 * t21164 + 42075 * t21165 + t21174) * ((1 - t21161) ** (-0.1e1 / 0.2e1))

        if Bindx == 3291:
            t21176 = np.cos(phi)
            t21177 = t21176 ** 2
            t21178 = t21177 ** 2
            t21180 = t21178 ** 2
            t21175 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((2*1j) * phi2) * np.sqrt(0.910e3) * t21175 ** 2 * t21176 * (-21318 * t21178 - 81719 * t21180 - 99 + (63954 * t21178 + 37145 * t21180 + 2805) * t21177)

        if Bindx == 3292:
            t21182 = np.cos(phi)
            t21183 = t21182 ** 2
            t21184 = t21183 ** 2
            t21186 = t21184 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-9690 * t21184 - 66861 * t21186 - 9 + (40698 * t21184 + 37145 * t21186 + 765) * t21183) * ((1 + t21182) ** (0.3e1 / 0.2e1)) * np.sqrt(0.10010e5) * np.exp((3*1j) * phi2) * ((1 - t21182) ** (0.3e1 / 0.2e1))

        if Bindx == 3293:
            t21195 = np.sin(phi)
            t21193 = t21195 ** 2
            t21188 = np.cos(phi)
            t21189 = t21188 ** 2
            t21190 = t21189 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((4*1j) * phi2) * np.sqrt(0.17017e5) * t21193 ** 2 * t21188 * (-1140 * t21189 + 45 + (-15732 * t21189 + 7182 + 10925 * t21190) * t21190)

        if Bindx == 3294:
            t21196 = np.cos(phi)
            t21197 = t21196 ** 2
            t21198 = t21197 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (-380 * t21197 + 5 + (-12236 * t21197 + 3990 + 10925 * t21198) * t21198) * ((1 + t21196) ** (0.5e1 / 0.2e1)) * np.sqrt(0.34034e5) * np.exp((5*1j) * phi2) * ((1 - t21196) ** (0.5e1 / 0.2e1))

        if Bindx == 3295:
            t21208 = np.sin(phi)
            t21205 = t21208 ** 2
            t21206 = t21208 * t21205
            t21201 = np.cos(phi)
            t21202 = t21201 ** 2
            t21203 = t21202 ** 2
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((6*1j) * phi2) * np.sqrt(0.323323e6) * t21206 ** 2 * t21201 * (-483 * t21203 - 5 + (575 * t21203 + 105) * t21202)

        if Bindx == 3296:
            t21209 = np.cos(phi)
            t21210 = t21209 ** 2
            t21211 = t21210 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (-483 * t21211 - 1 + (805 * t21211 + 63) * t21210) * ((1 + t21209) ** (0.7e1 / 0.2e1)) * np.sqrt(0.230945e6) * np.exp((7*1j) * phi2) * ((1 - t21209) ** (0.7e1 / 0.2e1))

        if Bindx == 3297:
            t21219 = np.sin(phi)
            t21216 = t21219 ** 2
            t21217 = t21216 ** 2
            t21213 = np.cos(phi)
            t21214 = t21213 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((8*1j) * phi2) * np.sqrt(0.3233230e7) * t21217 ** 2 * t21213 * (3 + (-46 + 115 * t21214) * t21214)

        if Bindx == 3298:
            t21220 = np.cos(phi)
            t21221 = t21220 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (3 + (-138 + 575 * t21221) * t21221) * ((1 + t21220) ** (0.9e1 / 0.2e1)) * np.sqrt(0.29393e5) * np.exp((9*1j) * phi2) * ((1 - t21220) ** (0.9e1 / 0.2e1))

        if Bindx == 3299:
            t21228 = np.sin(phi)
            t21224 = t21228 ** 2
            t21226 = t21228 * t21224 ** 2
            t21223 = np.cos(phi)
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((10*1j) * phi2) * np.sqrt(0.676039e6) * t21226 ** 2 * t21223 * (25 * t21223 ** 2 - 3)

        if Bindx == 3300:
            t21229 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (25 * t21229 ** 2 - 1) * ((1 + t21229) ** (0.11e2 / 0.2e1)) * np.sqrt(0.1352078e7) * np.exp((11*1j) * phi2) * ((1 - t21229) ** (0.11e2 / 0.2e1))

        if Bindx == 3301:
            t21234 = np.sin(phi)
            t21230 = t21234 ** 2
            t21231 = t21234 * t21230
            t21232 = t21231 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((12*1j) * phi2) * np.sqrt(0.676039e6) * t21232 ** 2 * np.cos(phi)

        if Bindx == 3302:
            t21235 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.4096e4*1j) * np.exp((13*1j) * phi2) * np.sqrt(0.104006e6) * ((1 - t21235) ** (0.13e2 / 0.2e1)) * ((1 + t21235) ** (0.13e2 / 0.2e1))

        if Bindx == 3303:
            t21240 = np.sin(phi)
            t21236 = t21240 ** 2
            t21237 = t21240 * t21236
            t21238 = t21237 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((1j) * (phi1 - 13 * phi2)) * np.sqrt(0.96577e5) * t21238 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 3304:
            t21241 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.4096e4*1j) * np.exp((1j) * (phi1 - 12 * phi2)) * np.sqrt(0.14858e5) * ((1 - t21241) ** (0.13e2 / 0.2e1)) * ((1 + t21241) ** (0.11e2 / 0.2e1)) * (1 + 13 * t21241)

        if Bindx == 3305:
            t21249 = np.sin(phi)
            t21245 = t21249 ** 2
            t21247 = t21249 * t21245 ** 2
            t21242 = np.cos(phi)
            t21243 = t21242 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (phi1 - 11 * phi2)) * np.sqrt(0.7429e4) * t21247 ** 2 * (-275 * t21243 + 11 + (325 * t21243 - 61) * t21242)

        if Bindx == 3306:
            t21250 = np.cos(phi)
            t21251 = t21250 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (phi1 - 10 * phi2)) * np.sqrt(0.14858e5) * ((1 - t21250) ** (0.11e2 / 0.2e1)) * ((1 + t21250) ** (0.9e1 / 0.2e1)) * (75 * t21251 - 3 + (325 * t21251 - 33) * t21250)

        if Bindx == 3307:
            t21261 = np.sin(phi)
            t21258 = t21261 ** 2
            t21259 = t21258 ** 2
            t21253 = np.cos(phi)
            t21254 = t21253 ** 2
            t21256 = t21254 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((1j) * (phi1 - 9 * phi2)) * np.sqrt(0.646e3) * t21259 ** 2 * (1242 * t21254 - 5175 * t21256 - 27 + (-3818 * t21254 + 7475 * t21256 + 303) * t21253)

        if Bindx == 3308:
            t21262 = np.cos(phi)
            t21263 = t21262 ** 2
            t21265 = t21263 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (phi1 - 8 * phi2)) * np.sqrt(0.17765e5) * ((1 - t21262) ** (0.9e1 / 0.2e1)) * ((1 + t21262) ** (0.7e1 / 0.2e1)) * (-138 * t21263 + 575 * t21265 + 3 + (-506 * t21263 + 1495 * t21265 + 27) * t21262)

        if Bindx == 3309:
            t21277 = np.sin(phi)
            t21274 = t21277 ** 2
            t21275 = t21277 * t21274
            t21267 = np.cos(phi)
            t21268 = t21267 ** 2
            t21269 = t21267 * t21268
            t21272 = t21269 ** 2
            t21270 = t21268 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (phi1 - 7 * phi2)) * np.sqrt(0.248710e6) * t21275 ** 2 * (-63 * t21268 + 357 * t21269 + 483 * t21270 - 805 * t21272 + 1 + (-1449 * t21270 + 1495 * t21272 - 19) * t21267)

        if Bindx == 3310:
            t21278 = np.cos(phi)
            t21279 = t21278 ** 2
            t21280 = t21278 * t21279
            t21283 = t21280 ** 2
            t21281 = t21279 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (phi1 - 6 * phi2)) * np.sqrt(0.7106e4) * ((1 - t21278) ** (0.7e1 / 0.2e1)) * ((1 + t21278) ** (0.5e1 / 0.2e1)) * (315 * t21279 + 945 * t21280 - 2415 * t21281 + 4025 * t21283 - 5 + (-5313 * t21281 + 7475 * t21283 - 35) * t21278)

        if Bindx == 3311:
            t21296 = np.sin(phi)
            t21294 = t21296 ** 2
            t21285 = np.cos(phi)
            t21286 = t21285 ** 2
            t21288 = t21286 ** 2
            t21292 = t21288 ** 2
            t21287 = t21285 * t21286
            t21290 = t21287 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((1j) * (phi1 - 5 * phi2)) * np.sqrt(0.187e3) * t21294 ** 2 * (1900 * t21286 - 18620 * t21287 - 19950 * t21288 + 61180 * t21290 - 54625 * t21292 - 25 + (109326 * t21288 - 221996 * t21290 + 142025 * t21292 + 785) * t21285)

        if Bindx == 3312:
            t21297 = np.cos(phi)
            t21298 = t21297 ** 2
            t21300 = t21298 ** 2
            t21304 = t21300 ** 2
            t21299 = t21297 * t21298
            t21302 = t21299 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (phi1 - 4 * phi2)) * np.sqrt(0.374e3) * ((1 - t21297) ** (0.5e1 / 0.2e1)) * ((1 + t21297) ** (0.3e1 / 0.2e1)) * (-3420 * t21298 - 7980 * t21299 + 35910 * t21300 - 110124 * t21302 + 98325 * t21304 + 45 + (64638 * t21300 - 173052 * t21302 + 142025 * t21304 + 225) * t21297)

        if Bindx == 3313:
            t21307 = np.cos(phi)
            t21308 = t21307 ** 2
            t21310 = t21308 ** 2
            t21311 = t21307 * t21310
            t21316 = t21311 ** 2
            t21314 = t21310 ** 2
            t21309 = t21307 * t21308
            t21312 = t21309 ** 2
            t21306 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.55e2) * t21306 ** 2 * (-2295 * t21308 + 42585 * t21309 + 29070 * t21310 - 312018 * t21311 - 122094 * t21312 + 200583 * t21314 - 111435 * t21316 + 27 + (901170 * t21312 - 1106921 * t21314 + 482885 * t21316 - 1557) * t21307)

        if Bindx == 3314:
            t21318 = np.cos(phi)
            t21319 = t21318 ** 2
            t21321 = t21319 ** 2
            t21322 = t21318 * t21321
            t21327 = t21322 ** 2
            t21325 = t21321 ** 2
            t21320 = t21318 * t21319
            t21323 = t21320 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.5e1) * ((1 - t21318) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t21318)) * (8415 * t21319 + 14025 * t21320 - 106590 * t21321 - 149226 * t21322 + 447678 * t21323 - 735471 * t21325 + 408595 * t21327 - 99 + (575586 * t21323 - 898909 * t21325 + 482885 * t21327 - 297) * t21318)

        if Bindx == 3315:
            t21329 = np.cos(phi)
            t21330 = t21329 ** 2
            t21331 = t21329 * t21330
            t21334 = t21331 ** 2
            t21340 = t21334 ** 2
            t21332 = t21330 ** 2
            t21333 = t21329 * t21332
            t21338 = t21333 ** 2
            t21336 = t21332 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((1j) * (phi1 - phi2)) * (2970 * t21330 - 177210 * t21331 - 42075 * t21332 + 1489455 * t21333 + 213180 * t21334 - 479655 * t21336 + 490314 * t21338 - 185725 * t21340 - 33 + (-5329500 * t21334 + 9220035 * t21336 - 7622154 * t21338 + 2414425 * t21340 + 5973) * t21329)

        if Bindx == 3316:
            t21342 = np.cos(phi)
            t21343 = t21342 ** 2
            t21344 = t21343 ** 2
            t21346 = t21344 ** 2
            t21345 = t21343 * t21344
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * phi1) * np.sqrt(0.182e3) * np.sqrt((1 - t21342)) * np.sqrt((1 + t21342)) * (42075 * t21344 + 479655 * t21346 + 33 + (-213180 + 185725 * t21345) * t21345 + (-490314 * t21346 - 2970) * t21343)

        if Bindx == 3317:
            t21349 = np.cos(phi)
            t21350 = t21349 ** 2
            t21351 = t21349 * t21350
            t21354 = t21351 ** 2
            t21360 = t21354 ** 2
            t21352 = t21350 ** 2
            t21353 = t21349 * t21352
            t21358 = t21353 ** 2
            t21356 = t21352 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((1j) * (phi1 + phi2)) * (-2970 * t21350 - 177210 * t21351 + 42075 * t21352 + 1489455 * t21353 - 213180 * t21354 + 479655 * t21356 - 490314 * t21358 + 185725 * t21360 + 33 + (-5329500 * t21354 + 9220035 * t21356 - 7622154 * t21358 + 2414425 * t21360 + 5973) * t21349)

        if Bindx == 3318:
            t21362 = np.cos(phi)
            t21363 = t21362 ** 2
            t21365 = t21363 ** 2
            t21366 = t21362 * t21365
            t21371 = t21366 ** 2
            t21369 = t21365 ** 2
            t21364 = t21362 * t21363
            t21367 = t21364 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.5e1) * ((1 + t21362) ** (0.3e1 / 0.2e1)) * (8118 * t21363 - 22440 * t21364 - 92565 * t21365 + 255816 * t21366 - 159885 * t21369 - 490314 * t21371 - 99 + (298452 + 482885 * t21367) * t21367 + (-1023264 * t21367 + 1634380 * t21369 - 891480 * t21371 + 396) * t21362) * ((1 - t21362) ** (-0.1e1 / 0.2e1))

        if Bindx == 3319:
            t21375 = np.cos(phi)
            t21376 = t21375 ** 2
            t21378 = t21376 ** 2
            t21379 = t21375 * t21378
            t21384 = t21379 ** 2
            t21382 = t21378 ** 2
            t21377 = t21375 * t21376
            t21380 = t21377 ** 2
            t21374 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.55e2) * t21374 ** 2 * (2295 * t21376 + 42585 * t21377 - 29070 * t21378 - 312018 * t21379 + 122094 * t21380 - 200583 * t21382 + 111435 * t21384 - 27 + (901170 * t21380 - 1106921 * t21382 + 482885 * t21384 - 1557) * t21375)

        if Bindx == 3320:
            t21386 = np.cos(phi)
            t21387 = t21386 ** 2
            t21389 = t21387 ** 2
            t21393 = t21389 ** 2
            t21388 = t21386 * t21387
            t21391 = t21388 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (3420 * t21387 - 7980 * t21388 - 35910 * t21389 + 110124 * t21391 - 98325 * t21393 - 45 + (64638 * t21389 - 173052 * t21391 + 142025 * t21393 + 225) * t21386) * ((1 + t21386) ** (0.5e1 / 0.2e1)) * np.sqrt(0.374e3) * np.exp((1j) * (phi1 + 4 * phi2)) * ((1 - t21386) ** (0.3e1 / 0.2e1))

        if Bindx == 3321:
            t21406 = np.sin(phi)
            t21404 = t21406 ** 2
            t21395 = np.cos(phi)
            t21396 = t21395 ** 2
            t21398 = t21396 ** 2
            t21402 = t21398 ** 2
            t21397 = t21395 * t21396
            t21400 = t21397 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((1j) * (phi1 + 5 * phi2)) * np.sqrt(0.187e3) * t21404 ** 2 * (-1900 * t21396 - 18620 * t21397 + 19950 * t21398 - 61180 * t21400 + 54625 * t21402 + 25 + (109326 * t21398 - 221996 * t21400 + 142025 * t21402 + 785) * t21395)

        if Bindx == 3322:
            t21407 = np.cos(phi)
            t21408 = t21407 ** 2
            t21409 = t21407 * t21408
            t21412 = t21409 ** 2
            t21410 = t21408 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-315 * t21408 + 945 * t21409 + 2415 * t21410 - 4025 * t21412 + 5 + (-5313 * t21410 + 7475 * t21412 - 35) * t21407) * ((1 + t21407) ** (0.7e1 / 0.2e1)) * np.sqrt(0.7106e4) * np.exp((1j) * (phi1 + 6 * phi2)) * ((1 - t21407) ** (0.5e1 / 0.2e1))

        if Bindx == 3323:
            t21424 = np.sin(phi)
            t21421 = t21424 ** 2
            t21422 = t21424 * t21421
            t21414 = np.cos(phi)
            t21415 = t21414 ** 2
            t21416 = t21414 * t21415
            t21419 = t21416 ** 2
            t21417 = t21415 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (phi1 + 7 * phi2)) * np.sqrt(0.248710e6) * t21422 ** 2 * (63 * t21415 + 357 * t21416 - 483 * t21417 + 805 * t21419 - 1 + (-1449 * t21417 + 1495 * t21419 - 19) * t21414)

        if Bindx == 3324:
            t21425 = np.cos(phi)
            t21426 = t21425 ** 2
            t21428 = t21426 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (138 * t21426 - 575 * t21428 - 3 + (-506 * t21426 + 1495 * t21428 + 27) * t21425) * ((1 + t21425) ** (0.9e1 / 0.2e1)) * np.sqrt(0.17765e5) * np.exp((1j) * (phi1 + 8 * phi2)) * ((1 - t21425) ** (0.7e1 / 0.2e1))

        if Bindx == 3325:
            t21438 = np.sin(phi)
            t21435 = t21438 ** 2
            t21436 = t21435 ** 2
            t21430 = np.cos(phi)
            t21431 = t21430 ** 2
            t21433 = t21431 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((1j) * (phi1 + 9 * phi2)) * np.sqrt(0.646e3) * t21436 ** 2 * (-1242 * t21431 + 5175 * t21433 + 27 + (-3818 * t21431 + 7475 * t21433 + 303) * t21430)

        if Bindx == 3326:
            t21439 = np.cos(phi)
            t21440 = t21439 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-75 * t21440 + 3 + (325 * t21440 - 33) * t21439) * ((1 + t21439) ** (0.11e2 / 0.2e1)) * np.sqrt(0.14858e5) * np.exp((1j) * (phi1 + 10 * phi2)) * ((1 - t21439) ** (0.9e1 / 0.2e1))

        if Bindx == 3327:
            t21449 = np.sin(phi)
            t21445 = t21449 ** 2
            t21447 = t21449 * t21445 ** 2
            t21442 = np.cos(phi)
            t21443 = t21442 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (phi1 + 11 * phi2)) * np.sqrt(0.7429e4) * t21447 ** 2 * (275 * t21443 - 11 + (325 * t21443 - 61) * t21442)

        if Bindx == 3328:
            t21450 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * (-1 + 13 * t21450) * ((1 + t21450) ** (0.13e2 / 0.2e1)) * np.sqrt(0.14858e5) * np.exp((1j) * (phi1 + 12 * phi2)) * ((1 - t21450) ** (0.11e2 / 0.2e1))

        if Bindx == 3329:
            t21455 = np.sin(phi)
            t21451 = t21455 ** 2
            t21452 = t21455 * t21451
            t21453 = t21452 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((1j) * (phi1 + 13 * phi2)) * np.sqrt(0.96577e5) * t21453 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 3330:
            t21456 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (2 * phi1 - 13 * phi2)) * np.sqrt(0.482885e6) * ((1 - t21456) ** (0.15e2 / 0.2e1)) * ((1 + t21456) ** (0.11e2 / 0.2e1))

        if Bindx == 3331:
            t21464 = np.sin(phi)
            t21460 = t21464 ** 2
            t21462 = t21464 * t21460 ** 2
            t21457 = np.cos(phi)
            t21458 = t21457 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (phi1 - 6 * phi2)) * np.sqrt(0.74290e5) * t21462 ** 2 * (-24 * t21458 + 2 + (13 * t21458 + 9) * t21457)

        if Bindx == 3332:
            t21465 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (2 * phi1 - 11 * phi2)) * np.sqrt(0.37145e5) * ((1 - t21465) ** (0.13e2 / 0.2e1)) * ((1 + t21465) ** (0.9e1 / 0.2e1)) * (-1 + (20 + 65 * t21465) * t21465)

        if Bindx == 3333:
            t21474 = np.sin(phi)
            t21471 = t21474 ** 2
            t21472 = t21471 ** 2
            t21466 = np.cos(phi)
            t21467 = t21466 ** 2
            t21469 = t21467 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((2*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.74290e5) * t21472 ** 2 * (35 * t21467 - 100 * t21469 - 1 + (2 * t21467 + 65 * t21469 - 1) * t21466)

        if Bindx == 3334:
            t21475 = np.cos(phi)
            t21476 = t21475 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (2 * phi1 - 9 * phi2)) * np.sqrt(0.3230e4) * ((1 - t21475) ** (0.11e2 / 0.2e1)) * ((1 + t21475) ** (0.7e1 / 0.2e1)) * (-92 * t21475 - 1 + (920 * t21475 - 138 + 1495 * t21476) * t21476)

        if Bindx == 3335:
            t21489 = np.sin(phi)
            t21486 = t21489 ** 2
            t21487 = t21489 * t21486
            t21479 = np.cos(phi)
            t21480 = t21479 ** 2
            t21481 = t21479 * t21480
            t21484 = t21481 ** 2
            t21482 = t21480 ** 2
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((2*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.3553e4) * t21487 ** 2 * (-216 * t21480 + 225 * t21481 + 1380 * t21482 - 1840 * t21484 + 4 + (-1035 * t21482 + 1495 * t21484 - 13) * t21479)

        if Bindx == 3336:
            t21490 = np.cos(phi)
            t21491 = t21490 ** 2
            t21493 = t21491 ** 2
            t21492 = t21490 * t21491
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (2 * phi1 - 7 * phi2)) * np.sqrt(0.49742e5) * ((1 - t21490) ** (0.9e1 / 0.2e1)) * ((1 + t21490) ** (0.5e1 / 0.2e1)) * (-15 * t21491 - 345 * t21493 + 1 + (-460 + 1495 * t21492) * t21492 + (1380 * t21493 + 24) * t21490)

        if Bindx == 3337:
            t21507 = np.sin(phi)
            t21505 = t21507 ** 2
            t21496 = np.cos(phi)
            t21497 = t21496 ** 2
            t21499 = t21497 ** 2
            t21503 = t21499 ** 2
            t21498 = t21496 * t21497
            t21501 = t21498 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.35530e5) * t21505 ** 2 * (69 * t21497 - 196 * t21498 - 651 * t21499 + 1771 * t21501 - 1380 * t21503 - 1 + (1092 * t21499 - 2208 * t21501 + 1495 * t21503 + 9) * t21496)

        if Bindx == 3338:
            t21508 = np.cos(phi)
            t21509 = t21508 ** 2
            t21510 = t21508 * t21509
            t21513 = t21510 ** 2
            t21511 = t21509 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.935e3) * ((1 - t21508) ** (0.7e1 / 0.2e1)) * ((1 + t21508) ** (0.3e1 / 0.2e1)) * (532 * t21509 + 4256 * t21510 - 12236 * t21513 - 11 + (-1330 + 28405 * t21511) * t21511 + (-24472 * t21511 + 34960 * t21513 - 152) * t21508)

        if Bindx == 3339:
            t21517 = np.cos(phi)
            t21518 = t21517 ** 2
            t21520 = t21518 ** 2
            t21521 = t21517 * t21520
            t21526 = t21521 ** 2
            t21524 = t21520 ** 2
            t21519 = t21517 * t21518
            t21522 = t21519 ** 2
            t21516 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.1870e4) * t21516 ** 2 * (-480 * t21518 + 2865 * t21519 + 5700 * t21520 - 19950 * t21521 - 22344 * t21522 + 34086 * t21524 - 17480 * t21526 + 6 + (55290 * t21522 - 65987 * t21524 + 28405 * t21526 - 111) * t21517)

        if Bindx == 3340:
            t21528 = np.cos(phi)
            t21529 = t21528 ** 2
            t21531 = t21529 ** 2
            t21535 = t21531 ** 2
            t21530 = t21528 * t21529
            t21533 = t21530 ** 2
            t21532 = t21528 * t21531
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.11e2) * ((1 - t21528) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t21528)) * (-8415 * t21529 - 38760 * t21530 + 67830 * t21531 - 67830 * t21533 - 334305 * t21535 + 123 + (325584 + 482885 * t21532) * t21532 + (-891480 * t21533 + 742900 * t21535 + 1020) * t21528)

        if Bindx == 3341:
            t21538 = np.cos(phi)
            t21539 = t21538 ** 2
            t21540 = t21538 * t21539
            t21543 = t21540 ** 2
            t21549 = t21543 ** 2
            t21541 = t21539 ** 2
            t21542 = t21538 * t21541
            t21547 = t21542 ** 2
            t21545 = t21541 ** 2
            tfunc[..., c] = (0.27e2 / 0.512e3) * np.exp((2*1j) * (phi1 - phi2)) * (2871 * t21539 - 40722 * t21540 - 39270 * t21541 + 331551 * t21542 + 191862 * t21543 - 415701 * t21545 + 408595 * t21547 - 148580 * t21549 - 33 + (-1151172 * t21543 + 1936385 * t21545 - 1560090 * t21547 + 482885 * t21549 + 1419) * t21538)

        if Bindx == 3342:
            t21551 = np.cos(phi)
            t21552 = t21551 ** 2
            t21554 = t21552 ** 2
            t21555 = t21551 * t21554
            t21560 = t21555 ** 2
            t21558 = t21554 ** 2
            t21553 = t21551 * t21552
            t21556 = t21553 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.5e1) * ((1 - t21551) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t21551)) * (8415 * t21552 + 14025 * t21553 - 106590 * t21554 - 149226 * t21555 + 447678 * t21556 - 735471 * t21558 + 408595 * t21560 - 99 + (575586 * t21556 - 898909 * t21558 + 482885 * t21560 - 297) * t21551)

        if Bindx == 3343:
            t21563 = np.cos(phi)
            t21564 = t21563 ** 2
            t21565 = t21564 ** 2
            t21567 = t21565 ** 2
            t21562 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((2*1j) * phi1) * np.sqrt(0.910e3) * t21562 ** 2 * t21563 * (-21318 * t21565 - 81719 * t21567 - 99 + (63954 * t21565 + 37145 * t21567 + 2805) * t21564)

        if Bindx == 3344:
            t21569 = np.cos(phi)
            t21570 = t21569 ** 2
            t21572 = t21570 ** 2
            t21573 = t21569 * t21572
            t21578 = t21573 ** 2
            t21576 = t21572 ** 2
            t21571 = t21569 * t21570
            t21574 = t21571 ** 2
            tfunc[..., c] = (-0.27e2 / 0.1024e4*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.5e1) * np.sqrt((1 - t21569)) * ((1 + t21569) ** (0.3e1 / 0.2e1)) * (-8415 * t21570 + 14025 * t21571 + 106590 * t21572 - 149226 * t21573 - 447678 * t21574 + 735471 * t21576 - 408595 * t21578 + 99 + (575586 * t21574 - 898909 * t21576 + 482885 * t21578 - 297) * t21569)

        if Bindx == 3345:
            t21580 = np.cos(phi)
            t21581 = t21580 ** 2
            t21582 = t21580 * t21581
            t21585 = t21582 ** 2
            t21591 = t21585 ** 2
            t21583 = t21581 ** 2
            t21584 = t21580 * t21583
            t21589 = t21584 ** 2
            t21587 = t21583 ** 2
            tfunc[..., c] = (0.27e2 / 0.512e3) * np.exp((2*1j) * (phi1 + phi2)) * (-2871 * t21581 - 40722 * t21582 + 39270 * t21583 + 331551 * t21584 - 191862 * t21585 + 415701 * t21587 - 408595 * t21589 + 148580 * t21591 + 33 + (-1151172 * t21585 + 1936385 * t21587 - 1560090 * t21589 + 482885 * t21591 + 1419) * t21580)

        if Bindx == 3346:
            t21593 = np.cos(phi)
            t21594 = t21593 ** 2
            t21596 = t21594 ** 2
            t21597 = t21593 * t21596
            t21602 = t21597 ** 2
            t21600 = t21596 ** 2
            t21595 = t21593 * t21594
            t21598 = t21595 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.11e2) * ((1 + t21593) ** (0.5e1 / 0.2e1)) * (7395 * t21594 - 47175 * t21595 - 29070 * t21596 + 393414 * t21597 - 257754 * t21598 + 1225785 * t21600 - 1225785 * t21602 - 123 + (-959310 * t21598 + 408595 * t21600 + 482885 * t21602 + 1143) * t21593) * ((1 - t21593) ** (-0.1e1 / 0.2e1))

        if Bindx == 3347:
            t21605 = np.cos(phi)
            t21606 = t21605 ** 2
            t21608 = t21606 ** 2
            t21609 = t21605 * t21608
            t21614 = t21609 ** 2
            t21612 = t21608 ** 2
            t21607 = t21605 * t21606
            t21610 = t21607 ** 2
            t21604 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.1870e4) * t21604 ** 2 * (480 * t21606 + 2865 * t21607 - 5700 * t21608 - 19950 * t21609 + 22344 * t21610 - 34086 * t21612 + 17480 * t21614 - 6 + (55290 * t21610 - 65987 * t21612 + 28405 * t21614 - 111) * t21605)

        if Bindx == 3348:
            t21616 = np.cos(phi)
            t21617 = t21616 ** 2
            t21618 = t21616 * t21617
            t21621 = t21618 ** 2
            t21619 = t21617 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (532 * t21617 - 4256 * t21618 - 12236 * t21621 - 11 + (-1330 + 28405 * t21619) * t21619 + (24472 * t21619 - 34960 * t21621 + 152) * t21616) * ((1 + t21616) ** (0.7e1 / 0.2e1)) * np.sqrt(0.935e3) * np.exp((1j) * (2 * phi1 + 5 * phi2)) * ((1 - t21616) ** (0.3e1 / 0.2e1))

        if Bindx == 3349:
            t21635 = np.sin(phi)
            t21633 = t21635 ** 2
            t21624 = np.cos(phi)
            t21625 = t21624 ** 2
            t21627 = t21625 ** 2
            t21631 = t21627 ** 2
            t21626 = t21624 * t21625
            t21629 = t21626 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.35530e5) * t21633 ** 2 * (-69 * t21625 - 196 * t21626 + 651 * t21627 - 1771 * t21629 + 1380 * t21631 + 1 + (1092 * t21627 - 2208 * t21629 + 1495 * t21631 + 9) * t21624)

        if Bindx == 3350:
            t21636 = np.cos(phi)
            t21637 = t21636 ** 2
            t21639 = t21637 ** 2
            t21638 = t21636 * t21637
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-15 * t21637 - 345 * t21639 + 1 + (460 + 1495 * t21638) * t21638 + (-1380 * t21639 - 24) * t21636) * ((1 + t21636) ** (0.9e1 / 0.2e1)) * np.sqrt(0.49742e5) * np.exp((1j) * (2 * phi1 + 7 * phi2)) * ((1 - t21636) ** (0.5e1 / 0.2e1))

        if Bindx == 3351:
            t21652 = np.sin(phi)
            t21649 = t21652 ** 2
            t21650 = t21652 * t21649
            t21642 = np.cos(phi)
            t21643 = t21642 ** 2
            t21644 = t21642 * t21643
            t21647 = t21644 ** 2
            t21645 = t21643 ** 2
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((2*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.3553e4) * t21650 ** 2 * (216 * t21643 + 225 * t21644 - 1380 * t21645 + 1840 * t21647 - 4 + (-1035 * t21645 + 1495 * t21647 - 13) * t21642)

        if Bindx == 3352:
            t21653 = np.cos(phi)
            t21654 = t21653 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (92 * t21653 - 1 + (-920 * t21653 - 138 + 1495 * t21654) * t21654) * ((1 + t21653) ** (0.11e2 / 0.2e1)) * np.sqrt(0.3230e4) * np.exp((1j) * (2 * phi1 + 9 * phi2)) * ((1 - t21653) ** (0.7e1 / 0.2e1))

        if Bindx == 3353:
            t21665 = np.sin(phi)
            t21662 = t21665 ** 2
            t21663 = t21662 ** 2
            t21657 = np.cos(phi)
            t21658 = t21657 ** 2
            t21660 = t21658 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((2*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.74290e5) * t21663 ** 2 * (-35 * t21658 + 100 * t21660 + 1 + (2 * t21658 + 65 * t21660 - 1) * t21657)

        if Bindx == 3354:
            t21666 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * (-1 + (-20 + 65 * t21666) * t21666) * ((1 + t21666) ** (0.13e2 / 0.2e1)) * np.sqrt(0.37145e5) * np.exp((1j) * (2 * phi1 + 11 * phi2)) * ((1 - t21666) ** (0.9e1 / 0.2e1))

        if Bindx == 3355:
            t21674 = np.sin(phi)
            t21670 = t21674 ** 2
            t21672 = t21674 * t21670 ** 2
            t21667 = np.cos(phi)
            t21668 = t21667 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (phi1 + 6 * phi2)) * np.sqrt(0.74290e5) * t21672 ** 2 * (24 * t21668 - 2 + (13 * t21668 + 9) * t21667)

        if Bindx == 3356:
            t21675 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (2 * phi1 + 13 * phi2)) * np.sqrt(0.482885e6) * ((1 - t21675) ** (0.11e2 / 0.2e1)) * ((1 + t21675) ** (0.15e2 / 0.2e1))

        if Bindx == 3357:
            t21676 = np.cos(phi)
            t21684 = -1 + t21676
            t21683 = 1 + t21676
            t21680 = t21683 ** 2
            t21677 = t21684 ** 2
            t21678 = t21677 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (3 * phi1 - 13 * phi2)) * np.sqrt(0.5311735e7) * t21678 ** 2 * t21683 * t21680 ** 2

        if Bindx == 3358:
            t21685 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * np.exp((3*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.817190e6) * ((1 - t21685) ** (0.15e2 / 0.2e1)) * ((1 + t21685) ** (0.9e1 / 0.2e1)) * (3 + 13 * t21685)

        if Bindx == 3359:
            t21694 = np.sin(phi)
            t21691 = t21694 ** 2
            t21692 = t21691 ** 2
            t21686 = np.cos(phi)
            t21687 = t21686 ** 2
            t21689 = t21687 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (3 * phi1 - 11 * phi2)) * np.sqrt(0.408595e6) * t21692 ** 2 * (22 * t21687 - 165 * t21689 - 1 + (106 * t21687 + 65 * t21689 - 27) * t21686)

        if Bindx == 3360:
            t21695 = np.cos(phi)
            t21696 = t21695 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (3 * phi1 - 10 * phi2)) * np.sqrt(0.817190e6) * ((1 - t21695) ** (0.13e2 / 0.2e1)) * ((1 + t21695) ** (0.7e1 / 0.2e1)) * (45 * t21696 - 1 + (65 * t21696 + 3) * t21695)

        if Bindx == 3361:
            t21708 = np.sin(phi)
            t21705 = t21708 ** 2
            t21706 = t21708 * t21705
            t21698 = np.cos(phi)
            t21699 = t21698 ** 2
            t21700 = t21698 * t21699
            t21703 = t21700 ** 2
            t21701 = t21699 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((3*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.35530e5) * t21706 ** 2 * (-387 * t21699 - 699 * t21700 + 2139 * t21701 - 3105 * t21703 + 9 + (483 * t21701 + 1495 * t21703 + 65) * t21698)

        if Bindx == 3362:
            t21709 = np.cos(phi)
            t21710 = t21709 ** 2
            t21712 = t21710 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (3 * phi1 - 8 * phi2)) * np.sqrt(0.323e3) * ((1 - t21709) ** (0.11e2 / 0.2e1)) * ((1 + t21709) ** (0.5e1 / 0.2e1)) * (-2530 * t21710 + 18975 * t21712 + 19 + (2530 * t21710 + 16445 * t21712 - 495) * t21709)

        if Bindx == 3363:
            t21725 = np.sin(phi)
            t21723 = t21725 ** 2
            t21714 = np.cos(phi)
            t21715 = t21714 ** 2
            t21717 = t21715 ** 2
            t21721 = t21717 ** 2
            t21716 = t21714 * t21715
            t21719 = t21716 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.4522e4) * t21723 ** 2 * (1740 * t21715 + 292 * t21716 - 14406 * t21717 + 35420 * t21719 - 26565 * t21721 - 29 + (2310 * t21717 - 15180 * t21719 + 16445 * t21721 - 27) * t21714)

        if Bindx == 3364:
            t21726 = np.cos(phi)
            t21727 = t21726 ** 2
            t21728 = t21726 * t21727
            t21731 = t21728 ** 2
            t21729 = t21727 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((3*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.3230e4) * ((1 - t21726) ** (0.9e1 / 0.2e1)) * ((1 + t21726) ** (0.3e1 / 0.2e1)) * (399 * t21727 - 3465 * t21728 - 8855 * t21729 + 26565 * t21731 + 3 + (5313 * t21729 + 16445 * t21731 + 203) * t21726)

        if Bindx == 3365:
            t21734 = np.cos(phi)
            t21735 = t21734 ** 2
            t21737 = t21735 ** 2
            t21738 = t21734 * t21737
            t21743 = t21738 ** 2
            t21741 = t21737 ** 2
            t21736 = t21734 * t21735
            t21739 = t21736 ** 2
            t21733 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.85e2) * t21733 ** 2 * (-13505 * t21735 + 24515 * t21736 + 146490 * t21737 - 171038 * t21738 - 526946 * t21739 + 745085 * t21741 - 360525 * t21743 + 185 + (502854 * t21739 - 658559 * t21741 + 312455 * t21743 - 1011) * t21734)

        if Bindx == 3366:
            t21745 = np.cos(phi)
            t21746 = t21745 ** 2
            t21748 = t21746 ** 2
            t21752 = t21748 ** 2
            t21747 = t21745 * t21746
            t21750 = t21747 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * np.exp((1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.170e3) * ((1 - t21745) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t21745)) * (2052 * t21746 + 46284 * t21747 + 45486 * t21748 - 403788 * t21750 + 648945 * t21752 - 87 + (-237006 * t21748 + 173052 * t21750 + 312455 * t21752 - 1665) * t21745)

        if Bindx == 3367:
            t21754 = np.cos(phi)
            t21755 = t21754 ** 2
            t21756 = t21754 * t21755
            t21759 = t21756 ** 2
            t21765 = t21759 ** 2
            t21757 = t21755 ** 2
            t21758 = t21754 * t21757
            t21763 = t21758 ** 2
            t21761 = t21757 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((3*1j) * (phi1 - phi2)) * (93726 * t21755 - 495342 * t21756 - 1208445 * t21757 + 3864321 * t21758 + 5569812 * t21759 - 11404161 * t21761 + 10623470 * t21763 - 3677355 * t21765 - 1143 + (-13011732 * t21759 + 21477885 * t21761 - 17160990 * t21763 + 5311735 * t21765 + 18219) * t21754)

        if Bindx == 3368:
            t21767 = np.cos(phi)
            t21768 = t21767 ** 2
            t21770 = t21768 ** 2
            t21774 = t21770 ** 2
            t21769 = t21767 * t21768
            t21772 = t21769 ** 2
            t21771 = t21767 * t21770
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.11e2) * ((1 - t21767) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t21767)) * (-8415 * t21768 - 38760 * t21769 + 67830 * t21770 - 67830 * t21772 - 334305 * t21774 + 123 + (325584 + 482885 * t21771) * t21771 + (-891480 * t21772 + 742900 * t21774 + 1020) * t21767)

        if Bindx == 3369:
            t21778 = np.cos(phi)
            t21779 = t21778 ** 2
            t21781 = t21779 ** 2
            t21782 = t21778 * t21781
            t21787 = t21782 ** 2
            t21785 = t21781 ** 2
            t21780 = t21778 * t21779
            t21783 = t21780 ** 2
            t21777 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.55e2) * t21777 ** 2 * (-2295 * t21779 + 42585 * t21780 + 29070 * t21781 - 312018 * t21782 - 122094 * t21783 + 200583 * t21785 - 111435 * t21787 + 27 + (901170 * t21783 - 1106921 * t21785 + 482885 * t21787 - 1557) * t21778)

        if Bindx == 3370:
            t21789 = np.cos(phi)
            t21790 = t21789 ** 2
            t21791 = t21790 ** 2
            t21793 = t21791 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.10010e5) * ((1 - t21789) ** (0.3e1 / 0.2e1)) * ((1 + t21789) ** (0.3e1 / 0.2e1)) * (-9690 * t21791 - 66861 * t21793 - 9 + (40698 * t21791 + 37145 * t21793 + 765) * t21790)

        if Bindx == 3371:
            t21796 = np.cos(phi)
            t21797 = t21796 ** 2
            t21799 = t21797 ** 2
            t21800 = t21796 * t21799
            t21805 = t21800 ** 2
            t21803 = t21799 ** 2
            t21798 = t21796 * t21797
            t21801 = t21798 ** 2
            t21795 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.55e2) * t21795 ** 2 * (2295 * t21797 + 42585 * t21798 - 29070 * t21799 - 312018 * t21800 + 122094 * t21801 - 200583 * t21803 + 111435 * t21805 - 27 + (901170 * t21801 - 1106921 * t21803 + 482885 * t21805 - 1557) * t21796)

        if Bindx == 3372:
            t21807 = np.cos(phi)
            t21808 = t21807 ** 2
            t21810 = t21808 ** 2
            t21814 = t21810 ** 2
            t21809 = t21807 * t21808
            t21812 = t21809 ** 2
            t21811 = t21807 * t21810
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.11e2) * np.sqrt((1 - t21807)) * ((1 + t21807) ** (0.5e1 / 0.2e1)) * (-8415 * t21808 + 38760 * t21809 + 67830 * t21810 - 67830 * t21812 - 334305 * t21814 + 123 + (-325584 + 482885 * t21811) * t21811 + (891480 * t21812 - 742900 * t21814 - 1020) * t21807)

        if Bindx == 3373:
            t21817 = np.cos(phi)
            t21818 = t21817 ** 2
            t21819 = t21817 * t21818
            t21822 = t21819 ** 2
            t21828 = t21822 ** 2
            t21820 = t21818 ** 2
            t21821 = t21817 * t21820
            t21826 = t21821 ** 2
            t21824 = t21820 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((3*1j) * (phi1 + phi2)) * (-93726 * t21818 - 495342 * t21819 + 1208445 * t21820 + 3864321 * t21821 - 5569812 * t21822 + 11404161 * t21824 - 10623470 * t21826 + 3677355 * t21828 + 1143 + (-13011732 * t21822 + 21477885 * t21824 - 17160990 * t21826 + 5311735 * t21828 + 18219) * t21817)

        if Bindx == 3374:
            t21830 = np.cos(phi)
            t21831 = t21830 ** 2
            t21833 = t21831 ** 2
            t21837 = t21833 ** 2
            t21832 = t21830 * t21831
            t21835 = t21832 ** 2
            t21834 = t21830 * t21833
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * np.exp((1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.170e3) * ((1 + t21830) ** (0.7e1 / 0.2e1)) * (387 * t21831 - 48336 * t21832 + 91770 * t21833 - 640794 * t21835 + 821997 * t21837 - 87 + (191520 + 312455 * t21834) * t21834 + (230736 * t21835 - 961400 * t21837 + 1752) * t21830) * ((1 - t21830) ** (-0.1e1 / 0.2e1))

        if Bindx == 3375:
            t21841 = np.cos(phi)
            t21842 = t21841 ** 2
            t21844 = t21842 ** 2
            t21845 = t21841 * t21844
            t21850 = t21845 ** 2
            t21848 = t21844 ** 2
            t21843 = t21841 * t21842
            t21846 = t21843 ** 2
            t21840 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.85e2) * t21840 ** 2 * (13505 * t21842 + 24515 * t21843 - 146490 * t21844 - 171038 * t21845 + 526946 * t21846 - 745085 * t21848 + 360525 * t21850 - 185 + (502854 * t21846 - 658559 * t21848 + 312455 * t21850 - 1011) * t21841)

        if Bindx == 3376:
            t21852 = np.cos(phi)
            t21853 = t21852 ** 2
            t21854 = t21852 * t21853
            t21857 = t21854 ** 2
            t21855 = t21853 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-399 * t21853 - 3465 * t21854 + 8855 * t21855 - 26565 * t21857 - 3 + (5313 * t21855 + 16445 * t21857 + 203) * t21852) * ((1 + t21852) ** (0.9e1 / 0.2e1)) * np.sqrt(0.3230e4) * np.exp((3*1j) * (phi1 + 2 * phi2)) * ((1 - t21852) ** (0.3e1 / 0.2e1))

        if Bindx == 3377:
            t21870 = np.sin(phi)
            t21868 = t21870 ** 2
            t21859 = np.cos(phi)
            t21860 = t21859 ** 2
            t21862 = t21860 ** 2
            t21866 = t21862 ** 2
            t21861 = t21859 * t21860
            t21864 = t21861 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.4522e4) * t21868 ** 2 * (-1740 * t21860 + 292 * t21861 + 14406 * t21862 - 35420 * t21864 + 26565 * t21866 + 29 + (2310 * t21862 - 15180 * t21864 + 16445 * t21866 - 27) * t21859)

        if Bindx == 3378:
            t21871 = np.cos(phi)
            t21872 = t21871 ** 2
            t21876 = 2530 * t21872
            t21874 = t21872 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (-18975 * t21874 + t21876 - 19 + (16445 * t21874 + t21876 - 495) * t21871) * ((1 + t21871) ** (0.11e2 / 0.2e1)) * np.sqrt(0.323e3) * np.exp((1j) * (3 * phi1 + 8 * phi2)) * ((1 - t21871) ** (0.5e1 / 0.2e1))

        if Bindx == 3379:
            t21887 = np.sin(phi)
            t21884 = t21887 ** 2
            t21885 = t21887 * t21884
            t21877 = np.cos(phi)
            t21878 = t21877 ** 2
            t21879 = t21877 * t21878
            t21882 = t21879 ** 2
            t21880 = t21878 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((3*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.35530e5) * t21885 ** 2 * (387 * t21878 - 699 * t21879 - 2139 * t21880 + 3105 * t21882 - 9 + (483 * t21880 + 1495 * t21882 + 65) * t21877)

        if Bindx == 3380:
            t21888 = np.cos(phi)
            t21889 = t21888 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-45 * t21889 + 1 + (65 * t21889 + 3) * t21888) * ((1 + t21888) ** (0.13e2 / 0.2e1)) * np.sqrt(0.817190e6) * np.exp((1j) * (3 * phi1 + 10 * phi2)) * ((1 - t21888) ** (0.7e1 / 0.2e1))

        if Bindx == 3381:
            t21899 = np.sin(phi)
            t21896 = t21899 ** 2
            t21897 = t21896 ** 2
            t21891 = np.cos(phi)
            t21892 = t21891 ** 2
            t21894 = t21892 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (3 * phi1 + 11 * phi2)) * np.sqrt(0.408595e6) * t21897 ** 2 * (-22 * t21892 + 165 * t21894 + 1 + (106 * t21892 + 65 * t21894 - 27) * t21891)

        if Bindx == 3382:
            t21900 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * (-3 + 13 * t21900) * ((1 + t21900) ** (0.15e2 / 0.2e1)) * np.sqrt(0.817190e6) * np.exp((3*1j) * (phi1 + 4 * phi2)) * ((1 - t21900) ** (0.9e1 / 0.2e1))

        if Bindx == 3383:
            t21901 = np.cos(phi)
            t21909 = -1 + t21901
            t21908 = 1 + t21901
            t21905 = t21908 ** 2
            t21906 = t21905 ** 2
            t21902 = t21909 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (3 * phi1 + 13 * phi2)) * np.sqrt(0.5311735e7) * t21909 * t21902 ** 2 * t21906 ** 2

        if Bindx == 3384:
            t21910 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * np.exp((1j) * (4 * phi1 - 13 * phi2)) * np.sqrt(0.124982e6) * ((1 - t21910) ** (0.17e2 / 0.2e1)) * ((1 + t21910) ** (0.9e1 / 0.2e1))

        if Bindx == 3385:
            t21911 = np.cos(phi)
            t21918 = -1 + t21911
            t21917 = 1 + t21911
            t21915 = t21917 ** 2
            t21912 = t21918 ** 2
            t21913 = t21912 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((4*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.4807e4) * t21913 ** 2 * t21915 ** 2 * (4 + 13 * t21911)

        if Bindx == 3386:
            t21919 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * np.exp((1j) * (4 * phi1 - 11 * phi2)) * np.sqrt(0.9614e4) * ((1 - t21919) ** (0.15e2 / 0.2e1)) * ((1 + t21919) ** (0.7e1 / 0.2e1)) * (19 + (200 + 325 * t21919) * t21919)

        if Bindx == 3387:
            t21930 = np.sin(phi)
            t21927 = t21930 ** 2
            t21928 = t21930 * t21927
            t21920 = np.cos(phi)
            t21921 = t21920 ** 2
            t21922 = t21920 * t21921
            t21925 = t21922 ** 2
            t21923 = t21921 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.4807e4) * t21928 ** 2 * (60 * t21921 - 525 * t21922 + 270 * t21923 - 1000 * t21925 - 2 + (807 * t21923 + 325 * t21925 + 65) * t21920)

        if Bindx == 3388:
            t21931 = np.cos(phi)
            t21932 = t21931 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (4 * phi1 - 9 * phi2)) * np.sqrt(0.209e3) * ((1 - t21931) ** (0.13e2 / 0.2e1)) * ((1 + t21931) ** (0.5e1 / 0.2e1)) * (-184 * t21931 - 73 + (9200 * t21931 + 2622 + 7475 * t21932) * t21932)

        if Bindx == 3389:
            t21946 = np.sin(phi)
            t21944 = t21946 ** 2
            t21935 = np.cos(phi)
            t21936 = t21935 ** 2
            t21938 = t21936 ** 2
            t21942 = t21938 ** 2
            t21937 = t21935 * t21936
            t21940 = t21937 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((4*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.190e3) * t21944 ** 2 * (1960 * t21936 + 9004 * t21937 - 16056 * t21938 + 46552 * t21940 - 40480 * t21942 - 40 + (-23826 * t21938 + 7084 * t21940 + 16445 * t21942 - 643) * t21935)

        if Bindx == 3390:
            t21947 = np.cos(phi)
            t21948 = t21947 ** 2
            t21950 = t21948 ** 2
            t21949 = t21947 * t21948
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (4 * phi1 - 7 * phi2)) * np.sqrt(0.665e3) * ((1 - t21947) ** (0.11e2 / 0.2e1)) * ((1 + t21947) ** (0.3e1 / 0.2e1)) * (-2409 * t21948 + 14421 * t21950 + 23 + (-2024 + 16445 * t21949) * t21949 + (30360 * t21950 - 240) * t21947)

        if Bindx == 3391:
            t21954 = np.cos(phi)
            t21955 = t21954 ** 2
            t21957 = t21955 ** 2
            t21958 = t21954 * t21957
            t21963 = t21958 ** 2
            t21961 = t21957 ** 2
            t21956 = t21954 * t21955
            t21959 = t21956 ** 2
            t21953 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.19e2) * t21953 ** 2 * (-6784 * t21955 - 6899 * t21956 + 66396 * t21957 + 20762 * t21958 - 224728 * t21959 + 312202 * t21961 - 151800 * t21963 + 106 + (22242 * t21959 - 114103 * t21961 + 82225 * t21963 + 381) * t21954)

        if Bindx == 3392:
            t21965 = np.cos(phi)
            t21966 = t21965 ** 2
            t21967 = t21965 * t21966
            t21970 = t21967 ** 2
            t21968 = t21966 ** 2
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.2e1) * ((1 - t21965) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t21965)) * (61180 * t21966 - 212800 * t21967 + 2557324 * t21970 + 43 + (-1067990 + 1562275 * t21968) * t21968 + (-538384 * t21968 + 3845600 * t21970 + 16112) * t21965)

        if Bindx == 3393:
            t21973 = np.cos(phi)
            t21974 = t21973 ** 2
            t21975 = t21973 * t21974
            t21978 = t21975 ** 2
            t21984 = t21978 ** 2
            t21976 = t21974 ** 2
            t21977 = t21973 * t21976
            t21982 = t21977 ** 2
            t21980 = t21976 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((4*1j) * (phi1 - phi2)) * (65700 * t21974 - 100650 * t21975 - 780360 * t21976 + 804429 * t21977 + 3347496 * t21978 - 6460380 * t21980 + 5749172 * t21982 - 1922800 * t21984 - 876 + (-2917260 * t21978 + 5292925 * t21980 - 4643562 * t21982 + 1562275 * t21984 + 3891) * t21973)

        if Bindx == 3394:
            t21986 = np.cos(phi)
            t21987 = t21986 ** 2
            t21989 = t21987 ** 2
            t21993 = t21989 ** 2
            t21988 = t21986 * t21987
            t21991 = t21988 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * np.exp((1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.170e3) * ((1 - t21986) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t21986)) * (2052 * t21987 + 46284 * t21988 + 45486 * t21989 - 403788 * t21991 + 648945 * t21993 - 87 + (-237006 * t21989 + 173052 * t21991 + 312455 * t21993 - 1665) * t21986)

        if Bindx == 3395:
            t21996 = np.cos(phi)
            t21997 = t21996 ** 2
            t21999 = t21997 ** 2
            t22000 = t21996 * t21999
            t22005 = t22000 ** 2
            t22003 = t21999 ** 2
            t21998 = t21996 * t21997
            t22001 = t21998 ** 2
            t21995 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.1870e4) * t21995 ** 2 * (-480 * t21997 + 2865 * t21998 + 5700 * t21999 - 19950 * t22000 - 22344 * t22001 + 34086 * t22003 - 17480 * t22005 + 6 + (55290 * t22001 - 65987 * t22003 + 28405 * t22005 - 111) * t21996)

        if Bindx == 3396:
            t22007 = np.cos(phi)
            t22008 = t22007 ** 2
            t22010 = t22008 ** 2
            t22014 = t22010 ** 2
            t22009 = t22007 * t22008
            t22012 = t22009 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (4 * phi1 - phi2)) * np.sqrt(0.374e3) * ((1 - t22007) ** (0.5e1 / 0.2e1)) * ((1 + t22007) ** (0.3e1 / 0.2e1)) * (-3420 * t22008 - 7980 * t22009 + 35910 * t22010 - 110124 * t22012 + 98325 * t22014 + 45 + (64638 * t22010 - 173052 * t22012 + 142025 * t22014 + 225) * t22007)

        if Bindx == 3397:
            t22023 = np.sin(phi)
            t22021 = t22023 ** 2
            t22016 = np.cos(phi)
            t22017 = t22016 ** 2
            t22018 = t22017 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((4*1j) * phi1) * np.sqrt(0.17017e5) * t22021 ** 2 * t22016 * (-1140 * t22017 + 45 + (-15732 * t22017 + 7182 + 10925 * t22018) * t22018)

        if Bindx == 3398:
            t22024 = np.cos(phi)
            t22025 = t22024 ** 2
            t22027 = t22025 ** 2
            t22031 = t22027 ** 2
            t22026 = t22024 * t22025
            t22029 = t22026 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (4 * phi1 + phi2)) * np.sqrt(0.374e3) * ((1 - t22024) ** (0.3e1 / 0.2e1)) * ((1 + t22024) ** (0.5e1 / 0.2e1)) * (3420 * t22025 - 7980 * t22026 - 35910 * t22027 + 110124 * t22029 - 98325 * t22031 - 45 + (64638 * t22027 - 173052 * t22029 + 142025 * t22031 + 225) * t22024)

        if Bindx == 3399:
            t22034 = np.cos(phi)
            t22035 = t22034 ** 2
            t22037 = t22035 ** 2
            t22038 = t22034 * t22037
            t22043 = t22038 ** 2
            t22041 = t22037 ** 2
            t22036 = t22034 * t22035
            t22039 = t22036 ** 2
            t22033 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.1870e4) * t22033 ** 2 * (480 * t22035 + 2865 * t22036 - 5700 * t22037 - 19950 * t22038 + 22344 * t22039 - 34086 * t22041 + 17480 * t22043 - 6 + (55290 * t22039 - 65987 * t22041 + 28405 * t22043 - 111) * t22034)

        if Bindx == 3400:
            t22045 = np.cos(phi)
            t22046 = t22045 ** 2
            t22048 = t22046 ** 2
            t22052 = t22048 ** 2
            t22047 = t22045 * t22046
            t22050 = t22047 ** 2
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.170e3) * np.sqrt((1 - t22045)) * ((1 + t22045) ** (0.7e1 / 0.2e1)) * (-2052 * t22046 + 46284 * t22047 - 45486 * t22048 + 403788 * t22050 - 648945 * t22052 + 87 + (-237006 * t22048 + 173052 * t22050 + 312455 * t22052 - 1665) * t22045)

        if Bindx == 3401:
            t22054 = np.cos(phi)
            t22055 = t22054 ** 2
            t22056 = t22054 * t22055
            t22059 = t22056 ** 2
            t22065 = t22059 ** 2
            t22057 = t22055 ** 2
            t22058 = t22054 * t22057
            t22063 = t22058 ** 2
            t22061 = t22057 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((4*1j) * (phi1 + phi2)) * (-65700 * t22055 - 100650 * t22056 + 780360 * t22057 + 804429 * t22058 - 3347496 * t22059 + 6460380 * t22061 - 5749172 * t22063 + 1922800 * t22065 + 876 + (-2917260 * t22059 + 5292925 * t22061 - 4643562 * t22063 + 1562275 * t22065 + 3891) * t22054)

        if Bindx == 3402:
            t22067 = np.cos(phi)
            t22068 = t22067 ** 2
            t22070 = t22068 ** 2
            t22074 = t22070 ** 2
            t22069 = t22067 * t22068
            t22072 = t22069 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * np.exp((1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.2e1) * ((1 + t22067) ** (0.9e1 / 0.2e1)) * (-77292 * t22068 - 151620 * t22069 + 1280790 * t22070 - 2018940 * t22072 - 5407875 * t22074 - 43 + (-1606374 * t22070 + 6402924 * t22072 + 1562275 * t22074 + 16155) * t22067) * ((1 - t22067) ** (-0.1e1 / 0.2e1))

        if Bindx == 3403:
            t22077 = np.cos(phi)
            t22078 = t22077 ** 2
            t22080 = t22078 ** 2
            t22081 = t22077 * t22080
            t22086 = t22081 ** 2
            t22084 = t22080 ** 2
            t22079 = t22077 * t22078
            t22082 = t22079 ** 2
            t22076 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.19e2) * t22076 ** 2 * (6784 * t22078 - 6899 * t22079 - 66396 * t22080 + 20762 * t22081 + 224728 * t22082 - 312202 * t22084 + 151800 * t22086 - 106 + (22242 * t22082 - 114103 * t22084 + 82225 * t22086 + 381) * t22077)

        if Bindx == 3404:
            t22088 = np.cos(phi)
            t22089 = t22088 ** 2
            t22091 = t22089 ** 2
            t22090 = t22088 * t22089
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-2409 * t22089 + 14421 * t22091 + 23 + (2024 + 16445 * t22090) * t22090 + (-30360 * t22091 + 240) * t22088) * ((1 + t22088) ** (0.11e2 / 0.2e1)) * np.sqrt(0.665e3) * np.exp((1j) * (4 * phi1 + 7 * phi2)) * ((1 - t22088) ** (0.3e1 / 0.2e1))

        if Bindx == 3405:
            t22105 = np.sin(phi)
            t22103 = t22105 ** 2
            t22094 = np.cos(phi)
            t22095 = t22094 ** 2
            t22097 = t22095 ** 2
            t22101 = t22097 ** 2
            t22096 = t22094 * t22095
            t22099 = t22096 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((4*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.190e3) * t22103 ** 2 * (-1960 * t22095 + 9004 * t22096 + 16056 * t22097 - 46552 * t22099 + 40480 * t22101 + 40 + (-23826 * t22097 + 7084 * t22099 + 16445 * t22101 - 643) * t22094)

        if Bindx == 3406:
            t22106 = np.cos(phi)
            t22107 = t22106 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (184 * t22106 - 73 + (-9200 * t22106 + 2622 + 7475 * t22107) * t22107) * ((1 + t22106) ** (0.13e2 / 0.2e1)) * np.sqrt(0.209e3) * np.exp((1j) * (4 * phi1 + 9 * phi2)) * ((1 - t22106) ** (0.5e1 / 0.2e1))

        if Bindx == 3407:
            t22120 = np.sin(phi)
            t22117 = t22120 ** 2
            t22118 = t22120 * t22117
            t22110 = np.cos(phi)
            t22111 = t22110 ** 2
            t22112 = t22110 * t22111
            t22115 = t22112 ** 2
            t22113 = t22111 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.4807e4) * t22118 ** 2 * (-60 * t22111 - 525 * t22112 - 270 * t22113 + 1000 * t22115 + 2 + (807 * t22113 + 325 * t22115 + 65) * t22110)

        if Bindx == 3408:
            t22121 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * (19 + (-200 + 325 * t22121) * t22121) * ((1 + t22121) ** (0.15e2 / 0.2e1)) * np.sqrt(0.9614e4) * np.exp((1j) * (4 * phi1 + 11 * phi2)) * ((1 - t22121) ** (0.7e1 / 0.2e1))

        if Bindx == 3409:
            t22130 = np.sin(phi)
            t22127 = t22130 ** 2
            t22128 = t22127 ** 2
            t22122 = np.cos(phi)
            t22123 = t22122 ** 2
            t22125 = t22123 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((4*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.4807e4) * t22128 ** 2 * (28 * t22123 + 48 * t22125 - 4 + (62 * t22123 + 13 * t22125 - 3) * t22122)

        if Bindx == 3410:
            t22131 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * np.exp((1j) * (4 * phi1 + 13 * phi2)) * np.sqrt(0.124982e6) * ((1 - t22131) ** (0.9e1 / 0.2e1)) * ((1 + t22131) ** (0.17e2 / 0.2e1))

        if Bindx == 3411:
            t22132 = np.cos(phi)
            t22140 = -1 + t22132
            t22139 = 1 + t22132
            t22137 = t22139 ** 2
            t22133 = t22140 ** 2
            t22134 = t22133 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((1j) * (5 * phi1 - 13 * phi2)) * np.sqrt(0.62491e5) * t22140 * t22134 ** 2 * t22137 ** 2

        if Bindx == 3412:
            t22141 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * np.exp((1j) * (5 * phi1 - 12 * phi2)) * np.sqrt(0.9614e4) * ((1 - t22141) ** (0.17e2 / 0.2e1)) * ((1 + t22141) ** (0.7e1 / 0.2e1)) * (5 + 13 * t22141)

        if Bindx == 3413:
            t22152 = np.sin(phi)
            t22149 = t22152 ** 2
            t22150 = t22152 * t22149
            t22142 = np.cos(phi)
            t22143 = t22142 ** 2
            t22144 = t22142 * t22143
            t22147 = t22144 ** 2
            t22145 = t22143 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((1j) * (5 * phi1 - 11 * phi2)) * np.sqrt(0.4807e4) * t22150 ** 2 * (555 * t22143 - 505 * t22144 - 935 * t22145 - 1375 * t22147 - 37 + (2037 * t22145 + 325 * t22147 - 65) * t22142)

        if Bindx == 3414:
            t22153 = np.cos(phi)
            t22154 = t22153 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((5*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.9614e4) * ((1 - t22153) ** (0.15e2 / 0.2e1)) * ((1 + t22153) ** (0.5e1 / 0.2e1)) * (375 * t22154 + 5 + (325 * t22154 + 111) * t22153)

        if Bindx == 3415:
            t22167 = np.sin(phi)
            t22165 = t22167 ** 2
            t22156 = np.cos(phi)
            t22157 = t22156 ** 2
            t22159 = t22157 ** 2
            t22163 = t22159 ** 2
            t22158 = t22156 * t22157
            t22161 = t22158 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (5 * phi1 - 9 * phi2)) * np.sqrt(0.418e3) * t22165 ** 2 * (-2196 * t22157 + 8820 * t22158 + 3870 * t22159 + 15180 * t22161 - 25875 * t22163 + 61 + (-28926 * t22159 + 22356 * t22161 + 7475 * t22163 - 765) * t22156)

        if Bindx == 3416:
            t22168 = np.cos(phi)
            t22169 = t22168 ** 2
            t22171 = t22169 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (5 * phi1 - 8 * phi2)) * np.sqrt(0.95e2) * ((1 - t22168) ** (0.13e2 / 0.2e1)) * ((1 + t22168) ** (0.3e1 / 0.2e1)) * (2530 * t22169 + 31625 * t22171 - 107 + (18722 * t22169 + 16445 * t22171 - 671) * t22168)

        if Bindx == 3417:
            t22174 = np.cos(phi)
            t22175 = t22174 ** 2
            t22177 = t22175 ** 2
            t22178 = t22174 * t22177
            t22183 = t22178 ** 2
            t22181 = t22177 ** 2
            t22176 = t22174 * t22175
            t22179 = t22176 ** 2
            t22173 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.1330e4) * t22173 ** 2 * (-1007 * t22175 - 8895 * t22176 + 11022 * t22177 + 34926 * t22178 - 47502 * t22179 + 79695 * t22181 - 44275 * t22183 + 19 + (-43758 * t22179 + 2783 * t22181 + 16445 * t22183 + 547) * t22174)

        if Bindx == 3418:
            t22185 = np.cos(phi)
            t22186 = t22185 ** 2
            t22187 = t22185 * t22186
            t22190 = t22187 ** 2
            t22188 = t22186 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (5 * phi1 - 6 * phi2)) * np.sqrt(0.38e2) * ((1 - t22185) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t22185)) * (-11235 * t22186 - 23485 * t22187 + 44275 * t22188 + 221375 * t22190 + 113 + (196581 * t22188 + 82225 * t22190 - 665) * t22185)

        if Bindx == 3419:
            t22192 = np.cos(phi)
            t22193 = t22192 ** 2
            t22194 = t22192 * t22193
            t22197 = t22194 ** 2
            t22203 = t22197 ** 2
            t22195 = t22193 ** 2
            t22196 = t22192 * t22195
            t22201 = t22196 ** 2
            t22199 = t22195 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((5*1j) * (phi1 - phi2)) * (118470 * t22193 + 162730 * t22194 - 1285585 * t22195 - 705195 * t22196 + 5251524 * t22197 - 9975285 * t22199 + 8892950 * t22201 - 3004375 * t22203 - 1795 + (505020 * t22197 + 1919665 * t22199 - 3432198 * t22201 + 1562275 * t22203 - 8201) * t22192)

        if Bindx == 3420:
            t22205 = np.cos(phi)
            t22206 = t22205 ** 2
            t22207 = t22205 * t22206
            t22210 = t22207 ** 2
            t22208 = t22206 ** 2
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.2e1) * ((1 - t22205) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t22205)) * (61180 * t22206 - 212800 * t22207 + 2557324 * t22210 + 43 + (-1067990 + 1562275 * t22208) * t22208 + (-538384 * t22208 + 3845600 * t22210 + 16112) * t22205)

        if Bindx == 3421:
            t22214 = np.cos(phi)
            t22215 = t22214 ** 2
            t22217 = t22215 ** 2
            t22218 = t22214 * t22217
            t22223 = t22218 ** 2
            t22221 = t22217 ** 2
            t22216 = t22214 * t22215
            t22219 = t22216 ** 2
            t22213 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.85e2) * t22213 ** 2 * (-13505 * t22215 + 24515 * t22216 + 146490 * t22217 - 171038 * t22218 - 526946 * t22219 + 745085 * t22221 - 360525 * t22223 + 185 + (502854 * t22219 - 658559 * t22221 + 312455 * t22223 - 1011) * t22214)

        if Bindx == 3422:
            t22225 = np.cos(phi)
            t22226 = t22225 ** 2
            t22227 = t22225 * t22226
            t22230 = t22227 ** 2
            t22228 = t22226 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.935e3) * ((1 - t22225) ** (0.7e1 / 0.2e1)) * ((1 + t22225) ** (0.3e1 / 0.2e1)) * (532 * t22226 + 4256 * t22227 - 12236 * t22230 - 11 + (-1330 + 28405 * t22228) * t22228 + (-24472 * t22228 + 34960 * t22230 - 152) * t22225)

        if Bindx == 3423:
            t22244 = np.sin(phi)
            t22242 = t22244 ** 2
            t22233 = np.cos(phi)
            t22234 = t22233 ** 2
            t22236 = t22234 ** 2
            t22240 = t22236 ** 2
            t22235 = t22233 * t22234
            t22238 = t22235 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((1j) * (5 * phi1 - phi2)) * np.sqrt(0.187e3) * t22242 ** 2 * (1900 * t22234 - 18620 * t22235 - 19950 * t22236 + 61180 * t22238 - 54625 * t22240 - 25 + (109326 * t22236 - 221996 * t22238 + 142025 * t22240 + 785) * t22233)

        if Bindx == 3424:
            t22245 = np.cos(phi)
            t22246 = t22245 ** 2
            t22247 = t22246 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.34034e5) * ((1 - t22245) ** (0.5e1 / 0.2e1)) * ((1 + t22245) ** (0.5e1 / 0.2e1)) * (-380 * t22246 + 5 + (-12236 * t22246 + 3990 + 10925 * t22247) * t22247)

        if Bindx == 3425:
            t22261 = np.sin(phi)
            t22259 = t22261 ** 2
            t22250 = np.cos(phi)
            t22251 = t22250 ** 2
            t22253 = t22251 ** 2
            t22257 = t22253 ** 2
            t22252 = t22250 * t22251
            t22255 = t22252 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((1j) * (5 * phi1 + phi2)) * np.sqrt(0.187e3) * t22259 ** 2 * (-1900 * t22251 - 18620 * t22252 + 19950 * t22253 - 61180 * t22255 + 54625 * t22257 + 25 + (109326 * t22253 - 221996 * t22255 + 142025 * t22257 + 785) * t22250)

        if Bindx == 3426:
            t22262 = np.cos(phi)
            t22263 = t22262 ** 2
            t22264 = t22262 * t22263
            t22267 = t22264 ** 2
            t22265 = t22263 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.935e3) * ((1 - t22262) ** (0.3e1 / 0.2e1)) * ((1 + t22262) ** (0.7e1 / 0.2e1)) * (532 * t22263 - 4256 * t22264 - 12236 * t22267 - 11 + (-1330 + 28405 * t22265) * t22265 + (24472 * t22265 - 34960 * t22267 + 152) * t22262)

        if Bindx == 3427:
            t22271 = np.cos(phi)
            t22272 = t22271 ** 2
            t22274 = t22272 ** 2
            t22275 = t22271 * t22274
            t22280 = t22275 ** 2
            t22278 = t22274 ** 2
            t22273 = t22271 * t22272
            t22276 = t22273 ** 2
            t22270 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.85e2) * t22270 ** 2 * (13505 * t22272 + 24515 * t22273 - 146490 * t22274 - 171038 * t22275 + 526946 * t22276 - 745085 * t22278 + 360525 * t22280 - 185 + (502854 * t22276 - 658559 * t22278 + 312455 * t22280 - 1011) * t22271)

        if Bindx == 3428:
            t22282 = np.cos(phi)
            t22283 = t22282 ** 2
            t22284 = t22282 * t22283
            t22287 = t22284 ** 2
            t22285 = t22283 ** 2
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t22282)) * ((1 + t22282) ** (0.9e1 / 0.2e1)) * (61180 * t22283 + 212800 * t22284 + 2557324 * t22287 + 43 + (-1067990 + 1562275 * t22285) * t22285 + (538384 * t22285 - 3845600 * t22287 - 16112) * t22282)

        if Bindx == 3429:
            t22290 = np.cos(phi)
            t22291 = t22290 ** 2
            t22292 = t22290 * t22291
            t22295 = t22292 ** 2
            t22301 = t22295 ** 2
            t22293 = t22291 ** 2
            t22294 = t22290 * t22293
            t22299 = t22294 ** 2
            t22297 = t22293 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((5*1j) * (phi1 + phi2)) * (-118470 * t22291 + 162730 * t22292 + 1285585 * t22293 - 705195 * t22294 - 5251524 * t22295 + 9975285 * t22297 - 8892950 * t22299 + 3004375 * t22301 + 1795 + (505020 * t22295 + 1919665 * t22297 - 3432198 * t22299 + 1562275 * t22301 - 8201) * t22290)

        if Bindx == 3430:
            t22303 = np.cos(phi)
            t22304 = t22303 ** 2
            t22305 = t22303 * t22304
            t22308 = t22305 ** 2
            t22306 = t22304 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.38e2) * ((1 + t22303) ** (0.11e2 / 0.2e1)) * (-11900 * t22304 + 34720 * t22305 + 417956 * t22308 + 113 + (20790 + 82225 * t22306) * t22306 + (-240856 * t22306 - 303600 * t22308 + 552) * t22303) * ((1 - t22303) ** (-0.1e1 / 0.2e1))

        if Bindx == 3431:
            t22312 = np.cos(phi)
            t22313 = t22312 ** 2
            t22315 = t22313 ** 2
            t22316 = t22312 * t22315
            t22321 = t22316 ** 2
            t22319 = t22315 ** 2
            t22314 = t22312 * t22313
            t22317 = t22314 ** 2
            t22311 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.1330e4) * t22311 ** 2 * (1007 * t22313 - 8895 * t22314 - 11022 * t22315 + 34926 * t22316 + 47502 * t22317 - 79695 * t22319 + 44275 * t22321 - 19 + (-43758 * t22317 + 2783 * t22319 + 16445 * t22321 + 547) * t22312)

        if Bindx == 3432:
            t22323 = np.cos(phi)
            t22324 = t22323 ** 2
            t22326 = t22324 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (-2530 * t22324 - 31625 * t22326 + 107 + (18722 * t22324 + 16445 * t22326 - 671) * t22323) * ((1 + t22323) ** (0.13e2 / 0.2e1)) * np.sqrt(0.95e2) * np.exp((1j) * (5 * phi1 + 8 * phi2)) * ((1 - t22323) ** (0.3e1 / 0.2e1))

        if Bindx == 3433:
            t22339 = np.sin(phi)
            t22337 = t22339 ** 2
            t22328 = np.cos(phi)
            t22329 = t22328 ** 2
            t22331 = t22329 ** 2
            t22335 = t22331 ** 2
            t22330 = t22328 * t22329
            t22333 = t22330 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (5 * phi1 + 9 * phi2)) * np.sqrt(0.418e3) * t22337 ** 2 * (2196 * t22329 + 8820 * t22330 - 3870 * t22331 - 15180 * t22333 + 25875 * t22335 - 61 + (-28926 * t22331 + 22356 * t22333 + 7475 * t22335 - 765) * t22328)

        if Bindx == 3434:
            t22340 = np.cos(phi)
            t22341 = t22340 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (-375 * t22341 - 5 + (325 * t22341 + 111) * t22340) * ((1 + t22340) ** (0.15e2 / 0.2e1)) * np.sqrt(0.9614e4) * np.exp((5*1j) * (phi1 + 2 * phi2)) * ((1 - t22340) ** (0.5e1 / 0.2e1))

        if Bindx == 3435:
            t22353 = np.sin(phi)
            t22350 = t22353 ** 2
            t22351 = t22353 * t22350
            t22343 = np.cos(phi)
            t22344 = t22343 ** 2
            t22345 = t22343 * t22344
            t22348 = t22345 ** 2
            t22346 = t22344 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((1j) * (5 * phi1 + 11 * phi2)) * np.sqrt(0.4807e4) * t22351 ** 2 * (-555 * t22344 - 505 * t22345 + 935 * t22346 + 1375 * t22348 + 37 + (2037 * t22346 + 325 * t22348 - 65) * t22343)

        if Bindx == 3436:
            t22354 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.8192e4*1j) * (-5 + 13 * t22354) * ((1 + t22354) ** (0.17e2 / 0.2e1)) * np.sqrt(0.9614e4) * np.exp((1j) * (5 * phi1 + 12 * phi2)) * ((1 - t22354) ** (0.7e1 / 0.2e1))

        if Bindx == 3437:
            t22355 = np.cos(phi)
            t22363 = -1 + t22355
            t22362 = 1 + t22355
            t22358 = t22362 ** 2
            t22359 = t22358 ** 2
            t22356 = t22363 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((1j) * (5 * phi1 + 13 * phi2)) * np.sqrt(0.62491e5) * t22356 ** 2 * t22362 * t22359 ** 2

        if Bindx == 3438:
            t22364 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((1j) * (6 * phi1 - 13 * phi2)) * np.sqrt(0.6578e4) * ((1 - t22364) ** (0.19e2 / 0.2e1)) * ((1 + t22364) ** (0.7e1 / 0.2e1))

        if Bindx == 3439:
            t22365 = np.cos(phi)
            t22373 = -1 + t22365
            t22372 = 1 + t22365
            t22370 = t22372 ** 2
            t22366 = t22373 ** 2
            t22367 = t22366 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((6*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.253e3) * t22373 * t22367 ** 2 * t22372 * t22370 * (6 + 13 * t22365)

        if Bindx == 3440:
            t22374 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (6 * phi1 - 11 * phi2)) * np.sqrt(0.506e3) * ((1 - t22374) ** (0.17e2 / 0.2e1)) * ((1 + t22374) ** (0.5e1 / 0.2e1)) * (59 + (300 + 325 * t22374) * t22374)

        if Bindx == 3441:
            t22386 = np.sin(phi)
            t22384 = t22386 ** 2
            t22375 = np.cos(phi)
            t22376 = t22375 ** 2
            t22378 = t22376 ** 2
            t22382 = t22378 ** 2
            t22377 = t22375 * t22376
            t22380 = t22377 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.253e3) * t22384 ** 2 * (-357 * t22376 - 60 * t22377 + 1515 * t22378 - 795 * t22380 - 1500 * t22382 + 17 + (-1572 * t22378 + 2352 * t22380 + 325 * t22382 + 75) * t22375)

        if Bindx == 3442:
            t22387 = np.cos(phi)
            t22388 = t22387 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((3*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.11e2) * ((1 - t22387) ** (0.15e2 / 0.2e1)) * ((1 + t22387) ** (0.3e1 / 0.2e1)) * (1564 * t22387 + 27 + (13800 * t22387 + 8142 + 7475 * t22388) * t22388)

        if Bindx == 3443:
            t22392 = np.cos(phi)
            t22393 = t22392 ** 2
            t22395 = t22393 ** 2
            t22396 = t22392 * t22395
            t22401 = t22396 ** 2
            t22399 = t22395 ** 2
            t22394 = t22392 * t22393
            t22397 = t22394 ** 2
            t22391 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.10e2) * t22391 ** 2 * (4960 * t22393 - 14823 * t22394 - 19944 * t22395 + 69714 * t22396 + 624 * t22397 + 69828 * t22399 - 60720 * t22401 - 124 + (-115830 * t22397 + 48829 * t22399 + 16445 * t22401 + 1041) * t22392)

        if Bindx == 3444:
            t22403 = np.cos(phi)
            t22404 = t22403 ** 2
            t22406 = t22404 ** 2
            t22405 = t22403 * t22404
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (6 * phi1 - 7 * phi2)) * np.sqrt(0.35e2) * ((1 - t22403) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t22403)) * (891 * t22404 + 44781 * t22406 - 85 + (17204 + 16445 * t22405) * t22405 + (45540 * t22406 - 744) * t22403)

        if Bindx == 3445:
            t22409 = np.cos(phi)
            t22410 = t22409 ** 2
            t22411 = t22409 * t22410
            t22414 = t22411 ** 2
            t22420 = t22414 ** 2
            t22412 = t22410 ** 2
            t22413 = t22409 * t22412
            t22418 = t22413 ** 2
            t22416 = t22412 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((6*1j) * (phi1 - phi2)) * (3795 * t22410 + 45270 * t22411 - 48670 * t22412 - 217629 * t22413 + 257454 * t22414 - 595305 * t22416 + 609983 * t22418 - 227700 * t22420 - 69 + (410700 * t22414 - 270435 * t22416 - 47058 * t22418 + 82225 * t22420 - 2561) * t22409)

        if Bindx == 3446:
            t22422 = np.cos(phi)
            t22423 = t22422 ** 2
            t22424 = t22422 * t22423
            t22427 = t22424 ** 2
            t22425 = t22423 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (6 * phi1 - 5 * phi2)) * np.sqrt(0.38e2) * ((1 - t22422) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t22422)) * (-11235 * t22423 - 23485 * t22424 + 44275 * t22425 + 221375 * t22427 + 113 + (196581 * t22425 + 82225 * t22427 - 665) * t22422)

        if Bindx == 3447:
            t22430 = np.cos(phi)
            t22431 = t22430 ** 2
            t22433 = t22431 ** 2
            t22434 = t22430 * t22433
            t22439 = t22434 ** 2
            t22437 = t22433 ** 2
            t22432 = t22430 * t22431
            t22435 = t22432 ** 2
            t22429 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.19e2) * t22429 ** 2 * (-6784 * t22431 - 6899 * t22432 + 66396 * t22433 + 20762 * t22434 - 224728 * t22435 + 312202 * t22437 - 151800 * t22439 + 106 + (22242 * t22435 - 114103 * t22437 + 82225 * t22439 + 381) * t22430)

        if Bindx == 3448:
            t22441 = np.cos(phi)
            t22442 = t22441 ** 2
            t22443 = t22441 * t22442
            t22446 = t22443 ** 2
            t22444 = t22442 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((3*1j) * (2 * phi1 - phi2)) * np.sqrt(0.3230e4) * ((1 - t22441) ** (0.9e1 / 0.2e1)) * ((1 + t22441) ** (0.3e1 / 0.2e1)) * (399 * t22442 - 3465 * t22443 - 8855 * t22444 + 26565 * t22446 + 3 + (5313 * t22444 + 16445 * t22446 + 203) * t22441)

        if Bindx == 3449:
            t22459 = np.sin(phi)
            t22457 = t22459 ** 2
            t22448 = np.cos(phi)
            t22449 = t22448 ** 2
            t22451 = t22449 ** 2
            t22455 = t22451 ** 2
            t22450 = t22448 * t22449
            t22453 = t22450 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.35530e5) * t22457 ** 2 * (69 * t22449 - 196 * t22450 - 651 * t22451 + 1771 * t22453 - 1380 * t22455 - 1 + (1092 * t22451 - 2208 * t22453 + 1495 * t22455 + 9) * t22448)

        if Bindx == 3450:
            t22460 = np.cos(phi)
            t22461 = t22460 ** 2
            t22462 = t22460 * t22461
            t22465 = t22462 ** 2
            t22463 = t22461 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (6 * phi1 - phi2)) * np.sqrt(0.7106e4) * ((1 - t22460) ** (0.7e1 / 0.2e1)) * ((1 + t22460) ** (0.5e1 / 0.2e1)) * (315 * t22461 + 945 * t22462 - 2415 * t22463 + 4025 * t22465 - 5 + (-5313 * t22463 + 7475 * t22465 - 35) * t22460)

        if Bindx == 3451:
            t22474 = np.sin(phi)
            t22471 = t22474 ** 2
            t22472 = t22474 * t22471
            t22467 = np.cos(phi)
            t22468 = t22467 ** 2
            t22469 = t22468 ** 2
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((6*1j) * phi1) * np.sqrt(0.323323e6) * t22472 ** 2 * t22467 * (-483 * t22469 - 5 + (575 * t22469 + 105) * t22468)

        if Bindx == 3452:
            t22475 = np.cos(phi)
            t22476 = t22475 ** 2
            t22477 = t22475 * t22476
            t22480 = t22477 ** 2
            t22478 = t22476 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (6 * phi1 + phi2)) * np.sqrt(0.7106e4) * ((1 - t22475) ** (0.5e1 / 0.2e1)) * ((1 + t22475) ** (0.7e1 / 0.2e1)) * (-315 * t22476 + 945 * t22477 + 2415 * t22478 - 4025 * t22480 + 5 + (-5313 * t22478 + 7475 * t22480 - 35) * t22475)

        if Bindx == 3453:
            t22493 = np.sin(phi)
            t22491 = t22493 ** 2
            t22482 = np.cos(phi)
            t22483 = t22482 ** 2
            t22485 = t22483 ** 2
            t22489 = t22485 ** 2
            t22484 = t22482 * t22483
            t22487 = t22484 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.35530e5) * t22491 ** 2 * (-69 * t22483 - 196 * t22484 + 651 * t22485 - 1771 * t22487 + 1380 * t22489 + 1 + (1092 * t22485 - 2208 * t22487 + 1495 * t22489 + 9) * t22482)

        if Bindx == 3454:
            t22494 = np.cos(phi)
            t22495 = t22494 ** 2
            t22496 = t22494 * t22495
            t22499 = t22496 ** 2
            t22497 = t22495 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((3*1j) * (2 * phi1 + phi2)) * np.sqrt(0.3230e4) * ((1 - t22494) ** (0.3e1 / 0.2e1)) * ((1 + t22494) ** (0.9e1 / 0.2e1)) * (-399 * t22495 - 3465 * t22496 + 8855 * t22497 - 26565 * t22499 - 3 + (5313 * t22497 + 16445 * t22499 + 203) * t22494)

        if Bindx == 3455:
            t22502 = np.cos(phi)
            t22503 = t22502 ** 2
            t22505 = t22503 ** 2
            t22506 = t22502 * t22505
            t22511 = t22506 ** 2
            t22509 = t22505 ** 2
            t22504 = t22502 * t22503
            t22507 = t22504 ** 2
            t22501 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.19e2) * t22501 ** 2 * (6784 * t22503 - 6899 * t22504 - 66396 * t22505 + 20762 * t22506 + 224728 * t22507 - 312202 * t22509 + 151800 * t22511 - 106 + (22242 * t22507 - 114103 * t22509 + 82225 * t22511 + 381) * t22502)

        if Bindx == 3456:
            t22513 = np.cos(phi)
            t22514 = t22513 ** 2
            t22515 = t22513 * t22514
            t22518 = t22515 ** 2
            t22516 = t22514 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.38e2) * np.sqrt((1 - t22513)) * ((1 + t22513) ** (0.11e2 / 0.2e1)) * (11235 * t22514 - 23485 * t22515 - 44275 * t22516 - 221375 * t22518 - 113 + (196581 * t22516 + 82225 * t22518 - 665) * t22513)

        if Bindx == 3457:
            t22520 = np.cos(phi)
            t22521 = t22520 ** 2
            t22522 = t22520 * t22521
            t22525 = t22522 ** 2
            t22531 = t22525 ** 2
            t22523 = t22521 ** 2
            t22524 = t22520 * t22523
            t22529 = t22524 ** 2
            t22527 = t22523 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((6*1j) * (phi1 + phi2)) * (-3795 * t22521 + 45270 * t22522 + 48670 * t22523 - 217629 * t22524 - 257454 * t22525 + 595305 * t22527 - 609983 * t22529 + 227700 * t22531 + 69 + (410700 * t22525 - 270435 * t22527 - 47058 * t22529 + 82225 * t22531 - 2561) * t22520)

        if Bindx == 3458:
            t22533 = np.cos(phi)
            t22534 = t22533 ** 2
            t22535 = t22533 * t22534
            t22538 = t22535 ** 2
            t22536 = t22534 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.35e2) * ((1 + t22533) ** (0.13e2 / 0.2e1)) * (-147 * t22534 + 18095 * t22535 - 61985 * t22536 - 61985 * t22538 + 85 + (90321 * t22536 + 16445 * t22538 - 829) * t22533) * ((1 - t22533) ** (-0.1e1 / 0.2e1))

        if Bindx == 3459:
            t22541 = np.cos(phi)
            t22542 = t22541 ** 2
            t22544 = t22542 ** 2
            t22545 = t22541 * t22544
            t22550 = t22545 ** 2
            t22548 = t22544 ** 2
            t22543 = t22541 * t22542
            t22546 = t22543 ** 2
            t22540 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.10e2) * t22540 ** 2 * (-4960 * t22542 - 14823 * t22543 + 19944 * t22544 + 69714 * t22545 - 624 * t22546 - 69828 * t22548 + 60720 * t22550 + 124 + (-115830 * t22546 + 48829 * t22548 + 16445 * t22550 + 1041) * t22541)

        if Bindx == 3460:
            t22552 = np.cos(phi)
            t22553 = t22552 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (-1564 * t22552 + 27 + (-13800 * t22552 + 8142 + 7475 * t22553) * t22553) * ((1 + t22552) ** (0.15e2 / 0.2e1)) * np.sqrt(0.11e2) * np.exp((3*1j) * (2 * phi1 + 3 * phi2)) * ((1 - t22552) ** (0.3e1 / 0.2e1))

        if Bindx == 3461:
            t22567 = np.sin(phi)
            t22565 = t22567 ** 2
            t22556 = np.cos(phi)
            t22557 = t22556 ** 2
            t22559 = t22557 ** 2
            t22563 = t22559 ** 2
            t22558 = t22556 * t22557
            t22561 = t22558 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((2*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.253e3) * t22565 ** 2 * (357 * t22557 - 60 * t22558 - 1515 * t22559 + 795 * t22561 + 1500 * t22563 - 17 + (-1572 * t22559 + 2352 * t22561 + 325 * t22563 + 75) * t22556)

        if Bindx == 3462:
            t22568 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (59 + (-300 + 325 * t22568) * t22568) * ((1 + t22568) ** (0.17e2 / 0.2e1)) * np.sqrt(0.506e3) * np.exp((1j) * (6 * phi1 + 11 * phi2)) * ((1 - t22568) ** (0.5e1 / 0.2e1))

        if Bindx == 3463:
            t22569 = np.cos(phi)
            t22577 = -1 + t22569
            t22576 = 1 + t22569
            t22572 = t22576 ** 2
            t22573 = t22572 ** 2
            t22570 = t22577 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((6*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.253e3) * t22577 * t22570 * t22576 * t22573 ** 2 * (-6 + 13 * t22569)

        if Bindx == 3464:
            t22578 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((1j) * (6 * phi1 + 13 * phi2)) * np.sqrt(0.6578e4) * ((1 - t22578) ** (0.7e1 / 0.2e1)) * ((1 + t22578) ** (0.19e2 / 0.2e1))

        if Bindx == 3465:
            t22579 = np.cos(phi)
            t22587 = -1 + t22579
            t22586 = 1 + t22579
            t22584 = t22586 ** 2
            t22580 = t22587 ** 2
            t22582 = t22587 * t22580 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (7 * phi1 - 13 * phi2)) * np.sqrt(0.230230e6) * t22582 ** 2 * t22586 * t22584

        if Bindx == 3466:
            t22588 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (7 * phi1 - 12 * phi2)) * np.sqrt(0.8855e4) * ((1 - t22588) ** (0.19e2 / 0.2e1)) * ((1 + t22588) ** (0.5e1 / 0.2e1)) * (7 + 13 * t22588)

        if Bindx == 3467:
            t22600 = np.sin(phi)
            t22598 = t22600 ** 2
            t22589 = np.cos(phi)
            t22590 = t22589 ** 2
            t22592 = t22590 ** 2
            t22596 = t22592 ** 2
            t22591 = t22589 * t22590
            t22594 = t22591 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (7 * phi1 - 11 * phi2)) * np.sqrt(0.17710e5) * t22598 ** 2 * (68 * t22590 - 420 * t22591 + 490 * t22592 - 924 * t22594 - 385 * t22596 - 17 + (182 * t22592 + 892 * t22594 + 65 * t22596 + 49) * t22589)

        if Bindx == 3468:
            t22601 = np.cos(phi)
            t22602 = t22601 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (7 * phi1 - 10 * phi2)) * np.sqrt(0.8855e4) * ((1 - t22601) ** (0.17e2 / 0.2e1)) * ((1 + t22601) ** (0.3e1 / 0.2e1)) * (105 * t22602 + 7 + (65 * t22602 + 51) * t22601)

        if Bindx == 3469:
            t22605 = np.cos(phi)
            t22606 = t22605 ** 2
            t22608 = t22606 ** 2
            t22609 = t22605 * t22608
            t22614 = t22609 ** 2
            t22612 = t22608 ** 2
            t22607 = t22605 * t22606
            t22610 = t22607 ** 2
            t22604 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (7 * phi1 - 9 * phi2)) * np.sqrt(0.385e3) * t22604 ** 2 * (1175 * t22606 + 1323 * t22607 - 7326 * t22608 + 3402 * t22609 + 12390 * t22610 - 483 * t22612 - 7245 * t22614 - 47 + (-15570 * t22610 + 11201 * t22612 + 1495 * t22614 - 315) * t22605)

        if Bindx == 3470:
            t22616 = np.cos(phi)
            t22617 = t22616 ** 2
            t22619 = t22617 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (7 * phi1 - 8 * phi2)) * np.sqrt(0.14e2) * ((1 - t22616) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t22616)) * (17710 * t22617 + 44275 * t22619 + 7 + (43010 * t22617 + 16445 * t22619 + 2585) * t22616)

        if Bindx == 3471:
            t22621 = np.cos(phi)
            t22622 = t22621 ** 2
            t22623 = t22621 * t22622
            t22626 = t22623 ** 2
            t22632 = t22626 ** 2
            t22624 = t22622 ** 2
            t22625 = t22621 * t22624
            t22630 = t22625 ** 2
            t22628 = t22624 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((7*1j) * (phi1 - phi2)) * (-34818 * t22622 + 96866 * t22623 + 183295 * t22624 - 545139 * t22625 - 205548 * t22626 - 379701 * t22628 + 867790 * t22630 - 433895 * t22632 + 829 + (1261068 * t22626 - 1185415 * t22628 + 265650 * t22630 + 115115 * t22632 - 6097) * t22621)

        if Bindx == 3472:
            t22634 = np.cos(phi)
            t22635 = t22634 ** 2
            t22637 = t22635 ** 2
            t22636 = t22634 * t22635
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (7 * phi1 - 6 * phi2)) * np.sqrt(0.35e2) * ((1 - t22634) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t22634)) * (891 * t22635 + 44781 * t22637 - 85 + (17204 + 16445 * t22636) * t22636 + (45540 * t22637 - 744) * t22634)

        if Bindx == 3473:
            t22641 = np.cos(phi)
            t22642 = t22641 ** 2
            t22644 = t22642 ** 2
            t22645 = t22641 * t22644
            t22650 = t22645 ** 2
            t22648 = t22644 ** 2
            t22643 = t22641 * t22642
            t22646 = t22643 ** 2
            t22640 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.1330e4) * t22640 ** 2 * (-1007 * t22642 - 8895 * t22643 + 11022 * t22644 + 34926 * t22645 - 47502 * t22646 + 79695 * t22648 - 44275 * t22650 + 19 + (-43758 * t22646 + 2783 * t22648 + 16445 * t22650 + 547) * t22641)

        if Bindx == 3474:
            t22652 = np.cos(phi)
            t22653 = t22652 ** 2
            t22655 = t22653 ** 2
            t22654 = t22652 * t22653
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (7 * phi1 - 4 * phi2)) * np.sqrt(0.665e3) * ((1 - t22652) ** (0.11e2 / 0.2e1)) * ((1 + t22652) ** (0.3e1 / 0.2e1)) * (-2409 * t22653 + 14421 * t22655 + 23 + (-2024 + 16445 * t22654) * t22654 + (30360 * t22655 - 240) * t22652)

        if Bindx == 3475:
            t22669 = np.sin(phi)
            t22667 = t22669 ** 2
            t22658 = np.cos(phi)
            t22659 = t22658 ** 2
            t22661 = t22659 ** 2
            t22665 = t22661 ** 2
            t22660 = t22658 * t22659
            t22663 = t22660 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.4522e4) * t22667 ** 2 * (1740 * t22659 + 292 * t22660 - 14406 * t22661 + 35420 * t22663 - 26565 * t22665 - 29 + (2310 * t22661 - 15180 * t22663 + 16445 * t22665 - 27) * t22658)

        if Bindx == 3476:
            t22670 = np.cos(phi)
            t22671 = t22670 ** 2
            t22673 = t22671 ** 2
            t22672 = t22670 * t22671
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (7 * phi1 - 2 * phi2)) * np.sqrt(0.49742e5) * ((1 - t22670) ** (0.9e1 / 0.2e1)) * ((1 + t22670) ** (0.5e1 / 0.2e1)) * (-15 * t22671 - 345 * t22673 + 1 + (-460 + 1495 * t22672) * t22672 + (1380 * t22673 + 24) * t22670)

        if Bindx == 3477:
            t22686 = np.sin(phi)
            t22683 = t22686 ** 2
            t22684 = t22686 * t22683
            t22676 = np.cos(phi)
            t22677 = t22676 ** 2
            t22678 = t22676 * t22677
            t22681 = t22678 ** 2
            t22679 = t22677 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (7 * phi1 - phi2)) * np.sqrt(0.248710e6) * t22684 ** 2 * (-63 * t22677 + 357 * t22678 + 483 * t22679 - 805 * t22681 + 1 + (-1449 * t22679 + 1495 * t22681 - 19) * t22676)

        if Bindx == 3478:
            t22687 = np.cos(phi)
            t22688 = t22687 ** 2
            t22689 = t22688 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.230945e6) * ((1 - t22687) ** (0.7e1 / 0.2e1)) * ((1 + t22687) ** (0.7e1 / 0.2e1)) * (-483 * t22689 - 1 + (805 * t22689 + 63) * t22688)

        if Bindx == 3479:
            t22701 = np.sin(phi)
            t22698 = t22701 ** 2
            t22699 = t22701 * t22698
            t22691 = np.cos(phi)
            t22692 = t22691 ** 2
            t22693 = t22691 * t22692
            t22696 = t22693 ** 2
            t22694 = t22692 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (7 * phi1 + phi2)) * np.sqrt(0.248710e6) * t22699 ** 2 * (63 * t22692 + 357 * t22693 - 483 * t22694 + 805 * t22696 - 1 + (-1449 * t22694 + 1495 * t22696 - 19) * t22691)

        if Bindx == 3480:
            t22702 = np.cos(phi)
            t22703 = t22702 ** 2
            t22705 = t22703 ** 2
            t22704 = t22702 * t22703
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (7 * phi1 + 2 * phi2)) * np.sqrt(0.49742e5) * ((1 - t22702) ** (0.5e1 / 0.2e1)) * ((1 + t22702) ** (0.9e1 / 0.2e1)) * (-15 * t22703 - 345 * t22705 + 1 + (460 + 1495 * t22704) * t22704 + (-1380 * t22705 - 24) * t22702)

        if Bindx == 3481:
            t22719 = np.sin(phi)
            t22717 = t22719 ** 2
            t22708 = np.cos(phi)
            t22709 = t22708 ** 2
            t22711 = t22709 ** 2
            t22715 = t22711 ** 2
            t22710 = t22708 * t22709
            t22713 = t22710 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.4522e4) * t22717 ** 2 * (-1740 * t22709 + 292 * t22710 + 14406 * t22711 - 35420 * t22713 + 26565 * t22715 + 29 + (2310 * t22711 - 15180 * t22713 + 16445 * t22715 - 27) * t22708)

        if Bindx == 3482:
            t22720 = np.cos(phi)
            t22721 = t22720 ** 2
            t22723 = t22721 ** 2
            t22722 = t22720 * t22721
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (7 * phi1 + 4 * phi2)) * np.sqrt(0.665e3) * ((1 - t22720) ** (0.3e1 / 0.2e1)) * ((1 + t22720) ** (0.11e2 / 0.2e1)) * (-2409 * t22721 + 14421 * t22723 + 23 + (2024 + 16445 * t22722) * t22722 + (-30360 * t22723 + 240) * t22720)

        if Bindx == 3483:
            t22727 = np.cos(phi)
            t22728 = t22727 ** 2
            t22730 = t22728 ** 2
            t22731 = t22727 * t22730
            t22736 = t22731 ** 2
            t22734 = t22730 ** 2
            t22729 = t22727 * t22728
            t22732 = t22729 ** 2
            t22726 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.1330e4) * t22726 ** 2 * (1007 * t22728 - 8895 * t22729 - 11022 * t22730 + 34926 * t22731 + 47502 * t22732 - 79695 * t22734 + 44275 * t22736 - 19 + (-43758 * t22732 + 2783 * t22734 + 16445 * t22736 + 547) * t22727)

        if Bindx == 3484:
            t22738 = np.cos(phi)
            t22739 = t22738 ** 2
            t22741 = t22739 ** 2
            t22740 = t22738 * t22739
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.35e2) * np.sqrt((1 - t22738)) * ((1 + t22738) ** (0.13e2 / 0.2e1)) * (891 * t22739 + 44781 * t22741 - 85 + (-17204 + 16445 * t22740) * t22740 + (-45540 * t22741 + 744) * t22738)

        if Bindx == 3485:
            t22744 = np.cos(phi)
            t22745 = t22744 ** 2
            t22746 = t22744 * t22745
            t22749 = t22746 ** 2
            t22755 = t22749 ** 2
            t22747 = t22745 ** 2
            t22748 = t22744 * t22747
            t22753 = t22748 ** 2
            t22751 = t22747 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((7*1j) * (phi1 + phi2)) * (34818 * t22745 + 96866 * t22746 - 183295 * t22747 - 545139 * t22748 + 205548 * t22749 + 379701 * t22751 - 867790 * t22753 + 433895 * t22755 - 829 + (1261068 * t22749 - 1185415 * t22751 + 265650 * t22753 + 115115 * t22755 - 6097) * t22744)

        if Bindx == 3486:
            t22757 = np.cos(phi)
            t22758 = t22757 ** 2
            t22760 = t22758 ** 2
            t22759 = t22757 * t22758
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (7 * phi1 + 8 * phi2)) * np.sqrt(0.14e2) * ((1 + t22757) ** (0.15e2 / 0.2e1)) * (20295 * t22758 + 87285 * t22760 + 7 + (-60720 + 16445 * t22759) * t22759 + (-60720 * t22760 - 2592) * t22757) * ((1 - t22757) ** (-0.1e1 / 0.2e1))

        if Bindx == 3487:
            t22764 = np.cos(phi)
            t22765 = t22764 ** 2
            t22767 = t22765 ** 2
            t22768 = t22764 * t22767
            t22773 = t22768 ** 2
            t22771 = t22767 ** 2
            t22766 = t22764 * t22765
            t22769 = t22766 ** 2
            t22763 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (7 * phi1 + 9 * phi2)) * np.sqrt(0.385e3) * t22763 ** 2 * (-1175 * t22765 + 1323 * t22766 + 7326 * t22767 + 3402 * t22768 - 12390 * t22769 + 483 * t22771 + 7245 * t22773 + 47 + (-15570 * t22769 + 11201 * t22771 + 1495 * t22773 - 315) * t22764)

        if Bindx == 3488:
            t22775 = np.cos(phi)
            t22776 = t22775 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * (-105 * t22776 - 7 + (65 * t22776 + 51) * t22775) * ((1 + t22775) ** (0.17e2 / 0.2e1)) * np.sqrt(0.8855e4) * np.exp((1j) * (7 * phi1 + 10 * phi2)) * ((1 - t22775) ** (0.3e1 / 0.2e1))

        if Bindx == 3489:
            t22789 = np.sin(phi)
            t22787 = t22789 ** 2
            t22778 = np.cos(phi)
            t22779 = t22778 ** 2
            t22781 = t22779 ** 2
            t22785 = t22781 ** 2
            t22780 = t22778 * t22779
            t22783 = t22780 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (7 * phi1 + 11 * phi2)) * np.sqrt(0.17710e5) * t22787 ** 2 * (-68 * t22779 - 420 * t22780 - 490 * t22781 + 924 * t22783 + 385 * t22785 + 17 + (182 * t22781 + 892 * t22783 + 65 * t22785 + 49) * t22778)

        if Bindx == 3490:
            t22790 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * (-7 + 13 * t22790) * ((1 + t22790) ** (0.19e2 / 0.2e1)) * np.sqrt(0.8855e4) * np.exp((1j) * (7 * phi1 + 12 * phi2)) * ((1 - t22790) ** (0.5e1 / 0.2e1))

        if Bindx == 3491:
            t22791 = np.cos(phi)
            t22799 = -1 + t22791
            t22798 = 1 + t22791
            t22794 = t22798 ** 2
            t22796 = t22798 * t22794 ** 2
            t22792 = t22799 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (7 * phi1 + 13 * phi2)) * np.sqrt(0.230230e6) * t22799 * t22792 * t22796 ** 2

        if Bindx == 3492:
            t22800 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (8 * phi1 - 13 * phi2)) * np.sqrt(0.16445e5) * ((1 - t22800) ** (0.21e2 / 0.2e1)) * ((1 + t22800) ** (0.5e1 / 0.2e1))

        if Bindx == 3493:
            t22802 = np.cos(phi)
            t22807 = -1 + t22802
            t22803 = t22807 ** 2
            t22805 = t22807 * t22803 ** 2
            t22801 = 1 + t22802
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((4*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.2530e4) * t22805 ** 2 * t22801 ** 2 * (8 + 13 * t22802)

        if Bindx == 3494:
            t22808 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (8 * phi1 - 11 * phi2)) * np.sqrt(0.1265e4) * ((1 - t22808) ** (0.19e2 / 0.2e1)) * ((1 + t22808) ** (0.3e1 / 0.2e1)) * (23 + (80 + 65 * t22808) * t22808)

        if Bindx == 3495:
            t22810 = np.cos(phi)
            t22811 = t22810 ** 2
            t22813 = t22811 ** 2
            t22814 = t22810 * t22813
            t22819 = t22814 ** 2
            t22817 = t22813 ** 2
            t22812 = t22810 * t22811
            t22815 = t22812 ** 2
            t22809 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.2530e4) * t22809 ** 2 * (-96 * t22811 + 365 * t22812 - 184 * t22813 - 742 * t22814 + 1232 * t22815 - 820 * t22817 - 400 * t22819 + 12 + (-334 * t22815 + 929 * t22817 + 65 * t22819 - 27) * t22810)

        if Bindx == 3496:
            t22821 = np.cos(phi)
            t22822 = t22821 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (8 * phi1 - 9 * phi2)) * np.sqrt(0.110e3) * ((1 - t22821) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t22821)) * (1104 * t22821 + 123 + (3680 * t22821 + 3174 + 1495 * t22822) * t22822)

        if Bindx == 3497:
            t22825 = np.cos(phi)
            t22826 = t22825 ** 2
            t22827 = t22825 * t22826
            t22830 = t22827 ** 2
            t22836 = t22830 ** 2
            t22828 = t22826 ** 2
            t22829 = t22825 * t22828
            t22834 = t22829 ** 2
            t22832 = t22828 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((8*1j) * (phi1 - phi2)) * (-11664 * t22826 - 19462 * t22827 + 86560 * t22828 - 9837 * t22829 - 214944 * t22830 + 158832 * t22832 + 60720 * t22834 - 80960 * t22836 + 432 + (185964 * t22830 - 289245 * t22832 + 113850 * t22834 + 16445 * t22836 + 3309) * t22825)

        if Bindx == 3498:
            t22838 = np.cos(phi)
            t22839 = t22838 ** 2
            t22841 = t22839 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (8 * phi1 - 7 * phi2)) * np.sqrt(0.14e2) * ((1 - t22838) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t22838)) * (17710 * t22839 + 44275 * t22841 + 7 + (43010 * t22839 + 16445 * t22841 + 2585) * t22838)

        if Bindx == 3499:
            t22844 = np.cos(phi)
            t22845 = t22844 ** 2
            t22847 = t22845 ** 2
            t22848 = t22844 * t22847
            t22853 = t22848 ** 2
            t22851 = t22847 ** 2
            t22846 = t22844 * t22845
            t22849 = t22846 ** 2
            t22843 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.10e2) * t22843 ** 2 * (4960 * t22845 - 14823 * t22846 - 19944 * t22847 + 69714 * t22848 + 624 * t22849 + 69828 * t22851 - 60720 * t22853 - 124 + (-115830 * t22849 + 48829 * t22851 + 16445 * t22853 + 1041) * t22844)

        if Bindx == 3500:
            t22855 = np.cos(phi)
            t22856 = t22855 ** 2
            t22858 = t22856 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (8 * phi1 - 5 * phi2)) * np.sqrt(0.95e2) * ((1 - t22855) ** (0.13e2 / 0.2e1)) * ((1 + t22855) ** (0.3e1 / 0.2e1)) * (2530 * t22856 + 31625 * t22858 - 107 + (18722 * t22856 + 16445 * t22858 - 671) * t22855)

        if Bindx == 3501:
            t22871 = np.sin(phi)
            t22869 = t22871 ** 2
            t22860 = np.cos(phi)
            t22861 = t22860 ** 2
            t22863 = t22861 ** 2
            t22867 = t22863 ** 2
            t22862 = t22860 * t22861
            t22865 = t22862 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((4*1j) * (2 * phi1 - phi2)) * np.sqrt(0.190e3) * t22869 ** 2 * (1960 * t22861 + 9004 * t22862 - 16056 * t22863 + 46552 * t22865 - 40480 * t22867 - 40 + (-23826 * t22863 + 7084 * t22865 + 16445 * t22867 - 643) * t22860)

        if Bindx == 3502:
            t22872 = np.cos(phi)
            t22873 = t22872 ** 2
            t22875 = t22873 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (8 * phi1 - 3 * phi2)) * np.sqrt(0.323e3) * ((1 - t22872) ** (0.11e2 / 0.2e1)) * ((1 + t22872) ** (0.5e1 / 0.2e1)) * (-2530 * t22873 + 18975 * t22875 + 19 + (2530 * t22873 + 16445 * t22875 - 495) * t22872)

        if Bindx == 3503:
            t22887 = np.sin(phi)
            t22884 = t22887 ** 2
            t22885 = t22887 * t22884
            t22877 = np.cos(phi)
            t22878 = t22877 ** 2
            t22879 = t22877 * t22878
            t22882 = t22879 ** 2
            t22880 = t22878 ** 2
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((2*1j) * (4 * phi1 - phi2)) * np.sqrt(0.3553e4) * t22885 ** 2 * (-216 * t22878 + 225 * t22879 + 1380 * t22880 - 1840 * t22882 + 4 + (-1035 * t22880 + 1495 * t22882 - 13) * t22877)

        if Bindx == 3504:
            t22888 = np.cos(phi)
            t22889 = t22888 ** 2
            t22891 = t22889 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (8 * phi1 - phi2)) * np.sqrt(0.17765e5) * ((1 - t22888) ** (0.9e1 / 0.2e1)) * ((1 + t22888) ** (0.7e1 / 0.2e1)) * (-138 * t22889 + 575 * t22891 + 3 + (-506 * t22889 + 1495 * t22891 + 27) * t22888)

        if Bindx == 3505:
            t22899 = np.sin(phi)
            t22896 = t22899 ** 2
            t22897 = t22896 ** 2
            t22893 = np.cos(phi)
            t22894 = t22893 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((8*1j) * phi1) * np.sqrt(0.3233230e7) * t22897 ** 2 * t22893 * (3 + (-46 + 115 * t22894) * t22894)

        if Bindx == 3506:
            t22900 = np.cos(phi)
            t22901 = t22900 ** 2
            t22903 = t22901 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (8 * phi1 + phi2)) * np.sqrt(0.17765e5) * ((1 - t22900) ** (0.7e1 / 0.2e1)) * ((1 + t22900) ** (0.9e1 / 0.2e1)) * (138 * t22901 - 575 * t22903 - 3 + (-506 * t22901 + 1495 * t22903 + 27) * t22900)

        if Bindx == 3507:
            t22915 = np.sin(phi)
            t22912 = t22915 ** 2
            t22913 = t22915 * t22912
            t22905 = np.cos(phi)
            t22906 = t22905 ** 2
            t22907 = t22905 * t22906
            t22910 = t22907 ** 2
            t22908 = t22906 ** 2
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((2*1j) * (4 * phi1 + phi2)) * np.sqrt(0.3553e4) * t22913 ** 2 * (216 * t22906 + 225 * t22907 - 1380 * t22908 + 1840 * t22910 - 4 + (-1035 * t22908 + 1495 * t22910 - 13) * t22905)

        if Bindx == 3508:
            t22916 = np.cos(phi)
            t22917 = t22916 ** 2
            t22921 = 2530 * t22917
            t22919 = t22917 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (8 * phi1 + 3 * phi2)) * np.sqrt(0.323e3) * ((1 - t22916) ** (0.5e1 / 0.2e1)) * ((1 + t22916) ** (0.11e2 / 0.2e1)) * (-18975 * t22919 + t22921 - 19 + (16445 * t22919 + t22921 - 495) * t22916)

        if Bindx == 3509:
            t22933 = np.sin(phi)
            t22931 = t22933 ** 2
            t22922 = np.cos(phi)
            t22923 = t22922 ** 2
            t22925 = t22923 ** 2
            t22929 = t22925 ** 2
            t22924 = t22922 * t22923
            t22927 = t22924 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((4*1j) * (2 * phi1 + phi2)) * np.sqrt(0.190e3) * t22931 ** 2 * (-1960 * t22923 + 9004 * t22924 + 16056 * t22925 - 46552 * t22927 + 40480 * t22929 + 40 + (-23826 * t22925 + 7084 * t22927 + 16445 * t22929 - 643) * t22922)

        if Bindx == 3510:
            t22934 = np.cos(phi)
            t22935 = t22934 ** 2
            t22937 = t22935 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (8 * phi1 + 5 * phi2)) * np.sqrt(0.95e2) * ((1 - t22934) ** (0.3e1 / 0.2e1)) * ((1 + t22934) ** (0.13e2 / 0.2e1)) * (-2530 * t22935 - 31625 * t22937 + 107 + (18722 * t22935 + 16445 * t22937 - 671) * t22934)

        if Bindx == 3511:
            t22940 = np.cos(phi)
            t22941 = t22940 ** 2
            t22943 = t22941 ** 2
            t22944 = t22940 * t22943
            t22949 = t22944 ** 2
            t22947 = t22943 ** 2
            t22942 = t22940 * t22941
            t22945 = t22942 ** 2
            t22939 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.10e2) * t22939 ** 2 * (-4960 * t22941 - 14823 * t22942 + 19944 * t22943 + 69714 * t22944 - 624 * t22945 - 69828 * t22947 + 60720 * t22949 + 124 + (-115830 * t22945 + 48829 * t22947 + 16445 * t22949 + 1041) * t22940)

        if Bindx == 3512:
            t22951 = np.cos(phi)
            t22952 = t22951 ** 2
            t22954 = t22952 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (8 * phi1 + 7 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t22951)) * ((1 + t22951) ** (0.15e2 / 0.2e1)) * (-17710 * t22952 - 44275 * t22954 - 7 + (43010 * t22952 + 16445 * t22954 + 2585) * t22951)

        if Bindx == 3513:
            t22956 = np.cos(phi)
            t22957 = t22956 ** 2
            t22958 = t22956 * t22957
            t22961 = t22958 ** 2
            t22967 = t22961 ** 2
            t22959 = t22957 ** 2
            t22960 = t22956 * t22959
            t22965 = t22960 ** 2
            t22963 = t22959 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.exp((8*1j) * (phi1 + phi2)) * (11664 * t22957 - 19462 * t22958 - 86560 * t22959 - 9837 * t22960 + 214944 * t22961 - 158832 * t22963 - 60720 * t22965 + 80960 * t22967 - 432 + (185964 * t22961 - 289245 * t22963 + 113850 * t22965 + 16445 * t22967 + 3309) * t22956)

        if Bindx == 3514:
            t22969 = np.cos(phi)
            t22970 = t22969 ** 2
            t22972 = t22970 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (8 * phi1 + 9 * phi2)) * np.sqrt(0.110e3) * ((1 + t22969) ** (0.17e2 / 0.2e1)) * (-4278 * t22970 - 5175 * t22972 - 123 + (6854 * t22970 + 1495 * t22972 + 1227) * t22969) * ((1 - t22969) ** (-0.1e1 / 0.2e1))

        if Bindx == 3515:
            t22975 = np.cos(phi)
            t22976 = t22975 ** 2
            t22978 = t22976 ** 2
            t22979 = t22975 * t22978
            t22984 = t22979 ** 2
            t22982 = t22978 ** 2
            t22977 = t22975 * t22976
            t22980 = t22977 ** 2
            t22974 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.2530e4) * t22974 ** 2 * (96 * t22976 + 365 * t22977 + 184 * t22978 - 742 * t22979 - 1232 * t22980 + 820 * t22982 + 400 * t22984 - 12 + (-334 * t22980 + 929 * t22982 + 65 * t22984 - 27) * t22975)

        if Bindx == 3516:
            t22986 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * (23 + (-80 + 65 * t22986) * t22986) * ((1 + t22986) ** (0.19e2 / 0.2e1)) * np.sqrt(0.1265e4) * np.exp((1j) * (8 * phi1 + 11 * phi2)) * ((1 - t22986) ** (0.3e1 / 0.2e1))

        if Bindx == 3517:
            t22988 = np.cos(phi)
            t22993 = 1 + t22988
            t22989 = t22993 ** 2
            t22991 = t22993 * t22989 ** 2
            t22987 = -1 + t22988
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((4*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.2530e4) * t22987 ** 2 * t22991 ** 2 * (-8 + 13 * t22988)

        if Bindx == 3518:
            t22994 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (8 * phi1 + 13 * phi2)) * np.sqrt(0.16445e5) * ((1 - t22994) ** (0.5e1 / 0.2e1)) * ((1 + t22994) ** (0.21e2 / 0.2e1))

        if Bindx == 3519:
            t22996 = np.cos(phi)
            t23002 = -1 + t22996
            t22997 = t23002 ** 2
            t22999 = t23002 * t22997 ** 2
            t22995 = 1 + t22996
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((1j) * (9 * phi1 - 13 * phi2)) * np.sqrt(0.598e3) * t23002 * t22999 ** 2 * t22995 ** 2

        if Bindx == 3520:
            t23003 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.4096e4*1j) * np.exp((3*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.23e2) * ((1 - t23003) ** (0.21e2 / 0.2e1)) * ((1 + t23003) ** (0.3e1 / 0.2e1)) * (9 + 13 * t23003)

        if Bindx == 3521:
            t23004 = np.cos(phi)
            t23009 = -1 + t23004
            t23005 = t23009 ** 2
            t23007 = t23009 * t23005 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (9 * phi1 - 11 * phi2)) * np.sqrt(0.46e2) * t23007 ** 2 * (1 + t23004) * (149 + (450 + 325 * t23004) * t23004)

        if Bindx == 3522:
            t23010 = np.cos(phi)
            t23011 = t23010 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (9 * phi1 - 10 * phi2)) * np.sqrt(0.23e2) * ((1 - t23010) ** (0.19e2 / 0.2e1)) * np.sqrt((1 + t23010)) * (675 * t23011 + 93 + (325 * t23011 + 447) * t23010)

        if Bindx == 3523:
            t23013 = np.cos(phi)
            t23014 = t23013 ** 2
            t23015 = t23013 * t23014
            t23018 = t23015 ** 2
            t23024 = t23018 ** 2
            t23016 = t23014 ** 2
            t23017 = t23013 * t23016
            t23022 = t23017 ** 2
            t23020 = t23016 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((9*1j) * (phi1 - phi2)) * (12270 * t23014 - 40590 * t23015 + 2695 * t23016 + 125829 * t23017 - 146124 * t23018 + 236115 * t23020 - 59202 * t23022 - 46575 * t23024 - 1227 + (-64020 * t23018 - 132495 * t23020 + 103362 * t23022 + 7475 * t23024 + 2487) * t23013)

        if Bindx == 3524:
            t23026 = np.cos(phi)
            t23027 = t23026 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (9 * phi1 - 8 * phi2)) * np.sqrt(0.110e3) * ((1 - t23026) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t23026)) * (1104 * t23026 + 123 + (3680 * t23026 + 3174 + 1495 * t23027) * t23027)

        if Bindx == 3525:
            t23031 = np.cos(phi)
            t23032 = t23031 ** 2
            t23034 = t23032 ** 2
            t23035 = t23031 * t23034
            t23040 = t23035 ** 2
            t23038 = t23034 ** 2
            t23033 = t23031 * t23032
            t23036 = t23033 ** 2
            t23030 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (9 * phi1 - 7 * phi2)) * np.sqrt(0.385e3) * t23030 ** 2 * (1175 * t23032 + 1323 * t23033 - 7326 * t23034 + 3402 * t23035 + 12390 * t23036 - 483 * t23038 - 7245 * t23040 - 47 + (-15570 * t23036 + 11201 * t23038 + 1495 * t23040 - 315) * t23031)

        if Bindx == 3526:
            t23042 = np.cos(phi)
            t23043 = t23042 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((3*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.11e2) * ((1 - t23042) ** (0.15e2 / 0.2e1)) * ((1 + t23042) ** (0.3e1 / 0.2e1)) * (1564 * t23042 + 27 + (13800 * t23042 + 8142 + 7475 * t23043) * t23043)

        if Bindx == 3527:
            t23057 = np.sin(phi)
            t23055 = t23057 ** 2
            t23046 = np.cos(phi)
            t23047 = t23046 ** 2
            t23049 = t23047 ** 2
            t23053 = t23049 ** 2
            t23048 = t23046 * t23047
            t23051 = t23048 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (9 * phi1 - 5 * phi2)) * np.sqrt(0.418e3) * t23055 ** 2 * (-2196 * t23047 + 8820 * t23048 + 3870 * t23049 + 15180 * t23051 - 25875 * t23053 + 61 + (-28926 * t23049 + 22356 * t23051 + 7475 * t23053 - 765) * t23046)

        if Bindx == 3528:
            t23058 = np.cos(phi)
            t23059 = t23058 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (9 * phi1 - 4 * phi2)) * np.sqrt(0.209e3) * ((1 - t23058) ** (0.13e2 / 0.2e1)) * ((1 + t23058) ** (0.5e1 / 0.2e1)) * (-184 * t23058 - 73 + (9200 * t23058 + 2622 + 7475 * t23059) * t23059)

        if Bindx == 3529:
            t23072 = np.sin(phi)
            t23069 = t23072 ** 2
            t23070 = t23072 * t23069
            t23062 = np.cos(phi)
            t23063 = t23062 ** 2
            t23064 = t23062 * t23063
            t23067 = t23064 ** 2
            t23065 = t23063 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((3*1j) * (3 * phi1 - phi2)) * np.sqrt(0.35530e5) * t23070 ** 2 * (-387 * t23063 - 699 * t23064 + 2139 * t23065 - 3105 * t23067 + 9 + (483 * t23065 + 1495 * t23067 + 65) * t23062)

        if Bindx == 3530:
            t23073 = np.cos(phi)
            t23074 = t23073 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (9 * phi1 - 2 * phi2)) * np.sqrt(0.3230e4) * ((1 - t23073) ** (0.11e2 / 0.2e1)) * ((1 + t23073) ** (0.7e1 / 0.2e1)) * (-92 * t23073 - 1 + (920 * t23073 - 138 + 1495 * t23074) * t23074)

        if Bindx == 3531:
            t23085 = np.sin(phi)
            t23082 = t23085 ** 2
            t23083 = t23082 ** 2
            t23077 = np.cos(phi)
            t23078 = t23077 ** 2
            t23080 = t23078 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((1j) * (9 * phi1 - phi2)) * np.sqrt(0.646e3) * t23083 ** 2 * (1242 * t23078 - 5175 * t23080 - 27 + (-3818 * t23078 + 7475 * t23080 + 303) * t23077)

        if Bindx == 3532:
            t23086 = np.cos(phi)
            t23087 = t23086 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((9*1j) * phi1) * np.sqrt(0.29393e5) * ((1 - t23086) ** (0.9e1 / 0.2e1)) * ((1 + t23086) ** (0.9e1 / 0.2e1)) * (3 + (-138 + 575 * t23087) * t23087)

        if Bindx == 3533:
            t23097 = np.sin(phi)
            t23094 = t23097 ** 2
            t23095 = t23094 ** 2
            t23089 = np.cos(phi)
            t23090 = t23089 ** 2
            t23092 = t23090 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((1j) * (9 * phi1 + phi2)) * np.sqrt(0.646e3) * t23095 ** 2 * (-1242 * t23090 + 5175 * t23092 + 27 + (-3818 * t23090 + 7475 * t23092 + 303) * t23089)

        if Bindx == 3534:
            t23098 = np.cos(phi)
            t23099 = t23098 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (9 * phi1 + 2 * phi2)) * np.sqrt(0.3230e4) * ((1 - t23098) ** (0.7e1 / 0.2e1)) * ((1 + t23098) ** (0.11e2 / 0.2e1)) * (92 * t23098 - 1 + (-920 * t23098 - 138 + 1495 * t23099) * t23099)

        if Bindx == 3535:
            t23112 = np.sin(phi)
            t23109 = t23112 ** 2
            t23110 = t23112 * t23109
            t23102 = np.cos(phi)
            t23103 = t23102 ** 2
            t23104 = t23102 * t23103
            t23107 = t23104 ** 2
            t23105 = t23103 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((3*1j) * (3 * phi1 + phi2)) * np.sqrt(0.35530e5) * t23110 ** 2 * (387 * t23103 - 699 * t23104 - 2139 * t23105 + 3105 * t23107 - 9 + (483 * t23105 + 1495 * t23107 + 65) * t23102)

        if Bindx == 3536:
            t23113 = np.cos(phi)
            t23114 = t23113 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (9 * phi1 + 4 * phi2)) * np.sqrt(0.209e3) * ((1 - t23113) ** (0.5e1 / 0.2e1)) * ((1 + t23113) ** (0.13e2 / 0.2e1)) * (184 * t23113 - 73 + (-9200 * t23113 + 2622 + 7475 * t23114) * t23114)

        if Bindx == 3537:
            t23128 = np.sin(phi)
            t23126 = t23128 ** 2
            t23117 = np.cos(phi)
            t23118 = t23117 ** 2
            t23120 = t23118 ** 2
            t23124 = t23120 ** 2
            t23119 = t23117 * t23118
            t23122 = t23119 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (9 * phi1 + 5 * phi2)) * np.sqrt(0.418e3) * t23126 ** 2 * (2196 * t23118 + 8820 * t23119 - 3870 * t23120 - 15180 * t23122 + 25875 * t23124 - 61 + (-28926 * t23120 + 22356 * t23122 + 7475 * t23124 - 765) * t23117)

        if Bindx == 3538:
            t23129 = np.cos(phi)
            t23130 = t23129 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((3*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.11e2) * ((1 - t23129) ** (0.3e1 / 0.2e1)) * ((1 + t23129) ** (0.15e2 / 0.2e1)) * (-1564 * t23129 + 27 + (-13800 * t23129 + 8142 + 7475 * t23130) * t23130)

        if Bindx == 3539:
            t23134 = np.cos(phi)
            t23135 = t23134 ** 2
            t23137 = t23135 ** 2
            t23138 = t23134 * t23137
            t23143 = t23138 ** 2
            t23141 = t23137 ** 2
            t23136 = t23134 * t23135
            t23139 = t23136 ** 2
            t23133 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (9 * phi1 + 7 * phi2)) * np.sqrt(0.385e3) * t23133 ** 2 * (-1175 * t23135 + 1323 * t23136 + 7326 * t23137 + 3402 * t23138 - 12390 * t23139 + 483 * t23141 + 7245 * t23143 + 47 + (-15570 * t23139 + 11201 * t23141 + 1495 * t23143 - 315) * t23134)

        if Bindx == 3540:
            t23145 = np.cos(phi)
            t23146 = t23145 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (9 * phi1 + 8 * phi2)) * np.sqrt(0.110e3) * np.sqrt((1 - t23145)) * ((1 + t23145) ** (0.17e2 / 0.2e1)) * (-1104 * t23145 + 123 + (-3680 * t23145 + 3174 + 1495 * t23146) * t23146)

        if Bindx == 3541:
            t23149 = np.cos(phi)
            t23150 = t23149 ** 2
            t23151 = t23149 * t23150
            t23154 = t23151 ** 2
            t23160 = t23154 ** 2
            t23152 = t23150 ** 2
            t23153 = t23149 * t23152
            t23158 = t23153 ** 2
            t23156 = t23152 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((9*1j) * (phi1 + phi2)) * (-12270 * t23150 - 40590 * t23151 - 2695 * t23152 + 125829 * t23153 + 146124 * t23154 - 236115 * t23156 + 59202 * t23158 + 46575 * t23160 + 1227 + (-64020 * t23154 - 132495 * t23156 + 103362 * t23158 + 7475 * t23160 + 2487) * t23149)

        if Bindx == 3542:
            t23162 = np.cos(phi)
            t23163 = t23162 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (9 * phi1 + 10 * phi2)) * np.sqrt(0.23e2) * ((1 + t23162) ** (0.19e2 / 0.2e1)) * (-540 * t23162 + 93 + (-1000 * t23162 + 1122 + 325 * t23163) * t23163) * ((1 - t23162) ** (-0.1e1 / 0.2e1))

        if Bindx == 3543:
            t23166 = np.cos(phi)
            t23171 = 1 + t23166
            t23167 = t23171 ** 2
            t23169 = t23171 * t23167 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (9 * phi1 + 11 * phi2)) * np.sqrt(0.46e2) * (-1 + t23166) * t23169 ** 2 * (149 + (-450 + 325 * t23166) * t23166)

        if Bindx == 3544:
            t23172 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * (-9 + 13 * t23172) * ((1 + t23172) ** (0.21e2 / 0.2e1)) * np.sqrt(0.23e2) * np.exp((3*1j) * (3 * phi1 + 4 * phi2)) * ((1 - t23172) ** (0.3e1 / 0.2e1))

        if Bindx == 3545:
            t23174 = np.cos(phi)
            t23180 = 1 + t23174
            t23175 = t23180 ** 2
            t23177 = t23180 * t23175 ** 2
            t23173 = -1 + t23174
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((1j) * (9 * phi1 + 13 * phi2)) * np.sqrt(0.598e3) * t23173 ** 2 * t23180 * t23177 ** 2

        if Bindx == 3546:
            t23181 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((1j) * (10 * phi1 - 13 * phi2)) * np.sqrt(0.26e2) * ((1 - t23181) ** (0.23e2 / 0.2e1)) * ((1 + t23181) ** (0.3e1 / 0.2e1))

        if Bindx == 3547:
            t23182 = np.cos(phi)
            t23188 = -1 + t23182
            t23183 = t23188 ** 2
            t23185 = t23188 * t23183 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((2*1j) * (5 * phi1 - 6 * phi2)) * t23188 * t23185 ** 2 * (1 + t23182) * (10 + 13 * t23182)

        if Bindx == 3548:
            t23189 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (10 * phi1 - 11 * phi2)) * np.sqrt(0.2e1) * ((1 - t23189) ** (0.21e2 / 0.2e1)) * np.sqrt((1 + t23189)) * (187 + (500 + 325 * t23189) * t23189)

        if Bindx == 3549:
            t23190 = np.cos(phi)
            t23191 = t23190 ** 2
            t23192 = t23190 * t23191
            t23195 = t23192 ** 2
            t23201 = t23195 ** 2
            t23193 = t23191 ** 2
            t23194 = t23190 * t23193
            t23199 = t23194 ** 2
            t23197 = t23193 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((10*1j) * (phi1 - phi2)) * (1215 * t23191 + 1870 * t23192 - 8470 * t23193 + 8415 * t23194 + 5478 * t23195 + 14355 * t23197 - 10725 * t23199 - 2500 * t23201 + 135 + (-19140 * t23195 + 2145 * t23197 + 7686 * t23199 + 325 * t23201 - 789) * t23190)

        if Bindx == 3550:
            t23203 = np.cos(phi)
            t23204 = t23203 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 - 9 * phi2)) * np.sqrt(0.23e2) * ((1 - t23203) ** (0.19e2 / 0.2e1)) * np.sqrt((1 + t23203)) * (675 * t23204 + 93 + (325 * t23204 + 447) * t23203)

        if Bindx == 3551:
            t23207 = np.cos(phi)
            t23208 = t23207 ** 2
            t23210 = t23208 ** 2
            t23211 = t23207 * t23210
            t23216 = t23211 ** 2
            t23214 = t23210 ** 2
            t23209 = t23207 * t23208
            t23212 = t23209 ** 2
            t23206 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.2530e4) * t23206 ** 2 * (-96 * t23208 + 365 * t23209 - 184 * t23210 - 742 * t23211 + 1232 * t23212 - 820 * t23214 - 400 * t23216 + 12 + (-334 * t23212 + 929 * t23214 + 65 * t23216 - 27) * t23207)

        if Bindx == 3552:
            t23218 = np.cos(phi)
            t23219 = t23218 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 - 7 * phi2)) * np.sqrt(0.8855e4) * ((1 - t23218) ** (0.17e2 / 0.2e1)) * ((1 + t23218) ** (0.3e1 / 0.2e1)) * (105 * t23219 + 7 + (65 * t23219 + 51) * t23218)

        if Bindx == 3553:
            t23232 = np.sin(phi)
            t23230 = t23232 ** 2
            t23221 = np.cos(phi)
            t23222 = t23221 ** 2
            t23224 = t23222 ** 2
            t23228 = t23224 ** 2
            t23223 = t23221 * t23222
            t23226 = t23223 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.253e3) * t23230 ** 2 * (-357 * t23222 - 60 * t23223 + 1515 * t23224 - 795 * t23226 - 1500 * t23228 + 17 + (-1572 * t23224 + 2352 * t23226 + 325 * t23228 + 75) * t23221)

        if Bindx == 3554:
            t23233 = np.cos(phi)
            t23234 = t23233 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((5*1j) * (2 * phi1 - phi2)) * np.sqrt(0.9614e4) * ((1 - t23233) ** (0.15e2 / 0.2e1)) * ((1 + t23233) ** (0.5e1 / 0.2e1)) * (375 * t23234 + 5 + (325 * t23234 + 111) * t23233)

        if Bindx == 3555:
            t23246 = np.sin(phi)
            t23243 = t23246 ** 2
            t23244 = t23246 * t23243
            t23236 = np.cos(phi)
            t23237 = t23236 ** 2
            t23238 = t23236 * t23237
            t23241 = t23238 ** 2
            t23239 = t23237 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.4807e4) * t23244 ** 2 * (60 * t23237 - 525 * t23238 + 270 * t23239 - 1000 * t23241 - 2 + (807 * t23239 + 325 * t23241 + 65) * t23236)

        if Bindx == 3556:
            t23247 = np.cos(phi)
            t23248 = t23247 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (10 * phi1 - 3 * phi2)) * np.sqrt(0.817190e6) * ((1 - t23247) ** (0.13e2 / 0.2e1)) * ((1 + t23247) ** (0.7e1 / 0.2e1)) * (45 * t23248 - 1 + (65 * t23248 + 3) * t23247)

        if Bindx == 3557:
            t23258 = np.sin(phi)
            t23255 = t23258 ** 2
            t23256 = t23255 ** 2
            t23250 = np.cos(phi)
            t23251 = t23250 ** 2
            t23253 = t23251 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 - phi2)) * np.sqrt(0.74290e5) * t23256 ** 2 * (35 * t23251 - 100 * t23253 - 1 + (2 * t23251 + 65 * t23253 - 1) * t23250)

        if Bindx == 3558:
            t23259 = np.cos(phi)
            t23260 = t23259 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 - phi2)) * np.sqrt(0.14858e5) * ((1 - t23259) ** (0.11e2 / 0.2e1)) * ((1 + t23259) ** (0.9e1 / 0.2e1)) * (75 * t23260 - 3 + (325 * t23260 - 33) * t23259)

        if Bindx == 3559:
            t23267 = np.sin(phi)
            t23263 = t23267 ** 2
            t23265 = t23267 * t23263 ** 2
            t23262 = np.cos(phi)
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * np.exp((10*1j) * phi1) * np.sqrt(0.676039e6) * t23265 ** 2 * t23262 * (25 * t23262 ** 2 - 3)

        if Bindx == 3560:
            t23268 = np.cos(phi)
            t23269 = t23268 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 + phi2)) * np.sqrt(0.14858e5) * ((1 - t23268) ** (0.9e1 / 0.2e1)) * ((1 + t23268) ** (0.11e2 / 0.2e1)) * (-75 * t23269 + 3 + (325 * t23269 - 33) * t23268)

        if Bindx == 3561:
            t23279 = np.sin(phi)
            t23276 = t23279 ** 2
            t23277 = t23276 ** 2
            t23271 = np.cos(phi)
            t23272 = t23271 ** 2
            t23274 = t23272 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 + phi2)) * np.sqrt(0.74290e5) * t23277 ** 2 * (-35 * t23272 + 100 * t23274 + 1 + (2 * t23272 + 65 * t23274 - 1) * t23271)

        if Bindx == 3562:
            t23280 = np.cos(phi)
            t23281 = t23280 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (10 * phi1 + 3 * phi2)) * np.sqrt(0.817190e6) * ((1 - t23280) ** (0.7e1 / 0.2e1)) * ((1 + t23280) ** (0.13e2 / 0.2e1)) * (-45 * t23281 + 1 + (65 * t23281 + 3) * t23280)

        if Bindx == 3563:
            t23293 = np.sin(phi)
            t23290 = t23293 ** 2
            t23291 = t23293 * t23290
            t23283 = np.cos(phi)
            t23284 = t23283 ** 2
            t23285 = t23283 * t23284
            t23288 = t23285 ** 2
            t23286 = t23284 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.4807e4) * t23291 ** 2 * (-60 * t23284 - 525 * t23285 - 270 * t23286 + 1000 * t23288 + 2 + (807 * t23286 + 325 * t23288 + 65) * t23283)

        if Bindx == 3564:
            t23294 = np.cos(phi)
            t23295 = t23294 ** 2
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((5*1j) * (2 * phi1 + phi2)) * np.sqrt(0.9614e4) * ((1 - t23294) ** (0.5e1 / 0.2e1)) * ((1 + t23294) ** (0.15e2 / 0.2e1)) * (-375 * t23295 - 5 + (325 * t23295 + 111) * t23294)

        if Bindx == 3565:
            t23308 = np.sin(phi)
            t23306 = t23308 ** 2
            t23297 = np.cos(phi)
            t23298 = t23297 ** 2
            t23300 = t23298 ** 2
            t23304 = t23300 ** 2
            t23299 = t23297 * t23298
            t23302 = t23299 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((2*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.253e3) * t23306 ** 2 * (357 * t23298 - 60 * t23299 - 1515 * t23300 + 795 * t23302 + 1500 * t23304 - 17 + (-1572 * t23300 + 2352 * t23302 + 325 * t23304 + 75) * t23297)

        if Bindx == 3566:
            t23309 = np.cos(phi)
            t23310 = t23309 ** 2
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 + 7 * phi2)) * np.sqrt(0.8855e4) * ((1 - t23309) ** (0.3e1 / 0.2e1)) * ((1 + t23309) ** (0.17e2 / 0.2e1)) * (-105 * t23310 - 7 + (65 * t23310 + 51) * t23309)

        if Bindx == 3567:
            t23313 = np.cos(phi)
            t23314 = t23313 ** 2
            t23316 = t23314 ** 2
            t23317 = t23313 * t23316
            t23322 = t23317 ** 2
            t23320 = t23316 ** 2
            t23315 = t23313 * t23314
            t23318 = t23315 ** 2
            t23312 = np.sin(phi)
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.2530e4) * t23312 ** 2 * (96 * t23314 + 365 * t23315 + 184 * t23316 - 742 * t23317 - 1232 * t23318 + 820 * t23320 + 400 * t23322 - 12 + (-334 * t23318 + 929 * t23320 + 65 * t23322 - 27) * t23313)

        if Bindx == 3568:
            t23324 = np.cos(phi)
            t23325 = t23324 ** 2
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (10 * phi1 + 9 * phi2)) * np.sqrt(0.23e2) * np.sqrt((1 - t23324)) * ((1 + t23324) ** (0.19e2 / 0.2e1)) * (-675 * t23325 - 93 + (325 * t23325 + 447) * t23324)

        if Bindx == 3569:
            t23327 = np.cos(phi)
            t23328 = t23327 ** 2
            t23329 = t23327 * t23328
            t23332 = t23329 ** 2
            t23338 = t23332 ** 2
            t23330 = t23328 ** 2
            t23331 = t23327 * t23330
            t23336 = t23331 ** 2
            t23334 = t23330 ** 2
            tfunc[..., c] = (0.27e2 / 0.1024e4) * np.exp((10*1j) * (phi1 + phi2)) * (-1215 * t23328 + 1870 * t23329 + 8470 * t23330 + 8415 * t23331 - 5478 * t23332 - 14355 * t23334 + 10725 * t23336 + 2500 * t23338 - 135 + (-19140 * t23332 + 2145 * t23334 + 7686 * t23336 + 325 * t23338 - 789) * t23327)

        if Bindx == 3570:
            t23340 = np.cos(phi)
            t23341 = t23340 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (10 * phi1 + 11 * phi2)) * np.sqrt(0.2e1) * ((1 + t23340) ** (0.21e2 / 0.2e1)) * (-825 * t23341 - 187 + (325 * t23341 + 687) * t23340) * ((1 - t23340) ** (-0.1e1 / 0.2e1))

        if Bindx == 3571:
            t23343 = np.cos(phi)
            t23349 = 1 + t23343
            t23344 = t23349 ** 2
            t23346 = t23349 * t23344 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((2*1j) * (5 * phi1 + 6 * phi2)) * (-1 + t23343) * t23349 * t23346 ** 2 * (-10 + 13 * t23343)

        if Bindx == 3572:
            t23350 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((1j) * (10 * phi1 + 13 * phi2)) * np.sqrt(0.26e2) * ((1 - t23350) ** (0.3e1 / 0.2e1)) * ((1 + t23350) ** (0.23e2 / 0.2e1))

        if Bindx == 3573:
            t23351 = np.cos(phi)
            t23356 = -1 + t23351
            t23352 = t23356 ** 2
            t23353 = t23356 * t23352
            t23354 = t23353 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((1j) * (11 * phi1 - 13 * phi2)) * np.sqrt(0.13e2) * t23354 ** 2 * (1 + t23351)

        if Bindx == 3574:
            t23357 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.8192e4*1j) * np.exp((1j) * (11 * phi1 - 12 * phi2)) * np.sqrt(0.2e1) * ((1 - t23357) ** (0.23e2 / 0.2e1)) * np.sqrt((1 + t23357)) * (11 + 13 * t23357)

        if Bindx == 3575:
            t23358 = np.cos(phi)
            t23359 = t23358 ** 2
            t23360 = t23358 * t23359
            t23363 = t23360 ** 2
            t23369 = t23363 ** 2
            t23361 = t23359 ** 2
            t23362 = t23358 * t23361
            t23367 = t23362 ** 2
            t23365 = t23361 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((11*1j) * (phi1 - phi2)) * (-6870 * t23359 + 11110 * t23360 - 2695 * t23361 - 22077 * t23362 + 41052 * t23363 - 6435 * t23365 - 25894 * t23367 - 3025 * t23369 - 229 + (-28380 * t23363 + 29095 * t23365 + 12054 * t23367 + 325 * t23369 + 1969) * t23358)

        if Bindx == 3576:
            t23371 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (11 * phi1 - 10 * phi2)) * np.sqrt(0.2e1) * ((1 - t23371) ** (0.21e2 / 0.2e1)) * np.sqrt((1 + t23371)) * (187 + (500 + 325 * t23371) * t23371)

        if Bindx == 3577:
            t23372 = np.cos(phi)
            t23377 = -1 + t23372
            t23373 = t23377 ** 2
            t23375 = t23377 * t23373 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * (149 + (450 + 325 * t23372) * t23372) * (1 + t23372) * t23375 ** 2 * np.sqrt(0.46e2) * np.exp((1j) * (11 * phi1 - 9 * phi2))

        if Bindx == 3578:
            t23378 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (11 * phi1 - 8 * phi2)) * np.sqrt(0.1265e4) * ((1 - t23378) ** (0.19e2 / 0.2e1)) * ((1 + t23378) ** (0.3e1 / 0.2e1)) * (23 + (80 + 65 * t23378) * t23378)

        if Bindx == 3579:
            t23390 = np.sin(phi)
            t23388 = t23390 ** 2
            t23379 = np.cos(phi)
            t23380 = t23379 ** 2
            t23382 = t23380 ** 2
            t23386 = t23382 ** 2
            t23381 = t23379 * t23380
            t23384 = t23381 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (11 * phi1 - 7 * phi2)) * np.sqrt(0.17710e5) * t23388 ** 2 * (68 * t23380 - 420 * t23381 + 490 * t23382 - 924 * t23384 - 385 * t23386 - 17 + (182 * t23382 + 892 * t23384 + 65 * t23386 + 49) * t23379)

        if Bindx == 3580:
            t23391 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (11 * phi1 - 6 * phi2)) * np.sqrt(0.506e3) * ((1 - t23391) ** (0.17e2 / 0.2e1)) * ((1 + t23391) ** (0.5e1 / 0.2e1)) * (59 + (300 + 325 * t23391) * t23391)

        if Bindx == 3581:
            t23402 = np.sin(phi)
            t23399 = t23402 ** 2
            t23400 = t23402 * t23399
            t23392 = np.cos(phi)
            t23393 = t23392 ** 2
            t23394 = t23392 * t23393
            t23397 = t23394 ** 2
            t23395 = t23393 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((1j) * (11 * phi1 - 5 * phi2)) * np.sqrt(0.4807e4) * t23400 ** 2 * (555 * t23393 - 505 * t23394 - 935 * t23395 - 1375 * t23397 - 37 + (2037 * t23395 + 325 * t23397 - 65) * t23392)

        if Bindx == 3582:
            t23403 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * np.exp((1j) * (11 * phi1 - 4 * phi2)) * np.sqrt(0.9614e4) * ((1 - t23403) ** (0.15e2 / 0.2e1)) * ((1 + t23403) ** (0.7e1 / 0.2e1)) * (19 + (200 + 325 * t23403) * t23403)

        if Bindx == 3583:
            t23412 = np.sin(phi)
            t23409 = t23412 ** 2
            t23410 = t23409 ** 2
            t23404 = np.cos(phi)
            t23405 = t23404 ** 2
            t23407 = t23405 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (11 * phi1 - 3 * phi2)) * np.sqrt(0.408595e6) * t23410 ** 2 * (22 * t23405 - 165 * t23407 - 1 + (106 * t23405 + 65 * t23407 - 27) * t23404)

        if Bindx == 3584:
            t23413 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (11 * phi1 - 2 * phi2)) * np.sqrt(0.37145e5) * ((1 - t23413) ** (0.13e2 / 0.2e1)) * ((1 + t23413) ** (0.9e1 / 0.2e1)) * (-1 + (20 + 65 * t23413) * t23413)

        if Bindx == 3585:
            t23421 = np.sin(phi)
            t23417 = t23421 ** 2
            t23419 = t23421 * t23417 ** 2
            t23414 = np.cos(phi)
            t23415 = t23414 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (11 * phi1 - phi2)) * np.sqrt(0.7429e4) * t23419 ** 2 * (-275 * t23415 + 11 + (325 * t23415 - 61) * t23414)

        if Bindx == 3586:
            t23422 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((11*1j) * phi1) * np.sqrt(0.1352078e7) * ((1 - t23422) ** (0.11e2 / 0.2e1)) * ((1 + t23422) ** (0.11e2 / 0.2e1)) * (25 * t23422 ** 2 - 1)

        if Bindx == 3587:
            t23430 = np.sin(phi)
            t23426 = t23430 ** 2
            t23428 = t23430 * t23426 ** 2
            t23423 = np.cos(phi)
            t23424 = t23423 ** 2
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.exp((1j) * (11 * phi1 + phi2)) * np.sqrt(0.7429e4) * t23428 ** 2 * (275 * t23424 - 11 + (325 * t23424 - 61) * t23423)

        if Bindx == 3588:
            t23431 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.exp((1j) * (11 * phi1 + 2 * phi2)) * np.sqrt(0.37145e5) * ((1 - t23431) ** (0.9e1 / 0.2e1)) * ((1 + t23431) ** (0.13e2 / 0.2e1)) * (-1 + (-20 + 65 * t23431) * t23431)

        if Bindx == 3589:
            t23440 = np.sin(phi)
            t23437 = t23440 ** 2
            t23438 = t23437 ** 2
            t23432 = np.cos(phi)
            t23433 = t23432 ** 2
            t23435 = t23433 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (11 * phi1 + 3 * phi2)) * np.sqrt(0.408595e6) * t23438 ** 2 * (-22 * t23433 + 165 * t23435 + 1 + (106 * t23433 + 65 * t23435 - 27) * t23432)

        if Bindx == 3590:
            t23441 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * np.exp((1j) * (11 * phi1 + 4 * phi2)) * np.sqrt(0.9614e4) * ((1 - t23441) ** (0.7e1 / 0.2e1)) * ((1 + t23441) ** (0.15e2 / 0.2e1)) * (19 + (-200 + 325 * t23441) * t23441)

        if Bindx == 3591:
            t23452 = np.sin(phi)
            t23449 = t23452 ** 2
            t23450 = t23452 * t23449
            t23442 = np.cos(phi)
            t23443 = t23442 ** 2
            t23444 = t23442 * t23443
            t23447 = t23444 ** 2
            t23445 = t23443 ** 2
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.exp((1j) * (11 * phi1 + 5 * phi2)) * np.sqrt(0.4807e4) * t23450 ** 2 * (-555 * t23443 - 505 * t23444 + 935 * t23445 + 1375 * t23447 + 37 + (2037 * t23445 + 325 * t23447 - 65) * t23442)

        if Bindx == 3592:
            t23453 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (11 * phi1 + 6 * phi2)) * np.sqrt(0.506e3) * ((1 - t23453) ** (0.5e1 / 0.2e1)) * ((1 + t23453) ** (0.17e2 / 0.2e1)) * (59 + (-300 + 325 * t23453) * t23453)

        if Bindx == 3593:
            t23455 = np.cos(phi)
            t23460 = 1 + t23455
            t23456 = t23460 ** 2
            t23457 = t23456 ** 2
            t23454 = -1 + t23455
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (11 * phi1 + 7 * phi2)) * np.sqrt(0.17710e5) * t23454 ** 2 * t23460 * t23457 ** 2 * (17 + (-70 + 65 * t23455) * t23455)

        if Bindx == 3594:
            t23461 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (11 * phi1 + 8 * phi2)) * np.sqrt(0.1265e4) * ((1 - t23461) ** (0.3e1 / 0.2e1)) * ((1 + t23461) ** (0.19e2 / 0.2e1)) * (23 + (-80 + 65 * t23461) * t23461)

        if Bindx == 3595:
            t23462 = np.cos(phi)
            t23467 = 1 + t23462
            t23463 = t23467 ** 2
            t23465 = t23467 * t23463 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (11 * phi1 + 9 * phi2)) * np.sqrt(0.46e2) * (-1 + t23462) * t23465 ** 2 * (149 + (-450 + 325 * t23462) * t23462)

        if Bindx == 3596:
            t23468 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (11 * phi1 + 10 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t23468)) * ((1 + t23468) ** (0.21e2 / 0.2e1)) * (187 + (-500 + 325 * t23468) * t23468)

        if Bindx == 3597:
            t23469 = np.cos(phi)
            t23470 = t23469 ** 2
            t23471 = t23469 * t23470
            t23474 = t23471 ** 2
            t23480 = t23474 ** 2
            t23472 = t23470 ** 2
            t23473 = t23469 * t23472
            t23478 = t23473 ** 2
            t23476 = t23472 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((11*1j) * (phi1 + phi2)) * (6870 * t23470 + 11110 * t23471 + 2695 * t23472 - 22077 * t23473 - 41052 * t23474 + 6435 * t23476 + 25894 * t23478 + 3025 * t23480 + 229 + (-28380 * t23474 + 29095 * t23476 + 12054 * t23478 + 325 * t23480 + 1969) * t23469)

        if Bindx == 3598:
            t23482 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.8192e4*1j) * np.exp((1j) * (11 * phi1 + 12 * phi2)) * np.sqrt(0.2e1) * ((1 + t23482) ** (0.23e2 / 0.2e1)) * (11 + (-24 + 13 * t23482) * t23482) * ((1 - t23482) ** (-0.1e1 / 0.2e1))

        if Bindx == 3599:
            t23483 = np.cos(phi)
            t23488 = 1 + t23483
            t23484 = t23488 ** 2
            t23485 = t23488 * t23484
            t23486 = t23485 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((1j) * (11 * phi1 + 13 * phi2)) * np.sqrt(0.13e2) * (-1 + t23483) * t23486 ** 2

        if Bindx == 3600:
            t23489 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((1j) * (12 * phi1 - 13 * phi2)) * np.sqrt(0.26e2) * ((1 - t23489) ** (0.25e2 / 0.2e1)) * np.sqrt((1 + t23489))

        if Bindx == 3601:
            t23490 = np.cos(phi)
            t23491 = t23490 ** 2
            t23492 = t23490 * t23491
            t23495 = t23492 ** 2
            t23501 = t23495 ** 2
            t23493 = t23491 ** 2
            t23494 = t23490 * t23493
            t23499 = t23494 ** 2
            t23497 = t23493 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((12*1j) * (phi1 - phi2)) * (636 * t23491 - 1782 * t23492 + 3080 * t23493 - 3069 * t23494 + 792 * t23495 - 4356 * t23497 - 2068 * t23499 - 144 * t23501 + 12 + (2508 * t23495 + 3795 * t23497 + 714 * t23499 + 13 * t23501 - 131) * t23490)

        if Bindx == 3602:
            t23503 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.8192e4*1j) * np.exp((1j) * (12 * phi1 - 11 * phi2)) * np.sqrt(0.2e1) * ((1 - t23503) ** (0.23e2 / 0.2e1)) * np.sqrt((1 + t23503)) * (11 + 13 * t23503)

        if Bindx == 3603:
            t23504 = np.cos(phi)
            t23510 = -1 + t23504
            t23505 = t23510 ** 2
            t23507 = t23510 * t23505 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * (10 + 13 * t23504) * (1 + t23504) * t23510 * t23507 ** 2 * np.exp((2*1j) * (6 * phi1 - 5 * phi2))

        if Bindx == 3604:
            t23511 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.4096e4*1j) * np.exp((3*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.23e2) * ((1 - t23511) ** (0.21e2 / 0.2e1)) * ((1 + t23511) ** (0.3e1 / 0.2e1)) * (9 + 13 * t23511)

        if Bindx == 3605:
            t23513 = np.cos(phi)
            t23518 = -1 + t23513
            t23514 = t23518 ** 2
            t23516 = t23518 * t23514 ** 2
            t23512 = 1 + t23513
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((4*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.2530e4) * t23516 ** 2 * t23512 ** 2 * (8 + 13 * t23513)

        if Bindx == 3606:
            t23519 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.exp((1j) * (12 * phi1 - 7 * phi2)) * np.sqrt(0.8855e4) * ((1 - t23519) ** (0.19e2 / 0.2e1)) * ((1 + t23519) ** (0.5e1 / 0.2e1)) * (7 + 13 * t23519)

        if Bindx == 3607:
            t23530 = np.sin(phi)
            t23527 = t23530 ** 2
            t23528 = t23530 * t23527
            t23520 = np.cos(phi)
            t23521 = t23520 ** 2
            t23522 = t23520 * t23521
            t23525 = t23522 ** 2
            t23523 = t23521 ** 2
            tfunc[..., c] = -(0.135e3 / 0.2048e4) * np.exp((6*1j) * (2 * phi1 - phi2)) * np.sqrt(0.253e3) * t23528 ** 2 * (12 * t23521 + 75 * t23522 - 170 * t23523 - 72 * t23525 + 6 + (159 * t23523 + 13 * t23525 - 23) * t23520)

        if Bindx == 3608:
            t23531 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * np.exp((1j) * (12 * phi1 - 5 * phi2)) * np.sqrt(0.9614e4) * ((1 - t23531) ** (0.17e2 / 0.2e1)) * ((1 + t23531) ** (0.7e1 / 0.2e1)) * (5 + 13 * t23531)

        if Bindx == 3609:
            t23540 = np.sin(phi)
            t23537 = t23540 ** 2
            t23538 = t23537 ** 2
            t23532 = np.cos(phi)
            t23533 = t23532 ** 2
            t23535 = t23533 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((4*1j) * (3 * phi1 - phi2)) * np.sqrt(0.4807e4) * t23538 ** 2 * (-28 * t23533 - 48 * t23535 + 4 + (62 * t23533 + 13 * t23535 - 3) * t23532)

        if Bindx == 3610:
            t23541 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * np.exp((3*1j) * (4 * phi1 - phi2)) * np.sqrt(0.817190e6) * ((1 - t23541) ** (0.15e2 / 0.2e1)) * ((1 + t23541) ** (0.9e1 / 0.2e1)) * (3 + 13 * t23541)

        if Bindx == 3611:
            t23549 = np.sin(phi)
            t23545 = t23549 ** 2
            t23547 = t23549 * t23545 ** 2
            t23542 = np.cos(phi)
            t23543 = t23542 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (6 * phi1 - phi2)) * np.sqrt(0.74290e5) * t23547 ** 2 * (-24 * t23543 + 2 + (13 * t23543 + 9) * t23542)

        if Bindx == 3612:
            t23550 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.4096e4*1j) * np.exp((1j) * (12 * phi1 - phi2)) * np.sqrt(0.14858e5) * ((1 - t23550) ** (0.13e2 / 0.2e1)) * ((1 + t23550) ** (0.11e2 / 0.2e1)) * (1 + 13 * t23550)

        if Bindx == 3613:
            t23555 = np.sin(phi)
            t23551 = t23555 ** 2
            t23552 = t23555 * t23551
            t23553 = t23552 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((12*1j) * phi1) * np.sqrt(0.676039e6) * t23553 ** 2 * np.cos(phi)

        if Bindx == 3614:
            t23556 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((1j) * (12 * phi1 + phi2)) * np.sqrt(0.14858e5) * ((1 - t23556) ** (0.11e2 / 0.2e1)) * ((1 + t23556) ** (0.13e2 / 0.2e1)) * (-1 + 13 * t23556)

        if Bindx == 3615:
            t23564 = np.sin(phi)
            t23560 = t23564 ** 2
            t23562 = t23564 * t23560 ** 2
            t23557 = np.cos(phi)
            t23558 = t23557 ** 2
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.exp((2*1j) * (6 * phi1 + phi2)) * np.sqrt(0.74290e5) * t23562 ** 2 * (24 * t23558 - 2 + (13 * t23558 + 9) * t23557)

        if Bindx == 3616:
            t23565 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((3*1j) * (4 * phi1 + phi2)) * np.sqrt(0.817190e6) * ((1 - t23565) ** (0.9e1 / 0.2e1)) * ((1 + t23565) ** (0.15e2 / 0.2e1)) * (-3 + 13 * t23565)

        if Bindx == 3617:
            t23574 = np.sin(phi)
            t23571 = t23574 ** 2
            t23572 = t23571 ** 2
            t23566 = np.cos(phi)
            t23567 = t23566 ** 2
            t23569 = t23567 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((4*1j) * (3 * phi1 + phi2)) * np.sqrt(0.4807e4) * t23572 ** 2 * (28 * t23567 + 48 * t23569 - 4 + (62 * t23567 + 13 * t23569 - 3) * t23566)

        if Bindx == 3618:
            t23575 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.8192e4*1j) * np.exp((1j) * (12 * phi1 + 5 * phi2)) * np.sqrt(0.9614e4) * ((1 - t23575) ** (0.7e1 / 0.2e1)) * ((1 + t23575) ** (0.17e2 / 0.2e1)) * (-5 + 13 * t23575)

        if Bindx == 3619:
            t23576 = np.cos(phi)
            t23584 = -1 + t23576
            t23583 = 1 + t23576
            t23579 = t23583 ** 2
            t23580 = t23579 ** 2
            t23577 = t23584 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((6*1j) * (2 * phi1 + phi2)) * np.sqrt(0.253e3) * t23584 * t23577 * t23583 * t23580 ** 2 * (-6 + 13 * t23576)

        if Bindx == 3620:
            t23585 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (12 * phi1 + 7 * phi2)) * np.sqrt(0.8855e4) * ((1 - t23585) ** (0.5e1 / 0.2e1)) * ((1 + t23585) ** (0.19e2 / 0.2e1)) * (-7 + 13 * t23585)

        if Bindx == 3621:
            t23587 = np.cos(phi)
            t23592 = 1 + t23587
            t23588 = t23592 ** 2
            t23590 = t23592 * t23588 ** 2
            t23586 = -1 + t23587
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((4*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.2530e4) * t23586 ** 2 * t23590 ** 2 * (-8 + 13 * t23587)

        if Bindx == 3622:
            t23593 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((3*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.23e2) * ((1 - t23593) ** (0.3e1 / 0.2e1)) * ((1 + t23593) ** (0.21e2 / 0.2e1)) * (-9 + 13 * t23593)

        if Bindx == 3623:
            t23594 = np.cos(phi)
            t23600 = 1 + t23594
            t23595 = t23600 ** 2
            t23597 = t23600 * t23595 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4) * np.exp((2*1j) * (6 * phi1 + 5 * phi2)) * (-1 + t23594) * t23600 * t23597 ** 2 * (-10 + 13 * t23594)

        if Bindx == 3624:
            t23601 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * np.exp((1j) * (12 * phi1 + 11 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t23601)) * ((1 + t23601) ** (0.23e2 / 0.2e1)) * (-11 + 13 * t23601)

        if Bindx == 3625:
            t23602 = np.cos(phi)
            t23603 = t23602 ** 2
            t23604 = t23602 * t23603
            t23607 = t23604 ** 2
            t23613 = t23607 ** 2
            t23605 = t23603 ** 2
            t23606 = t23602 * t23605
            t23611 = t23606 ** 2
            t23609 = t23605 ** 2
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.exp((12*1j) * (phi1 + phi2)) * (-636 * t23603 - 1782 * t23604 - 3080 * t23605 - 3069 * t23606 - 792 * t23607 + 4356 * t23609 + 2068 * t23611 + 144 * t23613 - 12 + (2508 * t23607 + 3795 * t23609 + 714 * t23611 + 13 * t23613 - 131) * t23602)

        if Bindx == 3626:
            t23615 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((1j) * (12 * phi1 + 13 * phi2)) * np.sqrt(0.26e2) * np.sqrt((1 - t23615)) * ((1 + t23615) ** (0.25e2 / 0.2e1))

        if Bindx == 3627:
            t23616 = np.cos(phi)
            t23617 = t23616 ** 2
            t23618 = t23616 * t23617
            t23621 = t23618 ** 2
            t23627 = t23621 ** 2
            t23619 = t23617 ** 2
            t23620 = t23616 * t23619
            t23625 = t23620 ** 2
            t23623 = t23619 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((13*1j) * (phi1 - phi2)) * (-78 * t23617 + 286 * t23618 - 715 * t23619 + 1287 * t23620 - 1716 * t23621 - 1287 * t23623 - 286 * t23625 - 13 * t23627 - 1 + (1716 * t23621 + 715 * t23623 + 78 * t23625 + t23627 + 13) * t23616)

        if Bindx == 3628:
            t23629 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((1j) * (13 * phi1 - 12 * phi2)) * np.sqrt(0.26e2) * ((1 - t23629) ** (0.25e2 / 0.2e1)) * np.sqrt((1 + t23629))

        if Bindx == 3629:
            t23630 = np.cos(phi)
            t23635 = -1 + t23630
            t23631 = t23635 ** 2
            t23632 = t23635 * t23631
            t23633 = t23632 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((1j) * (13 * phi1 - 11 * phi2)) * np.sqrt(0.13e2) * t23633 ** 2 * (1 + t23630)

        if Bindx == 3630:
            t23636 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((1j) * (13 * phi1 - 10 * phi2)) * np.sqrt(0.26e2) * ((1 - t23636) ** (0.23e2 / 0.2e1)) * ((1 + t23636) ** (0.3e1 / 0.2e1))

        if Bindx == 3631:
            t23638 = np.cos(phi)
            t23644 = -1 + t23638
            t23639 = t23644 ** 2
            t23641 = t23644 * t23639 ** 2
            t23637 = 1 + t23638
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((1j) * (13 * phi1 - 9 * phi2)) * np.sqrt(0.598e3) * t23644 * t23641 ** 2 * t23637 ** 2

        if Bindx == 3632:
            t23645 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (13 * phi1 - 8 * phi2)) * np.sqrt(0.16445e5) * ((1 - t23645) ** (0.21e2 / 0.2e1)) * ((1 + t23645) ** (0.5e1 / 0.2e1))

        if Bindx == 3633:
            t23646 = np.cos(phi)
            t23654 = -1 + t23646
            t23653 = 1 + t23646
            t23651 = t23653 ** 2
            t23647 = t23654 ** 2
            t23649 = t23654 * t23647 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (13 * phi1 - 7 * phi2)) * np.sqrt(0.230230e6) * t23649 ** 2 * t23653 * t23651

        if Bindx == 3634:
            t23655 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((1j) * (13 * phi1 - 6 * phi2)) * np.sqrt(0.6578e4) * ((1 - t23655) ** (0.19e2 / 0.2e1)) * ((1 + t23655) ** (0.7e1 / 0.2e1))

        if Bindx == 3635:
            t23656 = np.cos(phi)
            t23664 = -1 + t23656
            t23663 = 1 + t23656
            t23661 = t23663 ** 2
            t23657 = t23664 ** 2
            t23658 = t23657 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((1j) * (13 * phi1 - 5 * phi2)) * np.sqrt(0.62491e5) * t23664 * t23658 ** 2 * t23661 ** 2

        if Bindx == 3636:
            t23665 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * np.exp((1j) * (13 * phi1 - 4 * phi2)) * np.sqrt(0.124982e6) * ((1 - t23665) ** (0.17e2 / 0.2e1)) * ((1 + t23665) ** (0.9e1 / 0.2e1))

        if Bindx == 3637:
            t23666 = np.cos(phi)
            t23674 = -1 + t23666
            t23673 = 1 + t23666
            t23670 = t23673 ** 2
            t23667 = t23674 ** 2
            t23668 = t23667 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (13 * phi1 - 3 * phi2)) * np.sqrt(0.5311735e7) * t23668 ** 2 * t23673 * t23670 ** 2

        if Bindx == 3638:
            t23675 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (13 * phi1 - 2 * phi2)) * np.sqrt(0.482885e6) * ((1 - t23675) ** (0.15e2 / 0.2e1)) * ((1 + t23675) ** (0.11e2 / 0.2e1))

        if Bindx == 3639:
            t23680 = np.sin(phi)
            t23676 = t23680 ** 2
            t23677 = t23680 * t23676
            t23678 = t23677 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((1j) * (13 * phi1 - phi2)) * np.sqrt(0.96577e5) * t23678 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 3640:
            t23681 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.4096e4*1j) * np.exp((13*1j) * phi1) * np.sqrt(0.104006e6) * ((1 - t23681) ** (0.13e2 / 0.2e1)) * ((1 + t23681) ** (0.13e2 / 0.2e1))

        if Bindx == 3641:
            t23686 = np.sin(phi)
            t23682 = t23686 ** 2
            t23683 = t23686 * t23682
            t23684 = t23683 ** 2
            tfunc[..., c] = (0.135e3 / 0.4096e4) * np.exp((1j) * (13 * phi1 + phi2)) * np.sqrt(0.96577e5) * t23684 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 3642:
            t23687 = np.cos(phi)
            tfunc[..., c] = (0.27e2 / 0.2048e4*1j) * np.exp((1j) * (13 * phi1 + 2 * phi2)) * np.sqrt(0.482885e6) * ((1 - t23687) ** (0.11e2 / 0.2e1)) * ((1 + t23687) ** (0.15e2 / 0.2e1))

        if Bindx == 3643:
            t23688 = np.cos(phi)
            t23696 = -1 + t23688
            t23695 = 1 + t23688
            t23692 = t23695 ** 2
            t23693 = t23692 ** 2
            t23689 = t23696 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (13 * phi1 + 3 * phi2)) * np.sqrt(0.5311735e7) * t23696 * t23689 ** 2 * t23693 ** 2

        if Bindx == 3644:
            t23697 = np.cos(phi)
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * np.exp((1j) * (13 * phi1 + 4 * phi2)) * np.sqrt(0.124982e6) * ((1 - t23697) ** (0.9e1 / 0.2e1)) * ((1 + t23697) ** (0.17e2 / 0.2e1))

        if Bindx == 3645:
            t23698 = np.cos(phi)
            t23706 = -1 + t23698
            t23705 = 1 + t23698
            t23701 = t23705 ** 2
            t23702 = t23701 ** 2
            t23699 = t23706 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((1j) * (13 * phi1 + 5 * phi2)) * np.sqrt(0.62491e5) * t23699 ** 2 * t23705 * t23702 ** 2

        if Bindx == 3646:
            t23707 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((1j) * (13 * phi1 + 6 * phi2)) * np.sqrt(0.6578e4) * ((1 - t23707) ** (0.7e1 / 0.2e1)) * ((1 + t23707) ** (0.19e2 / 0.2e1))

        if Bindx == 3647:
            t23708 = np.cos(phi)
            t23716 = -1 + t23708
            t23715 = 1 + t23708
            t23711 = t23715 ** 2
            t23713 = t23715 * t23711 ** 2
            t23709 = t23716 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((1j) * (13 * phi1 + 7 * phi2)) * np.sqrt(0.230230e6) * t23716 * t23709 * t23713 ** 2

        if Bindx == 3648:
            t23717 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.exp((1j) * (13 * phi1 + 8 * phi2)) * np.sqrt(0.16445e5) * ((1 - t23717) ** (0.5e1 / 0.2e1)) * ((1 + t23717) ** (0.21e2 / 0.2e1))

        if Bindx == 3649:
            t23719 = np.cos(phi)
            t23725 = 1 + t23719
            t23720 = t23725 ** 2
            t23722 = t23725 * t23720 ** 2
            t23718 = -1 + t23719
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((1j) * (13 * phi1 + 9 * phi2)) * np.sqrt(0.598e3) * t23718 ** 2 * t23725 * t23722 ** 2

        if Bindx == 3650:
            t23726 = np.cos(phi)
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.exp((1j) * (13 * phi1 + 10 * phi2)) * np.sqrt(0.26e2) * ((1 - t23726) ** (0.3e1 / 0.2e1)) * ((1 + t23726) ** (0.23e2 / 0.2e1))

        if Bindx == 3651:
            t23727 = np.cos(phi)
            t23732 = 1 + t23727
            t23728 = t23732 ** 2
            t23729 = t23732 * t23728
            t23730 = t23729 ** 2
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.exp((1j) * (13 * phi1 + 11 * phi2)) * np.sqrt(0.13e2) * (-1 + t23727) * t23730 ** 2

        if Bindx == 3652:
            t23733 = np.cos(phi)
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.exp((1j) * (13 * phi1 + 12 * phi2)) * np.sqrt(0.26e2) * np.sqrt((1 - t23733)) * ((1 + t23733) ** (0.25e2 / 0.2e1))

        if Bindx == 3653:
            t23734 = np.cos(phi)
            t23735 = t23734 ** 2
            t23736 = t23734 * t23735
            t23739 = t23736 ** 2
            t23747 = 1716 * t23739
            t23745 = t23739 ** 2
            t23737 = t23735 ** 2
            t23738 = t23734 * t23737
            t23743 = t23738 ** 2
            t23741 = t23737 ** 2
            tfunc[..., c] = (0.27e2 / 0.8192e4) * np.exp((13*1j) * (phi1 + phi2)) * (78 * t23735 + 286 * t23736 + 715 * t23737 + 1287 * t23738 + 1287 * t23741 + 286 * t23743 + 13 * t23745 + t23747 + 1 + (715 * t23741 + 78 * t23743 + t23745 + t23747 + 13) * t23734)

        c += 1

    return tfunc


if __name__ == '__main__':
    X = np.zeros([2, 3])
    phi1 = np.array([0.1,0.2])
    X[:, 0] = phi1
    phi = np.array([0.0, 0.4])
    X[:, 1] = phi
    phi2 = np.array([0.3, 0.6])
    X[:, 2] = phi2

    indxvec = gsh_basis_info()
    print indxvec

    lte2 = indxvec[:, 0] <= 2
    print lte2

    Bvec = np.arange(indxvec.shape[0])[lte2]
    print Bvec

    out_tvalues = gsh_eval(X, Bvec)
    print out_tvalues
    print out_tvalues.shape

